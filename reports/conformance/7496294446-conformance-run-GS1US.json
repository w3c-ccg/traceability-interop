{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "79134630-cc65-4aa8-8374-2d4a95175d8a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3ffc4c8d-b5f1-4aae-826b-5f9d6d3e796b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ae1b6a3-8933-43c0-85b5-ca089c04ad12",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9cf58da0-60d8-45b1-912d-ef2862b3d99a"
                }
              }
            ]
          },
          {
            "id": "f1852c94-6ff7-417a-8d76-91ebfcf89429",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4686b4b-808c-4f37-b598-0f9e2cc5d2b4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c895f7c7-5962-45b7-8611-4556154c5a44"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fbf955f1-ba0c-4beb-b9bd-2b50d1617771",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae2b50e8-6e21-4bf3-bf10-62e0774cbf54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae1544d7-621e-4690-91d6-72c3c50f2ebe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e6502d4-128c-48b3-9d4d-3801ea18939f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf10f019-b681-4070-81df-0d84f9bbc1af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "332cd081-d518-419a-a6df-da8d302fbf46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "123265b2-3e68-474d-bd28-d0a74e4c38bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "842fa63f-d7d7-4304-8cf0-f8ba662b9d7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bd5affb-f46f-4c14-b0b2-0b4a4796c8d2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d25b748-ec75-449e-b64b-694261956a4d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "caddb882-0bc9-489a-af1a-4ca9cadafa4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6068758-829f-4d8e-834f-c64647982875",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3856971-34ec-4987-941f-93eece6a3122"
            }
          }
        ]
      },
      {
        "id": "c0e669ea-28b1-4c8f-8128-d5f1864ef3fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6337dc45-89b6-42b7-9fef-bf87ae6be8ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b603c16a-6506-4ff5-af2e-5857fcc72556",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8690d21-3e0c-4144-97c4-3d9619ee75e4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f7ac14-91e3-48bb-b3be-04cc373dd255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9ef34a3-0513-48c1-a6ca-0f1a5da9aeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80c73a8-cc76-46ff-a9a3-8974a8aefb9a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d84f8e-ba39-47ee-ac84-397fa81074a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "029df0eb-72c2-40fc-806c-707fd0910547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1994f3f7-6e1c-45bb-958a-2c148e93587a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be748818-08f3-4b2a-85e5-a8310f051635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22b713cb-2f82-4e97-9fd4-d37add4d87ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ea2a22f-5f4a-424e-b09a-31d389005f5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b38f46c1-0bc2-41c7-bb5d-76b419493984",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2655d879-62e0-4260-ab79-03b700fabf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fa4f212-f395-4cac-ae33-446f89393991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a163d7-1a79-4dce-9c0d-e590f3ea558a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e74386-0432-48b9-a4ea-e50b6324d780"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4fc40b52-b951-4cc4-80b5-90d6e6ba7cbe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a396e32-607c-4546-970d-fbbf30ff4c31",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7b1bf56-b73d-4a16-a671-aae469af0085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "776cee96-4294-41d8-95ce-8fec3aa59db0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b65106b1-102e-4489-acb5-e644909ead39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "467306eb-63e2-43b0-925e-cc012e962c4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3f49d39-df45-454a-b2fc-800c2c607689",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef269e2d-593e-4a38-9d45-288229331ebb"
            }
          }
        ]
      },
      {
        "id": "00af89a4-7391-45d0-8118-bcf4dfc7770a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "669a6f86-6381-4d69-8d7f-a8169d0dc9b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee2ff792-6209-477a-9972-0a8f41ec0e27",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "991e1d21-d7be-4dba-8810-76e67d2564dc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0474306e-9b8b-491f-8411-ab9dd7c28acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51391752-0aeb-4f7a-943e-f6f9dac64e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53836b6-07d5-4060-87b1-f2f4371867a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe8449b-b1b6-4372-adc5-44bbd20fecce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e424064-2a57-49a2-a3ac-5bb540812eb8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7023e6de-3eb2-42ca-905e-8f9d953820de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e40c54-8708-45e0-a5f3-2f543e428d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6943fe5-06c7-4ec4-b7d8-1896420058c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1506a1cf-cf9d-456e-94a6-10e39372cbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e2ca6e-125d-47d1-90de-696c1af1d121",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c38a03-df17-4a4d-9242-c9ed9b257dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0718549-b54a-457d-a67b-2bab804a5ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f3250f-9275-49f6-bea3-f6227223eac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ca85892-80d7-46f3-9675-5af790f11662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc3ac7c-9d67-40d1-b518-fa349976897a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb56c0f-e15d-4383-a1f0-ed01e8ddf820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cf6914-d3ff-4d5d-815f-c07389598eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d676ec0-a259-4176-a601-cc33d10fefe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7575647a-2a0e-44be-9f0b-d4908010b680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b86b2ec-5238-4dbe-bf85-b8e6b8ff716d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db797579-7bed-4a99-97b1-db0312145013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556e2e6f-b6fc-428d-8ece-f18e4d949909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c832f6-aeba-47be-ad48-4c2a65c063ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "045e891c-abf8-422c-931a-cf1c32f88375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b766e6f7-8204-433b-9fe0-1336fd3f27a9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230cae75-6bb2-4fd8-a6bd-219cab52a701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb7c47f-27db-4268-a3f7-c60f651ede09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e486e3c1-4b3a-43f4-9c1c-e21b6bf73bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "374f9a81-942a-48d7-8afb-c5bb6de51fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed401ed3-3d05-4005-a014-2a16b2f49bd8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0003375c-79a8-4ccc-9e50-545199ab7f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb94c95-4334-45ad-9b1f-8f36f6a272c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b178d92b-30dd-4fc5-83a7-89e0e933df17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8db1680-9ecb-4ebc-a269-218321a75c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61738d92-b2d4-4c56-9d3b-6cc87e41fb2e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc33a07-b2cb-4381-9f5f-e5b5c02ba41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270a2eae-82b2-4239-96d2-817f16976139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e718c9ec-faa0-429b-8b85-e7972a726010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed67dc4a-d2a6-4c13-82e6-3a0c2f3f4999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b4fdf-6f09-43cd-a123-6e40cda146e8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb80ba63-167d-4a5a-ad11-1fbb2a1a2bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8eab939-a932-483f-bcc8-f777c4084760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2027dccf-1fec-4623-9c25-abbd2290b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c070cf0c-d9e4-4e96-88ec-00def4305da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420414c1-29b4-4256-b784-07f2e11484c4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88a4dd1-c972-4a4d-9a40-61e4a62770d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c6bcce-e445-42d0-ac27-8c98ce774734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f316043d-922b-4f0c-80dc-899932fce09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4667001b-7e85-4e97-ace5-57e7a7af1e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e91f5e4-e68e-4622-8b0d-99de950e1613",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7553c8-9970-48f9-8453-738064c70596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616dd758-3266-4b0b-8067-af52c19b00f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce913ba7-cd0d-4336-9477-01b140c93c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "190a1aa9-627b-4fd3-a967-6079c49bf076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70064d00-fd2f-4bf9-ba71-ffef54da44fa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833c1351-7111-4a51-b8b0-edf0862c8084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360f0bf0-86de-4f18-ba9d-bbf9e8eb1c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a27f75-1dbd-4696-aa6b-36f403005fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af2cc07b-2e4e-49d4-afc3-be5c98565500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3def457-a7f9-4271-8cd1-8b1d6f2304c9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852ad277-958d-4021-9b92-8e7e2e5b8da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faca1e5b-97ea-4e43-8cbf-b3cb3632784f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882cbce8-41f8-4749-8efc-50842cbd23ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec71d463-fd3b-4b67-aff8-b387d67a050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b02b7-7f6d-4f23-94d4-dd9ccaa371d5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4076e8d4-9351-4a24-bb0c-79b8db65d912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ea1156-e458-4d1e-951f-c679860b0b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9872ed31-da02-416f-a00b-3d076b933bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76460f93-6d2f-4773-b824-14a3001c4207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731c9e4a-064e-4c0b-becc-6f6077f90311",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd344ee-b1f0-4725-8acb-8813d5572131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b416bb-961a-4e0e-8707-d9d74f64b7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf82f19-dcb2-4499-9220-eeaaa599ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae16813a-7c9c-4536-8de9-5ca4238e21f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde0577b-bf89-4dc2-a925-b16b2c2d2956",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf9ce64-f9ce-457f-91a0-6235e7fb581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490b20cc-a72d-4b25-befe-506736cb763a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf4d1b5-6912-416e-8e35-efd906a91d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "421f9616-d409-4514-b86d-447d4eca8c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c8ba0b-a284-4bf2-b1c0-71759c2f3dcd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2465c55-989b-441f-984c-b4e1df3dc042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae23c85d-c633-4cad-8ecb-e1174bdb83ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5313fd-db1a-4c40-837e-0769e43efe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1275a20f-05e1-443f-ae5f-45150438c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16d5e5a-fc31-424b-acde-6f61b5bd0420",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0a85ea-e950-4f23-8e74-13745d0bd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bd7bd9-e30e-4175-bccd-ccabc521df1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843e8f90-a37c-4e47-b2f2-78003343167c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58b9862-5325-4acb-84ea-254cfc0c0ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe27517-8fcf-4be5-a224-ccd1fd6cf1b6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9c65c2-5fb0-4e72-adcf-5410b98fd2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858f7018-c401-4797-b07d-3de566bc9657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57447956-5ed4-440e-9570-d05ae458864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a620a9d-b83f-42b1-870e-08bca0d69a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417719ba-43d1-411e-9513-b4967ebd4bf7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b6dbcc-0fa3-4a64-8ed4-e8a54b0b8e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7c0500-7571-4c72-a0df-8ff10978fec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b115a-163a-4310-b3a5-37e85046094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb251b2f-3e81-4407-ae35-2c9990c55885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c882daf-fbf2-4245-b287-419edcdfd28e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed673e5-f9e6-4e77-b40f-47fdb7018f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eef1d18-fa45-483a-864c-a775239cf724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615dc17d-02fd-4a19-8c99-75ca45a6db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a85a004-ae9d-436c-a40e-70e9cea60dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcf77f0-9903-4cc2-8f53-9571af54758e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d791448-a2c0-47fe-b99c-211de19e1529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d05380-d463-4829-8fc2-9f7a63ca4929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a52eb8-69df-4a5c-812d-28e443945761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbaf349-3221-4ef8-9f60-2abe5b5b15b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ec2e43-5c29-4d6b-b5fe-d2b4c591eddf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152f656b-bd16-4cde-b571-b2a9a39408ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b39d5a-d3f4-461d-b1fe-84bbef967f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c567e8f5-e924-479a-b3c4-29e2d2951e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7652dd3-85b1-4114-891e-956863de8f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905b2c47-cb0b-48f8-bc13-2d5d9f84f638",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f7679d-a178-41b6-b065-08f13407f51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe55e59-3863-4749-bb5a-f37e0541f637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e68761a-7d23-46ea-96c4-ec2d7018a438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34863bf6-d66b-4dcd-9742-b91d0b10ca40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f1f1bb-7e71-47a6-a8aa-5701102f12d1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f335b4-6618-4ef7-b852-1e31a07d19d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b917d2-34aa-439f-8b6c-4cf00916cfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb2abd9-7196-44f5-8acb-8cac0e0dec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4896ce54-cb7f-4145-b0ed-8f9cf8f452a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d3b986-525e-4e1a-8173-045e08aeb72b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b980865e-8a0d-4026-b5e4-65c05c7466f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8389b752-ed67-41e1-944a-7f99e4eab422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622ba92d-6892-4e43-b6ae-9af7aef74c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e7fa01-1723-4b44-a43d-a42270183d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8944a713-f18a-42d1-a0dc-96b6dfa457b8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169cdd7d-63bc-40f7-804f-88fdb364a684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eace9af-e234-46b4-ac30-dbe30d34441b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdac0692-3d8a-407d-927a-5f9e123fc6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d99d51-61c5-4ac5-9294-2c7ee7da65b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa0c83d-8f22-4979-84f3-267580fc02e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec293631-8855-4e60-a408-469ca7f91648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3afedde-14d6-4aa4-a5ec-9c65ce2ec0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e53c0-8bd3-463c-806c-472886feff01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25e70fc-ca38-4921-9ab6-74d7a8260b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ded8241-6022-42ff-99b4-1b6c4323f811",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a32a85-1220-48a3-896e-87c6bc748a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7fc61c-5901-4660-b402-be96d4f448d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25558af-3c8f-4754-b6c9-954544d66159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b3b4cb-88c5-492d-952b-58d0999e053f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496b3e16-adb4-4400-9a7b-57bc6a4ccd74",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ce5e39-54cb-41cd-9d2a-efd084887aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b733de52-7685-4433-ad02-1661c6edc379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8225fb39-55dc-4447-b773-dc64bc9b4f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c071b4d-c818-4c57-8ec2-faf7e4d79922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058b7bae-cf1b-4849-b71d-9993f4974575",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6472fb-fc51-40cb-8d5e-77476e0005ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee486b18-ae92-411b-8749-b7640613e834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8df7928-b82d-4e44-9938-db0f6159ceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14fd208-d409-486e-aa75-a5c0e2443328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cbbfbb-38c4-409c-a5e4-435cceffd001",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef60d46-1268-420b-a4ea-d617e01ed970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444ce92-c2fa-472f-acad-359a2ebc44dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb157b-f1e5-4161-85f2-b49890157bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0efcc6ad-fd18-47ab-a9b6-85840975f199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116a9ca8-51af-4137-a1af-4358c6e77a8e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc43f4c-9aa7-4e35-bc54-2bd11d56d010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2bd92f-e63f-4a89-8ede-6b7ecd4894bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f5f62f-995b-4be3-944d-58b9399366de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87da8814-eda5-495e-8797-d031dd944a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82df0bad-2fdc-47ae-9ea9-3cdc6173f517",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fe6a95-4bfd-40a3-80b0-6f5100bcb2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b8a86a-5c01-42c6-84c6-b73416b716be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2ad26c-5b73-4bd2-acc7-64ec0193667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e56b27d-b2a8-4739-bd19-8ac97a101cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229d2f9e-0abc-4100-85fc-5d6aa59100ac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e1101f-43ce-4457-9890-3da4290defe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df06a176-6aaa-4620-aaa2-010ef30ef91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5485592-1f9d-4612-bff4-a2d112e576ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "44cb56ba-1ad5-47e7-80bb-9e8524889589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba34746-5091-4171-963f-d455ebac6e0c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5b515f-09b0-41cd-815b-4130def80333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d0adf42-b9d3-4514-8a04-9698249d5e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40db4326-7396-4931-9d50-995f2dc8325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52861057-0b57-4431-857a-5fc27f916cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd9773e-797e-49eb-8f1d-bba0fd39a6d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80983be-a480-437e-a9f2-df383c586fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1012143-6c8b-40ad-865e-34b6cd2062c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6b61bc-d64c-4baa-8e3b-85ea981ebf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ddb2a3-6ff6-430a-96d2-ad8203c67b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55203333-bd4f-4ea6-8f85-fa5bd0d93b06",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c535367a-7325-4219-8051-4e1a00759fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dfa02c-fcf8-4372-b073-68bd23c64cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc98d3f-f73b-4d3c-93b7-71cda2214dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5b9133-267a-4ba1-8612-075e4bab526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e26f22-4c54-4c1b-9839-316b57328d14",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afea77d-25cd-4965-88e5-93ae6a9aaf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988e1a04-3bd7-4da4-aba2-0d506df1e867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d4b559-fc76-4b86-bdb3-f979bde0af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82bcc197-5d8d-4ff9-97a9-b2c2c3d007a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1113512-2054-4954-ada8-b2e84fd5a913",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323473b2-acd7-4f57-b509-67ddfa5d7b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781be3c7-655b-4ffa-96eb-c0038f7f0a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec2b9d0-fe96-40d4-a74f-0003df122788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1374407a-2cef-4f46-8ef3-0b8abf01c2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f88339-8cf8-4080-8398-bd55c45eacf0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecd32ca-9180-4a43-8838-ea9a313e32f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c547bcc9-1c8b-469c-a247-6ecff70e0563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d0ed1-9904-425e-9985-ced99bf7628a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2540548b-4259-44b7-8b80-e05d58e9dbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5871d2a7-73cd-47e9-8865-0f62f363e4a0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccc5e1a-98d7-4828-8f16-fe1e3f82f61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8591b9-666c-4cb0-9713-fb0601e51ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1614977-2ed3-4437-9d15-aeec877af970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "65abee1d-f964-422c-91a7-65941056f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183e166e-4792-46af-acee-26862c587cb4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc38e283-59a7-40eb-81ec-480324e23b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29d78a7-d015-47ff-9d5d-f79ad91bc1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8230b4-e246-47ca-a4b0-6285013bf876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd86ecb1-989f-4e7b-8655-0a39c3b28d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9935a35e-c616-41c1-83fd-a0451a418247",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cec876-d9f7-43a1-8d75-eda64f04807f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5bcda1-5ee7-490d-baf8-3ce31a731a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1364896d-e1af-40d1-af16-4a8a1bfce044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "77992b51-bec6-48a7-ae99-c817b7854d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebc8253-c3a3-4e18-b9a3-15281840b6f5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3175f5c0-8af3-4960-9826-ced83fd4251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd4c1b9-56c7-4f5d-ac0a-86810efe0f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dced8ff-98b3-43d3-8a0b-b9822fbb7fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c3f0d0-bc92-4dd3-b83f-87b910a22681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588ad76e-267d-4fa3-bfce-2ee4c34f3bc4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed13e67a-6c36-4311-9b48-de004e5db2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8303455a-6496-4f07-a189-c4892dca0714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f343f78e-44b7-4ba1-9c02-5eab174be6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "841f8135-29a0-4b37-aa98-6b4dcfa0d66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea23211-da31-4dd7-b863-7a023aa5fb7b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f3f0db-e38c-48ea-8893-024b97556ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0996cf68-d2de-4547-9f53-4ef0f0046849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eb4409-43fd-4fc6-b99d-16d6ac023c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc9d628-ee28-4cb7-8241-809db68e8235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a51e8e-bbd5-4339-96ec-3333ea51417d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7affd4-0de7-4fa4-b7e7-05d6ab2bb1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d18ba9-fba8-43e2-9093-6f47d2a639c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae885a66-c0bf-48b7-98a3-321afb76b65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ad398f-d034-403a-8a06-3cf05e83b980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991b4697-e821-44c7-9dc9-7e2875cf4366",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d253db-4156-42a7-a849-0b3c24f3e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ace41ad-38e6-4d57-adca-8196e5a44885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8abea41-1e0e-438c-a341-5da542aa2fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abb49107-5197-4158-bdec-5e1a6e065944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54dd5ae-d166-4b63-828c-3e3f0d347506",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbb1585-4e83-4dd4-bc94-10ff226a79f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d34d51d-c8f6-497a-af20-c8388aff1df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e37192-d4d7-49a4-b513-fc649cc4bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2d2659-100b-4595-9f52-83180bdb963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2fbe19-d0c2-4035-b175-af333b749396",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8cd7a5-fe44-4533-b91b-4da0895fb911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805a11ec-4f28-467e-aea0-76bc7d82867d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c08f54-3277-4aad-ad43-03af157b3330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "224a9ae5-2254-4277-ba3c-1535f9c3b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbd6a0c-e347-422a-95c4-fb4c5968187f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c5d162-7813-458c-ba5a-41b7eb255249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b83c40-7da6-4d19-a2c0-ba01e10ad8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4913a6-5c63-467d-a722-065ae44442a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f4b5b5-199b-471d-9a13-6b61968ab7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98172d22-dbf7-4faf-9012-df55a0fb4c60",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37f368-ba10-4235-8a5d-5dbcf90f1e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2207830-81f6-4ca4-98cd-ca09f9ba696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea8a8df-1ef4-4711-b0e5-c788999ae732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9483b1-1058-451f-aa7c-c22e39fa00c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e424235-23b0-446f-b562-7bf2a0bd3620",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e4bc02-223e-4ef5-b3ba-373d95ffa3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b47c79-7c6c-480a-a84d-2ad022a31445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df58bca8-fda2-475d-b56f-7585040edb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "138f39b0-cba6-4d47-8be2-3729004f7992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e071c0-81c9-4c22-aa62-d70656cc7b32",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254207af-13c2-4e46-b9ce-f57158e9ae5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273137fd-5f67-4e57-bd65-6580d5a35c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78533c0e-fc54-46da-8b66-4d97928a58fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42beefbb-15c4-4d98-9f54-fb685de08518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9956d8b-318c-46d7-b79b-1ff65643cf71",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c09de0-9e05-4a1a-9f8a-8da0b19be022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed51124-6d3c-4a7f-a72f-d15ede427a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6097f9bf-0995-48f7-b1ae-a84821ae907c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ae1571-068c-48bd-bc9c-5238620493c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83601f97-93d1-4181-bda2-57fb38d94a0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e98ec93-4985-4a2e-a7c4-0a437cf921bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b39e65-7081-4baf-bc48-2821595caa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd236e80-3bed-4cee-868b-88d591d89894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5b7778-8ffd-459b-ad5b-8f771f68608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17666b3b-cdd7-4e30-8690-b36100d005b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84be74eb-f324-4521-aef9-b42749f7e96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2d9602-e8ab-4e65-bc45-af56ef261af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e5f597-b862-4462-9fdc-8ba1b6c65e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da0d1ea-22c9-4900-95a0-059d3112d175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785d4ff9-039d-46eb-a419-54ead64323d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a1e138-2bcd-48cc-b4db-5a1114a826d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3db12c-1c39-4850-bdd7-f0eede1eae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32da707-81c7-4a67-8c87-b84ab3248c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e988d8-f812-464b-a84c-f4c20647b3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e65bc2-aa0f-47da-84f3-ebc0a3a775b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9799afc-a310-4511-9883-4e91b33d2c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33678b1-c5b3-4b6a-82a4-bb90a33b0c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce0b74e-5472-43f9-b8b5-e0d4aaf01c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5df958-3d93-416e-846d-d87b7f6c832d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f79e44-23b6-4bb3-9fe4-b50dac9a315d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ca775d-e14f-49b8-a320-48453d1dd1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da8a977-9b95-46c6-9e49-9ff46b275bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04300870-2dea-4495-a06e-8a88e3c73e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2b8d77-c7e5-488d-87a3-7c4a7fe847e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8384cc-a37c-4305-8557-2d3af6d39643",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d0c714-20cc-458a-b39e-05a976ce0ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5c2422-a939-4f5c-8b17-40019e9df0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5637b3d-8de9-4a33-ac0c-c0eaa8fc1b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "340ef29f-718a-4bfd-90a5-2a670252f7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0460e6e5-3439-4846-a6fc-4dd2301f0474",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342a1a00-69ed-4e8f-a1ef-12ddcee526ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3da871a-c26e-4679-a580-887390296ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd871497-75ff-4848-8c04-dd6eb99a190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee01ff7-0895-4726-85cd-fa536a6af20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3f5801-7119-4687-aa32-b21e6c7bbea1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d86fb50-6f23-4ec8-b2cf-5ff1a557e72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd67b5b-484e-4ad0-b777-8a3583f6f4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654559a9-b1a5-4273-b6e6-cbe258182aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7641773-9c6a-4f44-a779-5a1c782ed58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5655e9f4-c277-4eee-b55e-a9ec232f1200",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eec17e-5116-4ade-9de8-be23be95d607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2542c0-e034-4718-9a81-5794a09300f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211b0517-a3f0-463d-bdfe-1ddc399affcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29919db-4228-4eb1-ac28-0b6ee7e5e2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfa56e1-a624-4aa4-882b-69e0ed652774",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0b512e-3b7b-4e48-924c-27c59fbac140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf8e698-a8ed-4e5d-b16b-128d46a87a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a474c7de-8218-49e6-9e03-1c7df748a87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86bb681f-5210-478d-a950-87324b2e8822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de703933-951f-40d5-8800-cba3b937184f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59776316-0c5b-490b-8cad-73eba7261811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64614a0-4e9f-424c-b724-b205a52091b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e478fdd-aa01-41ad-bedb-6eed925fa971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f06387d6-c05e-4cf3-b243-15dc9dbb6804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f0ac1f-ad5a-4d3b-99c3-ab7d76cf82c3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba7726e-7aaa-4f4e-9f87-54370510896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580f9ed2-32ac-4a28-b04e-43119927f12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abe3dea-bd1f-4f0f-98d0-6080f6dc041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed5b214-4510-4b7a-967c-3092d3020b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fda186-3a09-460f-9636-d9910d84871b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a027289-fce9-4e1d-8f5b-b013e4f4dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2ed1ba-9514-42ea-b983-2bc634c44914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a8b017-9cf2-4b6b-a364-ec5cb240a7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a490a0e-5804-4353-b13e-dec6ce4b13a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701191ad-bb08-4413-8c29-d38fcdf8eac0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08138b13-6b91-4e10-b52f-75e1550df105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa84835-8d20-432b-9795-dcf91ac4a527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f077fe6-7ebb-4026-8098-4df190683c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38d20c7-d6fa-43a6-a9b4-bf3d1bbd6467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b441fff-b1d7-442b-8980-4cb92c8849be",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e930fb17-8e19-40bb-aab1-c13a10da141e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb57057-2a5e-40a2-98e4-892921fe92f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113068e2-90dc-42d6-9e0d-2b7616f70494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "539bd652-fb7c-440c-ab5b-180dc5ac23f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69caf0b-805a-4527-b320-93a86a08ca1b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f78239-c765-4aaa-bd8a-bf7c52cff3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b22b801-3929-4735-b26f-1f52bc33708e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6651c2a-5aa6-414e-a961-fc769e0d4518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb2127d-3395-4019-bf5a-5f3c335af96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94475515-4db5-4032-819e-41e4c4017cac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3951620-f950-4ee1-b6d1-88fa801ef762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89147e5-bf13-4ef7-be7c-ce6e8ddcb71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d9698-cb36-4d1d-889c-dd3cb3ae88e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6286d8-cd38-43a0-82ed-8af439108d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207c8898-e508-4d46-a672-cb1d7b9080c9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc45d1bd-3382-4f3b-9c2d-379061cbcca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02023e03-b3f4-4b80-a351-cd51784fe604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19691290-1126-4d33-85c4-fadb84bc5987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa24236-2551-4126-bc48-becf43e04360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d32cc5e-a52e-470c-985b-c2c20a0f0ad3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763d1c68-457d-4565-847d-e4d86f645a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87c22d9-d9af-490d-b7e5-d8ca82b657f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf5dfec-c4e9-49d3-8851-e7970d5e35b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7cb846-8fb6-4d4f-ad36-f837cb3cece2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0348d65-e9e0-4d28-85c1-5a58331dd183",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b621d479-23bc-4e1b-b890-86f19f95bed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4c2c26-970f-47b5-87b6-ab84c6a6b0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0866e053-035f-436c-a03a-8ff43bf57c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a217ff7-0c1f-4ddc-9f1d-81f4fbee5dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9586bf9c-6d3f-4653-b338-07da5f08c470",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5586e2-ef9b-4b84-a10b-efee198fb783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d881ec34-ab2c-48f3-9903-43a88c82f419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f24258-67e8-4cd4-8329-aaa824cfe92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b290499e-4641-4bbe-92a4-70967e6fab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e65dcd7-fa31-481a-9d89-a7a0da3062f5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0bfcd7-debd-4ada-85bb-013df7d86d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1450c646-a3fa-4a2e-9292-81b82e8b64e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480958aa-0ebf-477b-9c82-44bbadaa2115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9f5ec1-00fc-4a87-86d8-75ead9448dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78fac81-6ad0-4b44-b14c-8fdf99d16a64",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ee12b2-666d-44cd-abfd-fc888385111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9d546d-f4ca-4cb0-922a-e5137ed7f848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91f5e16-ff2f-42e8-9dbe-07a97b77e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b9e41b-aa74-4ac6-8b00-05a6b6ff22ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1155eb-72c9-49e1-a58b-3fcc2a69fb97",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1facbfed-3355-4a82-94e1-c6982904023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1312d409-52b5-4ce5-af20-1c18befdacc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c37846-5c9e-4859-9059-7cd7edd5fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75a68fb1-634d-4606-a966-ab445cdaeac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea13a805-e99d-4ade-bb80-32d6266932a5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdef4aa3-f87a-4b12-8d8f-282ab86d1ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f68a43-ff35-4175-97f8-87db9e50a1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a726887c-bef5-4294-ae6a-f493fc3691f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a758485-ebd9-4181-800d-0171e5e2fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750d29ff-f3e3-477b-a1c8-5172546ec9f8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd68b64-aac7-44d6-a827-141ca8d19a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c2ee12-ab3c-4be5-8582-4b8bcc9bc1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e771daf-1f54-4f5a-a383-f1f814332357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99dff7e-633d-4e6b-ac6d-2a08e833433f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebd5e32-3674-4684-bb6c-1f4739481eba",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a6389-aff4-4d1e-81a2-4ba033f36ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2d5fbd-40fa-420e-bccc-42bfdc01d749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f050a711-6b86-4408-9bec-304483898f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40029fe8-07cf-451f-999d-60092a0d8e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d173267-955a-4cb2-acc3-95c2ae5f2c7a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088ff3c4-46fe-4b36-8e90-0807754b1f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a19ee5f-4e71-48c6-bdc3-cd465db2c1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646136b7-39db-403f-83fc-124d17123504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c388732-b594-4854-abaf-a945da074d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9a410e-6ecd-470d-9b91-f8e3f22a7522",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfee844c-abe9-4b2b-96e6-026d493804f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5c795d-3e85-4bae-9a0c-1c0d2aaa0766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118b500-d016-40f3-919e-0751e96e6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0946660-fcfb-4662-bdf1-ec2f1e0df0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86abe9e-d447-4716-8c5d-0bbd59fd444c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c813a215-2e02-4324-b5fe-869e567e86e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71afcfef-cfee-461f-97d9-d4feb2f46b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a9c637-30d2-4244-9480-d53288f29984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d89e7ff5-c03d-4d63-90d5-61936b4ec49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e05677a-1775-416d-b76e-3fcf66e82b9f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236edca7-af11-4cd5-b904-3d2f07b3ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4623aa36-8a4c-486e-9724-289b774100e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b56546-1adf-42b4-84df-319d236d4fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2619dffa-f17d-4c2b-a635-55f361e937be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf0bcc4-0e0e-47ee-bb59-0ed7f73b5565",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d915685-877d-4ce8-b68d-67f1b7d64d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6d4ed8-d0ba-4cb5-b2c1-b58e4cdbbaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bca40dc-5cbd-4081-9edf-9fbf59255a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb60d05-04a6-440f-af62-27b1954b425b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e43a6b2-2185-432c-ba36-ef9d296e08f5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574b6c0b-6468-49ac-b410-3128902712a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d79a02b-d922-47c7-9fa1-4fc78f24e1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0420689d-2449-4430-a9b5-4ce743ec8e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a77d906e-7b7c-4163-928f-3ed4c257bf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb659d3-4012-4dc1-a18a-221f39dcea2e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e91633e-7aef-4673-a0bd-71d9739acb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bc7e8c-a94f-48f2-9713-4c6e092499ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a6ef73-6b2a-4d2b-aac9-5c5d5c306abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "769a36ff-bc54-4f83-9d67-79c7ceb141a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f16d2dc-8908-46f4-8c3d-f4562083d716",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6980e53a-7907-4279-9294-594c26d20b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f4f032-b929-4b52-8369-1a89001ffc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0538cb0-7042-46d0-b74e-a934cf6f4f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "86a37f6f-eb10-4013-9428-3e33fa1be89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd31c3f-8e15-416b-ac89-447959332194",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cc62b1-0e78-49f3-8f2e-e580c4612f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4460c171-7684-47be-87df-58982aeb5bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e734e4-251c-4a94-b622-9091e0ecaf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "227f083e-7b40-430f-a5ce-271992d5306e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ae8cc99-4f75-491e-8a7a-d0e75f7285e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78a27e5b-af0b-444e-ac43-99b28099b8d7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62579f1-607b-4d9f-aca4-f3a277f56a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9739cb6a-af7c-4775-9d8b-5acaea427b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9a6976-01d7-42ee-83cc-bdad6d2467c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b64aa79a-6f28-4610-b75b-24074725a620"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e40781fa-7667-4b85-8871-5c18cd8ef45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ee10593-06cf-42a5-846a-8b4f8a549662"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc314bbe-f209-4c3f-96f2-f46b529347fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d48250a5-1d49-4e36-8a33-5ae39d989d5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b90f91e-7540-43a0-ad49-da1bafad116b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3f28cd0-8376-4e3b-aefc-9e251f842647"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d5a0e13-d2c2-4f0f-b12c-5beff786d98a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "957a3ed9-38bd-4469-820f-ef4f15c30062"
                }
              }
            ]
          },
          {
            "id": "dd6ea65d-edfd-40c3-b17c-e5605885576d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9287e63-0d85-46b1-b443-2b7b9007c117",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d0b7d131-3a3f-4fb0-a6cb-7e92ac1313c9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638b32f0-ce78-417a-8a17-c345086835d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d08074e6-5bff-404d-852c-839e3dc478fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c4cab6-986d-47c0-9e74-a616509afa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3eb16b-7ada-460b-9a36-d63f27a82cc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f95c1fb5-5d51-4010-b4d7-ba0bf8a25b42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "371f15ba-9a2d-449c-a65c-bd5ba8d30ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c77ea047-2d93-4973-9342-620a3673366e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "861e0673-8642-4e36-b187-2010dd268969",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0ba9ab1-8b73-4601-a4d9-93dab88fb994"
                    }
                  }
                ]
              },
              {
                "id": "74473308-29d2-4582-ad81-77c100e3cbd5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c08f9496-9278-4903-bbfa-95ce44b8a067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d8c73a3-0769-44d8-a367-37e693002646"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce37f2ea-47cc-4f00-b25e-0b40646c47bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93ccf265-cab6-4fee-a77c-acbf9417fcaa"
                    }
                  }
                ]
              },
              {
                "id": "3ac57d8e-8620-48b4-acc1-a91100385fff",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2412570-060a-4d16-b4e2-ccd53a14a1c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bdb05aa-9495-4ee6-8bcc-5f09bf9a764d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4245026-285f-436e-bebb-f5377d2612fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c72d5e1-4454-4ea0-9527-d7d2161a6629"
                    }
                  }
                ]
              },
              {
                "id": "206eaa8a-91bc-4ec7-a2ab-5a76d383e776",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b44a9523-299e-4eab-b731-8482cc58fc03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30651668-d1c2-46d6-adf3-b28e03f81a89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de782969-72d3-47cb-9aeb-e3b2a2e32666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d9c474f1-8131-40cc-b8be-a617098c89eb"
                    }
                  }
                ]
              },
              {
                "id": "8cbe0c41-d925-45d1-ab92-4899827bee44",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d125d759-efb1-4b29-acf1-4ac85a4e4a9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c35b52d0-2588-449d-9031-5b019b739992"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c736e933-b985-489e-a007-41ac1bac6aca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c16a7311-d0c8-4795-af14-5c53be8a3aea"
                    }
                  }
                ]
              },
              {
                "id": "e0cfb7fa-e90d-4f2b-b221-2f6780b82923",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8bb4ce0-7ef1-47bd-860f-62cf2faacdd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "887ef200-5611-41c9-9900-8b7f5087eaa5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3349c4a-0212-486b-b1f6-a448ea097206",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "537b0189-cebc-423e-a184-e23542bf80ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0555ddf3-7c55-4f4d-828c-7b9601fd6b88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acfa89ed-a587-4fc5-ad91-67ceebefab47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "978cf9ae-a1fd-48be-b369-12bd450c7222",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f17be0d-4650-4c67-bacc-58f12e42caa6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e475fac1-b003-4ac8-9420-5db138737eb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e05f19a2-c5ff-4cb0-a6f3-85506a18122a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6983e59-afdc-449b-977e-f6b4e6f55b15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22a34984-f632-4d09-957f-781bfc6fe68f"
            }
          }
        ]
      },
      {
        "id": "6a9a7e5f-0460-4ff8-8bb4-20862b442c41",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a5ba74ae-b614-4b56-b4b3-0c5921e8eecb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72b08af7-279d-4c69-98f8-b00e4eece321",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae011309-5603-48a6-80d1-a433e4b2ad22",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf413f7-472a-44e8-af89-4ff6d32d925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe13d6b-5110-4774-bd9a-a608d36b5aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f16b6e-34aa-4081-a127-63745112542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff126e7f-0572-41c0-9bb1-baa56090cca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18dcbd7-0441-44e1-ad04-6a22077a46a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b72bae2-3684-45b3-90ee-48e16b46581e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1a5bd6-bfb5-48d6-b514-74d73fd6f116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9fe05a-b3ef-4db6-8d35-78ac865e14f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de191ddd-812c-4aa7-bb3b-bd23e7377685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cbde1a-e604-44df-9b2e-6b5fbd9bfc9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567f9853-15b9-4f95-9c54-9a2d1014013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e095cc-2e7f-48b9-9cb5-ae585f74ac89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a99fc5-3bc6-4445-bec4-b81799d3867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b7425d-da64-41fa-88a3-284bf9aa33c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dd5d28-ab93-41fd-94c0-65fcaf8063ba",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de9e385-cfbc-49fd-993c-f84b180142f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7b372a-d9d9-4d6b-9dea-63d4485e9cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3d59d1-55ea-4232-a80d-8227fe5c9e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "944818a8-6997-48b1-b1d6-550697dde9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dc7a5e-03bf-4e29-8567-ffd4d79bc07c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319c01ea-28df-449a-897c-2e5955353fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b39f5-fbad-4c5b-b3d4-0343cbfa9182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757169c4-d271-4652-b679-f66818ad39e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a98ee8d-4398-4bc8-be18-d19471d7b73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836fce7b-c142-432d-94c8-c451169e1857",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da9dfb-3d12-44af-aaf4-77139b45a5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a013a97b-c453-4d66-a7a5-c9fa2aa97ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c866f26-5333-4d5c-9e58-f58edcd12665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62160176-793d-472a-b99d-35280f524ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b380fa-042e-426f-a88f-eabdae7712b2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d7a6cf-7e93-40f8-b32f-21aab79c5915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cbe6b6-98fd-491c-88ec-47fe414a2cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62b2d8b-2e46-4c58-a7e3-f4fefd07b20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c8eabf-a6a6-4631-bf46-e17ab24a4804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0849f00a-2584-47c4-8dc7-281572f157e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9691fbb-301c-40c5-81ab-ec6c51beea8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6528a162-42f2-4e52-9734-981b5fbea686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afcd52d-c303-49ed-9b9f-138504bc4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6afc0af-8fb6-469a-bb31-e314f18e1217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a305c7a0-0892-422b-86b4-233b2b12dbab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d8691a-c871-4607-b9ab-330b13469eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008d4463-8b54-4c6b-9d4f-7e0386e4ea76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b9046e-3330-4582-9be8-328dd9a7b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3844ffc9-ed65-4ef0-b816-115fed307880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f851bc96-d5b9-457b-83cc-4ca2f39590b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec4f88a-2052-46d8-9e6e-a78c878f3183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14e81d5-f361-473d-896f-04be5b27df96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ce5a9-b462-4fa1-b3c4-d07e4ece7962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf101bb-2eb2-4f0f-9b79-6ae0e2ace5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5268a24f-11ca-4964-9d50-523ee03e4ac2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dbbb5a-eac8-4f91-b687-749828330973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee7ac52-1bcf-42bd-8021-804d49566d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b132f6e9-e1f5-4081-b445-359e0cb678a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2afac6-c5cc-48dd-9770-1fbda9f73eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb28402-c504-4174-a8c9-ae276385b879",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bde43b-160d-4c32-9102-7f9d38ce2582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9077fe7-ab7f-4c2d-a69a-5a7833691e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa430021-b948-40fb-b262-900c0ccd82ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45ee2a48-54f1-482a-bf8b-1ace8258d2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e81723-1e4d-4e30-8a55-a1127d4bb63f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d396b84-231d-4024-b68a-dbcfc535f070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2abd21a-f3a1-4d92-a3e4-91a7d023b0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8229de-1827-443b-a056-e3e77f78bed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb15065-8450-4331-8c5e-e533d9b440a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7744ff34-c625-4276-920f-7f8108771cea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a0239-68dc-40be-b167-db8f4d5c6d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d2906f-6cae-4619-8c9b-5947490f3764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07e29ab-6045-4ef5-a56b-285c91fd6f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2e472e-b9e3-4a51-a360-6350117d668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb094291-a514-4c57-9043-ecf26cf9df10",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2da240-863a-4ddd-b053-ae327866fb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c03d3fa-34a6-435e-99c4-c370894af5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba021b3-e982-4fd9-91fe-ab499f2a0210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0c1eb4-da5a-453e-8ca1-c9879899ff86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce495989-60ac-49de-93a7-6eba2691ce2a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d9d931-ce44-43ff-abc9-c7f61607ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897d77be-beb9-4abf-b399-ce64e90cf533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c98741b-9800-4ba2-aebb-a4ad3272a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0a8368-7ee8-41e7-bb6f-7918367542a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e5706-8ef8-4ad8-b9b1-5cd82098d0dc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe6041b-07ad-4852-b8be-61f1ac90614b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b311fe14-ec1a-497a-a46e-735f0cf7b610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e057a9-b410-4a80-9bd6-169eaa14c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3802509a-3735-4a81-9073-773acf99916a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f32d55-5451-4859-b6b8-5e7ec4c24e3f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79234573-1fa0-401f-ad97-a2ca8b38c2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2056642a-f7f4-4190-b877-309d0cae665f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ede192-4a6b-4e95-8a20-110fa1ce513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "915591b8-94e4-4af7-8efc-f51c211f0011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df57b20-9066-40c8-8886-4f3ac8ecd1b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126297e5-54a1-4ac2-9191-f87fd16cc377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bfe27d-7685-4f01-96b2-968fd1fc67da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af070e7-b7d6-4d80-8faa-be2e3e2a42d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdd8f83-6a04-4114-be22-cf2dde74a71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e55ee06-05ab-44fe-a90c-adadd9c54c6f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9b00e0-6533-404d-a5a7-e7a1b94a51f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b32fc70-4beb-4ba0-874e-fad6747187f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c51e44-5b27-4475-b6fd-21ce86d7d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec587b8a-d5cc-4707-9ccf-d8338d21222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434de968-53b1-430e-8755-453574453c99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7f223a-4e29-4cb3-8191-4fe658104253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5af28a-e345-415b-87bb-5b0498454338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b044405-ba64-4453-ac5d-7ee70ba1e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c1f1ed-938a-443b-9ad0-127a0d607300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ff7fbb-acb8-4dcc-95c0-3d4166d706e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f759a7a-fafa-4663-a8c8-f4de04fe1f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438daca4-10b3-4be0-b3bb-8ad4cc3edd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f687db-b48d-402d-b874-dad443be7dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb6731-b984-4d8c-a02e-a5608961e516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d147b08f-544c-4aaf-8c02-a9a15dc83aaf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ccefe8-83fb-4614-a5e3-c007a0643d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec43e6c7-3ac8-47dc-aa32-35e900946555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad88d35b-3e08-4132-91f2-45272d3abe7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7bce47-8dfe-4d80-a255-e6161ad5c2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecb4366-ff43-40f9-ba05-ef73a584e6d1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eb4793-1263-47d8-91c6-fbd31b33ab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d14308b-0249-4236-9ee0-fd4bfdc7c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d91e54-4b22-42dc-b458-d0d35793da1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "943c897b-cbb8-4e4a-855a-b0761d838721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe71f44b-fa76-4290-8673-bc8c80c66f86",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0af77fa-9e6f-4e2a-ab42-d4e07d7d35ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5387e387-e517-446c-a115-218ef2a75fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c150b34e-4693-4ef7-9cae-ca1512362690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43193b1b-789d-4cc8-a885-71878a466b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a922db0d-0827-4201-b412-8f55cd6b7b0e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e71303-ac7a-4942-b88f-bdcfa9aed02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed323ad-dbb3-4fca-81cd-f225147f9a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d420c64-7103-4deb-a078-6965746de45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f53e1c-caca-4278-830d-8565d09ab3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0045608-ad50-4e7c-8b86-f6d804ccd8b5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883fbf1e-e021-44f9-9a3d-11ac34a4d286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cf8807-f200-4f65-98f4-4205341d806d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b0eee3-3e79-4ac6-aa1f-97f25400e930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80e76c9-0474-427c-96d3-6a2c9c7b9634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f82af6e-ad1f-4589-9efa-45c0cc5cc115",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0ddb9a-04dd-4bb4-9f45-f99dfff5b9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33531134-3dc1-4c5c-aef7-f6d915105f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcbd5b4-e03c-4c3e-b187-25d1d14a320c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcbe6ff-ab70-4e64-ae0c-662071484d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e126642-003b-4ff2-8c51-8dacc424c76b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18222b8f-396c-42f0-86c0-7fe5a2b832ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42c41a5-2bd8-4dd6-9574-3bfb5b681ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0d988e-5943-4474-b2f3-9649ee107cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b501eb-616a-4476-afd5-e0eaf229d0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815954d8-b5fb-404c-9783-b567f391a63e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a99fe8a-594f-402f-9583-520168a57ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18100d59-9e27-4367-8bc7-1b3b6c4c8716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde8f292-5180-4940-bedf-95230a83aad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6cfc58-2a27-416a-a63f-aa9ae3bec624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fcc485-a122-416f-b554-14a382cf1445",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d33114-d207-4d59-97e9-e66669b93026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9cdcd7-9e4c-4d1c-873b-496e50ad4b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7ae9db-1e90-4062-821f-29974d01a98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24eaef14-2d3d-4137-b341-b9cdf02ce625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe9270d-c741-4a6b-8d3c-5176bbaaf045",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b021f-5233-4169-a976-ec9b0fa3c0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cd8a40-2ba3-4a64-8372-7443d8cebb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a535aa1a-bdc1-4a58-b71c-fe02637eea2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a499f4-01f3-4a66-b916-39716f7428db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bfc92ac-c66d-4bb8-aa29-9796b30a5f20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c275f9b9-6180-4b5f-b794-301b36af2b34",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe4c41b-8b6e-4072-9ce7-2b48caf36d51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfba98f-6a57-4b0c-a70b-73fe8c5ccea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff8c71-da62-4fcc-a9bd-ae80dfe4e8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5659944-d8df-4329-b811-f82236ab1cfb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9989759e-3127-4fe1-9eeb-e6af9875d9ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04012ff5-e1cc-4c1b-94fb-e909037e0087"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef94cf83-ff7f-4b90-a3c3-d98e16f30bab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27e5d097-ab6e-4173-8454-34aa4f849b1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fc06812-e09f-4b81-88dd-7b45557643ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c46aa82-e602-4602-b2e3-f1e2657b32ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bd6b39c-cd23-441b-94b7-41064a111c4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aea1ceb3-fc78-4b7d-b473-151a2c7ff61a"
            }
          }
        ]
      },
      {
        "id": "e0f140ae-66c0-48e8-af08-bf2ecc6aded0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a5f24187-8060-49f2-ba65-883c498a82d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7eb97752-509f-42f8-81fc-713f49581314",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5538b5a-fd67-442c-b3d9-7451627b4c34",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df428ec6-ea3f-4ffd-8da7-b5cacaa5fb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62df8a2e-7dfe-4e4f-b59c-6d4641dd185c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870ad9a0-32a5-426c-8ecb-eb3171adda64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd211764-dad9-45e8-94c2-57a94a65c1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03238fe9-cf8c-40d5-ba33-856997a76bba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edf412d-1739-4044-b81f-cbf73e2bec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df21c75d-a728-4404-84db-109b1e38f4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed0ef8b-5ce4-4dbe-b9e3-4b3274a0c40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0b1d91-622b-4450-82da-0bad6287389f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4725b6d-af59-4dce-b247-fc010a0785de",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f4557-7f1d-4b5d-ac3c-35ead2b63396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e556cb8-3f3a-4fa8-b3e5-aea764a92598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fada111-047e-4b40-b2c8-91cd03a6ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfa56b8-aca2-4bb9-a613-7d559e60a77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ce7436-9aa8-49e2-8ac1-eeab4a351099",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58971881-0a4f-4557-a7a5-63aae7658ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbd41b9-53a2-4c12-83e2-39e2b1f070b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3ebe00-06e5-4179-847f-efbd924deed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f707f667-57cc-4d28-89a7-8f2ab95f75d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59baef7-dfb0-4fd1-9272-2a74f8209e3b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4d7261-c826-48e8-a54f-ca9e21d7bb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c3fe88-e8fa-414f-b1ea-4bc48229fec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7ef500-a85e-456b-8eee-b1ffa0fd9e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2292bb93-a217-434d-a39f-5a8d66a615ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd29eb6-1fa2-4bba-adfc-e6629c5da1c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf6e48-5cb7-4c66-9b59-c56006ea3bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2d0769-e843-4a51-a26c-09dad339eabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65455307-ffe4-410a-a4c0-9bdb217d19a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f9add2-19f9-4f04-a99e-a8442f16ea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fe4e97-a029-41b6-9042-852573f824ff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf09d2d2-b63f-48fd-a7b6-8eb73fc958cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd6466e-f97a-4c65-9952-68aa0c4d44c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886f83e9-1b0f-4f07-9860-567de011af9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f79766-0bfd-422e-a140-20849ba2304a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f9a772-15f7-44ab-9db4-fc10563b20c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60af54d0-732b-4c6f-89a0-63faa6280904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24fd0ac-1fa7-4f56-92c4-26bea03c80b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0f67f8-b9bd-45a6-8fcf-61a6b0b15f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c331423a-fe2a-4b35-87f9-885857bea8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b75125d-550c-4c57-8004-83129711bf51",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7340b6ce-77df-4e7e-af0d-d2c16c430409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a9b1de-31b9-4343-aa29-d2e5e31b1fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b13dd4-10ca-401b-a201-4e0f36b0ebec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb95886-06cc-43ea-9bc3-6c3dcad09ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6921101-6fde-4763-b205-ce3d02edbdd4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f365a-05b4-4503-96a4-1f0d121880e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d986e31-418f-4c82-884c-657c3a329cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53337153-a162-41f5-8daf-745a4321b59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca10c8a9-530a-4d0e-ab30-369d8309265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b30737-0cd1-43c7-b6f2-4325ad354869",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf9ebc-fde9-4dd4-b292-c6682535e2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfb0029-f331-4e43-8983-adefb278e124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e1c65e-452b-4a14-956d-77a67b278567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "92e5cff7-7b0f-4211-9a54-02a28b43fd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b9d5d-0708-4034-a740-a3d298f2c404",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b89c1d-282d-4e0f-8b51-c7fd7b61d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bbd336-9ec7-4477-982b-44b8268b03db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bd51a9-8921-45fa-9a6b-dc33c0380d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c89be1bf-335b-44f9-9691-3f64d676b373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0e3523-7d86-4632-bee2-6ef2dfe7d798",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2a571-496e-4fdb-b47d-7aa5455b93bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3185ac5f-023a-4324-8ac2-19458fe125bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c1eef8-e40b-4a3b-9915-e6deea6e36b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8ea163-982c-4055-8e8f-57fa452e5143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef2fa34-9b4d-42d0-94d1-682b53604640",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4add20fe-3215-425b-8802-1d061e0be6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f42c41-782c-4043-a2e1-b090c36f8795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d4b90e-aae5-4a0d-9913-0891de8cc888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a02e26-7148-456e-bc65-aa6479607846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba818d83-b88c-4223-8bd3-bf9e84a2d215",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23378611-07a0-4bd5-bdfd-268ecef5ece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3f6d03-eb39-4484-a704-4136a1268adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e51407e-9442-45a5-8309-7c004af95c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbafb77e-d055-4358-8080-624336aebbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04036e1-70ba-43f9-b149-882c31200339",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ceb3a6-b02b-46a7-8178-13f2aa1797fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e06225-373a-445f-a437-f0ffc5ecd008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145fe49b-83a4-4f61-b87f-9225a59bb97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a2ee26-b3b4-430f-9f9c-8c29f9987987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef9f7c3-9d07-4703-b467-f34ce877339f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a93ee77-3b67-4136-b3f7-8e8d67e0d4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c453b1f-159e-4a69-83c0-2086132172f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58da454e-e2f7-49b6-bc98-390e7c11bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7168c91-b97d-4195-82c9-333b48bd6725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d241d0-7194-4a2b-8019-3de3e9684d44",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6119de0-a4c0-49d6-b719-1c69b4d5298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcae266-f077-4337-abd3-9811c4ad53b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3bde12-8e13-4dc3-a2ef-63e112808c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53751fb-0b15-4c46-8de8-617245cd91d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023adec8-c0fb-42c3-bc5e-bcd2e7c02cca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250cf3f3-91bf-4932-8ba5-60b2ad6170d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32ff68e-991e-4753-9c82-e52d053efed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41a6c17-8876-4797-aea6-295f23a4e76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0edf1c8d-ad29-44bb-b55b-afacdc4322e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9e9252-765e-403d-83cc-4e90f79342f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8316dc62-7ba6-4d2c-a74a-72591ea72c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f726528-af5a-4634-a8f1-f071ecb575da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bcbd69-03a1-46a4-aabb-bdb3deb3d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e47a59-451b-4336-b7d8-8dccd45679a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150e736a-dcc0-45e9-8472-6a2bc25f75c9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ee2f62-48ca-49c5-90e6-d16a1b38ff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817f3eac-7ef3-414b-b287-cfdc8ece2e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0cce89-a0c9-40e5-ae2e-204421c2500a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3aa061-6852-4805-9380-eb88c9aac5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee417933-53b0-491b-ad30-18381902b3b2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bf3b47-6f64-4468-bf3c-2d8dee226b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5f1764-d09d-4249-8454-ac20c2826126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa59d00-e94f-41c1-af22-841ca6be505c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94158021-0917-4d1a-b14b-7e91bc36d71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cdcf7d-5f6c-4ff9-b211-0c414e304cb7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb6c525-b2ef-42b6-88a3-9c964ede0065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca539e3-5b58-4c7b-a90f-5cf14355e654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48de59f1-510d-4165-8c4a-234d40aed693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5343a4-5860-40f0-a0a7-ea242920ac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93b5644-4b9f-4a6d-a8a9-ba047ca68e6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4747e290-7599-4c16-b4a5-dc76377d3543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a29d49e-2882-46bb-9d81-865423bede69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743d3224-81ee-4f1b-a0eb-ff420b68e73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87edb4f-b5f1-4c24-9640-6d8972d01bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f31c323-5805-48a3-a5d9-e5525c8c3929",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a6138f-7cbc-48e4-bae8-847e11d20092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516fd373-8366-43f8-baef-3559183781ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c0d6f0-e4ce-44d8-a6e6-8e87e0d190b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9ed970-80e8-4def-8717-d700df04d089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206dce44-862e-4720-8217-ab4ef709a497",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2764a91-9f11-4d39-b78c-213803c73076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c6df3e-8635-41d5-a6c4-14a0a32f69fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b6b6a9-07d9-4a16-afc5-5b44cf5af555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034d0d0b-3868-4ec3-8379-e6aae319955c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f979cab-6077-4f66-82b2-9b385502c794",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4deacb-b27b-4249-86ee-a5e4161b2abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2062717c-65da-4f4f-b47c-7d2f771ce3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543e3a56-1567-4620-9d31-c584b1bf475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e80c6a-1224-499f-a192-5033f6227b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e33444-6ed0-4f31-aff3-d914a4962afb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e031c7-eca0-4d95-8f8d-94234b18f721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62887e7a-44ae-4270-92a4-632aad2797e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d34863-15ff-4a6d-a69b-e166ed4f8bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee1cb2b-bcbd-4f78-96e8-dccb8561176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464a4be2-6c0c-4010-863d-d5dc07d7b129",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38819e27-c338-443e-a0ac-cd325ae05f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ebe0e0-9220-4068-b6b0-b5b238bce51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3633b0b3-1099-4668-a8a9-5643a18965ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c9efb3-12cc-4f5f-8683-6237c3ee620d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afbdc87-0070-4918-9e4e-97f4a757ca16",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c5f04-4b6a-44e2-a032-ad83c02289bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7524a5f4-0446-45ce-bb46-12d86faf5139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc94dc7-e21d-46a9-93b5-43f5eb5d373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda1b92d-6d83-43a1-8bf1-b1acd1756321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8b7d02-b9d4-41c5-a525-92d8b0b69c13",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c254a7b4-329e-4a44-a050-85a320c4b4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46078872-faae-4289-ac88-51f3827f9c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8931a9a7-91f7-4231-b59f-9a2c6317d07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6fae3b-2532-4e60-919e-239861b8aeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4047cda-0aa7-4109-b833-9c6a9f1dee5c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013e7d88-bff3-421b-9f22-3fe14b528bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dc4ae2-20ff-497a-bf68-d127dee92193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7292e1-b1b8-4aac-af99-defc130b29d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87fccdad-fc8d-4002-af96-19c361dc8d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e787d277-180e-426c-a66d-2d7525fdafbb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8fd735-f9e4-4c09-b597-5597bb39b88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3ca870-cbd6-4fd9-bb38-e1e60a7a80c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19b5bce-e7c5-4c27-a395-17b51e26aba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4b060d-d8ea-46ec-81df-84e21acd6745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d9ef57-60d8-4c6c-a08b-63be40a2257d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5e7bd9-ce36-4ee7-bfdc-5e7598fe926f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78795fad-db3d-4c8c-87ef-899216aec4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b11715-865a-40ea-b56b-e04f5600b022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c843d03-ca51-439d-ace3-521a1191324d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7792cc0d-f810-40fb-bd34-a78dadfd94c6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9190c6-fdda-46a9-a712-f08f4813fb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c16fea-1283-42af-b816-898810f77e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28192725-6abc-4d1e-b6c2-cbc431dac7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "433226ce-f85e-4ce4-8de2-774a6aac44cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86594fc3-1d0b-48fe-9a86-3e56e5c36498",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c027c7-39c9-47b7-be39-f4708dc4ddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30914ff-742c-44f2-968d-6d99698caed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cff5718-64b5-429b-bc97-e3c060eefb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bebae0-9c03-4f13-83ea-c28a81a724e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d316623-6ec7-4c97-8205-4ef302872654",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3e3d16-7d77-437a-95ac-003e881d9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c470e37-e6c7-42ec-abe3-ec50e76b74b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d34005-4292-4173-9650-41519efd2009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ec010b-3e7a-4191-9867-41bb6c9bc497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b57136a-467c-4654-a963-ef7eda7bc7ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7626d58-5eee-4fc6-b830-bcff60fefc26",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ffbc74-69c1-466c-8646-f8b62a21c94f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2cf679-9d80-4134-8cfa-f3f258fd1bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a54c3ed-8f0b-4be3-849f-83aede35ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1905f0c-84c1-49f7-ac91-2643da426103"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a6f979a-7a93-4324-b0ef-bbeb4999b8ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb87e6a8-bf78-4dda-a383-e5222eccf0f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1776ebb9-a71b-47a2-aad3-7c1c27091176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94040a1f-f9e8-47b6-9309-162b749a8940"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e229f61b-318e-4cbb-9c0a-9ddfa0f5eb26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a9dfd3b-6347-479a-93b7-0c3408bfbe40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bc32c16-cafb-4227-b8b5-c85694e2b8fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94de8001-a738-4797-a7ff-2fa488977aed"
            }
          }
        ]
      },
      {
        "id": "4f22f6a7-c4c7-41eb-a227-40d5d797ea88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "77ed0dff-b0f7-4cf8-af77-439f6b55ac07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e93c4c1a-e691-4b01-8ff9-f97bde1d5df9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc812d11-e064-4ef8-945c-5ec55c008a2f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74faab49-4a06-4257-99a4-2b09301e4a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b679e2-033e-41bd-a5f4-9b05ab3653ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d420f902-16e5-425d-9d1b-fab8d26a4843",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c633285-19b7-43eb-8204-dcb15b3a6b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf6599f-8277-4a17-8098-7893a584afad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781405af-ff8a-47a8-ad24-769eb32b1b57",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e65f08-f5d9-4eb8-ad83-5aa11ab9e65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9a57ca-3c69-4520-884f-43fa8078c7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d9a647-e2fe-40f1-8529-e50c6068a936",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2110ff-1a69-4ba3-a999-eff32845bc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2a397a-7d38-4b30-a6d9-1be01622b84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c9309-a35b-4869-be11-b8ce6bfc30f3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6df8eda-a0fc-4f7b-ad85-89ea2d564d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4293d6bb-23d5-40a6-96d4-2006cc2d9dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927503bc-dc21-4b7a-a3b6-d751f8a7309b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9001bf09-88d9-4d75-939d-713975116b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3288fc8a-10d1-4a9a-81f4-1cfc3271a473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eec963-ec2b-4930-bc9a-aad9cbd289ee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50d6b02-fc99-4136-bb62-8c9ddaaf6ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c910c9f9-fd78-43ae-bfae-ef0fca35c9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ca6ee2-f384-4a2f-a1d9-abd517ccf47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4dd49d-5c5b-4f71-82aa-1364cc0e0bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9483b68e-d2f7-4649-b0d3-70d8d4743536",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d93e8-5f0d-4a14-b677-a557714748b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f0a139-7284-42dc-b87a-1363b5463703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caafb32-5c45-4cca-9248-ac4c952710be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7cedff-f631-4347-a433-e33f675da053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19181e61-6f57-4973-b2ce-dcccb391768b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fe43a7-24a3-4db7-a92b-e859554f925b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224d9817-a101-40a6-8765-6e9c18ff1848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d993659-0ed0-406d-8375-3f6cd13fb323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f4f4f1-a46d-4fab-898f-ee55d567031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aec3aa-3611-46bb-a824-2df9e359b245",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b289013c-9cce-4f92-97c5-7882125fcd9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798abe8a-f8c8-46d8-84a1-8b7730ab3426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd1e070-5fcc-4522-823f-8ba7849c01fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be38d71a-a4f5-4dc6-aa39-82b11e7d5641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b998d59d-efc7-476d-8e84-5c3f6ff0172c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d809e430-c710-4cf7-b631-fe60b520db15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3856a6a-f154-4e60-b78b-314586772e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8154438-765d-46c3-95a6-be57ec8c478a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522120fb-b1f7-4a30-bc40-6aeeb6b3818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb8426-956f-4e7c-a6cd-e621f018c456",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2008f5b5-3be1-4abc-b043-ea420a77fd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349ff4c8-9046-4631-9f35-8d6e0260f7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233276ce-22e3-4284-84ed-60a4fe186d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b43970-3b77-4727-b2c5-faea0eb97e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c58324-8de9-4006-a3a4-51583fde1366",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a52ec-2b48-4eb9-bd7e-c050b5649094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d6e1c3-157d-4e74-9ba8-e44a15bcca43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06ac45b-fd3e-4725-9f31-4a2e01f680a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a131ae-81f4-4eb0-95c4-c3b570572486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41e534d-278f-479c-a4dc-c4e790e0206e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210b610f-f6fa-49b0-92ff-be33c53fac7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81bdd5a-6112-43f4-9a09-7f0458e58f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aa60ba-0d47-4ffb-a370-800b639807a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315bc9b5-959f-4fe8-8c69-3b4da6cf52a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35d8a05-f4c0-4ee9-a49f-82f76dc3fc55",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b30717d-30e0-4d09-a1e5-72f59e2aabe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2513ce5b-6e63-4771-b2ac-2c15f6c2e1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46976634-7769-487d-afc3-b5a47756a2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81864009-3a53-4716-abcd-cbc0b1d72803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c69c2b-0f62-462d-9525-3096fc9ed5c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17967ed1-51e4-4008-bded-5d6cc04a9745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1577352-95e8-4c8f-b139-9cc9e354bf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0253dc5-c2b7-4589-9d98-c3d6c2030902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e82484-d1ac-41eb-b6ba-0898335de03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6301640-caa0-42b6-88cf-91953593e033",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bc2787-4cb0-499c-a503-366ea1e32eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e00e51-c787-4dc2-b37f-a9b4392fa31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608cd33-80dc-45d4-a8d5-de6d205fa33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8403a5-f61c-4ed7-aeec-b2f1574d6885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9aa944-7ea8-4329-8355-dc8c2dd922b1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507c8f8d-b5bd-45a4-81cd-c73c9c70c5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bac56b-f7eb-458c-a0a5-7a69b72fea35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fa6fdd-b116-489d-a496-bdd981995fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db260fb-0990-4cb7-8c43-35bf5884fa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1bd786-f3dc-4ff6-a883-f97c780d8a4b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62724026-1565-4d57-ac83-22a6dc6fc720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bef866-795a-48fa-a6f4-8deea125254a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a410e14-7d50-4857-aab3-5b4aab9246ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31f1bb2-d865-401f-bc35-0f1391efaa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b495d-b239-4ebf-8e31-3557ca8adfd7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aea8c66-ffae-419b-857a-a6eeeb069d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c75ec80-b144-4518-b11f-9649473fe94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ad6a1a-5315-4492-be96-44b86b0938f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edcd68b-edf2-47ed-a934-dc40976301f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89aae64-b93a-4190-b45e-94a9d2af5b34",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817dc3d7-df8e-4eb4-b883-aef005001411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e664c4-2865-4ba1-8e26-f478fca3bb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062e0717-de2b-4adc-a601-f7a7ae0aa957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead46318-dbb9-4b17-b2dc-507cc8558474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec234b22-f76a-465f-a3c8-de718d45a042",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337fb7c1-fa5d-41dc-87a7-50b495a1a7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f75b1c-0a29-4e4a-97a0-3c3df3eeb99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c560eeee-9cc5-4c4f-a43f-7aa12abdaba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea72efd1-9227-4b91-a7ab-0a5679f667d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d03de19-eb27-4b1a-87bb-c0b58ce6bb00",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e0b92f-228a-40a8-9fd3-20fc90915e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54db3c26-c646-4368-bdc4-4c9bbd125cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cd30db-b1a2-41b9-a489-6a702c730b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4222748-b581-429f-b36c-b2b41fe89e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2df7ca-2fba-4720-9ef2-7ca0a90584b8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb38355-62e3-4206-8ad1-28f10efa851e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c58302-6c37-4869-a81d-1336d7e3f880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a38d7-827a-4112-aa6e-7d3e782a92d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc067043-c06f-4f39-9d8c-3b1e97bc3e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c3ee47-8a31-4c1f-b128-c30cd52d78e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f1e17e-d44c-4d7d-a9e6-88cf796d80c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4081203c-0640-4903-84e9-3341a09dd625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba81a38d-d9d5-401e-880a-62eddac8fb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfe7590-57a3-4dc0-9672-4848ac641cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058aac1e-9827-44c8-9148-a3273f51296a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec54f47-0e2e-4b2c-8191-f5668253cc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2ca962-b922-4628-8efd-ec0d2dabc1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d34284-61a9-4f34-a4c3-ea583ed09bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c79b3af-f38d-4550-a013-8df020b68317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cca6f1-3d7b-449b-bf3d-c378b2ad910c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01157115-c68b-47bf-9b60-788b13737dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3be3b7-10a8-4214-8b13-99555f166159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d509aa86-436a-4373-a8ae-46b1f2789be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b904d2c-db04-4980-a918-4722b535f861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff6e9a2-2c9f-42e8-915b-9ac2193ea128",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b7e40d-05db-4e84-af22-3fa41cfe5c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d68f80-88d2-43b2-af8f-6da0c47c4ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9bff5c-afd2-4efc-98ac-afdf3d76ec24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49128587-b5e8-4aac-9d02-b9d91ffccd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77732a41-1bac-44d5-a67a-e9e2bc01f874",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f800ff-f738-434f-98c5-09d0ca71091e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e01254-dd21-4073-b12e-6cbd67b7867b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f160a6a-f2e9-4946-9eb5-2167a16a4851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e97744f-5d54-4b65-85e1-6962cf2081d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73c5e1e-9391-4714-bc99-a58c79857c67",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3250e630-ffcd-4932-ade1-63df74146b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57ab1df-2438-4a17-8d13-cc98fe840bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4a7e2-c2fe-4c33-aee8-8abf27c24a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c334f7-a131-4617-9938-b80e17b2669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbb4416-073d-4c59-be8a-88c5451d3b05",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4dc006-987b-43ec-af1a-1a23d26806d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987973ad-b1e5-4078-b829-e47be7383c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e522736f-5ec7-49e2-b957-c2cbeb837d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7871a4-4edc-4a3b-ad39-cabd5da50455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40994f20-f004-4bae-ac20-dcccc1d2bf23",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb50688-8716-4cf9-b78e-0180a56ec36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a049a35a-9926-4a54-b287-08131cde92e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbed57c2-a8e6-4293-9018-ec71f60b3163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4dfe4e-f3de-4f6c-8b12-5febe5371a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd8656d-d880-4946-a461-bc4c1fef6bd0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187ad798-bb02-4626-bbd2-2cf2b86ad809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac3e064-cf26-4832-8d5d-5032e60d9b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec35715-78f8-4181-aed8-dbcde959f5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ac542a-f968-4ab6-ba26-79af26b01cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3882c974-100b-4d0f-a6e7-d6c641152b89",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aa5aa8-c373-4968-8225-f55ba888b124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdde32ed-a7ce-49dd-b3d2-d7d0a11a4488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf1bc71-fcb3-4353-87e3-acfb0ed8cca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f10acb6-6e62-4533-83dc-03da1444fc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c24073-b134-4663-a6e4-dcda39bf0a74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66174f21-4a6b-4a19-bb4e-82dc4f3d36c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ec949e-c6f4-4522-a9d3-7fb02609978f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fb706a-01d8-4c64-a4eb-6cdf4727622f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d23a4ac-dc44-45e9-b0f2-b96ae6d2fc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f68696-4ffa-4dfd-a75d-fb55802ad4dc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b8b79a-3781-4645-86b7-fef21b507673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bd0344-881a-4f07-81f2-187988fd2125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2361a9-693f-442d-837c-14dd4e2623d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7a59e9-755c-4022-bd95-44d02057f47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9bb886-8936-429e-845a-71830dea9f12",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f46cdaa-5c04-486e-868b-62ff861a438d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df50fd79-3ebd-4d38-b1c8-a6412b2c76b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dced0f-ceb5-406c-933f-ea2aa1ec8773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c631dbaf-4be0-42c4-8b79-6f8c95fac434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b842e-2e22-47c8-8123-decdceaf25d9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4d6188-3b65-4f08-afa1-6995e33fd8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e59babc-c9ea-448a-856b-e12257e56c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c31f22-64b1-42e2-84cf-506088f2551d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4cb897-6882-4912-af6b-64471c1299cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e08aade-ade6-4487-96b4-93cc6555cc65",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe58936c-9978-4530-9f56-4aa61774eafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8ebf6e-bad1-4939-90a9-b51f5e89b8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a331f50-c4b1-437b-88f4-46be056f87e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c055db-aee8-4408-af9d-f8bde5f1b999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68078011-6141-4614-9e91-cb13d018287f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920cdd61-3b44-49a8-b7b2-f8e7df9bfbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52d2589-c076-4fbe-bd9e-c7b2aceab022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8dfcd8-f2e5-4376-9c1e-93ecc8da7b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e0f2ce-3dcf-4ec2-aa90-e8d6e85c5d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8ac27a-0b00-4748-a619-3a2fc82171c9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0842f8-5cda-43f3-a0c3-fd1bcc3fb62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71a2d89-bfc3-40ba-b25b-06dfbe7021d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcd6848-f9be-47c1-8ba0-16c850f05f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5866756f-113b-49db-b132-7a74c83a7f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c47d42-eecd-4d4e-a27c-b8aa23e1bd3b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceae4bda-6a1a-4f71-bd3c-87b5df1c9d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf9895e-de4a-48de-ab97-d2684deea837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30281638-5c45-4509-b2b9-902160ae9d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834ef422-8ee2-4330-98fb-1cf8d26b2dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2091900-8b6b-4541-8dee-0d9187792cac",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6267df5b-d550-4471-8303-7cdfc48adf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e5ff17-6d3a-43f5-b77f-e1ba4b348031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5570e6cd-31a6-4a65-897c-765602cf04d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f7e8f5-2a99-46b3-8ca3-a3233408abd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4421608-5704-45e1-b29b-6913119b9774",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74ec055-9c15-4350-ab50-1af1aa915031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3be722-6b60-4075-be1d-fc81cdeb07aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcb81cd-4007-46cb-a252-2d7b51bb7965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26692e6-c186-4fa4-b4b5-426ca53b44c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2505952a-b0b8-4317-9a03-1ea86b2d120e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2157524-1bca-4cdb-8edc-b325918becac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eedea0d-816f-4d34-9577-3807f3b3f844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8600839f-d898-4a40-8e20-87cd09977bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c889d90b-d4b2-4305-9c97-e5fa7673f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b10869-c895-4590-b26f-34d7ea176daa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed7cf2e-bdfa-4219-9446-ad44efb7c3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b25f61-2cd8-46fc-ba43-d8b79326b0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520f045-850f-45b2-b7ff-d7471e2cf2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb58837-a1af-48ab-a74c-53f5dc7e5813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb2117c-8883-4033-a329-da257a311ffc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbc801b-355a-4f87-b535-23218746abe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecda5cd-546c-4f51-a894-4527b1cb1eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c787f0ef-02b4-46aa-963b-d010879753eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41d97ec-81a2-4682-bdfc-3414df171ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60319f63-a107-45f5-81cd-f5e8c547fe13",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad1c2e8-5d5d-4509-833a-464e3b20927f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184f7612-d44f-47bd-9379-c21152e39bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d848731-7031-4554-8f9e-cb5741c2d613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb614af-35d8-4b7d-bfd2-a0fda75f615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d532612-69bf-4dd4-b692-c22f49797eeb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d519b5b3-880f-487c-a0dc-4045bbaa89a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f654b0d-cf97-4a16-9030-020eacf0c7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034328cc-385e-48cc-b2a5-d633db4525d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f04f4f3-2611-44ad-93c4-c4e9b2ce1fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ce8a0-2a55-43a3-a054-fcc96566add0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a570e96-011d-48a7-9b4b-fd33443da149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b32058-260f-469d-8c04-bca365a3cc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1068531-b6aa-4dea-8187-b0a00e75d7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c15910-24c6-4fb2-b86f-45aefa99e9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4109bda-2321-46ff-af9b-70203e7dc3eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbe6236-4c27-416b-b4d6-0846f3227f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb37bbd-4df4-46cc-9964-897204e84d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ed73f8-14e6-40cd-b34e-7ca17487e0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53efbd11-7187-482f-9175-be96527a167c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de70b48-bacd-4637-b20b-79187442ca12",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c02ba1-f3bd-4a98-a771-635b5139a439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48dc65f4-fdff-4ccc-8e7a-782a7c80b5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904aab33-4af1-46d3-9871-d1470668d233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed95bc13-b9a1-4176-bc75-e57eb6947272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795c8279-d7db-4392-a376-932ccf3acf6a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49131865-6337-4886-9586-165a046eb757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583bf65d-d14f-4ffd-9930-6aa8eed9a279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf76755-856c-4ce4-ae4d-231fac277dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a818499-d3ac-42e3-9b0a-f9c4eacf117e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a68040-d791-442c-8172-7df4b50d87a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c97654-2e56-48b5-a29b-e5fa140ab118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bae137-35a5-42d3-b126-369ab72a9d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b3ef1e-ec8e-4c41-a797-69b528719232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce72f6d2-4cfc-4884-a0a0-a515f7339a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7206641-8665-4683-9b05-3291c554342a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a2aa46-71fe-4505-81e4-5b69780d7676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2cd231-4112-4ca5-a6b0-670c638af34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074c4a9-60b1-4b84-b82e-31e49d99cda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfc9eb4-d811-4f54-b031-67fd39a76efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a706260f-d3f5-4943-903c-ef5fc0a94922",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83890d98-16b5-4327-bee9-0f7b3a964629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4e3c83-5ac0-46e5-aaf9-eb4160003fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a10e18-943e-4cee-9e85-686f2f1c6c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8837ab0-4433-43c8-89cb-365cfa64c101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79970f3d-0dc7-49af-baf6-7719f2eded64",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6872635e-5e72-4cef-99b1-0e34d6185781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fb3de8-aa94-4a46-9688-1123e734f32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a139db8-c0ae-435f-bb88-957a823a2e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5300b75-56a6-48d0-9477-2b881b9fc82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bb5717-2786-4004-a34b-e2d634f58676",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c20567-12e6-4135-9495-0ad4adec7919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d15e748-4993-4e22-892d-98f6f5e03a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1413f5-32be-43be-85bc-3e386d65c630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8c0938-eb42-423b-a2f4-5374be436af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76939c5f-c094-488b-a7c1-745ef6fa9ce0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd551dc6-34de-4c20-aa43-99ad29752f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3108502a-42a9-4784-9721-2eaf30f9ea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69995be2-2a53-4919-94b6-38a740b0be44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cfcbab-91e2-4a3b-814b-d1abc15d0bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3328aa-e09f-40f7-85da-142ce3ae759b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe060619-e741-42d4-bb78-6d017f403911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb9ebfd-3304-4526-b087-67a1f7d8fa13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7251597-2bc7-4fa4-9107-19304f589969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f32eaa7-b468-4f45-a9b4-ae0ef98003b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d7968d-5396-4de9-aa66-ce42af270176",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8e8c53-89f2-471a-8e9b-e1c752cb46fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854f20c2-0e88-441a-a66c-6a191695e2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df21c118-99da-40e1-af35-8002ae745d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19efd6ab-eca5-4f65-9b90-2702569dddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4304858-1eb0-449d-8b76-d851a0044509",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3046a71-9004-438e-8305-3c4fb1b12716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e076c9e-1d6c-4ea8-b8b7-073b9845520e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e14138b-e54b-42b1-ae62-f7d294562c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31933e4-a078-4f54-b89d-4c645a23d7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ac1e41-62cb-4a48-9ad2-3cdaae9fef3a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb50fa0-56c4-4fbd-b59c-ff4573f60a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6dc95f-9126-4d26-b228-0c189cbee75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ef9221-c365-476a-bd62-61dd7fc56f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260002a8-0160-47b6-b099-0ab8d73ec53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aebac7-a983-4058-b073-01d69b633e08",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7eec23-7f89-4818-b859-01d5f5e0ebd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf66bc7-e1c9-4b7f-bf81-b4f7fd805aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf72334-4874-420e-99a9-5c8c30288dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562755a6-9784-42ed-a96b-98f111849bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bf3ad1-bc5d-49c3-90c7-fbb289e4a354",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ab8982-2d37-455d-bad7-f524e39342b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37acbf25-88fd-4ddc-b33b-95a29d063051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bcb9e4-598c-4a4b-bf34-c212d7e3dcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b5732d-93d5-48f2-bc05-a1f111771d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6650400f-c370-4fcf-83fe-3b36bdc1a0e9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45ba818-d054-4b76-aa7d-895be3d33380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9439f3dd-79d0-4594-bbfe-2e447ccf9910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f262022e-6e44-46ae-a6f3-f813edc08217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fe215b-1622-4540-a229-d1bbaf5f1006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9793df-21d1-4285-a21b-971a0e446391",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bc055a-9c12-4336-a9f1-01c4365e3d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f53e4236-1ca2-496d-9f03-83b1603da63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c596ad02-fa28-4c13-98bc-40531238b619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f2e943-11f9-4f3d-b089-33297c435c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf49078-ae82-44f2-a2c1-e14518cc7889",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49c96a2-4894-4198-9cd7-24c357d7c576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c004b0e0-6026-44f1-a336-c844fc6c7477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f587286-78af-4b36-8a00-2a6dba9a48e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c46281-2bb5-42a4-8e0d-ed227d086eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784a65bf-2584-465f-be96-c11787ef3d3f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b0306d-19e6-420f-b2f6-b93099688966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "704aed41-6bb5-43d4-b250-2ff9fec04866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6656af8-3ad6-48a1-82b9-125b521710db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf6da43-06ed-4d31-aae1-6810943de9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9ba544-c0a2-4752-bfe0-6ac4db6befb5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d89c40c-5591-4a2f-bb65-1bcabd3cccf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2dff607-6509-47dc-ab4e-c104af6f40c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8d38e8-963f-458c-ad67-f89a7b5faa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1222927b-f4e3-491d-b4c0-7aa44708ecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6850b08-6f13-4249-a2b6-3ba167236cf8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb21acc-bca1-4732-b7f4-f9ca323ec6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3275a361-1305-4538-9a7d-a409211b93f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b394104f-2b69-4e28-baec-bfab171e99d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86546947-faa2-480f-8807-2af43081c640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8749958a-15f2-4ca6-ad55-5f633ec45708",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47fa135-3fe1-4525-8c09-d5a5c7510da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b81661db-201c-42c0-ae33-29104ba7da49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca3004c-547f-4100-9320-548664c02141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5b4c9d-be6b-4e3a-9b3d-d4f1d62f9037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c3aedc-2e09-494c-8e5f-075798d18ccc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895b727c-fc62-4e13-b953-95d8d488aa92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf12a053-280e-4796-ba8f-a8d1481c5dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2810e67c-5317-46ed-a69f-e91e2d308151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74f0cd2-6a78-41e4-b863-87a48e6b9bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779f292b-bfd1-4353-a515-6ada5b594c00",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99294c-53cf-4bb3-ab91-6b97da0075fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b022a69-73ea-4b85-b4b3-f62db8bc3675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a4c2bd-a1af-4d0c-b7f0-49574f90ee4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78026a04-82b1-428a-b9df-03327b3ad190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56a9718-8016-445e-94f2-1a5c51f3f646",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce129b17-8cf1-4f68-8bcb-a1d94fc95596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d49a195-b568-468c-a929-3827f4c5697b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d54ff0b-887e-4a5f-9828-5f2700473f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04a0894-a8c9-45ce-98bf-608ffc28cbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4886e94e-8297-4a6b-9ec9-c73b01e606c0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ef975e-50da-4d79-8686-6c64e61ba059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f178634d-a83c-4d10-baeb-3e6e867cc916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6858094-482e-4890-9eec-c5a4349d179f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29e9303-7e24-44f9-b5a5-5869f820635d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ea9e56-7b44-4a3c-9e7a-bb6b46d71d09",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636511ed-6717-4015-bee3-2de4ad106303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14622502-6858-40c7-b5f5-28014686b7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4da7a81-a4a8-4217-8e17-cdf70586b2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7a978a-ab1e-4674-8a0f-c44f1736720e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249e5f7-62d4-4ba6-8227-e4cadd0dd36e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a5360-4039-4d96-bcbb-0d2add94a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67e34b5-df2b-40cf-90df-8e331f797047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee4f763-01e4-4a45-845a-7ebb6633694d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c684610c-3d90-4efe-a100-58f4333aa4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e23c5e-a26d-4d61-bfcb-ca08d12d79a8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acef8506-c090-4d3a-b055-d8ad3ddbc6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb1d82a-7d84-427a-8b56-e33369636162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b84c5fe-cadd-4c9f-b6c0-9ec9802c1be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8e52af-8f89-4295-a2bc-6b6eec9d9aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa342fd-b28e-4cba-ab53-a7a50d14554e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d6517d-41b9-4bf2-8895-39d8600a639c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5b7d27-1c58-4135-a124-231957e379f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4ca329-2c11-4d26-bc99-6403d2bcfd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6951ab5d-d8d2-4964-a81a-07218c6311e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398f7d20-51b5-4b44-aebd-4cc9587b2fd5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea02b2e-a21f-45d0-83ab-90ef8123c990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d429e3-9c2b-4049-8a64-8e802381a008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b34764f-f70e-4c5d-80fe-2e7e2742953a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867a88c5-83e0-4090-aa56-58bc36346d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0a5f87-7bfb-4322-bfd1-975301fca999",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484a12aa-cfa4-4e5c-8954-db3c60d280eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead13d46-52f8-41ed-bb5d-daa9244ec756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988726b9-e003-4050-96ae-b93be51d6033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d638ec-28bb-4397-a4d9-192455b0e27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba2c91b-4185-4f5e-a91b-a0054bd1c5cf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cf9a52-f7e8-4106-8bc9-db944991978b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "122a415e-a5ba-45eb-afdc-dea9c89f97a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72351690-a8e8-402a-b4cb-d7db15e6a52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4063f0-b7a9-4dcc-bed8-99a142f01461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3a477a-b6e1-4a0f-a58a-5da3716139a3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2c5a75-6130-42cb-a137-23e03c195a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a57a721-f94f-4f81-a861-eb45dade8c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58c1f51-e2a4-4544-9419-3217e5a1b212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfd0420-0180-4106-a856-84c02b52c5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a43e5e3-c215-466f-86a8-aedb4cdeca16",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49075a1d-ccec-4abc-92e9-a823a7dc2102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21884b72-145c-410d-a349-dd65f9853599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8aaf86-1d40-443f-ac06-227c93b50707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3563f3-0f92-4b9e-942f-cb3f52cdaff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9093dc-894f-42c6-9a11-2a448e34495a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4641d4-6bb5-46ff-b2c5-d96fdefe5134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7cc0b05-8099-430f-8408-79ccd33dbaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf07375-e24b-440f-98e6-2856850ae76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066a82e6-c9c9-48e4-9034-8e6ffe45377c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007b1776-8907-4abc-971a-f053119d5ab7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e43c41-c259-4524-a14d-d62b3292c2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2212d76e-27d1-4c30-a202-75638fa21db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af1ce36-f870-4af4-a257-167785142e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a5106a-4da5-40aa-abb8-8627da1a6a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d112ea0-7c51-44ea-ab0d-22d396aff735",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c19677-bd7b-4aae-b02e-e0fc8178bff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636653b6-5a3b-4248-b69b-51109b03a962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffd3ebb-5ed2-4e12-92ed-7ae3a3c89a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c34546-064e-4d65-b1a2-35f1f6d478eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70754f3f-d213-4042-803d-8dbcba15e40d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d74442-b034-45e7-9855-0252c658fc2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4a322a-3073-49c2-aa3a-d8759ba2aa5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8c1208-78ca-489e-8a41-2c539e390d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144b2c47-7f66-4edc-aba2-bff090102516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95599000-1181-455c-aab7-a56bf5ad0e7b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c480c8d-d61c-41c6-bd45-b705625ae21d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1af8e40-b9f0-4374-87ff-9758ce37de3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abda2ac-a9e6-4d21-8875-170b2a9c65a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a873ca-e15b-475b-8947-9590f43cec53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d715659-cf71-4789-adc0-e4b77ac86fda",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a0ebec-5cca-4f22-a4e1-746acbc1df71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e281053f-5b0d-4fd2-b36b-4ac94c45604e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b696a27-d2d2-43f2-8103-58157c20a099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1da342c-98fd-49ce-becf-08196d2e011b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb32e33-d451-4766-9519-a0c5ba61b4dd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe8ec28-b6e8-444b-8588-6c3a2b7a42b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ac8f97-f59b-41b2-97f4-43db14371ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b07fe7e-e96a-4f67-a6e2-b1541fddeafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c998a09-1635-4152-8895-b71afb965006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b29159-ff43-4824-9733-abea17338fc5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b229938-d283-4ffe-b6c9-52e51a76cd32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec99d21-a327-4fc8-9318-c2ad093ad777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd61446-ecc1-44d1-8acd-02c4cffde67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964cf447-5cd2-40a9-a95b-bbe4cec80821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e73b45-adad-4a05-b39a-51a44eddbae8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad012e4b-8dda-4079-bae4-a31c49f9e1a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614d055e-ae72-493b-b6a6-fae0d81cfa96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351d85c2-ab70-4605-b889-99d8357f681d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f4ee17-5236-492f-a191-6dd998cc0fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4203fbbe-e3f3-4c87-bea1-d0b4cc2283e2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348b6731-7e76-474f-ae7b-9ddf7cfac523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c72af9f-032d-42b4-ada3-e5eddb4f9f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8fc82d-e5e2-4c1b-9951-b68db8199672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009d961f-f027-4f16-811a-e0ab8c914bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83895ef-030d-493c-b65f-40b8b0915d97",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a40e48-1aa1-4a04-b152-14d7ce658fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fcc383-e327-4e34-b315-c74de9fedaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2830a74b-ec06-4388-af1a-46cf691f5090",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de87d63-dd29-44a0-b398-3faa5bed6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839eca06-45ae-41c7-a3e6-8ecb65f7ed7a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1811b0c-b1d8-4670-aa98-55979c9d6c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97dd71f0-64da-4707-af14-f86cae9c22dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c15bb02-75f4-44e4-a65a-d488271de6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a6adcb-56db-4564-8400-cd1e563e6072"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c408c49a-66fe-4984-8d1a-6da8835500bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2375ac8-7a9b-4c03-a727-4112e9118e0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b83ed60-04c3-4123-bf34-e90d41cb4092",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c441c3c-9e45-464d-83f2-1906f5fccfe9"
                    }
                  }
                ]
              },
              {
                "id": "be5958e1-d4c7-4fcc-99c7-23a438f242c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6202cfee-c31c-4f47-962b-1f7162f37b17",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e4ecd4-5849-4e17-a703-428ada4ab163",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30e4d8f5-f948-480c-8811-6eb164516dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f823377-5253-46b9-8902-e242b45a550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96bf47f8-85ac-4a0c-9f51-e5e26beb3525"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07d43bc3-d634-4360-8517-5234e478dca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ecda66b-d9cd-4302-984b-cd084ac7adfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e7ab682-81ff-42a8-be80-279d8ba62219",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e93190-467c-4fcd-a946-c58e63115f8b"
                    }
                  }
                ]
              },
              {
                "id": "adf99c1c-ccce-4cfa-9a6d-f009e4925bf7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bdbeec7c-77d5-43d0-aee0-c691b1cb70c9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd22a753-b843-410d-aaff-bc61ed8b3012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f2cce6bc-efc8-4772-8e86-8abf22a4f94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4732e9c-9f70-4d12-9241-4b2a8e74c654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea180474-25f6-4aaf-be53-ecc389718891"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a6831ae8-80ed-42ec-a4f5-5ba71b5cc69c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfa73126-ed01-412a-8bc1-4f46fc37ee82",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a33cbb-936c-414a-92d5-0d93319ec326",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9cd8563b-8814-4c5f-bf53-c65c5c3a6bfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c1ede79-5660-4f8e-addd-1fc41e5db0c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9c08c89-5031-43cd-9d94-e25a3f301cbc"
                    }
                  }
                ]
              },
              {
                "id": "01cf7b72-adc9-43fd-b590-f6acd08ecdea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe94edca-a6c2-4fed-8450-d8e98f06d6d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0aeccda8-fc9a-4c5d-a6e0-eed31ac2dcea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66fe80e3-6dcf-4c83-b4c0-75ec26efdea0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9020ce69-0b44-4ee1-b5de-e78434d456af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b416087-28be-4d82-bf15-919c5c40b337",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e7495a02-18bf-4177-bcdf-2b4be466fee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ca5de32-e345-4968-8627-7a142caf884b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ba7e542-2f4c-4abb-b18e-3d684f30732b"
            }
          }
        ]
      },
      {
        "id": "0069e388-2d71-4b1a-a8ec-c676d080767b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c17f6a91-dc94-4752-b3aa-cc8e901451b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e747e0c-94d0-4eb7-900e-97888279b4fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf37f5bc-46b8-463a-a31f-52c670f47746",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de98050d-ac50-4147-9e52-b6cdc49d08ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1279dd6e-4704-485c-b57e-99c151a40ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7ccd4a-b9c8-43b1-ade4-13aa49cd8633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa4febc0-cf92-4134-b966-ec650a03a02f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8839385-22b3-4b70-9cfd-099f80d79394",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4b34b8f-e0f1-4047-8120-6b480fdb48a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7546b544-d42d-4db5-acfe-9ba4b412c01e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69f0cd8b-80b9-4269-b6d6-e5f5ffd54d0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34e441f9-508f-4a9a-9b17-af91ae05b9ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "785a1e76-4b3e-4c3e-800b-93b066e26e84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07489993-169a-40d2-b587-bdf577ab61c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3eaad54-d2da-4f14-98cc-19d54e8b4caf"
            }
          }
        ]
      },
      {
        "id": "c003fee0-6a09-45e5-b3cb-8348251bec48",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "628a15b8-c8ce-4588-82f4-2e59490dca26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fdc22eb-4ae2-4c8a-aeac-cee3a4dda5bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1440f45-4036-40a9-9e9d-2e7b772cfb54",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d15a31-77af-498f-be0d-4e6f0e2e9da0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64943da1-9551-421b-9b1f-ea2fd2d6a21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b44c2b5-335f-47c8-a25d-f0bd86d3563f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e3b9ad4-4ea8-472b-8315-7aa0d7e7f168"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb1b02ac-ddcb-4623-a560-07fd41bf97e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1786647-96e1-4f3b-9222-49202ed4d1ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3328f0aa-cf06-412f-a5d6-0ca0d8c3dc1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f2c6f46-5bfb-4d91-8ea0-4b03d42e1556"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5ffc94d-6582-425e-b2f1-9af91028b1f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "908adac9-575a-4e8f-a23d-0f87cdb70d3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f4a23f4-a106-4a0e-8eb9-a8a433ebb3ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe1548b2-50c0-4165-a07c-66bc40adfb71"
            }
          }
        ]
      },
      {
        "id": "ec5aee8d-abc1-4c32-b826-4519bec4bde9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c341d69e-684d-4e7c-ace7-e10535df04e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8492622-4303-4b77-9e30-db1806aaebc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f6eaf10-b701-4029-9390-3b1496444bf7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dce6691-e7c4-4e0b-83e9-6b132a4e60a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe5882e-4289-4b8a-8ca9-a08dd48b2cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93afa8f-89fa-47f2-a585-d7205066249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb17bd94-3294-463e-b83d-0108930fd1a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "853257ac-9073-4b52-a207-e199a120e8fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5186e01-e20e-4f9f-beb3-4aec022bd393"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c002335-2aed-4aca-9b85-b651874edb09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c8cfdb1-bd6d-41c8-9d53-e63ea5973a82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5c47c4a-3d3a-4b80-9af4-9670364a7ec0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d039628-5f6b-41b3-98fa-349ddf49dbb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8cce9a4-660f-4492-854a-f444a765d863",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f68cb38-66c0-43a7-9b9b-e2e60d4e10ae"
            }
          }
        ]
      },
      {
        "id": "94486573-8f12-41d7-a756-2c0d258ac989",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed91912c-b968-42ff-a02d-3a824cceaa7d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dc92549-3e7c-4739-8464-5dc0d29036b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "45f03b1f-752b-4d48-ad18-954fb295e616",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8c09c7d-f68f-4e66-a9c8-10d6994c665d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a12a39d-0c87-4eaf-9733-17419574a6a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.82807017543863,
      "responseMin": 10,
      "responseMax": 10070,
      "responseSd": 690.2431165276624,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705019790158,
      "completed": 1705019832377
    },
    "executions": [
      {
        "id": "3ffc4c8d-b5f1-4aae-826b-5f9d6d3e796b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "25b1fefc-e864-41a4-a41e-24330566aaca",
          "httpRequestId": "50b32435-9742-48f1-90ca-6d7bab69dabe"
        },
        "item": {
          "id": "3ffc4c8d-b5f1-4aae-826b-5f9d6d3e796b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9de8b2c2-2522-428a-9a94-daee84fcd73b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "f1852c94-6ff7-417a-8d76-91ebfcf89429",
        "cursor": {
          "ref": "0f00bb63-ec6b-40b3-8b12-04edf09064b6",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef8264cc-62ff-450f-85b7-02ec89c72f3a"
        },
        "item": {
          "id": "f1852c94-6ff7-417a-8d76-91ebfcf89429",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6a706fa2-0a1b-451f-b80b-b7c06ebfe0ec",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ae1544d7-621e-4690-91d6-72c3c50f2ebe",
        "cursor": {
          "ref": "81630388-865b-4583-ac19-bfccf7096193",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03afb16b-bd83-41b1-84ee-46172198b8aa"
        },
        "item": {
          "id": "ae1544d7-621e-4690-91d6-72c3c50f2ebe",
          "name": "did_json"
        },
        "response": {
          "id": "b72da127-0b7a-4ae9-8f15-3003401e3a27",
          "status": "OK",
          "code": 200,
          "responseTime": 353,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8690d21-3e0c-4144-97c4-3d9619ee75e4",
        "cursor": {
          "ref": "d62a3d19-e6b6-4a90-8cd0-c3f3469d7920",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6679819d-51cf-4ae5-ae3c-1e8ce38f77c0"
        },
        "item": {
          "id": "e8690d21-3e0c-4144-97c4-3d9619ee75e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "d91e7611-7f58-418c-816a-ab0da374840e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 734,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8690d21-3e0c-4144-97c4-3d9619ee75e4",
        "cursor": {
          "ref": "d62a3d19-e6b6-4a90-8cd0-c3f3469d7920",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6679819d-51cf-4ae5-ae3c-1e8ce38f77c0"
        },
        "item": {
          "id": "e8690d21-3e0c-4144-97c4-3d9619ee75e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "d91e7611-7f58-418c-816a-ab0da374840e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 734,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80c73a8-cc76-46ff-a9a3-8974a8aefb9a",
        "cursor": {
          "ref": "8eb456e3-c63e-4ada-a080-df60d6ebb028",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dbd42c36-2941-4c65-89ec-4819027e1654"
        },
        "item": {
          "id": "d80c73a8-cc76-46ff-a9a3-8974a8aefb9a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6a965104-cc7f-42a7-b360-72c70a8e4c0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1994f3f7-6e1c-45bb-958a-2c148e93587a",
        "cursor": {
          "ref": "9edbc093-e245-43c4-b67f-6c4eff69691d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e26f9be-e168-46e0-a88d-e710c4aee6b7"
        },
        "item": {
          "id": "1994f3f7-6e1c-45bb-958a-2c148e93587a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ab84a6ee-7973-4127-8744-b72028b93cf8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38f46c1-0bc2-41c7-bb5d-76b419493984",
        "cursor": {
          "ref": "a9c7fb95-df3c-409f-8de1-f21b80dd3f42",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4de3f10b-5eea-4459-98ee-9e4cb43c42c8"
        },
        "item": {
          "id": "b38f46c1-0bc2-41c7-bb5d-76b419493984",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a7abc705-bd4c-4b32-b465-d1ca108d3daa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a396e32-607c-4546-970d-fbbf30ff4c31",
        "cursor": {
          "ref": "f9765c6a-0b92-4818-bc08-76bbbe867e86",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f037f06e-df68-45fa-9554-97f9ff8286a0"
        },
        "item": {
          "id": "0a396e32-607c-4546-970d-fbbf30ff4c31",
          "name": "identifiers"
        },
        "response": {
          "id": "d26bbfef-6e95-4742-985b-f63ce7e3632e",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e1d21-d7be-4dba-8810-76e67d2564dc",
        "cursor": {
          "ref": "11527d7c-6f7d-4dd3-9908-5a0266022fc7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5c1c1f10-7a43-4c2d-b256-eec25d38600c"
        },
        "item": {
          "id": "991e1d21-d7be-4dba-8810-76e67d2564dc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "37ad6fa8-2d1f-4c67-9476-8494c6aa4b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e424064-2a57-49a2-a3ac-5bb540812eb8",
        "cursor": {
          "ref": "ed3ae67b-5e21-4ff9-b6a5-c762a4c11316",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "db543579-13fa-416d-b2b6-d0ee0c6d5aa4"
        },
        "item": {
          "id": "7e424064-2a57-49a2-a3ac-5bb540812eb8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "46c01ef8-3f80-45f2-8ba4-bbe4c12d7d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e2ca6e-125d-47d1-90de-696c1af1d121",
        "cursor": {
          "ref": "76149c2a-0d97-489b-b2e6-133e9fa82e84",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e1cbbe0b-ede8-455d-8416-13a165ef10f8"
        },
        "item": {
          "id": "57e2ca6e-125d-47d1-90de-696c1af1d121",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c1aed20a-49b0-453f-9220-22fa761044b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc3ac7c-9d67-40d1-b518-fa349976897a",
        "cursor": {
          "ref": "eb960054-22c9-4d68-a4f0-b950b134274c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b85de62a-b4a7-4cd3-ae43-ce3fd5437a65"
        },
        "item": {
          "id": "2dc3ac7c-9d67-40d1-b518-fa349976897a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7ba985c-5a60-4685-9e70-2441ee4b43b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b86b2ec-5238-4dbe-bf85-b8e6b8ff716d",
        "cursor": {
          "ref": "5e27a790-d82c-4f8b-84f0-4a01ab52c11f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db390ada-31f6-4490-ad9f-a09d40d51534"
        },
        "item": {
          "id": "3b86b2ec-5238-4dbe-bf85-b8e6b8ff716d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e8eeaae3-7339-4b59-b3b2-b347236f99ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b766e6f7-8204-433b-9fe0-1336fd3f27a9",
        "cursor": {
          "ref": "f8fa1f27-a93d-4e0c-944b-65f93538a4df",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2fb13341-6c7f-408b-b472-bb0de2107263"
        },
        "item": {
          "id": "b766e6f7-8204-433b-9fe0-1336fd3f27a9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d58763e4-d73e-4765-935b-45f3bf055393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed401ed3-3d05-4005-a014-2a16b2f49bd8",
        "cursor": {
          "ref": "2a855393-41d1-4b0d-89d8-45cd5b75d69e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d361d789-bea8-4089-a8ec-ed55077ae9a5"
        },
        "item": {
          "id": "ed401ed3-3d05-4005-a014-2a16b2f49bd8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7d03750b-06a2-4ace-8a34-e508cba8a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61738d92-b2d4-4c56-9d3b-6cc87e41fb2e",
        "cursor": {
          "ref": "94886cc2-cee7-4220-bb25-0c2ccb4f780d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "acce2925-93cb-4d7f-9d2e-bc008a451b2e"
        },
        "item": {
          "id": "61738d92-b2d4-4c56-9d3b-6cc87e41fb2e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2c1cbfed-929b-4b37-934b-c20dbe978340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b4fdf-6f09-43cd-a123-6e40cda146e8",
        "cursor": {
          "ref": "51afc67d-4ef1-4f54-af5c-35d989e04934",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6431ff69-2769-4eeb-a59d-cc5a7a87a885"
        },
        "item": {
          "id": "460b4fdf-6f09-43cd-a123-6e40cda146e8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b04b8a12-41f2-4500-9865-b85f31e2704f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420414c1-29b4-4256-b784-07f2e11484c4",
        "cursor": {
          "ref": "8d493d37-c510-4a04-bf8c-0e7e138fb367",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f33df4d0-a5a1-43b8-8a96-2e8ee8660107"
        },
        "item": {
          "id": "420414c1-29b4-4256-b784-07f2e11484c4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0085ab52-4005-43a2-80d2-eccb0a0bd76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e91f5e4-e68e-4622-8b0d-99de950e1613",
        "cursor": {
          "ref": "118d2d2b-3e47-44b3-9370-5ea20150ec86",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "87abadbf-b3ed-4e17-ae96-a7cdab87f5f8"
        },
        "item": {
          "id": "1e91f5e4-e68e-4622-8b0d-99de950e1613",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6d6b1e56-f34a-4c66-86da-bb81deae032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70064d00-fd2f-4bf9-ba71-ffef54da44fa",
        "cursor": {
          "ref": "03c5173a-6664-41fb-aca7-0aef3bc95f91",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fbb19cc9-ece0-4274-9d79-5330677661e0"
        },
        "item": {
          "id": "70064d00-fd2f-4bf9-ba71-ffef54da44fa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f9b99b6a-0a86-466a-9dce-6075d90574ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3def457-a7f9-4271-8cd1-8b1d6f2304c9",
        "cursor": {
          "ref": "120ed9f9-2e98-4a84-ac83-2f5826e8d5bc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ef730d18-95a6-411f-8d02-c7cd8f4cc65a"
        },
        "item": {
          "id": "e3def457-a7f9-4271-8cd1-8b1d6f2304c9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0c3d54dc-9996-4ba5-8b02-f41239a71d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b02b7-7f6d-4f23-94d4-dd9ccaa371d5",
        "cursor": {
          "ref": "bd03bec2-f04e-47e3-92db-3793a9cf98a2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "80ae8418-f96a-4cd3-8162-ff405c638848"
        },
        "item": {
          "id": "be7b02b7-7f6d-4f23-94d4-dd9ccaa371d5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b814037c-b714-42de-8bd1-7f1d90e92b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731c9e4a-064e-4c0b-becc-6f6077f90311",
        "cursor": {
          "ref": "2a96b435-6b24-4b95-9f05-701b07d4f0ba",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "036829b7-4b43-47b8-aa1c-c3e0d74b74fc"
        },
        "item": {
          "id": "731c9e4a-064e-4c0b-becc-6f6077f90311",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4880826d-35ba-4cff-b579-b44d881683ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde0577b-bf89-4dc2-a925-b16b2c2d2956",
        "cursor": {
          "ref": "03b90a2f-97a8-4e2f-b59c-fdd4f6e82035",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bd009032-9a80-4a7c-95d0-a6aeb3e7da12"
        },
        "item": {
          "id": "dde0577b-bf89-4dc2-a925-b16b2c2d2956",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7d2d881a-5bc4-4446-a53b-10493b520d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c8ba0b-a284-4bf2-b1c0-71759c2f3dcd",
        "cursor": {
          "ref": "7f517486-85e6-433d-9068-610353d0be2c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "850511c8-c79b-4ab8-bd28-5078d11b889b"
        },
        "item": {
          "id": "c4c8ba0b-a284-4bf2-b1c0-71759c2f3dcd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "749ec28d-b2e6-480a-b54f-c9b2c49b37f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16d5e5a-fc31-424b-acde-6f61b5bd0420",
        "cursor": {
          "ref": "c74ebf34-4c44-4d1f-babb-db3bac5310c4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0c706cb4-64e9-442c-9d19-138995556802"
        },
        "item": {
          "id": "f16d5e5a-fc31-424b-acde-6f61b5bd0420",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9021dff8-a886-46eb-9361-dbac83827f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe27517-8fcf-4be5-a224-ccd1fd6cf1b6",
        "cursor": {
          "ref": "89735142-580e-429a-9654-0db3039f31fa",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4ffef4dc-1879-4eb8-b5cf-b3ca70759b85"
        },
        "item": {
          "id": "dbe27517-8fcf-4be5-a224-ccd1fd6cf1b6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "11df7628-5ac9-413c-87c5-4284a500da4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417719ba-43d1-411e-9513-b4967ebd4bf7",
        "cursor": {
          "ref": "923ccaea-9c53-47d9-8cd4-aae9c8c21f66",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f3030fc-1549-4cd6-91a5-aec514f01021"
        },
        "item": {
          "id": "417719ba-43d1-411e-9513-b4967ebd4bf7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9ea72d8c-1cf8-4582-b7b1-b0bc9c0b274a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c882daf-fbf2-4245-b287-419edcdfd28e",
        "cursor": {
          "ref": "996efad9-78b5-4a54-abc6-a2f46c4f31a8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5471ef34-bfe1-4124-a81f-f939eef95599"
        },
        "item": {
          "id": "8c882daf-fbf2-4245-b287-419edcdfd28e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d35e21ef-ba5a-4037-bb6c-7ead7dbe891b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcf77f0-9903-4cc2-8f53-9571af54758e",
        "cursor": {
          "ref": "a7c82cf9-8a59-44e4-b94c-9488a2286f37",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f106a0fe-9c85-4f7b-8bd3-7ac05dd2bf55"
        },
        "item": {
          "id": "6bcf77f0-9903-4cc2-8f53-9571af54758e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9b2bace1-9035-4189-af2a-b9573a20cea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ec2e43-5c29-4d6b-b5fe-d2b4c591eddf",
        "cursor": {
          "ref": "34c4ff15-f706-4a27-92b5-3650e961f956",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "87ea1f9e-c8d1-4503-8670-dbd3a15f13ad"
        },
        "item": {
          "id": "68ec2e43-5c29-4d6b-b5fe-d2b4c591eddf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d18e686e-9a96-49a9-bfcb-59cfae64455a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905b2c47-cb0b-48f8-bc13-2d5d9f84f638",
        "cursor": {
          "ref": "3c572a7a-4672-4704-8aa8-5e3df8062a5b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7d8d76b8-5669-4dd1-984d-465b77162b36"
        },
        "item": {
          "id": "905b2c47-cb0b-48f8-bc13-2d5d9f84f638",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b7c91edd-f711-4b34-bff9-1f6687a7bd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f1f1bb-7e71-47a6-a8aa-5701102f12d1",
        "cursor": {
          "ref": "4b9f0c39-366d-4af4-bb89-2f2954cff32f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e0afc93f-8b51-4d29-b9fb-664459cdd203"
        },
        "item": {
          "id": "68f1f1bb-7e71-47a6-a8aa-5701102f12d1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0c1973e8-23ff-48ee-ad2d-ffe8311d0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d3b986-525e-4e1a-8173-045e08aeb72b",
        "cursor": {
          "ref": "24ee3fd6-eac1-4690-9ed7-4d3ff54bac89",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5579158f-cd33-4747-8fbc-09e273fe9ecf"
        },
        "item": {
          "id": "14d3b986-525e-4e1a-8173-045e08aeb72b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c49047eb-95d2-4cf8-80ba-d4fb2f6dd92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8944a713-f18a-42d1-a0dc-96b6dfa457b8",
        "cursor": {
          "ref": "9b47a426-3ffc-4350-959b-0f04f0de8d5a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2f258df1-e9ee-4cf8-a6c0-7dd484ed02d0"
        },
        "item": {
          "id": "8944a713-f18a-42d1-a0dc-96b6dfa457b8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "27ed551b-3926-4993-adc1-f9edf94b39e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa0c83d-8f22-4979-84f3-267580fc02e5",
        "cursor": {
          "ref": "07fe8298-9493-46eb-98fc-428844d39ff3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f65d6433-5b9f-47f2-a5d1-0e5bc5b7a5c5"
        },
        "item": {
          "id": "0fa0c83d-8f22-4979-84f3-267580fc02e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "371f3efa-20e9-411d-9b2c-d33fcca53508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ded8241-6022-42ff-99b4-1b6c4323f811",
        "cursor": {
          "ref": "68e0c8fd-24c8-4f0b-8451-b6b40f98d9d6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d008a702-9a30-42f2-89f8-f0ad999da895"
        },
        "item": {
          "id": "7ded8241-6022-42ff-99b4-1b6c4323f811",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "23af54ac-dcc0-4d2d-99a7-4ec02d7ecaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496b3e16-adb4-4400-9a7b-57bc6a4ccd74",
        "cursor": {
          "ref": "1c155bf6-8931-4774-bdaa-090d665b46b2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c997fde6-52b0-4de1-986c-76b5b1b01251"
        },
        "item": {
          "id": "496b3e16-adb4-4400-9a7b-57bc6a4ccd74",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4fa8da60-fae6-43b0-a485-f8a5f64048f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058b7bae-cf1b-4849-b71d-9993f4974575",
        "cursor": {
          "ref": "9269866a-3b39-49e0-a415-4a38e12ebac7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5d6a321-9e26-426a-ba8e-feb5b6b6bf75"
        },
        "item": {
          "id": "058b7bae-cf1b-4849-b71d-9993f4974575",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e3ea71b-9929-4b0a-8711-0e2a4af8479a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cbbfbb-38c4-409c-a5e4-435cceffd001",
        "cursor": {
          "ref": "f19f5223-478e-4f7b-a494-918d013407f4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7846965b-4696-4bd7-b2d6-22a1bf353c9d"
        },
        "item": {
          "id": "a4cbbfbb-38c4-409c-a5e4-435cceffd001",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0e80a652-7f5c-4ff6-bcb6-b8eb8e7fce71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116a9ca8-51af-4137-a1af-4358c6e77a8e",
        "cursor": {
          "ref": "b756e17d-0e7c-4a97-a834-2d03a3cdab8a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "90e6afb0-d21e-4be7-9b5b-995dabeeee0e"
        },
        "item": {
          "id": "116a9ca8-51af-4137-a1af-4358c6e77a8e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fcaebde0-a340-4cc0-b069-a7b9d3c1ca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82df0bad-2fdc-47ae-9ea9-3cdc6173f517",
        "cursor": {
          "ref": "d473dbf6-59c8-4faa-800e-afffb3f06759",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "83e23704-62fa-4774-970b-7269977d3f51"
        },
        "item": {
          "id": "82df0bad-2fdc-47ae-9ea9-3cdc6173f517",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3e4dcc1-93cc-4d53-b9d5-ad2e7691332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229d2f9e-0abc-4100-85fc-5d6aa59100ac",
        "cursor": {
          "ref": "7c2a9e81-c239-43e1-9218-992771b6b5bf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d5affa0f-c4d8-4f61-820f-47932554953b"
        },
        "item": {
          "id": "229d2f9e-0abc-4100-85fc-5d6aa59100ac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d4ac2862-60d6-43cf-a5c2-7a9e8c0b682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba34746-5091-4171-963f-d455ebac6e0c",
        "cursor": {
          "ref": "97b13265-17c4-4593-8ca9-c252b0460cdd",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2e88b0d1-0113-414e-9e57-bf30af6e5122"
        },
        "item": {
          "id": "bba34746-5091-4171-963f-d455ebac6e0c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8234e707-1f12-40b4-82e1-7a4e00fcb82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd9773e-797e-49eb-8f1d-bba0fd39a6d4",
        "cursor": {
          "ref": "42238772-fd05-4ccb-b11f-73f26cb8f63a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7be5943-4b3b-495a-9ebe-affc86f8e16b"
        },
        "item": {
          "id": "4cd9773e-797e-49eb-8f1d-bba0fd39a6d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2bf5874a-a999-4568-a44a-f3dc64eed164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55203333-bd4f-4ea6-8f85-fa5bd0d93b06",
        "cursor": {
          "ref": "6329695c-4bb1-473c-b50c-ef4a51e204fc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "67cf61de-451e-422d-b2f3-4c72fd490930"
        },
        "item": {
          "id": "55203333-bd4f-4ea6-8f85-fa5bd0d93b06",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cc9f0f21-1327-44bd-a841-a3d3108c57c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e26f22-4c54-4c1b-9839-316b57328d14",
        "cursor": {
          "ref": "45080857-5149-456d-9f40-b1e9dad352af",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f08e00eb-d4a9-4ea8-9542-8b22bfbfd2bc"
        },
        "item": {
          "id": "49e26f22-4c54-4c1b-9839-316b57328d14",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a8c4990a-77ec-46ca-87d2-d3ea5348cf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1113512-2054-4954-ada8-b2e84fd5a913",
        "cursor": {
          "ref": "b961bcac-1036-4ebf-ae96-f970ae9127d5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f3bb7b32-a5d8-401c-af0e-a3361d4bb7a8"
        },
        "item": {
          "id": "b1113512-2054-4954-ada8-b2e84fd5a913",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "91dfb450-516e-4209-97ef-85f5c60d4c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f88339-8cf8-4080-8398-bd55c45eacf0",
        "cursor": {
          "ref": "b2c03898-ef2b-4cff-a4ce-4b1b97be2b25",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "85e67098-6334-4520-a7ed-0a7a8a19f859"
        },
        "item": {
          "id": "81f88339-8cf8-4080-8398-bd55c45eacf0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "97e2c885-bd1b-42bb-8ecc-8109189a50e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5871d2a7-73cd-47e9-8865-0f62f363e4a0",
        "cursor": {
          "ref": "f7abc7e1-5e2b-4747-922b-844f0fd24f7a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cde781bf-07b9-42ba-a8a0-ea36f34ff55f"
        },
        "item": {
          "id": "5871d2a7-73cd-47e9-8865-0f62f363e4a0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4e1bc6fd-42db-4909-88ad-900741585c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183e166e-4792-46af-acee-26862c587cb4",
        "cursor": {
          "ref": "cdfc88e4-58bf-4a66-96dc-d90af37790e0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "604b0d7c-cc89-4e90-aba3-8d64fe5d09dd"
        },
        "item": {
          "id": "183e166e-4792-46af-acee-26862c587cb4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e00af8d9-b926-4b51-815d-68afb8a4c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9935a35e-c616-41c1-83fd-a0451a418247",
        "cursor": {
          "ref": "53b407d8-e2b8-4273-803a-b4740eaf13dd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e91149f-89b9-48ae-ae9a-3b6753fbd230"
        },
        "item": {
          "id": "9935a35e-c616-41c1-83fd-a0451a418247",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "195ef1e7-a66e-46ef-8edd-3edece8bbf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebc8253-c3a3-4e18-b9a3-15281840b6f5",
        "cursor": {
          "ref": "ada3e97a-5c16-458e-8729-73ce3576cef4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0bef8221-3598-40bf-b1f1-b1353b2654b2"
        },
        "item": {
          "id": "9ebc8253-c3a3-4e18-b9a3-15281840b6f5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4d8932f8-7733-47fe-bc7d-7cbf69d1962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ad76e-267d-4fa3-bfce-2ee4c34f3bc4",
        "cursor": {
          "ref": "660e6395-c276-4473-bb79-537322ebd0fa",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7c27e523-9ca6-4077-a32d-b1c31fe356ed"
        },
        "item": {
          "id": "588ad76e-267d-4fa3-bfce-2ee4c34f3bc4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b590fa38-aa17-4789-a753-8a09ba599d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea23211-da31-4dd7-b863-7a023aa5fb7b",
        "cursor": {
          "ref": "1eeb7b37-70d2-478f-b960-ca47ba870601",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d981613a-3799-40cb-b6a6-e159cc6aead8"
        },
        "item": {
          "id": "eea23211-da31-4dd7-b863-7a023aa5fb7b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "15fa673a-a04e-4f59-95a8-07039fe6f0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a51e8e-bbd5-4339-96ec-3333ea51417d",
        "cursor": {
          "ref": "a647d728-5bd5-4fc7-a8aa-57ee67d63f93",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d1f9887f-1e3a-46bf-aa56-d1aa20b76d64"
        },
        "item": {
          "id": "25a51e8e-bbd5-4339-96ec-3333ea51417d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "312e6eb5-4f3b-4674-982c-3fac9f674fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991b4697-e821-44c7-9dc9-7e2875cf4366",
        "cursor": {
          "ref": "fdfa0d9c-0f8b-489d-ad29-5b8f70d09d32",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "841c8368-7424-4507-9329-ee0c5782242c"
        },
        "item": {
          "id": "991b4697-e821-44c7-9dc9-7e2875cf4366",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a083704b-9968-41b0-be2d-7099f5f7f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54dd5ae-d166-4b63-828c-3e3f0d347506",
        "cursor": {
          "ref": "89a1d220-4a8d-41b9-b239-cffc32d8e03f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9db909ff-00c3-4773-b120-3d21a5ce60d7"
        },
        "item": {
          "id": "c54dd5ae-d166-4b63-828c-3e3f0d347506",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "86b2be34-023c-4fab-bd37-a9e8e4b59259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2fbe19-d0c2-4035-b175-af333b749396",
        "cursor": {
          "ref": "4d116dc8-e5eb-40a3-94a5-c3d7aa3790ff",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "90d5209f-454a-4c93-90e1-7440f32852fe"
        },
        "item": {
          "id": "6e2fbe19-d0c2-4035-b175-af333b749396",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "08e12809-1af5-4d2b-b0c0-e47fc6b047f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd6a0c-e347-422a-95c4-fb4c5968187f",
        "cursor": {
          "ref": "6a220a24-884a-4f38-98c7-2be350d92379",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3fa796eb-d459-4f53-baea-8b567ce3fa2b"
        },
        "item": {
          "id": "acbd6a0c-e347-422a-95c4-fb4c5968187f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa76df61-6900-4f67-aee9-b447cdf0fac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98172d22-dbf7-4faf-9012-df55a0fb4c60",
        "cursor": {
          "ref": "21e5ae87-1816-4e9c-a55b-15aa5c396719",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "63b35bb5-39dd-49d5-95fd-3ba0eb52c023"
        },
        "item": {
          "id": "98172d22-dbf7-4faf-9012-df55a0fb4c60",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "59b52462-d2a6-422a-a643-322c2e918ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e424235-23b0-446f-b562-7bf2a0bd3620",
        "cursor": {
          "ref": "6f0ff1a3-47db-4adf-a9a2-b753cf3e4015",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "33f160a1-c17c-40f3-8eb9-646da98f2336"
        },
        "item": {
          "id": "1e424235-23b0-446f-b562-7bf2a0bd3620",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aed771c2-835d-4f73-aff1-aa1933c09748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e071c0-81c9-4c22-aa62-d70656cc7b32",
        "cursor": {
          "ref": "dc48d4e0-3cf5-418f-b782-c3f806fef232",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "08211f86-bb8d-4f1a-9495-7b2759fbe1fa"
        },
        "item": {
          "id": "b2e071c0-81c9-4c22-aa62-d70656cc7b32",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d6ff1463-09a8-4ef8-b964-eb79e44fff30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9956d8b-318c-46d7-b79b-1ff65643cf71",
        "cursor": {
          "ref": "3108a348-102b-421e-88d9-bebce33570b7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "66faffe0-c015-4a01-8787-6635ec7b86c5"
        },
        "item": {
          "id": "e9956d8b-318c-46d7-b79b-1ff65643cf71",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "554c1aa8-c0c6-47fd-9964-71a66eb4b510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83601f97-93d1-4181-bda2-57fb38d94a0a",
        "cursor": {
          "ref": "71f6c50a-4b60-4468-90dd-7b01d1337f6d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "129d7a35-d946-4aa2-9ab2-52d760f6ce56"
        },
        "item": {
          "id": "83601f97-93d1-4181-bda2-57fb38d94a0a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "31e60440-8c8e-4075-aa06-4c02d34237cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17666b3b-cdd7-4e30-8690-b36100d005b4",
        "cursor": {
          "ref": "c9f803ab-7450-4b62-a36f-ad39b8c9ea58",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "74a7e628-21cb-476c-b90d-070f05b4ec69"
        },
        "item": {
          "id": "17666b3b-cdd7-4e30-8690-b36100d005b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "730d19b3-d268-402f-87dc-45a13baa33ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785d4ff9-039d-46eb-a419-54ead64323d5",
        "cursor": {
          "ref": "c0761bb5-5726-455b-bcd6-f8f4b48f9f25",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f615d716-b038-4402-a5a0-55dd13402ee6"
        },
        "item": {
          "id": "785d4ff9-039d-46eb-a419-54ead64323d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6efa5f80-f2e5-49ef-964a-558979ca8d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e65bc2-aa0f-47da-84f3-ebc0a3a775b5",
        "cursor": {
          "ref": "5db939ef-92b6-467d-9d42-9c4a96ea6514",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "699c9b0c-5d88-40c6-a94d-5f7ce3c3c045"
        },
        "item": {
          "id": "48e65bc2-aa0f-47da-84f3-ebc0a3a775b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "30372337-0834-407a-93b1-6d43c8de974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f79e44-23b6-4bb3-9fe4-b50dac9a315d",
        "cursor": {
          "ref": "4c1aa2fc-b393-4773-b14c-fef1d211b87d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "181a1c83-2c2f-4174-a9f5-62152c092c3d"
        },
        "item": {
          "id": "f3f79e44-23b6-4bb3-9fe4-b50dac9a315d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "49aecd46-7c26-433c-b74a-c7e8a89baecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8384cc-a37c-4305-8557-2d3af6d39643",
        "cursor": {
          "ref": "e166e42d-3169-48af-8d3d-669bb0804266",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b67d2755-a901-4d88-a48e-161300e1bcd6"
        },
        "item": {
          "id": "ee8384cc-a37c-4305-8557-2d3af6d39643",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "50cd05af-7785-4a75-ad88-614482b265a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0460e6e5-3439-4846-a6fc-4dd2301f0474",
        "cursor": {
          "ref": "2838dc0a-2e8d-43b8-9c58-6d4033b363f6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0c99c1e9-9343-49d2-82e9-53d1ad336caf"
        },
        "item": {
          "id": "0460e6e5-3439-4846-a6fc-4dd2301f0474",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c5ee96c1-088b-44d8-b5c7-350a3e1642ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3f5801-7119-4687-aa32-b21e6c7bbea1",
        "cursor": {
          "ref": "479c19f4-d80a-4d44-8667-1e2a12609caa",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "44673488-98c7-42eb-8a29-e6be9c7cfaea"
        },
        "item": {
          "id": "9e3f5801-7119-4687-aa32-b21e6c7bbea1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "618e755c-106a-43df-95f4-2a29f57a9b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5655e9f4-c277-4eee-b55e-a9ec232f1200",
        "cursor": {
          "ref": "e64e7d91-99f1-4f77-ad0e-3d7d8b497772",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5154b989-ce21-4a38-80d0-7ea09570bd22"
        },
        "item": {
          "id": "5655e9f4-c277-4eee-b55e-a9ec232f1200",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "443cfe08-a8e8-465f-b62e-4dd1cb31dd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfa56e1-a624-4aa4-882b-69e0ed652774",
        "cursor": {
          "ref": "1dc4c05d-cfb5-471e-837f-204d4dfe48ef",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a0e5bccd-4e55-49c9-af93-8e75328fbede"
        },
        "item": {
          "id": "9dfa56e1-a624-4aa4-882b-69e0ed652774",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d31f64c3-535f-41e7-adcb-7c1c1560ed0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de703933-951f-40d5-8800-cba3b937184f",
        "cursor": {
          "ref": "498c5d11-cfb9-44f4-b171-61605af6a0fa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "30aef79e-e9e9-4a27-b32e-c96842af4cb3"
        },
        "item": {
          "id": "de703933-951f-40d5-8800-cba3b937184f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c1941f89-2ee6-47a7-9bb0-b6356c8a58ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f0ac1f-ad5a-4d3b-99c3-ab7d76cf82c3",
        "cursor": {
          "ref": "5bf3e3cd-221f-418c-9c7f-e8899e8d0bdf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "134265d2-3a54-4554-bf86-f364e27e2138"
        },
        "item": {
          "id": "30f0ac1f-ad5a-4d3b-99c3-ab7d76cf82c3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d29b0d2c-c50e-479a-afcd-fe1ee572e430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fda186-3a09-460f-9636-d9910d84871b",
        "cursor": {
          "ref": "846d1d3a-db13-4260-89f5-3fdb389f2653",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9e7bcbb1-7539-454b-a28a-1dbb2d82ce77"
        },
        "item": {
          "id": "a5fda186-3a09-460f-9636-d9910d84871b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "531d1aed-a0f9-491b-9b7c-9f08a472b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701191ad-bb08-4413-8c29-d38fcdf8eac0",
        "cursor": {
          "ref": "8205a402-fcbf-4e3f-8978-e6eca4f44d64",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a1c9b63e-dd07-45a6-afb9-fdbd6938c1e6"
        },
        "item": {
          "id": "701191ad-bb08-4413-8c29-d38fcdf8eac0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7cacb4c3-5256-4a9e-837a-cbfb5db7ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b441fff-b1d7-442b-8980-4cb92c8849be",
        "cursor": {
          "ref": "b6ffc34a-360d-4c40-8505-853dd2694743",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2bf13992-dafc-4868-912e-9c9ccf7995da"
        },
        "item": {
          "id": "0b441fff-b1d7-442b-8980-4cb92c8849be",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7e74980b-a699-41fa-9103-09805f058bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69caf0b-805a-4527-b320-93a86a08ca1b",
        "cursor": {
          "ref": "706e62bb-6bc9-4733-ab66-28d9878b64f8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9a9538bc-ce48-4de6-ab00-20454ab045f0"
        },
        "item": {
          "id": "a69caf0b-805a-4527-b320-93a86a08ca1b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8d8ed391-53fa-423d-80d5-1ff9e59960fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94475515-4db5-4032-819e-41e4c4017cac",
        "cursor": {
          "ref": "d43d5f57-7839-444b-905b-43dafbddf0d1",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b489866b-c604-4e9d-8b81-547874620a4b"
        },
        "item": {
          "id": "94475515-4db5-4032-819e-41e4c4017cac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3116675a-c44f-4339-b673-f91559c9fa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207c8898-e508-4d46-a672-cb1d7b9080c9",
        "cursor": {
          "ref": "edd8611d-39a1-4476-aa0d-8bcd9157fc22",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eacf2804-1e79-4d44-a22e-4e9410e13600"
        },
        "item": {
          "id": "207c8898-e508-4d46-a672-cb1d7b9080c9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0fb05236-e438-4c45-9ca0-b7715aae2cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d32cc5e-a52e-470c-985b-c2c20a0f0ad3",
        "cursor": {
          "ref": "98ec1fe8-b700-4363-bc0d-fb82050cfb11",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "38e88118-5d33-4608-9a8c-c861637cd2b5"
        },
        "item": {
          "id": "4d32cc5e-a52e-470c-985b-c2c20a0f0ad3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a23c3df8-d22a-4a61-815c-9049a82c6a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0348d65-e9e0-4d28-85c1-5a58331dd183",
        "cursor": {
          "ref": "462321f0-9253-4ed5-a5bc-ad27f6471864",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2cccb658-9b36-4b4d-ae50-cd454af428dc"
        },
        "item": {
          "id": "b0348d65-e9e0-4d28-85c1-5a58331dd183",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "628dceca-704a-44f6-88df-d1a5aa94344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9586bf9c-6d3f-4653-b338-07da5f08c470",
        "cursor": {
          "ref": "119e695f-9147-4232-b689-6a8aca78a924",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "253ace2c-7dfe-4199-9295-d433575db968"
        },
        "item": {
          "id": "9586bf9c-6d3f-4653-b338-07da5f08c470",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0a43b463-15f4-4624-ac1c-95302189113e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e65dcd7-fa31-481a-9d89-a7a0da3062f5",
        "cursor": {
          "ref": "c66a5864-efb3-421f-b954-ffd751695be9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "48e529f7-be69-460b-9622-7b3df3632d5b"
        },
        "item": {
          "id": "6e65dcd7-fa31-481a-9d89-a7a0da3062f5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52c43027-7200-4d91-8eff-e7dc6c2f3917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78fac81-6ad0-4b44-b14c-8fdf99d16a64",
        "cursor": {
          "ref": "7979fefb-8522-42d2-add2-1c065d1959ce",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8773eae4-4e3c-4dd9-a60c-f9bce8c6ee43"
        },
        "item": {
          "id": "d78fac81-6ad0-4b44-b14c-8fdf99d16a64",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eb06aefc-ba73-4cda-a5e7-6c25ad1b3052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1155eb-72c9-49e1-a58b-3fcc2a69fb97",
        "cursor": {
          "ref": "35fb3787-d0c1-4c6b-8a19-0a1fe695450a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ca8160d8-dd7c-4056-8274-c1796659a047"
        },
        "item": {
          "id": "ed1155eb-72c9-49e1-a58b-3fcc2a69fb97",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b69b6f06-dc08-422e-ada2-75956bdf1c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea13a805-e99d-4ade-bb80-32d6266932a5",
        "cursor": {
          "ref": "274978b2-51f1-4b16-827b-35fb72e95461",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4afc72b8-c00a-4d36-ba81-37adb7ddd6bd"
        },
        "item": {
          "id": "ea13a805-e99d-4ade-bb80-32d6266932a5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "25cbb754-557e-47a5-a264-740aa71fe551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750d29ff-f3e3-477b-a1c8-5172546ec9f8",
        "cursor": {
          "ref": "2e0729e3-0d43-4d73-bfe2-d5bbb8f1547e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "867bf3cf-ee61-40bb-9e4e-c097fe8069d5"
        },
        "item": {
          "id": "750d29ff-f3e3-477b-a1c8-5172546ec9f8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "509e75ea-33c1-451e-a593-4fc56d6291d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebd5e32-3674-4684-bb6c-1f4739481eba",
        "cursor": {
          "ref": "38a13220-1df5-4221-87a2-0540905bb596",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e31ad33-7580-4fcf-8555-24d48898f037"
        },
        "item": {
          "id": "4ebd5e32-3674-4684-bb6c-1f4739481eba",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "55ea1c62-0206-4562-862d-8a27ea77995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d173267-955a-4cb2-acc3-95c2ae5f2c7a",
        "cursor": {
          "ref": "06e987a3-c4a8-4c97-bfdb-6d7d6d241459",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "230605b1-20a0-4f8c-a53c-42fd010637a5"
        },
        "item": {
          "id": "0d173267-955a-4cb2-acc3-95c2ae5f2c7a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a1cbbe6-73af-4687-a37e-76890597c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9a410e-6ecd-470d-9b91-f8e3f22a7522",
        "cursor": {
          "ref": "5dbf541a-75a4-48dc-940e-94854f2a50b9",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9e1749a3-a605-41c3-8161-7799141425c4"
        },
        "item": {
          "id": "ec9a410e-6ecd-470d-9b91-f8e3f22a7522",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "25c38c92-1528-455e-acf2-d7f06312b6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86abe9e-d447-4716-8c5d-0bbd59fd444c",
        "cursor": {
          "ref": "ebe9598e-90c1-4e81-98c7-871f22f89f1b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "70b9c7d3-5e09-4e13-b9ad-ea131ca02f4e"
        },
        "item": {
          "id": "f86abe9e-d447-4716-8c5d-0bbd59fd444c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a13eaf7b-ffff-4f61-a38a-a10610918722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e05677a-1775-416d-b76e-3fcf66e82b9f",
        "cursor": {
          "ref": "7ea9e903-75a1-4a37-ad91-aef0644c6a41",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3649f5c3-ff53-4d99-8aa8-0d55ab1a6c88"
        },
        "item": {
          "id": "7e05677a-1775-416d-b76e-3fcf66e82b9f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c76390e4-241e-4bab-8aea-2699a24a7694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf0bcc4-0e0e-47ee-bb59-0ed7f73b5565",
        "cursor": {
          "ref": "b697bf20-543f-4838-a873-441acc3cbca2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ca8e05d2-9b1f-4f2f-a607-7e9037b66464"
        },
        "item": {
          "id": "bcf0bcc4-0e0e-47ee-bb59-0ed7f73b5565",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dfd22ea1-4cbe-4c85-91d1-cac4a8654fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e43a6b2-2185-432c-ba36-ef9d296e08f5",
        "cursor": {
          "ref": "9e258f2a-40c3-4ad8-9670-67fefedcc38f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "75c4fa7e-f797-44cd-97bc-9ecb49b92920"
        },
        "item": {
          "id": "1e43a6b2-2185-432c-ba36-ef9d296e08f5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5c0cfad7-753a-4e97-9ed6-c541e3cde25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb659d3-4012-4dc1-a18a-221f39dcea2e",
        "cursor": {
          "ref": "562f3e08-11e9-40f0-b0f0-0e6972424b5d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a6293b04-45a1-4705-8be1-e1555141062c"
        },
        "item": {
          "id": "3bb659d3-4012-4dc1-a18a-221f39dcea2e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "90c824da-4ce5-469f-906c-e852c8d9d02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f16d2dc-8908-46f4-8c3d-f4562083d716",
        "cursor": {
          "ref": "1e9ee61b-ff4f-4882-af19-782e636fe00a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a914500a-95b4-4078-a26b-11a70e870781"
        },
        "item": {
          "id": "1f16d2dc-8908-46f4-8c3d-f4562083d716",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ea7089a8-3bfa-46fd-8cbf-81d14d12300c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd31c3f-8e15-416b-ac89-447959332194",
        "cursor": {
          "ref": "02f6e315-73eb-4818-b2bc-78043c686b7c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a09831d7-d8d3-4af1-a781-a37cc25dc126"
        },
        "item": {
          "id": "ccd31c3f-8e15-416b-ac89-447959332194",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "368b2fd7-8af5-423a-858f-03b4040b61b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a27e5b-af0b-444e-ac43-99b28099b8d7",
        "cursor": {
          "ref": "f614fdb9-48cc-47da-b5f6-44fbb7cbe0b6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90094660-6983-403b-928a-9f1f60408a09"
        },
        "item": {
          "id": "78a27e5b-af0b-444e-ac43-99b28099b8d7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "133672a3-b74a-4cbc-9614-fd82208aaa4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b7d131-3a3f-4fb0-a6cb-7e92ac1313c9",
        "cursor": {
          "ref": "08f45047-f406-420a-a936-3bfb3053af99",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fb3b5b42-8e19-46ab-9eca-95fa289fa1f3"
        },
        "item": {
          "id": "d0b7d131-3a3f-4fb0-a6cb-7e92ac1313c9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c576b114-cef9-46fe-ae26-5c4aedf386ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f95c1fb5-5d51-4010-b4d7-ba0bf8a25b42",
        "cursor": {
          "ref": "a62b2867-abb9-4ea3-9b4d-78e4cce2cbc6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dc1598a4-1a02-48fe-b582-c922e846c73c"
        },
        "item": {
          "id": "f95c1fb5-5d51-4010-b4d7-ba0bf8a25b42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "77eb4554-b76f-46fa-bf7b-6d9974aaa135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "74473308-29d2-4582-ad81-77c100e3cbd5",
        "cursor": {
          "ref": "487f5856-0291-48f6-9cb7-17668a152700",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2512b850-e704-4e85-8b9a-4092315e52ce"
        },
        "item": {
          "id": "74473308-29d2-4582-ad81-77c100e3cbd5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8058d24e-e6f6-4767-a0d0-c5b61d254ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3ac57d8e-8620-48b4-acc1-a91100385fff",
        "cursor": {
          "ref": "b69d8dbf-d00d-42ac-b67d-5676572a7686",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "19e0ebbc-6adc-4269-8cf1-0921de97778a"
        },
        "item": {
          "id": "3ac57d8e-8620-48b4-acc1-a91100385fff",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6a6b3a0a-a66b-4aaa-abb7-d25196a3257c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "206eaa8a-91bc-4ec7-a2ab-5a76d383e776",
        "cursor": {
          "ref": "0e71efbe-23c9-4a0d-b1f0-c4ed4aa89a29",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "30e5205d-7a7d-4379-845c-f9b19fdadb78"
        },
        "item": {
          "id": "206eaa8a-91bc-4ec7-a2ab-5a76d383e776",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "68517162-1e3b-4d8a-a617-1878a7065438",
          "status": "Created",
          "code": 201,
          "responseTime": 10070,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbe0c41-d925-45d1-ab92-4899827bee44",
        "cursor": {
          "ref": "59a498b3-0957-4123-9109-541ca928ea97",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f6a7e623-1e07-4918-bb15-f4fd98d961fa"
        },
        "item": {
          "id": "8cbe0c41-d925-45d1-ab92-4899827bee44",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3ec8735f-eae2-4820-ad88-30570d5207e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e0cfb7fa-e90d-4f2b-b221-2f6780b82923",
        "cursor": {
          "ref": "800203bc-ecbd-47bf-a3d0-6071a9d50372",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9f8f9d9b-e2ec-4de5-854a-7c225cdc7ee1"
        },
        "item": {
          "id": "e0cfb7fa-e90d-4f2b-b221-2f6780b82923",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cdf5c916-3dd4-424a-a1b0-7c9093a8ee48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ae011309-5603-48a6-80d1-a433e4b2ad22",
        "cursor": {
          "ref": "987585f9-42a2-4864-b09a-3c7ae4d28244",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e7aab1f6-9c66-408f-9912-239c9858b565"
        },
        "item": {
          "id": "ae011309-5603-48a6-80d1-a433e4b2ad22",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7977ab61-81e7-4b4f-82b4-11b534ffbc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18dcbd7-0441-44e1-ad04-6a22077a46a6",
        "cursor": {
          "ref": "2dc59238-28a3-4172-8f74-e9fa36a57767",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5b677a7a-4094-4c05-a1dc-8030f8c16c66"
        },
        "item": {
          "id": "d18dcbd7-0441-44e1-ad04-6a22077a46a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "301eca99-8007-4601-bd39-188ae9c2a3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cbde1a-e604-44df-9b2e-6b5fbd9bfc9a",
        "cursor": {
          "ref": "666dea0a-45fb-49a6-a15c-0619c5274839",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "effb24bf-3ee7-411e-8545-2e6d451a36ae"
        },
        "item": {
          "id": "31cbde1a-e604-44df-9b2e-6b5fbd9bfc9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "de37f776-e861-4b6f-ac23-00318064f25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dd5d28-ab93-41fd-94c0-65fcaf8063ba",
        "cursor": {
          "ref": "80eb59d6-3980-44ac-83c1-527f08daa6da",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d93fbc43-a54e-4512-990b-cafbe9baaca1"
        },
        "item": {
          "id": "c8dd5d28-ab93-41fd-94c0-65fcaf8063ba",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d94258f-6bc8-4959-9ae0-8c931b20df39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dc7a5e-03bf-4e29-8567-ffd4d79bc07c",
        "cursor": {
          "ref": "5062dce1-8860-4492-8340-b80ed922e95a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b16c6eae-b9dc-432c-88ad-33fbddb066a5"
        },
        "item": {
          "id": "61dc7a5e-03bf-4e29-8567-ffd4d79bc07c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6cb83461-fd6a-498e-9de7-cec77f44290c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836fce7b-c142-432d-94c8-c451169e1857",
        "cursor": {
          "ref": "7b2367c9-2b84-4ef6-9dce-236e35e6d47c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2ed4e709-92a6-4381-9c13-020b67aa5af0"
        },
        "item": {
          "id": "836fce7b-c142-432d-94c8-c451169e1857",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8348f1fb-4e8e-4fb2-a424-54d11c973b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b380fa-042e-426f-a88f-eabdae7712b2",
        "cursor": {
          "ref": "755e0e5d-f088-4868-95f2-b028158ae95a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ffb48e7c-8b2a-4c1e-96e2-6f58503e297c"
        },
        "item": {
          "id": "98b380fa-042e-426f-a88f-eabdae7712b2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5922e9e8-b578-48b6-b24f-aa72ebd57da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0849f00a-2584-47c4-8dc7-281572f157e7",
        "cursor": {
          "ref": "c45ed27b-d2e8-4b92-a897-1e9231f2e93d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "de43a9ee-3cea-45e6-8194-fdb86a2831ab"
        },
        "item": {
          "id": "0849f00a-2584-47c4-8dc7-281572f157e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4a4f5b0b-efe2-4345-9274-3c14807ac470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305c7a0-0892-422b-86b4-233b2b12dbab",
        "cursor": {
          "ref": "0a7a5b10-5ff7-426b-9f1e-f67551bf2435",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9a7af4c5-a1b4-44d7-965c-a70d160fbf29"
        },
        "item": {
          "id": "a305c7a0-0892-422b-86b4-233b2b12dbab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb044d61-53fb-48ba-9471-b6b43a937f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f851bc96-d5b9-457b-83cc-4ca2f39590b4",
        "cursor": {
          "ref": "b3b30ba7-e501-47fe-bee1-64db23c25711",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f3d4696f-4685-467d-9047-3e2a8249b357"
        },
        "item": {
          "id": "f851bc96-d5b9-457b-83cc-4ca2f39590b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "996de548-0b31-4c7e-a263-1dd6835859c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5268a24f-11ca-4964-9d50-523ee03e4ac2",
        "cursor": {
          "ref": "ea7f7619-3335-4675-a011-b502c03d5f97",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "98466210-8c1a-4337-8979-890be7a4ef04"
        },
        "item": {
          "id": "5268a24f-11ca-4964-9d50-523ee03e4ac2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c0d05bd5-7ed1-410c-8a73-b02cf2e31cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb28402-c504-4174-a8c9-ae276385b879",
        "cursor": {
          "ref": "34d00c0c-ff26-43a7-a587-b03ebfae1d9a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0ab6df32-3a5d-444a-99b7-ccc235d8c3c8"
        },
        "item": {
          "id": "bbb28402-c504-4174-a8c9-ae276385b879",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24eb497b-8ee2-4e99-8d4e-1b8519ed01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e81723-1e4d-4e30-8a55-a1127d4bb63f",
        "cursor": {
          "ref": "572fc6cf-a744-4873-9b1f-b494104367de",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "afa805bb-88db-4a41-8faa-5fda296030d0"
        },
        "item": {
          "id": "e1e81723-1e4d-4e30-8a55-a1127d4bb63f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7893a50e-a2a7-49ea-9d85-5e431d98abf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7744ff34-c625-4276-920f-7f8108771cea",
        "cursor": {
          "ref": "65e11aaa-dc80-4cfe-87e2-c278417961ce",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1198c314-a080-46e3-b94e-7f58c48b6d88"
        },
        "item": {
          "id": "7744ff34-c625-4276-920f-7f8108771cea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a60739b9-aa7f-4810-a17a-066522e02b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb094291-a514-4c57-9043-ecf26cf9df10",
        "cursor": {
          "ref": "715a0b64-d98f-497b-b192-9398086cf944",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c9758818-b108-4fb6-b5c2-0e8132b3b0be"
        },
        "item": {
          "id": "eb094291-a514-4c57-9043-ecf26cf9df10",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "01f86f55-1830-4b9a-9d40-0257496d0ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce495989-60ac-49de-93a7-6eba2691ce2a",
        "cursor": {
          "ref": "064c7653-61f8-45bc-b2b9-c7865d2aa733",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7b7c7ee0-74bd-40fe-971e-79ddeec6f2c6"
        },
        "item": {
          "id": "ce495989-60ac-49de-93a7-6eba2691ce2a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64fffd51-67df-4d72-bf2f-527fd7fc07ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e5706-8ef8-4ad8-b9b1-5cd82098d0dc",
        "cursor": {
          "ref": "e6665c2c-f616-4385-96fd-603e388bb280",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "66cd472c-41aa-40e1-885d-2b41a2e56637"
        },
        "item": {
          "id": "af8e5706-8ef8-4ad8-b9b1-5cd82098d0dc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bf76a7ef-cbb2-42a6-ad93-6a375df5c9a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "41f32d55-5451-4859-b6b8-5e7ec4c24e3f",
        "cursor": {
          "ref": "4fb7286a-6c41-4dc2-91f4-2dcc05a0e2f8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7353d1d-1076-48c7-b2fd-48af902f0e5c"
        },
        "item": {
          "id": "41f32d55-5451-4859-b6b8-5e7ec4c24e3f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f7b1313-edb1-4e89-bb5b-4625c5ac3638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df57b20-9066-40c8-8886-4f3ac8ecd1b6",
        "cursor": {
          "ref": "bdd9c7cd-5949-45bc-a42c-f903e0c08adf",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cae5bf20-44d4-4c8f-a132-799c1529cde8"
        },
        "item": {
          "id": "4df57b20-9066-40c8-8886-4f3ac8ecd1b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "035dd927-3c66-46f3-8b01-7aeeb3e70d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e55ee06-05ab-44fe-a90c-adadd9c54c6f",
        "cursor": {
          "ref": "003c3ced-478d-4dfb-aad7-468e12b31084",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78acaa88-dcbe-4722-8f16-8a8ca872802f"
        },
        "item": {
          "id": "8e55ee06-05ab-44fe-a90c-adadd9c54c6f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fbc4395d-a7e8-4a4a-a6e0-9236914df5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434de968-53b1-430e-8755-453574453c99",
        "cursor": {
          "ref": "72661ce0-fb12-4ad3-8bca-3d6a114d94e2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "129d242a-d8ef-4b1f-a802-a7da8744765e"
        },
        "item": {
          "id": "434de968-53b1-430e-8755-453574453c99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "89be632a-8d95-4704-ab16-3f7acac87fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ff7fbb-acb8-4dcc-95c0-3d4166d706e8",
        "cursor": {
          "ref": "f5126fba-4699-4d90-8f17-2d921b5fd7ee",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e259224-5f68-457d-9ac8-87c2e9184a9e"
        },
        "item": {
          "id": "e1ff7fbb-acb8-4dcc-95c0-3d4166d706e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2aa4c9bd-04f3-4ef2-939d-4f9708bef7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d147b08f-544c-4aaf-8c02-a9a15dc83aaf",
        "cursor": {
          "ref": "b02f979c-f9ae-4a70-a557-adfe668bf990",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f2c0cf09-d070-40ef-89db-e2e2c4f9904a"
        },
        "item": {
          "id": "d147b08f-544c-4aaf-8c02-a9a15dc83aaf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d0ca6773-1ade-48f5-8e69-a999cc21dac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecb4366-ff43-40f9-ba05-ef73a584e6d1",
        "cursor": {
          "ref": "b6567569-a2db-4361-9389-ff075fec3da6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "05dd9ffd-f354-4534-87ef-c1f59aa9c69a"
        },
        "item": {
          "id": "8ecb4366-ff43-40f9-ba05-ef73a584e6d1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3334b6e8-f990-441e-8dad-978e8b96a858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe71f44b-fa76-4290-8673-bc8c80c66f86",
        "cursor": {
          "ref": "0752c13f-2db9-485c-9115-1fff4e2d180e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7793af10-782f-4d9d-9ebd-b8d144399f09"
        },
        "item": {
          "id": "fe71f44b-fa76-4290-8673-bc8c80c66f86",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a85273fa-abe4-420b-9ff0-b2b3f3674c3a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a922db0d-0827-4201-b412-8f55cd6b7b0e",
        "cursor": {
          "ref": "0a5586b5-95e7-4e69-807c-6de1e97d8052",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "134f076c-cbff-4abf-8838-8ac6d2b96ba5"
        },
        "item": {
          "id": "a922db0d-0827-4201-b412-8f55cd6b7b0e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c6ad555c-62a6-4d76-bfb9-7097d0256c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0045608-ad50-4e7c-8b86-f6d804ccd8b5",
        "cursor": {
          "ref": "cb2fc332-51f8-4cdb-b926-8ae723488cfc",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "64d75016-3249-44e8-be92-10b4ffbf9339"
        },
        "item": {
          "id": "b0045608-ad50-4e7c-8b86-f6d804ccd8b5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7e79893-7a43-4df1-9b45-471be06ab5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f82af6e-ad1f-4589-9efa-45c0cc5cc115",
        "cursor": {
          "ref": "864788d3-67b2-40f6-83af-4d203daa4b46",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b1a711b1-bd56-4563-98df-bc7cc2d3b861"
        },
        "item": {
          "id": "0f82af6e-ad1f-4589-9efa-45c0cc5cc115",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fca17a69-858d-4225-b357-0e21031f1b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e126642-003b-4ff2-8c51-8dacc424c76b",
        "cursor": {
          "ref": "9c1d3ef8-3f38-4ea1-b85e-67eafd1a14bd",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8d8d8bea-f8a6-45a0-8641-3d436420bed5"
        },
        "item": {
          "id": "2e126642-003b-4ff2-8c51-8dacc424c76b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "89bef94f-00ca-48f6-b2a3-512b569aca5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815954d8-b5fb-404c-9783-b567f391a63e",
        "cursor": {
          "ref": "f8ba3e33-8a67-4e83-acb6-7c5e9b9eec4f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "79b202d2-818b-4f6a-8aaf-e6c6edafaff7"
        },
        "item": {
          "id": "815954d8-b5fb-404c-9783-b567f391a63e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "69a4c2eb-b25a-4433-86a0-fade43524b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fcc485-a122-416f-b554-14a382cf1445",
        "cursor": {
          "ref": "f2024b39-377c-4eab-9710-b464e25dddf8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1b9fba42-7b04-413a-ba31-9ff4fddf63e3"
        },
        "item": {
          "id": "55fcc485-a122-416f-b554-14a382cf1445",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "df3d4e9d-3c7a-4177-86fa-695170781ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe9270d-c741-4a6b-8d3c-5176bbaaf045",
        "cursor": {
          "ref": "cc618986-4ce2-470d-b217-6082f31008a7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1f4c825b-a959-45c1-86c6-ace6dc5dc6d5"
        },
        "item": {
          "id": "4fe9270d-c741-4a6b-8d3c-5176bbaaf045",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8834536a-591e-4f24-b28d-d4f97efabaf6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c275f9b9-6180-4b5f-b794-301b36af2b34",
        "cursor": {
          "ref": "6f9cdd5d-cbaf-481f-a604-c6a3fdb35591",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "50843eb4-c585-4191-b1c8-bb9757736d32"
        },
        "item": {
          "id": "c275f9b9-6180-4b5f-b794-301b36af2b34",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d01afc6d-0730-44b8-bf0f-f6eb5681342f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5538b5a-fd67-442c-b3d9-7451627b4c34",
        "cursor": {
          "ref": "44711257-73ec-4cc0-9807-52eeec7bfb3c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7295b02c-bfc5-4802-9871-ec93117a3465"
        },
        "item": {
          "id": "d5538b5a-fd67-442c-b3d9-7451627b4c34",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3fae2088-d3bf-47b5-aa26-787ecb34c914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03238fe9-cf8c-40d5-ba33-856997a76bba",
        "cursor": {
          "ref": "5457f0a6-d954-4cd0-b460-6bda4eea9b01",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c227afa3-9af0-40da-bc9c-b4f47984b655"
        },
        "item": {
          "id": "03238fe9-cf8c-40d5-ba33-856997a76bba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "85a734fc-f84f-4a57-93c9-f41a914200ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4725b6d-af59-4dce-b247-fc010a0785de",
        "cursor": {
          "ref": "3332c6ee-2843-4aac-aff7-ba97f6411cf4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fbacd8a3-1842-4e4b-9be5-5f375ff82fd2"
        },
        "item": {
          "id": "a4725b6d-af59-4dce-b247-fc010a0785de",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "62a50558-aa85-4d13-895c-a9b2fe7c966c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ce7436-9aa8-49e2-8ac1-eeab4a351099",
        "cursor": {
          "ref": "827cb4db-63b0-410b-b08c-44d282838b22",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39d9371e-546c-419a-9465-96a85a010a4d"
        },
        "item": {
          "id": "64ce7436-9aa8-49e2-8ac1-eeab4a351099",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b2f1e6cc-b41d-4f77-aa43-a58a92b1bd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59baef7-dfb0-4fd1-9272-2a74f8209e3b",
        "cursor": {
          "ref": "bcf14272-e0fa-430e-ac21-3235ef71884a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8575d395-006d-40ae-a23a-f9dc16a47631"
        },
        "item": {
          "id": "c59baef7-dfb0-4fd1-9272-2a74f8209e3b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5bafe2cf-12de-47cb-abc8-b117e74a3970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd29eb6-1fa2-4bba-adfc-e6629c5da1c1",
        "cursor": {
          "ref": "e0a6245b-4278-461d-8a50-c6180b3ccf32",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55ebf8b6-0736-48bb-81bf-120d70c6c118"
        },
        "item": {
          "id": "1fd29eb6-1fa2-4bba-adfc-e6629c5da1c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aa8236ec-f328-4b6b-8072-8c57013a2a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fe4e97-a029-41b6-9042-852573f824ff",
        "cursor": {
          "ref": "e1ec0260-b074-4c70-9e77-da73b9f7158a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9b722d53-b0dc-42ad-859e-45fef79182d1"
        },
        "item": {
          "id": "97fe4e97-a029-41b6-9042-852573f824ff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "12b7fe3a-4962-4f1a-869f-1945b1e94542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f9a772-15f7-44ab-9db4-fc10563b20c2",
        "cursor": {
          "ref": "e4981f79-0e44-428c-be59-cd3381a7e81d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4636a3fc-4be5-4228-b0b5-893e9edb6434"
        },
        "item": {
          "id": "e2f9a772-15f7-44ab-9db4-fc10563b20c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be5b0e2c-e592-4dc9-83dd-46023b4ec341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b75125d-550c-4c57-8004-83129711bf51",
        "cursor": {
          "ref": "5e45fc93-4bed-414b-9a69-e3e514b29cc4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dbf168f2-71a2-44f6-8975-214bcb660233"
        },
        "item": {
          "id": "0b75125d-550c-4c57-8004-83129711bf51",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39a59532-23b2-4ed7-8c9b-008269b9ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6921101-6fde-4763-b205-ce3d02edbdd4",
        "cursor": {
          "ref": "1fddbb27-1cef-438b-b64c-2c64d9176839",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9eecc8a3-b91b-4184-aeb3-c283ce35a594"
        },
        "item": {
          "id": "f6921101-6fde-4763-b205-ce3d02edbdd4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ebbb3b0-1792-4624-80d5-998c053dc4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b30737-0cd1-43c7-b6f2-4325ad354869",
        "cursor": {
          "ref": "66c9659a-5a84-4c53-b619-46793b89c20a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d2eb8703-1f80-48a8-9fff-e5267e624afe"
        },
        "item": {
          "id": "b7b30737-0cd1-43c7-b6f2-4325ad354869",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4396e4d9-912b-49f0-9f7d-67f06681fad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b9d5d-0708-4034-a740-a3d298f2c404",
        "cursor": {
          "ref": "fb8dea74-2828-42e8-9756-68cc5fc7d034",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b251e625-6758-4ed3-8f36-528765547fdd"
        },
        "item": {
          "id": "592b9d5d-0708-4034-a740-a3d298f2c404",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0c8eafe3-fb1c-4c67-bd8b-9d8afa7a8419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0e3523-7d86-4632-bee2-6ef2dfe7d798",
        "cursor": {
          "ref": "9f879695-5c49-4171-a97c-cc548bdbd22b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "69b156b0-5918-46f7-9153-87c5c27a994e"
        },
        "item": {
          "id": "3f0e3523-7d86-4632-bee2-6ef2dfe7d798",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f2664f59-29b3-4d07-a75a-9dddc7a7305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef2fa34-9b4d-42d0-94d1-682b53604640",
        "cursor": {
          "ref": "61ad33a2-d466-476b-b63f-40b5683a7171",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0d5df018-36a8-44c3-be8d-a453c55d9c13"
        },
        "item": {
          "id": "5ef2fa34-9b4d-42d0-94d1-682b53604640",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2ac5a2d3-4b0e-4347-8728-1408ca75fcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba818d83-b88c-4223-8bd3-bf9e84a2d215",
        "cursor": {
          "ref": "86d8c043-e29c-4634-bf09-730f9e61b56b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c3e8bffe-9872-4b73-93dd-64eceffb18df"
        },
        "item": {
          "id": "ba818d83-b88c-4223-8bd3-bf9e84a2d215",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1e44f1f9-029a-4401-b5dc-0ab22232cc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04036e1-70ba-43f9-b149-882c31200339",
        "cursor": {
          "ref": "1b650b10-099e-4d80-a7f1-dfb727f33c28",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3f0fbc01-ab21-4cec-8658-cd2cd7a2f8ac"
        },
        "item": {
          "id": "e04036e1-70ba-43f9-b149-882c31200339",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b206ea66-c523-4db9-9688-7f0bfe4e5241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef9f7c3-9d07-4703-b467-f34ce877339f",
        "cursor": {
          "ref": "418b30f1-61ff-45b8-9be6-3c9daf17aa6f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f357fdd-db87-4417-b638-5758cf98598d"
        },
        "item": {
          "id": "5ef9f7c3-9d07-4703-b467-f34ce877339f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e9c702cd-de24-4fce-9614-71682d9093d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "50d241d0-7194-4a2b-8019-3de3e9684d44",
        "cursor": {
          "ref": "b357ce30-d11e-4eb7-b9a5-fd051e57664e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2f5da92f-8498-4401-b0d9-fcd5fe5d3b8c"
        },
        "item": {
          "id": "50d241d0-7194-4a2b-8019-3de3e9684d44",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f63b5af3-550b-4d88-8370-c748687e461b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023adec8-c0fb-42c3-bc5e-bcd2e7c02cca",
        "cursor": {
          "ref": "afda54e1-eae6-4bf1-bdf3-db1d31ca533a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "65effbae-293c-47a8-9a38-4b1b07502874"
        },
        "item": {
          "id": "023adec8-c0fb-42c3-bc5e-bcd2e7c02cca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8b3ff06-98f9-47d3-a724-a72413cf2541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9e9252-765e-403d-83cc-4e90f79342f1",
        "cursor": {
          "ref": "a78d1097-f7eb-4eb6-a841-6cadf38e5f0b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aa670454-b427-4a33-ac07-689259b8b7c4"
        },
        "item": {
          "id": "2b9e9252-765e-403d-83cc-4e90f79342f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7a22e032-e838-4db7-bc0c-3ee449563e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150e736a-dcc0-45e9-8472-6a2bc25f75c9",
        "cursor": {
          "ref": "3edcc215-f510-4623-8055-d92dcfa45834",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6d8e6d3d-e629-4771-ab56-30abae71687b"
        },
        "item": {
          "id": "150e736a-dcc0-45e9-8472-6a2bc25f75c9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "98e3d4c3-3004-427d-8a1a-f985f394bd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee417933-53b0-491b-ad30-18381902b3b2",
        "cursor": {
          "ref": "59b50af1-7e17-4a08-9da4-927844e8a378",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3033afae-7342-4b30-9e58-b3251417b15d"
        },
        "item": {
          "id": "ee417933-53b0-491b-ad30-18381902b3b2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a361291-12b8-49a2-b91b-1a2e6e7580c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cdcf7d-5f6c-4ff9-b211-0c414e304cb7",
        "cursor": {
          "ref": "7c92a16f-727d-4aed-865c-a7f0e113bc95",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "669bdba8-9e07-44c6-b75b-487fda225b04"
        },
        "item": {
          "id": "38cdcf7d-5f6c-4ff9-b211-0c414e304cb7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f00774dc-ae87-441b-82d9-256581570a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93b5644-4b9f-4a6d-a8a9-ba047ca68e6e",
        "cursor": {
          "ref": "0cb2bdff-5e7b-46e4-8db6-0e6adfbd45c8",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "faf2468a-9b8b-48d0-b17e-c3fde72cd467"
        },
        "item": {
          "id": "a93b5644-4b9f-4a6d-a8a9-ba047ca68e6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8dad57ae-57a2-4d55-a618-7944e7475af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f31c323-5805-48a3-a5d9-e5525c8c3929",
        "cursor": {
          "ref": "9b044b06-f107-45a4-9fdc-8a4a1b3657dc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "207b504d-c7bd-46cf-be8d-784eac4312bd"
        },
        "item": {
          "id": "8f31c323-5805-48a3-a5d9-e5525c8c3929",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "14ee687d-cab7-441e-abb0-a36e7a7a90d0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "206dce44-862e-4720-8217-ab4ef709a497",
        "cursor": {
          "ref": "b03c2d75-f4ef-4f78-b9c9-9bb33eef8fe9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "530a197a-7c39-489c-a860-bd4fb765e0ce"
        },
        "item": {
          "id": "206dce44-862e-4720-8217-ab4ef709a497",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a78fd8e7-9333-4ab8-b12f-2d9f267e0e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f979cab-6077-4f66-82b2-9b385502c794",
        "cursor": {
          "ref": "4ebf9fb7-b9d8-4c5c-9285-a519de4de90d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "85450652-95c6-4da3-8327-6dab9f013fe6"
        },
        "item": {
          "id": "8f979cab-6077-4f66-82b2-9b385502c794",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4d3cfdac-d299-400e-9b84-46b604742590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e33444-6ed0-4f31-aff3-d914a4962afb",
        "cursor": {
          "ref": "075bda33-208e-4bc4-b62c-1c3c84631f2f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ed5bf73f-8bc2-4c5e-98a1-84d9a1303e37"
        },
        "item": {
          "id": "28e33444-6ed0-4f31-aff3-d914a4962afb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c141df15-b6a7-4d1a-b2e7-6dc01eba2dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464a4be2-6c0c-4010-863d-d5dc07d7b129",
        "cursor": {
          "ref": "62dffa97-3323-40de-ac6d-44bda54f92a2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2fcb87f8-d47a-4d3e-9858-dbd715023645"
        },
        "item": {
          "id": "464a4be2-6c0c-4010-863d-d5dc07d7b129",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "18c3984c-e103-47aa-9013-c147e9b78da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afbdc87-0070-4918-9e4e-97f4a757ca16",
        "cursor": {
          "ref": "10e8e242-b6df-4f05-8285-8ed0915fd900",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5cea28d4-7067-4b82-9934-24631092c6e8"
        },
        "item": {
          "id": "3afbdc87-0070-4918-9e4e-97f4a757ca16",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1438475c-28f2-4be2-ba77-2bf8521d073b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8b7d02-b9d4-41c5-a525-92d8b0b69c13",
        "cursor": {
          "ref": "0e17c741-b59b-44ef-be70-4b1aa64ad7bb",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f84029b-8ea1-4012-b89f-939962969099"
        },
        "item": {
          "id": "6e8b7d02-b9d4-41c5-a525-92d8b0b69c13",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a560614f-9848-4ad2-a11a-cc2748c63bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4047cda-0aa7-4109-b833-9c6a9f1dee5c",
        "cursor": {
          "ref": "70ba9780-8de9-46d2-bd47-4f8084c5c8fa",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c16e084f-f698-4d5c-b5c5-881d34befec1"
        },
        "item": {
          "id": "d4047cda-0aa7-4109-b833-9c6a9f1dee5c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "71d48c7a-3173-43a7-bca0-9763624ac7fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "e787d277-180e-426c-a66d-2d7525fdafbb",
        "cursor": {
          "ref": "d2251084-8ce1-423b-970d-a11de6f3b545",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0f1905ce-eb28-4942-89db-71d6c9da45d1"
        },
        "item": {
          "id": "e787d277-180e-426c-a66d-2d7525fdafbb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e33b459e-5135-4fab-bf71-5b3523ad4313",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "73d9ef57-60d8-4c6c-a08b-63be40a2257d",
        "cursor": {
          "ref": "648b5f23-7aca-4bb3-b035-27485d036e9a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d502accd-da21-4a0c-9bbd-c0a5a2244320"
        },
        "item": {
          "id": "73d9ef57-60d8-4c6c-a08b-63be40a2257d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d4acb9b2-3cbe-4aca-9e9a-16545153fdc3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7792cc0d-f810-40fb-bd34-a78dadfd94c6",
        "cursor": {
          "ref": "7a8e9449-81c1-488f-bf2e-2c8904e5c294",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5e2d04d1-9ef8-4f41-9ca1-2f39ca3aa825"
        },
        "item": {
          "id": "7792cc0d-f810-40fb-bd34-a78dadfd94c6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f5688b70-405b-4589-92d9-16a15d0fac70",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "86594fc3-1d0b-48fe-9a86-3e56e5c36498",
        "cursor": {
          "ref": "2cf41b76-e648-4794-9295-d7c6c9fe015e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "829b936f-c7a6-420e-978b-883c11de9a3f"
        },
        "item": {
          "id": "86594fc3-1d0b-48fe-9a86-3e56e5c36498",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "efad1c9d-2e77-4c12-a095-56ed3605fdf9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6d316623-6ec7-4c97-8205-4ef302872654",
        "cursor": {
          "ref": "6dadf41d-d4ed-4f39-bb6b-16b0e5de7c26",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e7d1e7e-dc26-4ee0-a53a-3e5ebba91bd0"
        },
        "item": {
          "id": "6d316623-6ec7-4c97-8205-4ef302872654",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2644a71d-db6f-4d6b-b130-1435ab79ced7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "c7626d58-5eee-4fc6-b830-bcff60fefc26",
        "cursor": {
          "ref": "5a2e1892-15aa-4587-b032-f32ede4105dd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9a260ed-6062-49ed-823d-fed0af6a2b83"
        },
        "item": {
          "id": "c7626d58-5eee-4fc6-b830-bcff60fefc26",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6a5cbf84-46f2-411e-b459-c6c28d6937d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc812d11-e064-4ef8-945c-5ec55c008a2f",
        "cursor": {
          "ref": "be3efc65-8db5-4e20-8cad-f582bf0e5e20",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8f7c6777-7b83-4c80-bbc4-649df47fd8a0"
        },
        "item": {
          "id": "dc812d11-e064-4ef8-945c-5ec55c008a2f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "905e8096-d6bd-4b03-99f2-86637823d231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d420f902-16e5-425d-9d1b-fab8d26a4843",
        "cursor": {
          "ref": "76d9cdad-bc86-4267-a0e7-9979193b0d25",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fe0b4676-4e20-402e-96d7-c8666713cd5c"
        },
        "item": {
          "id": "d420f902-16e5-425d-9d1b-fab8d26a4843",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6f583b9b-9dd4-4d06-9f5a-1e8133064a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781405af-ff8a-47a8-ad24-769eb32b1b57",
        "cursor": {
          "ref": "15585d72-bd5e-421b-bb43-260794f38b45",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "129d7e25-21e3-4543-a188-8acc1f3b4924"
        },
        "item": {
          "id": "781405af-ff8a-47a8-ad24-769eb32b1b57",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fd3a6660-6d7d-4391-a052-2a6034287440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d9a647-e2fe-40f1-8529-e50c6068a936",
        "cursor": {
          "ref": "1123733b-4f13-42b5-8358-3e1364f38882",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2361ffbb-a599-471d-8efa-1628270c0522"
        },
        "item": {
          "id": "b2d9a647-e2fe-40f1-8529-e50c6068a936",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6ceed5fc-42e6-4737-a382-fd174c60e5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c9309-a35b-4869-be11-b8ce6bfc30f3",
        "cursor": {
          "ref": "f4e07a30-2ba0-4b0b-b239-bdef4daab030",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "70afd66b-bc4d-4eef-935f-27669ffdc104"
        },
        "item": {
          "id": "1c1c9309-a35b-4869-be11-b8ce6bfc30f3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b62d0e79-4dad-4603-b181-15ef7203aa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927503bc-dc21-4b7a-a3b6-d751f8a7309b",
        "cursor": {
          "ref": "9550699a-187d-4932-be01-0dd0b4597ad8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "84d0b98b-454a-459c-9fd8-7c0eb1bbe9fc"
        },
        "item": {
          "id": "927503bc-dc21-4b7a-a3b6-d751f8a7309b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4aaf97ae-20fd-47b1-8e17-34a1b9ec1f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eec963-ec2b-4930-bc9a-aad9cbd289ee",
        "cursor": {
          "ref": "87de8a32-be4a-4257-9a07-c91d943f2b9a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ad9b1493-9624-4caa-bcc8-2270757081ef"
        },
        "item": {
          "id": "a5eec963-ec2b-4930-bc9a-aad9cbd289ee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b2141055-1f90-49eb-b6f9-6294e3d66416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9483b68e-d2f7-4649-b0d3-70d8d4743536",
        "cursor": {
          "ref": "d53a0e9c-786d-4f81-a121-6dd1ab81f59c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "85d8225d-152c-482d-8cc1-84aca6b0397d"
        },
        "item": {
          "id": "9483b68e-d2f7-4649-b0d3-70d8d4743536",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ae6d809f-caa2-4095-bd53-eb81b82410ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19181e61-6f57-4973-b2ce-dcccb391768b",
        "cursor": {
          "ref": "96c26281-3309-4127-b904-b76ee9f80961",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d46f3445-9d90-4eb8-897a-36865f8b6709"
        },
        "item": {
          "id": "19181e61-6f57-4973-b2ce-dcccb391768b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ad59f82-b11f-446c-acbc-bf0a47f97d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aec3aa-3611-46bb-a824-2df9e359b245",
        "cursor": {
          "ref": "063b8899-ea71-410e-984b-eb68b5d85dd7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7859f507-68f5-4f41-ba15-22a5e2e582fc"
        },
        "item": {
          "id": "97aec3aa-3611-46bb-a824-2df9e359b245",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "252481a5-419d-425a-8c4f-3404e941af00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b998d59d-efc7-476d-8e84-5c3f6ff0172c",
        "cursor": {
          "ref": "40ea276d-5004-4db6-a3c4-951d9037d882",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3160f477-da62-4b7d-8bc5-cd4c9fb420e5"
        },
        "item": {
          "id": "b998d59d-efc7-476d-8e84-5c3f6ff0172c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0ed2ede4-e259-4440-bb86-e4ce08adcbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb8426-956f-4e7c-a6cd-e621f018c456",
        "cursor": {
          "ref": "6c5e95b9-4e5d-4c66-a7c8-5cb5d04fa6f4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3d04b120-cceb-491d-aa2c-b4324736fff6"
        },
        "item": {
          "id": "a2fb8426-956f-4e7c-a6cd-e621f018c456",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b54187c0-6db9-4a1f-92df-8d02af438c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c58324-8de9-4006-a3a4-51583fde1366",
        "cursor": {
          "ref": "5e5c9cb0-b05d-487c-93f1-5343acafddc7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c7d2448-755e-454f-b907-9dc4d62dd691"
        },
        "item": {
          "id": "76c58324-8de9-4006-a3a4-51583fde1366",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b8cdec2f-40c4-437f-beef-f8b3b8dee4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41e534d-278f-479c-a4dc-c4e790e0206e",
        "cursor": {
          "ref": "33c553fa-bf02-4d07-a89e-45508b211552",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6f0a10b9-da34-4647-85e9-3347c89957e6"
        },
        "item": {
          "id": "c41e534d-278f-479c-a4dc-c4e790e0206e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2348042f-a33d-4ca5-aa52-6fd5eed17d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35d8a05-f4c0-4ee9-a49f-82f76dc3fc55",
        "cursor": {
          "ref": "d3cd520c-d8fe-41cd-91ca-ec62b16ccba5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c23a6c4e-e1b8-40c3-93c8-b7e4a7f95d19"
        },
        "item": {
          "id": "f35d8a05-f4c0-4ee9-a49f-82f76dc3fc55",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a98e3a8b-a9e1-44e1-87f4-2c9177502510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c69c2b-0f62-462d-9525-3096fc9ed5c0",
        "cursor": {
          "ref": "ac75dcdf-cdff-4e87-aec0-1390ed332887",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a2df4642-ef8d-4b97-8ad5-ac8ba234bb1d"
        },
        "item": {
          "id": "00c69c2b-0f62-462d-9525-3096fc9ed5c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bd306aba-a207-47a1-aa97-f4761dc3cba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6301640-caa0-42b6-88cf-91953593e033",
        "cursor": {
          "ref": "8d3737c5-3132-4488-99cc-c9c4756dc651",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a64df580-12af-4f10-9975-013ec368fe78"
        },
        "item": {
          "id": "f6301640-caa0-42b6-88cf-91953593e033",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3e9de743-2f82-4e8b-be53-5e9649d4a808",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6d9aa944-7ea8-4329-8355-dc8c2dd922b1",
        "cursor": {
          "ref": "3ae988a4-850f-49bc-96ae-f9e745f91c82",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bc7795b0-4650-496d-9786-c140af26577d"
        },
        "item": {
          "id": "6d9aa944-7ea8-4329-8355-dc8c2dd922b1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d5398d10-502d-4b85-99f2-a38790828dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1bd786-f3dc-4ff6-a883-f97c780d8a4b",
        "cursor": {
          "ref": "23c7e4a8-6e1c-4970-ac16-8e5d5b05ffb1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7bdc2c24-ec01-45a8-a8ae-d32971588f3d"
        },
        "item": {
          "id": "7f1bd786-f3dc-4ff6-a883-f97c780d8a4b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2b16f024-7548-4341-88e3-3e29d5863a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b495d-b239-4ebf-8e31-3557ca8adfd7",
        "cursor": {
          "ref": "6599def3-286e-452d-9e35-4895af319f94",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "452aeef5-4448-4e93-a141-2d92bd1de45d"
        },
        "item": {
          "id": "3d2b495d-b239-4ebf-8e31-3557ca8adfd7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "764c8637-0eb7-401d-8b02-9baa64d60e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89aae64-b93a-4190-b45e-94a9d2af5b34",
        "cursor": {
          "ref": "b27e3453-c504-48d6-86a1-9b91ec85d23f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9c4ebcc7-ee47-4373-8b12-776fd29e6016"
        },
        "item": {
          "id": "e89aae64-b93a-4190-b45e-94a9d2af5b34",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "41e8b91e-19af-43b9-a995-4ad3c3378415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec234b22-f76a-465f-a3c8-de718d45a042",
        "cursor": {
          "ref": "5b865ab6-aa14-4b89-a610-cbe17fa07391",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6a2087d7-dd7c-4bdd-b615-df032a1ccca7"
        },
        "item": {
          "id": "ec234b22-f76a-465f-a3c8-de718d45a042",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ef30635d-e41c-4147-97d2-802c9ee2dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d03de19-eb27-4b1a-87bb-c0b58ce6bb00",
        "cursor": {
          "ref": "56f738b5-c0e0-4dea-8daa-6bd8d6711471",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a0389c2c-f701-4141-ad02-52b55b51bceb"
        },
        "item": {
          "id": "4d03de19-eb27-4b1a-87bb-c0b58ce6bb00",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "876462ac-a8d9-4bff-a35a-753c6f8fbc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2df7ca-2fba-4720-9ef2-7ca0a90584b8",
        "cursor": {
          "ref": "574af575-d1ac-4fc5-a931-d3908d142ac4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "14f60e58-78b7-474f-8482-c1035aa8749d"
        },
        "item": {
          "id": "8e2df7ca-2fba-4720-9ef2-7ca0a90584b8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a65c9955-4106-4797-be0e-82a8782cbc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c3ee47-8a31-4c1f-b128-c30cd52d78e0",
        "cursor": {
          "ref": "e0e5cea5-98a6-4529-bbe7-0cc8c77ced26",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4f757b38-a74f-44e5-8b5c-2c667358d410"
        },
        "item": {
          "id": "21c3ee47-8a31-4c1f-b128-c30cd52d78e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dc874c83-cf0b-4532-948e-b769b4771ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058aac1e-9827-44c8-9148-a3273f51296a",
        "cursor": {
          "ref": "37f69a29-7d1d-49d8-9465-6d7e8d5010fb",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "af2ef126-b66a-4ceb-ba62-f8cf95bcceb9"
        },
        "item": {
          "id": "058aac1e-9827-44c8-9148-a3273f51296a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ceb5802a-1932-4485-8200-c4277b954f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cca6f1-3d7b-449b-bf3d-c378b2ad910c",
        "cursor": {
          "ref": "9c583b4e-4380-4536-a974-5464c2f927e9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c39518f-296b-4d1c-994f-3d06e1d44c8e"
        },
        "item": {
          "id": "82cca6f1-3d7b-449b-bf3d-c378b2ad910c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "30e59625-b409-4570-802f-5be9a0cf12be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff6e9a2-2c9f-42e8-915b-9ac2193ea128",
        "cursor": {
          "ref": "7bff4416-353e-4fc5-a1d5-741fc51e574d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "13037af7-fe72-426b-903d-b61cff443012"
        },
        "item": {
          "id": "bff6e9a2-2c9f-42e8-915b-9ac2193ea128",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9e78da51-84f6-4c17-a502-d6d6553bb4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77732a41-1bac-44d5-a67a-e9e2bc01f874",
        "cursor": {
          "ref": "b9fa09fe-59a5-4524-b8c5-26ccb0bd0f87",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "60ebc89e-d4fb-4857-a4e9-d3db8153dcec"
        },
        "item": {
          "id": "77732a41-1bac-44d5-a67a-e9e2bc01f874",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49b2ee59-d2f2-4d87-9799-52f771b6bf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73c5e1e-9391-4714-bc99-a58c79857c67",
        "cursor": {
          "ref": "a2549e3b-c83c-481b-b648-a778c3c09c25",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e47461e0-cef3-4a46-b289-874bb9577d77"
        },
        "item": {
          "id": "a73c5e1e-9391-4714-bc99-a58c79857c67",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "246f9671-42d4-4966-91a1-aa4cdb5fe61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb4416-073d-4c59-be8a-88c5451d3b05",
        "cursor": {
          "ref": "6c1f7a39-0b94-4c5e-8235-f81dbb7073ff",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "54086599-5416-49a9-a57e-6d3ce659ef81"
        },
        "item": {
          "id": "fdbb4416-073d-4c59-be8a-88c5451d3b05",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "07bab65b-15df-410d-9211-59aa852da975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40994f20-f004-4bae-ac20-dcccc1d2bf23",
        "cursor": {
          "ref": "623ddf78-47e9-4423-8432-674582afb03f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "908783ce-6477-4309-8c5f-06f147914382"
        },
        "item": {
          "id": "40994f20-f004-4bae-ac20-dcccc1d2bf23",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7f9a5398-0ffa-4f18-815a-c1ecccbde3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd8656d-d880-4946-a461-bc4c1fef6bd0",
        "cursor": {
          "ref": "82da6a9f-955d-4fdb-8765-d1005b0bd957",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5ad797ff-a5d4-4327-8a9e-9d4fab2be439"
        },
        "item": {
          "id": "9cd8656d-d880-4946-a461-bc4c1fef6bd0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "91a91303-a0eb-480e-834a-a9197f6d49e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3882c974-100b-4d0f-a6e7-d6c641152b89",
        "cursor": {
          "ref": "116b4c57-83ac-4f74-b708-64752ce22c7a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9dc7fef4-b073-4004-8f01-2a2b5f0a893d"
        },
        "item": {
          "id": "3882c974-100b-4d0f-a6e7-d6c641152b89",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da0b34fe-7bef-4462-b3e4-c3275ec987ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c24073-b134-4663-a6e4-dcda39bf0a74",
        "cursor": {
          "ref": "2da5e065-7795-4f39-9865-6566dedeb5ca",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3dfbb619-6d64-4370-9451-56933a34586d"
        },
        "item": {
          "id": "29c24073-b134-4663-a6e4-dcda39bf0a74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7f5768fe-043d-40b6-b42e-68fb35170304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f68696-4ffa-4dfd-a75d-fb55802ad4dc",
        "cursor": {
          "ref": "6c3bb66a-62b9-43ff-8e66-bbf1257991a1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7ad12516-8077-4e30-9570-61359452ce11"
        },
        "item": {
          "id": "79f68696-4ffa-4dfd-a75d-fb55802ad4dc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3473e060-60ae-475a-99f1-46e0e5c51d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9bb886-8936-429e-845a-71830dea9f12",
        "cursor": {
          "ref": "45ffd0a5-b9eb-4e28-8996-bb373d73dd6f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "61f9bd43-2167-434f-8f98-6ef1229265f0"
        },
        "item": {
          "id": "4d9bb886-8936-429e-845a-71830dea9f12",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f91dde34-f199-4f30-94d0-ea1f3dcd87a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b842e-2e22-47c8-8123-decdceaf25d9",
        "cursor": {
          "ref": "5b0ad8b2-aeca-4c74-9737-49037e5f7560",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d3580891-2e7e-4e26-a5f7-1571fc3ada8b"
        },
        "item": {
          "id": "035b842e-2e22-47c8-8123-decdceaf25d9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "811de596-b31d-42e9-92d5-645f28fe36b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e08aade-ade6-4487-96b4-93cc6555cc65",
        "cursor": {
          "ref": "cc675bd9-2b42-418d-8f67-11ef290e648a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af281441-45e3-4e33-b6b3-0de7996417e3"
        },
        "item": {
          "id": "7e08aade-ade6-4487-96b4-93cc6555cc65",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e5a72a9-20e6-4678-98e6-82438e506a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68078011-6141-4614-9e91-cb13d018287f",
        "cursor": {
          "ref": "af7f53f1-5138-48ec-a146-b13b27c01fe8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f08fe885-902e-4322-879c-999ba9331b8e"
        },
        "item": {
          "id": "68078011-6141-4614-9e91-cb13d018287f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aab55fbf-98ef-401f-ae87-ea6e773c1cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8ac27a-0b00-4748-a619-3a2fc82171c9",
        "cursor": {
          "ref": "58957952-2681-4327-9dec-b245463a9d81",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "65643a2d-74c6-4f3b-a795-2eeb7ed41537"
        },
        "item": {
          "id": "0a8ac27a-0b00-4748-a619-3a2fc82171c9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b58d8745-c6ae-45aa-9c26-9803336ee01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c47d42-eecd-4d4e-a27c-b8aa23e1bd3b",
        "cursor": {
          "ref": "09df9c90-4423-43d9-afa4-1c58dadf5e33",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c3755f99-3885-4e51-b677-b3709ee17105"
        },
        "item": {
          "id": "33c47d42-eecd-4d4e-a27c-b8aa23e1bd3b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1c1046a6-7c6d-4978-9d89-76a050a53360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2091900-8b6b-4541-8dee-0d9187792cac",
        "cursor": {
          "ref": "d2a60c56-7670-4def-8376-efaa41e184f3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5488f792-96b0-488e-8ae5-48744696577b"
        },
        "item": {
          "id": "d2091900-8b6b-4541-8dee-0d9187792cac",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0a342829-495f-4a19-a9d8-285e0b71a4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4421608-5704-45e1-b29b-6913119b9774",
        "cursor": {
          "ref": "7169a629-f332-4538-bfbf-a1b13bebf7f1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "41f59b5b-5f6c-4816-bd77-76eb4a32667e"
        },
        "item": {
          "id": "d4421608-5704-45e1-b29b-6913119b9774",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53a8a5ec-5852-4d31-b77d-5907a6d09442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2505952a-b0b8-4317-9a03-1ea86b2d120e",
        "cursor": {
          "ref": "fb11b013-7088-411d-a21f-8f309e778352",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c29857ac-b9be-48f6-8460-c1eb5a3da9bf"
        },
        "item": {
          "id": "2505952a-b0b8-4317-9a03-1ea86b2d120e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "080fb6c5-8c14-48c7-b140-be020a4f93bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b10869-c895-4590-b26f-34d7ea176daa",
        "cursor": {
          "ref": "3359a9b2-9319-4806-aa90-e3dcb228b1ec",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b8338e64-aaad-482a-97c8-cbd0552b1286"
        },
        "item": {
          "id": "66b10869-c895-4590-b26f-34d7ea176daa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "33d1faad-3ee7-49e9-ac0c-fd111d40f965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb2117c-8883-4033-a329-da257a311ffc",
        "cursor": {
          "ref": "5513a2c8-d775-4960-a174-74cbb18d9b4c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b5ce1e56-6f23-4a0a-b1fd-2ed18a0cea33"
        },
        "item": {
          "id": "2eb2117c-8883-4033-a329-da257a311ffc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c7e05fda-cb1f-4d3f-ba60-def5a15f58d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60319f63-a107-45f5-81cd-f5e8c547fe13",
        "cursor": {
          "ref": "b4c2ceed-167c-423c-9fec-5533e4434403",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0c3a1778-dcaa-4256-9a63-24be753f4d57"
        },
        "item": {
          "id": "60319f63-a107-45f5-81cd-f5e8c547fe13",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9f9d52c1-4adb-4e70-8651-308ac67e3b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d532612-69bf-4dd4-b692-c22f49797eeb",
        "cursor": {
          "ref": "81e690e0-2d16-4e77-8ebf-eddb428df87c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "142480c4-e129-4f8a-9b06-c5e5b62ed5fe"
        },
        "item": {
          "id": "5d532612-69bf-4dd4-b692-c22f49797eeb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2bc984f8-4160-47b0-af63-382f51d4772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ce8a0-2a55-43a3-a054-fcc96566add0",
        "cursor": {
          "ref": "e76dd812-9e6d-4d98-a0a3-a138a03396f8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fc6e0892-283d-494e-8823-daa371fd2a82"
        },
        "item": {
          "id": "754ce8a0-2a55-43a3-a054-fcc96566add0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bcc7f909-eee9-4ed5-b984-6a999bb28774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4109bda-2321-46ff-af9b-70203e7dc3eb",
        "cursor": {
          "ref": "3ab7f115-110c-4a89-bb9f-68b996a9fb71",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e588c60c-58e4-4dd7-962b-37cfca8e7d69"
        },
        "item": {
          "id": "b4109bda-2321-46ff-af9b-70203e7dc3eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3b30764-19ec-43f6-9b68-2256c36be24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de70b48-bacd-4637-b20b-79187442ca12",
        "cursor": {
          "ref": "c0b4eb3c-b3be-4d47-9158-0aa8431d5e2c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1b0ba508-24d6-4843-8dec-6fece3404db0"
        },
        "item": {
          "id": "1de70b48-bacd-4637-b20b-79187442ca12",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "972f6836-8821-4ee7-b80e-e9c43547eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795c8279-d7db-4392-a376-932ccf3acf6a",
        "cursor": {
          "ref": "53aaceea-b54e-4834-bd45-a07e5b37fd4d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6e4a2380-d365-4aa3-89ba-f92a87a2554e"
        },
        "item": {
          "id": "795c8279-d7db-4392-a376-932ccf3acf6a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8794b67f-eef7-4cd3-9cf5-6eb70c65d1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a68040-d791-442c-8172-7df4b50d87a0",
        "cursor": {
          "ref": "6d89f3da-c774-4421-8fed-45a37cf52b5e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "abddd3d5-72a5-43cc-8d6b-9ee63e50f04d"
        },
        "item": {
          "id": "68a68040-d791-442c-8172-7df4b50d87a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7ac8dc5e-7700-49e6-bb27-664cf3d0cdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7206641-8665-4683-9b05-3291c554342a",
        "cursor": {
          "ref": "cf794e56-ae99-466a-8eaa-f5535912ade1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7fbad362-9eb5-418b-9bee-3d50e3bf997e"
        },
        "item": {
          "id": "c7206641-8665-4683-9b05-3291c554342a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "602a7327-2010-4843-a84e-939ab4cd04e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a706260f-d3f5-4943-903c-ef5fc0a94922",
        "cursor": {
          "ref": "f5e7e449-ed9d-41a2-bcba-188c4e3ad322",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4c2e10ca-b315-4abd-ae96-7704e9e89f77"
        },
        "item": {
          "id": "a706260f-d3f5-4943-903c-ef5fc0a94922",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "12848c07-6149-4198-ab07-581115eaea2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79970f3d-0dc7-49af-baf6-7719f2eded64",
        "cursor": {
          "ref": "b6806547-b668-47f3-ab51-18088b4787fd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "323f61de-7685-42e5-835b-a05a925059bf"
        },
        "item": {
          "id": "79970f3d-0dc7-49af-baf6-7719f2eded64",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "48d85e98-fa31-4af5-afe8-06eb1f4891c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bb5717-2786-4004-a34b-e2d634f58676",
        "cursor": {
          "ref": "6ff3c1d6-3f55-4739-8554-95cdcb349526",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4e8e4109-dd51-4a50-9ae8-fbd910c50b6a"
        },
        "item": {
          "id": "77bb5717-2786-4004-a34b-e2d634f58676",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a7eac26c-fa75-4add-bb56-c44300e51868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76939c5f-c094-488b-a7c1-745ef6fa9ce0",
        "cursor": {
          "ref": "cf82d8ec-4365-461b-87cb-1fd9350182a5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4c10bb79-a3fc-4b1b-a728-2518adbde5ae"
        },
        "item": {
          "id": "76939c5f-c094-488b-a7c1-745ef6fa9ce0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "64c5001d-0b48-40d3-bcff-7476b79e20c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3328aa-e09f-40f7-85da-142ce3ae759b",
        "cursor": {
          "ref": "717f4ce8-557f-4b27-b2a4-4a5c62fc4658",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75de4b25-8bab-4405-b233-6b0296c6696b"
        },
        "item": {
          "id": "6d3328aa-e09f-40f7-85da-142ce3ae759b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "188ea151-6001-4e7b-965b-b1b6f21f192b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d7968d-5396-4de9-aa66-ce42af270176",
        "cursor": {
          "ref": "2eef1914-678c-41bd-91d7-6cc885383138",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9123e5d6-0d18-4dd9-bb7b-3d903a07d379"
        },
        "item": {
          "id": "b8d7968d-5396-4de9-aa66-ce42af270176",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e1af1d8-6076-43e8-bc82-eb78834694e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4304858-1eb0-449d-8b76-d851a0044509",
        "cursor": {
          "ref": "8e761c1e-5941-444e-a08d-fa83f282851a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6c7b3394-e5f7-4fbf-a51f-fe55d468d7a0"
        },
        "item": {
          "id": "c4304858-1eb0-449d-8b76-d851a0044509",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e3963d0a-1928-4e59-8f0d-aa874d7e864e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ac1e41-62cb-4a48-9ad2-3cdaae9fef3a",
        "cursor": {
          "ref": "8b9da831-f8b9-408c-a9fb-f29d00b0b884",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "55d8dd0a-33bc-4d9d-a14c-136b5024e3a0"
        },
        "item": {
          "id": "e6ac1e41-62cb-4a48-9ad2-3cdaae9fef3a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "569241fe-1d01-44aa-938d-4907590739a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aebac7-a983-4058-b073-01d69b633e08",
        "cursor": {
          "ref": "d09a095e-f1a8-4be8-a199-1212e938c1c6",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "833b31c1-c6c2-4f18-8a42-c3381132e77a"
        },
        "item": {
          "id": "06aebac7-a983-4058-b073-01d69b633e08",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "344b530f-b667-415e-9153-48d94fc4c9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bf3ad1-bc5d-49c3-90c7-fbb289e4a354",
        "cursor": {
          "ref": "239f3045-8b43-4349-a828-efacf6a23d78",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0ea9e117-e991-4a93-9183-472f53912df9"
        },
        "item": {
          "id": "55bf3ad1-bc5d-49c3-90c7-fbb289e4a354",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "958d6b3e-a1d4-4a50-941c-60f802544ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6650400f-c370-4fcf-83fe-3b36bdc1a0e9",
        "cursor": {
          "ref": "06add2f2-39bd-4c87-adb5-897302a0ff33",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "446f71a2-96a5-4244-ae9c-aeee30175d8d"
        },
        "item": {
          "id": "6650400f-c370-4fcf-83fe-3b36bdc1a0e9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "725e012f-7f5f-4e31-9bd3-cbec2bb18905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9793df-21d1-4285-a21b-971a0e446391",
        "cursor": {
          "ref": "e0b33d48-a4ae-4b85-8edf-0184b023bfd0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7122110-9103-4e28-9c83-6fab072cba5d"
        },
        "item": {
          "id": "ac9793df-21d1-4285-a21b-971a0e446391",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7bc7cf4a-eadc-499d-a34f-3ac9cc30b665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf49078-ae82-44f2-a2c1-e14518cc7889",
        "cursor": {
          "ref": "0116bcee-b4fe-4bc7-82ac-141c382958ed",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c19bd965-bde2-419d-b9a7-20e3c3926ffc"
        },
        "item": {
          "id": "1bf49078-ae82-44f2-a2c1-e14518cc7889",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d50dce4-0e99-478f-a172-c3348791e852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784a65bf-2584-465f-be96-c11787ef3d3f",
        "cursor": {
          "ref": "01713cc1-bdcf-41fd-ad15-dd8d0a6892b5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c07c623f-e378-46a3-82d9-489594e193e4"
        },
        "item": {
          "id": "784a65bf-2584-465f-be96-c11787ef3d3f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f451798e-c4b7-4347-ae97-a8a3c76106d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ba544-c0a2-4752-bfe0-6ac4db6befb5",
        "cursor": {
          "ref": "b48ae7ea-7993-4f39-b07c-2611af30b014",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c3f0ef02-5fdc-4325-a5cd-fbac1411ef42"
        },
        "item": {
          "id": "ad9ba544-c0a2-4752-bfe0-6ac4db6befb5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "590540b8-becb-4d67-a838-b61f029e9d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6850b08-6f13-4249-a2b6-3ba167236cf8",
        "cursor": {
          "ref": "9e04a280-c25f-4d6f-978c-7fefb363aecc",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c15b7c28-8a9f-416b-aaa0-0cbedaccf9f1"
        },
        "item": {
          "id": "d6850b08-6f13-4249-a2b6-3ba167236cf8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c4069b02-3c62-4d07-8ef6-3c309c857c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8749958a-15f2-4ca6-ad55-5f633ec45708",
        "cursor": {
          "ref": "b69010f6-ab26-400c-b431-6070da3f95fe",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "187651c8-09bf-4513-88ce-d012a81fd7cd"
        },
        "item": {
          "id": "8749958a-15f2-4ca6-ad55-5f633ec45708",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cc9b5eb2-2ca5-44e5-b6ef-bf76f1d15c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c3aedc-2e09-494c-8e5f-075798d18ccc",
        "cursor": {
          "ref": "2078b253-4fdf-4580-913e-99c81b5b9194",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dfae0920-6794-4a5f-81de-b508bfb0169f"
        },
        "item": {
          "id": "16c3aedc-2e09-494c-8e5f-075798d18ccc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a4443dae-46ca-4313-b983-bdcde96ada38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779f292b-bfd1-4353-a515-6ada5b594c00",
        "cursor": {
          "ref": "b6b62ea5-2766-45f6-a3e9-4ac30e1f2b74",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "238113be-f889-45eb-ac98-f1803d051ca9"
        },
        "item": {
          "id": "779f292b-bfd1-4353-a515-6ada5b594c00",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e6bacf6e-a23d-42cb-b5a1-da94ff33e43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56a9718-8016-445e-94f2-1a5c51f3f646",
        "cursor": {
          "ref": "6e56903e-6ae7-4a32-adfd-5f0519a8545e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3b5ecf77-4f63-4a70-87f0-b87d7bebd89f"
        },
        "item": {
          "id": "f56a9718-8016-445e-94f2-1a5c51f3f646",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d37e00ba-0954-40d3-9a50-4838fce39c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4886e94e-8297-4a6b-9ec9-c73b01e606c0",
        "cursor": {
          "ref": "edf208de-0d3a-483e-b504-315f596266eb",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6c1a761e-e6c4-46ac-adab-aaad7f746a05"
        },
        "item": {
          "id": "4886e94e-8297-4a6b-9ec9-c73b01e606c0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4739a8ed-6d9e-4459-9e6d-5e1c063a9f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ea9e56-7b44-4a3c-9e7a-bb6b46d71d09",
        "cursor": {
          "ref": "380e0fc6-5e63-43d1-9766-6a03a84339f4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c05fcb5c-1c86-4eb0-ab2a-1f1187ac6ef5"
        },
        "item": {
          "id": "75ea9e56-7b44-4a3c-9e7a-bb6b46d71d09",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "93fc52b6-ccbe-4715-b35b-8a6894ec35c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249e5f7-62d4-4ba6-8227-e4cadd0dd36e",
        "cursor": {
          "ref": "89bff48f-6650-4303-aa64-cc97c62803e7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8ee66ae2-3751-43e5-83fe-9821c3bd0348"
        },
        "item": {
          "id": "d249e5f7-62d4-4ba6-8227-e4cadd0dd36e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dd0f5135-7fa0-43f4-b795-1035ce8ad66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e23c5e-a26d-4d61-bfcb-ca08d12d79a8",
        "cursor": {
          "ref": "62e71323-bbaa-4f53-bf69-4375c87ab09c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0ae63911-0da2-4284-b084-2312467730da"
        },
        "item": {
          "id": "10e23c5e-a26d-4d61-bfcb-ca08d12d79a8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e358f9e9-ceeb-475b-8814-c630336d34c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa342fd-b28e-4cba-ab53-a7a50d14554e",
        "cursor": {
          "ref": "1c93865d-1a5b-481f-afd3-507add00d469",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e646f763-8ffd-45b6-9de5-97941bff9733"
        },
        "item": {
          "id": "2aa342fd-b28e-4cba-ab53-a7a50d14554e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8b291811-9cca-41f6-b9b2-a5576accc9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398f7d20-51b5-4b44-aebd-4cc9587b2fd5",
        "cursor": {
          "ref": "99c8ac9c-2811-4382-b82d-cb01f5ac024a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "be9a259b-9a42-4c09-9a0a-1522da60cf8d"
        },
        "item": {
          "id": "398f7d20-51b5-4b44-aebd-4cc9587b2fd5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "21b19dc5-1535-4fc9-916c-63b4cba411f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0a5f87-7bfb-4322-bfd1-975301fca999",
        "cursor": {
          "ref": "fb16bbd3-0ad8-4f9a-aeb4-54c12290db85",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "58dcd8f2-a0df-46a5-a2da-20c7849e6b5a"
        },
        "item": {
          "id": "bc0a5f87-7bfb-4322-bfd1-975301fca999",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "89310170-d36b-4555-9e3d-b8f31b06b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba2c91b-4185-4f5e-a91b-a0054bd1c5cf",
        "cursor": {
          "ref": "33dcb592-fdd5-4e00-8d74-9a54cdaa55a7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "21aba246-bd1f-46c7-8def-660a89447133"
        },
        "item": {
          "id": "5ba2c91b-4185-4f5e-a91b-a0054bd1c5cf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a9817fae-4c44-4b81-bbf1-2760bee4f810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3a477a-b6e1-4a0f-a58a-5da3716139a3",
        "cursor": {
          "ref": "fac3422e-3404-41d9-a8a3-7a19b3ee7529",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d26000ff-4e04-46d8-bc3b-875213677e19"
        },
        "item": {
          "id": "8e3a477a-b6e1-4a0f-a58a-5da3716139a3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9d85741c-801d-406c-98a9-ec5aa29b78de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a43e5e3-c215-466f-86a8-aedb4cdeca16",
        "cursor": {
          "ref": "d6ddd6ba-4aed-4408-8326-f203792bb68a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "38e8803c-996d-470b-9652-d074dc9c6ad6"
        },
        "item": {
          "id": "8a43e5e3-c215-466f-86a8-aedb4cdeca16",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c3fea2a9-04ce-42fa-ba0f-09800657ed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9093dc-894f-42c6-9a11-2a448e34495a",
        "cursor": {
          "ref": "0705b83b-b903-447e-9f6a-abca0bb2c23d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b2afc24b-c46d-4c8c-9aa5-7928b2d9d6c8"
        },
        "item": {
          "id": "cd9093dc-894f-42c6-9a11-2a448e34495a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3bb3bd0c-5781-4603-a121-f0ffc6aff72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007b1776-8907-4abc-971a-f053119d5ab7",
        "cursor": {
          "ref": "95defcf7-287d-40fc-928f-e5335056d605",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7d09ca60-241f-4554-9658-054ee74715cf"
        },
        "item": {
          "id": "007b1776-8907-4abc-971a-f053119d5ab7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6f773689-f543-490c-bca4-6feb36f6b831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d112ea0-7c51-44ea-ab0d-22d396aff735",
        "cursor": {
          "ref": "13779a81-6675-40fb-9153-641ce45aedf7",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "90dc0816-a05b-4f5e-9d35-88a3b3c1271e"
        },
        "item": {
          "id": "8d112ea0-7c51-44ea-ab0d-22d396aff735",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b544b3ad-87b6-44ae-96ad-f8c786e2daba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70754f3f-d213-4042-803d-8dbcba15e40d",
        "cursor": {
          "ref": "f2b2eb91-5c16-40ad-958d-88928c4cdc95",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "03b0af80-bb94-40ce-9515-5d51a0b30102"
        },
        "item": {
          "id": "70754f3f-d213-4042-803d-8dbcba15e40d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "37bcd8f0-55ef-4ade-9beb-15847514418a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95599000-1181-455c-aab7-a56bf5ad0e7b",
        "cursor": {
          "ref": "d0d9ca0a-bc8a-467b-9146-41cf7084bb45",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5fb13690-100e-4ccf-9b9d-1a1d182cb388"
        },
        "item": {
          "id": "95599000-1181-455c-aab7-a56bf5ad0e7b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dd17a157-44fd-4b0e-a064-8907efc864e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d715659-cf71-4789-adc0-e4b77ac86fda",
        "cursor": {
          "ref": "f60a9fc5-e9c0-4f73-93a3-6a9a854ed1f0",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "22269bf0-51c8-4e1f-869f-f5eb7d39161b"
        },
        "item": {
          "id": "0d715659-cf71-4789-adc0-e4b77ac86fda",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cdd25157-0f12-4043-8c90-bf6925cf2925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb32e33-d451-4766-9519-a0c5ba61b4dd",
        "cursor": {
          "ref": "0028ba21-a112-4286-83a3-9432c60af03c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e96e2378-f7d5-4816-8fe0-2972cbd315fe"
        },
        "item": {
          "id": "9cb32e33-d451-4766-9519-a0c5ba61b4dd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f04e2f90-cafb-4123-bfe6-07a46f031594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b29159-ff43-4824-9733-abea17338fc5",
        "cursor": {
          "ref": "09a834c4-a9a6-44d6-ad1d-a854514aefb4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "30bbaa69-3965-465c-a592-1dbfa7da2b13"
        },
        "item": {
          "id": "62b29159-ff43-4824-9733-abea17338fc5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "397a986c-59d9-4f5d-b971-412646cbdab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e73b45-adad-4a05-b39a-51a44eddbae8",
        "cursor": {
          "ref": "61fbf47b-526b-4708-8079-d3e11c3f24a7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "02ae6c83-24ad-47f9-aba7-66650ea6e68d"
        },
        "item": {
          "id": "87e73b45-adad-4a05-b39a-51a44eddbae8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "216dc06e-4979-4040-8410-35d4343be289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4203fbbe-e3f3-4c87-bea1-d0b4cc2283e2",
        "cursor": {
          "ref": "1a37f795-ba29-46fd-b116-d7f4f8efa0a2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e00f673e-4a2f-46b8-87df-d534ad2d753f"
        },
        "item": {
          "id": "4203fbbe-e3f3-4c87-bea1-d0b4cc2283e2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eebb4775-672b-422b-aed8-bf576b4573b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83895ef-030d-493c-b65f-40b8b0915d97",
        "cursor": {
          "ref": "7b969d73-e293-43b4-9a85-6c6a1324fcbc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "286e178e-49a3-4358-a2ba-0e96afbf4f47"
        },
        "item": {
          "id": "f83895ef-030d-493c-b65f-40b8b0915d97",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3c1a331e-5fd5-4c7a-825f-d77f2212b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839eca06-45ae-41c7-a3e6-8ecb65f7ed7a",
        "cursor": {
          "ref": "610d38bf-2f74-4d7d-88ec-d237befdedde",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fcd16c6c-48db-4632-ac6f-7dfcdc3f7c4f"
        },
        "item": {
          "id": "839eca06-45ae-41c7-a3e6-8ecb65f7ed7a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7e094dd5-77fb-47a5-8db1-f339bfe6d41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202cfee-c31c-4f47-962b-1f7162f37b17",
        "cursor": {
          "ref": "71443dfd-9dbb-4925-bc0a-73568d52481e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ba12a049-a086-48cd-8f2e-ceea9a49de15"
        },
        "item": {
          "id": "6202cfee-c31c-4f47-962b-1f7162f37b17",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34c7a42f-ac8c-430f-be5d-c6aaa369237c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbeec7c-77d5-43d0-aee0-c691b1cb70c9",
        "cursor": {
          "ref": "33776c1c-f8ab-41b2-8be9-1e9d1331d77f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ae36db88-e127-49de-9e76-cb2fe3566076"
        },
        "item": {
          "id": "bdbeec7c-77d5-43d0-aee0-c691b1cb70c9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "722b3390-ee1b-4740-89ae-916bc4cf6c5b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa73126-ed01-412a-8bc1-4f46fc37ee82",
        "cursor": {
          "ref": "c096ba11-1e7d-4351-a27b-f5fb85f3611d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bf35a435-7b5f-40ab-9304-95716f5fbdad"
        },
        "item": {
          "id": "dfa73126-ed01-412a-8bc1-4f46fc37ee82",
          "name": "credentials_verify"
        },
        "response": {
          "id": "baeb8870-1a06-4cee-83ff-717f10f92116",
          "status": "OK",
          "code": 200,
          "responseTime": 3502,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cf7b72-adc9-43fd-b590-f6acd08ecdea",
        "cursor": {
          "ref": "00e5709b-2329-4622-8c76-bba2623a3c27",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7295fe2a-855d-4c14-ab22-9437a62353bc"
        },
        "item": {
          "id": "01cf7b72-adc9-43fd-b590-f6acd08ecdea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fb3c34b9-5b33-45fc-8da8-99ddd9fab8b8",
          "status": "OK",
          "code": 200,
          "responseTime": 4723,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf37f5bc-46b8-463a-a31f-52c670f47746",
        "cursor": {
          "ref": "22250aed-c9b4-416a-b271-60acdc0a9d6e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c650bc5e-cef9-46c5-b860-10d296dccfb1"
        },
        "item": {
          "id": "bf37f5bc-46b8-463a-a31f-52c670f47746",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bca49b2f-8b27-454c-a9ab-41adced5fab1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf37f5bc-46b8-463a-a31f-52c670f47746",
        "cursor": {
          "ref": "22250aed-c9b4-416a-b271-60acdc0a9d6e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c650bc5e-cef9-46c5-b860-10d296dccfb1"
        },
        "item": {
          "id": "bf37f5bc-46b8-463a-a31f-52c670f47746",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bca49b2f-8b27-454c-a9ab-41adced5fab1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1440f45-4036-40a9-9e9d-2e7b772cfb54",
        "cursor": {
          "ref": "b8d67749-b37c-411c-9fd5-967e8beec5e7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "44a14cdb-6cce-4147-a757-2293385a02df"
        },
        "item": {
          "id": "a1440f45-4036-40a9-9e9d-2e7b772cfb54",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f68f0c6-91c9-4e25-8177-ea415f6fb23b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6eaf10-b701-4029-9390-3b1496444bf7",
        "cursor": {
          "ref": "4b97a56c-ff4c-412a-b56d-7a7a4d10e079",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "dd929c56-adb9-4c6f-86bd-764781a3c6b9"
        },
        "item": {
          "id": "5f6eaf10-b701-4029-9390-3b1496444bf7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "04a96500-256b-41aa-a04c-34a76ab04cbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}