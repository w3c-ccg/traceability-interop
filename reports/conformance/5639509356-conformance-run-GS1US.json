{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1a781115-0ff6-43b5-9ad0-abf27708c4f7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fa5318de-811b-4725-949a-ed2bbefa72ba",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac430fae-87b3-4324-9900-d63d43971dca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a113f98d-a8ce-437c-b1fc-1046cc3b3a55"
                }
              }
            ]
          },
          {
            "id": "2ee5f5eb-c5e5-4708-89cc-bc02a58cb511",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a354c80e-5882-4574-acdc-21200221c6cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7abf3c76-d27b-4271-8374-ec8e054fa9d2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72e06c63-7af4-476d-93b3-90605845431b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "97d959e8-1a72-403f-857d-ce4cfd7982b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a296f87-938b-4053-9fb1-43710e30a527",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db034a55-c5b5-41c5-82f8-b974c4f96852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65b8f0e1-fcfa-4904-ab87-47326fea5970"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8caead76-99af-45c2-a470-da42f56d8358",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e55339f1-7111-421a-a60d-72a8ad306df8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "370588ce-decb-4f41-8d1b-80f13d378efb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad2262c6-2f9d-410d-92a6-c60e38384058"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ae965ab-f585-48e3-9edc-4c8a4d7c2bd5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2efb11a4-9443-4083-a441-04bf9b532107"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df088710-2786-4e76-86b1-cf040cd316d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fc10bd9-8580-494f-a8bd-39d15b22f03d"
            }
          }
        ]
      },
      {
        "id": "26cf57ba-8c30-4bf9-b296-28a18c9abe75",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "74798a08-5529-4819-832d-fab5c13ab841",
            "name": "Negative Testing",
            "item": [
              {
                "id": "042de049-2353-46e4-b9e5-7590f59a9981",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58aa7af7-24e6-4abf-ad49-55c87466022c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0daabef-a272-4f81-ba97-c4207a7c84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c60fd26-5347-4768-8de1-f1e6f488cc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d7d8b1-d3e2-4c41-9d7e-6a92060b8407",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880109f0-521e-4235-b624-0cb9c484df21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d1f62cd-0476-47e4-8431-b6609d901246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081cf92a-7ae1-4051-b1b9-e1df93be5a5d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257f834-2c19-4b8f-b0bb-71a07057fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e586ad12-25b0-44b3-917d-ede47ae0d761"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f74e7049-7089-46d9-8e9a-e9a467ccc02f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "918aace9-7a82-4709-8346-7626c7393a85",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265292f5-5145-4b5e-a189-c9c1959ae55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "359510d8-dfe9-4134-a476-c8c1c88fba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627ca7d7-ce2d-4aea-b902-e3ff61952143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeff6d8-c29b-4682-b740-9a330e7ce8c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d650cfe6-245c-4176-b1b2-7d82d19c9bd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d74eec8-fdde-47ef-bdee-f0f4c162b833",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a588353-17c0-45f9-a4f6-67ad3087316a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ab96971d-e7ca-4556-b470-ad09651fe571"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bf58866-4947-4497-9040-b672cd0c6314",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "413d51cb-c79b-4a2e-afa4-594c1d412396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "908cd26e-0fa0-4e5b-9154-e977b353218b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5eac4b8a-a0d6-4ab4-8458-8f5d9b762ce9"
            }
          }
        ]
      },
      {
        "id": "256b1437-c5bc-44ac-bbe2-3484156eabc3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1a4ca8b8-5d4a-4f63-b398-a18a55cc5bb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30582088-3e16-4740-9121-80855e8271b9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5d19b4d5-5582-4d9c-9711-0fca4ce1a72b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3daeb5-4b2c-485c-9e9d-b2058b192f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3b5e32-6373-4ab1-a7bb-46f6e59c1cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f61edd8-c126-4346-91f8-1e1740f326fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e6b9eb1-fd04-4d41-85f8-3e5a6e0a3a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8e82fb-9662-477a-9b25-bfdaea9c69be",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b33566-8824-4c8e-b7b4-83af294a9237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bfd6bc-6e5f-41e9-a995-21243997ffa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca9c254-4a60-4be2-920b-5ef3a140b68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20d6b459-1a88-47c0-883d-1ec877eb4ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78e2e4b-d047-4081-8d7f-34d780654772",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22606e92-7b24-4c7c-9d71-864d51b3cebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93831197-0f47-4fe3-8d6e-9a04df52e1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b1e357-8193-46ad-90f0-e0790adddd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dece782-e8e1-4e3e-9127-0ca120b1219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea4bfaa-b348-44a6-9501-f7c80b800fd7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418b4afb-ae22-4ee0-a475-e8518fa6f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7421b178-5d5f-4d63-af0f-954707665c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420522c3-538e-40fa-a9c5-ee0f6e9a3859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4329ef7e-6c37-4fc2-aee1-d2498cce2406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbf67a8-2dfe-421b-afb8-a20cf8763f17",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78def8fc-a25a-4e8c-99fd-54dd6688427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cce3e68-adc2-4f8b-aaab-2ebff4d9e965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a23b73-ac13-46d6-89e5-d19e2bd29ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4898797c-a09e-4d14-8017-e9fb0e1efb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b0aef-85cc-4cd2-b68c-e1b63736c173",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf61df6-f3d9-40fb-b9d8-dca6461c958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded3a660-35d9-4fa0-b35d-488b5f0d00ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc468a98-8328-47ba-ba79-98cd7abd12ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c249178-34f7-4d60-ab49-d7fd5e2538e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64547bbe-c13e-4746-97ac-8323e4651438",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dbd01d-6b9e-48c9-81f0-1f25e980bd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e429811-96e4-4f90-8d0b-b8af9cbca284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26f9807-67b3-49b2-80b5-c6fda34070d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4626f72-3bc3-46ab-b1e7-e237a9a323ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ab778b-7e6b-4f22-a56b-636657ed7eb8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87862d62-0b55-4cc8-bfa2-5c5c6ac51632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970f66cd-ab45-408c-87ee-8bef778d51fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9cb0f0-ac2d-4591-8e49-361b8f8e9ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3494d7e-11e5-433b-8f34-f02ef0403251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c7baab-6c65-48da-b7e5-70afaf20559f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aa925b-f57f-44e4-99d5-82629931b495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a18b2c6-de4d-44a1-b186-b63646261708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcc68e4-bb64-48f8-bfc2-6c80c5ef3aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ab737f8-f156-47a0-8bb0-5c31b776b5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4432fdf7-837d-41f9-81d5-2186114f6bc4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c0abd0-e18f-4896-8a7a-a0b1cebda338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b51534a-e944-4747-b06a-3601b544b90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c650067a-c8c8-4672-bc05-b461f99cfba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca71ffee-0771-49a5-830a-d920cd71617e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf6319a-bdc0-43e2-b815-0fff5c88b76c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd319caf-4e1d-4a95-b78b-90ad5a4b8f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e570658d-58ea-4a5d-a80c-ed99d36d3bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db3ad6c-807e-4d58-9783-e58c124bd1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c8d6ac3-1eec-4bb4-b515-eb1bd85a2650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4e433a-b48a-4ccc-b8a2-5ff87e40bef4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5db1e6e-7fe9-49f6-af3c-972665b40ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25bd2ca-7bdb-418a-925a-fc0953256391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac475300-040e-4165-a34a-198f65b4b044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "364ec68b-3733-4667-b24a-e0104363ca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705c0c91-d7b1-41d5-929c-0d06f7a84b86",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a79add-b4c4-40be-bda1-7fa835a74f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbbf374-32f2-487c-aa13-744a7bcd41f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deac14d1-c9fb-478f-9bc0-d401fc12860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcdc1c5a-26bd-4884-8d28-34c79dd883bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8042ae02-8fe6-4258-8b58-35e0dc8111de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dbe231-323e-4cbc-b5e4-092e04e529b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76071376-1e12-44e6-bfe0-c76d65bc5c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfdf1f0-daa2-4fa9-ad37-e96cdab54bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b166566c-50d8-407b-a718-fcb6ace6aaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300206ae-c522-4791-b61e-1d0aec63f85f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19d0fb3-c14a-4abc-9049-8e4d05b3299d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6946dc19-c715-4141-84bd-41edf0a59cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43ef4f6-2a9d-4c24-a6de-6ce0d51621c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7afba3e7-4c06-4f1f-b2fb-0c97630a6e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12ed4ea-81d4-43ac-99f6-27fdc47e6498",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e19064-afb0-457d-bc40-2c6ec169a70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2893a643-d4a0-401f-b9cc-7ab64566ba85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b47550-8958-499d-b901-b12e1d462366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cc3c38e-8a4f-426e-a78e-de4feec0b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d1abc6-8041-43b5-b229-056ab7ebf450",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffc99d2-e2d0-4d81-8eb7-a2bf87e17b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce77db7-e973-4939-bb1e-5b4bcd1619e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9622e996-25f8-4f91-bd05-80699c08cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6577a675-e04c-4ce4-b68d-0c30c1bcc0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569584f-962b-4973-b184-c10c8130dd58",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5548cad-4f50-48a5-b538-b7c53fb498ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ddf8f7-4627-436a-94a7-9c49640eb127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904e3709-5ace-43eb-8408-31242762eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3041cd72-e00c-4d73-abda-6a541db0ebf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c210d3-4ad0-4bb5-99ac-cd25ffd3f579",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2bc468-c0db-4315-96f3-71c3aad98a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1dc252-ff2f-4481-9744-6e8c645c0935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fa9d12-4ea7-4ae0-a77f-f06320f732ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5617566b-f752-412f-9084-05aefb3bfd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c08dc43-3e88-4279-a554-1c23b17beda7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2a872b-d8c1-49f6-b324-e19a66a1fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d68d468-9481-44b9-98e7-8d16783233d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107f6f23-5952-4da2-8397-c7bfd5384015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37886cb-0df1-4f3a-8638-40e30c7c939c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c095fb-3fa8-4a17-8fc1-4a956c2b2db7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513e5f1b-ab55-4e64-9c59-df24051cbe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05202cd8-35ff-411a-a230-32e41cfab6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58342cab-e392-4be7-a2a1-75193fdac99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "050f988f-ebcc-4fe0-a43d-60ae430754ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc2fd0e-dc19-4d07-9689-7bbb7ba68868",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f84cac3-d45c-4fc8-ba9a-9e327acb865a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95644daf-e6fc-49c3-bc33-64188c1f2a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2309041-c7d4-4a8d-b14d-7e4b929f3d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c296089-a987-4def-a420-d0dc72dc96eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebf4387-c4f0-4159-9d9a-696e280d623c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab6f3da-8788-49e2-923d-94b865f1f6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dff5290-1625-4380-83d2-1d62523692ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda9c5bb-dfa9-4b85-8d93-dc1172be8722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2eeebe18-2f48-4f7a-a8ac-21bd6d83c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d8b958-260a-440b-92bb-f8225dc56a0b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d204d7e6-3c9c-4e9b-bc3b-a51435a3a848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4366d1c8-eb33-4138-adc9-4706aefa1c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ab70cf-1a89-450e-9e53-4242a13698e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b28650b-5355-404f-a832-9998bcff55a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8c9ebb-b445-428a-a408-a7790b94438b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11428d3f-5010-45ea-b4b3-d4a6a74f5551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0afaa82-9c5e-4a3d-87d2-453806c92674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146c22bf-93af-4b32-91e5-c9aa6a8281b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb7c323-f170-4283-8c5c-06a2e1755b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238bfa52-fe74-4279-9cd2-129f04a48a49",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f5b414-18e5-4363-9a84-c53fc2509a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaba8db-cf31-4c68-8281-bbab286eeb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d7743b-b6e0-4df5-9950-836c69c11d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9b2f18-ed9a-41de-83a8-11b0a609f90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3f54f8-73f2-405c-94ee-aca448042148",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd32ae2-61e5-4c32-9c5b-62b270be3966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36246653-2524-4d7a-809a-99ab4e0a2167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a7ed0f-4736-4f9e-95d5-6a77aef62a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e3b668-4bdd-4f51-b549-9859165861e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b3288e-60c4-4b5f-bad9-2885bdc7d70c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b23afb3-d7d1-42f4-87dd-b342c13fbbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e6eb3d-ab63-45a6-af46-025008006f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e2a6d7-b8e2-41a4-9634-dec1dd7606ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1341672-bb1d-4757-a9f2-9d285f40e26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140d9acb-41e9-439a-9d74-35df9728e13a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0844c3a7-f7f3-4df5-b090-68f5557a3818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32bd55b-3d34-4012-b9b7-1e1cb5c34bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98717b8a-f3dd-40a3-b460-bfd2abe9a501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "806129ca-7f37-443d-bfdc-79cab6794df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a94071-567d-491b-b4a5-e7b9a50b072d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe32624e-97a7-4683-9e7d-8cbec7a064bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e965fcb-d6a3-45f5-ba47-3eed3eae1c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acce2d1f-a1b2-4716-9647-23f732bf8b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de5a915-0dbc-4808-bff1-721e88b27da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833b4d08-00f2-4236-bf76-9e85b17939c2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ee5e52-f832-4d48-b07e-f35a4ff72392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c9df57-6090-4730-9b42-e777f144abc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0684ea46-08a5-47d1-90d5-0e477145c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab63a59-0f9a-4ad8-9c9c-ecf8fa5b50c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5c4bb8-5ad5-4419-bdf9-3b1cc46a18ed",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081d28d1-2f98-4b8c-bda6-17e022c1f242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75228172-70cf-403f-9607-a54c0d9141dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb232262-cd14-4802-a0cb-969a64e44473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd2ab9c-62cc-4a9e-ad05-91b56c0e578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0d3939-5f88-43c2-8555-cee76c820700",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348d4e54-5e7a-47af-a5c8-9bbdd6190f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccaf4648-725c-4fd6-b049-4419d4b83d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8f3367-5358-430b-a1eb-cee14d174014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d050c74b-09f3-4a7b-b756-014ed3a59f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68301f3c-da58-428a-8ed4-04d95796e4fb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b86aa-992a-49f2-89a4-def913c641b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1046d463-b30b-4923-bc3c-e125607d5d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276a1687-9614-4b8d-b9cc-2ad6b164adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c677a2f-8a98-47bf-ab49-82589dd4f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b24cb4-f4d8-4f04-8bc8-b0d1fbca2483",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab3c9d-0456-45e8-8e18-c87bb65a5290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb74cc7-3abd-4c4e-9887-0956ff4fb84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70c5f18-ae20-4d33-9018-6a8f66480ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cc992fa4-27b2-4516-bf6a-8ae573a5e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077991d2-f8da-4094-94eb-6056c5f2b8bf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e0a509-c76b-4db6-80ff-ac75dac6593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89478514-7b20-411e-a6f0-a26a57a6040b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b242cb92-9dee-4348-849f-458b1a3dc328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "303783a6-50f0-44a3-ae3b-a407e9d88893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed7553f-0f0f-4dc9-8e19-fa2f073e846f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2096467-90d2-4de2-b174-1bab5d69d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eabbcd-db75-4519-9f61-ec34f01b223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854d142b-bc88-4d1a-a32a-9617b9c98955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4dbe1b-c0db-4691-88e8-94b2c10b703d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e965d1-074e-43aa-8612-f888c378ea32",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb38735-61b2-42de-a61c-925fa9df1434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53b61f9-3afc-4dc9-a44f-99f271bd34c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55f67e6-1c3c-4d94-b431-c80ad9194d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed79f7e2-6dba-4266-9f8a-b8635b7297a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0decbfa8-b0ef-4a2e-9e6a-356536274a72",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce69b7c-89f3-43ca-83c0-27fcccbc59ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df406778-f73a-4752-a407-4c1477e01266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dd3377-5dee-47dc-ad27-30d1863debe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cbad3b-4101-4f4f-9f0c-dca518812fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04626f71-95ae-4da6-8c2d-6f14edf9aea8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fac051-19f2-4dc7-8861-8e788aed5481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5638a308-5ef7-405a-8b03-2ee6f17e6b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484fe8b3-bb78-4140-a9f5-d541ab2b95f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0a6067-2b84-4828-8c70-6d07b6d909bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86acade6-103e-49f2-83ae-5d6094ccb296",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8901be94-6bab-401a-8d73-427a03421d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3492839a-4eea-4c8a-941e-6e99590bea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e012e0-da34-4331-90f0-40d33f93f19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48e4103c-c2ea-4022-a022-2cae0fcae019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759dbfd-4334-4477-ad30-cd86198d3011",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0dbb67-cdb1-4eb1-8348-03edb88c9661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113869ae-4851-4f02-a2f9-c37ddfd15c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd2addb-7c09-4dcc-9ddc-9d0fa19a7b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "657c26c2-0c86-4a33-be3f-0ca8bf99eb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccc9c43-b78b-4f1a-b759-7e365e4725a6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef5819-b702-48e8-9ca1-0dc82865d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ca875b-a278-4e67-a499-1615c5c52111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff94d87e-f7a1-488d-a6e9-fefc8d840a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a167aa-d38b-43a6-ada5-039be685de0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96530f5-cac1-40e4-ad4c-fa07f4dd2ddd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab698a1-c4d9-41ac-9254-9b8400050503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1fb3af-ff21-4216-b120-b3dc7f597348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567bce3b-0faf-46cf-985f-b24291889da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce512c1-a49f-4e5e-883a-64555e383aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81fc47b-49ef-4a23-934f-39d82b5ca428",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9450d779-7158-49bb-8bd1-4a278d6709e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354824e3-ed24-479b-b0aa-6c7b2a56de7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2162e13b-345e-412d-805b-250cd663442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a016fa45-f56f-4df4-8cd4-770990aa516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afab838-872c-433b-a1ba-cce7670acac1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75d8308-5e9c-4dee-86a3-5cceab52b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5489f99c-75e2-4b1f-8357-155d224034a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1ee8da-d16f-4076-a879-b0d8c88cbaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "915587db-2cc4-4b6c-b402-c7a3fde46148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1279f1d-6f01-459c-a60c-4fb58f7cfe11",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780e33da-dd12-402d-9b56-a401fdceab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934c2ca5-335e-476f-bf2c-1740fedade06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e857a5f-c88d-44a6-9909-c62776952685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f20dfc4-9da1-432f-b0b4-a0ccf858cd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8117fe1-0784-4881-8b1c-769c6fc91938",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b956b089-f73d-4e54-adf1-ad5c07f2aa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029ff754-fc2a-4268-bb4e-cd4d9648145c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213b9635-3594-4f6a-a613-cddd0cb02620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf168b1-0a7d-4649-ab4d-ae7896518f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c663f1dc-e7e1-48ec-a8bd-79a834bcca63",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dc053f-4784-4d39-b51e-188c71c2609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50aa7e36-4ab7-4796-b5ef-55d9f69abcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9581116-e605-464c-80a9-a565e5e48622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67adc822-918c-49fe-8cd7-0d331f51938e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8345e5-d6c1-47e9-aac7-61cbccbbd435",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18af99a-ca4a-48cc-b26d-5fc70089fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e3a2c5-fa73-48db-893e-c55849840ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d638b223-d44b-49ee-86f5-5839c4bac411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd26809-b911-4b9d-adbe-f8268044df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dcc41c-ae34-4101-894e-c48a7251614b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33079bc9-2d00-454a-ba7a-b9c2b0870df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72e56d2-575f-4cd9-91c9-af12375f061c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eff826f-a7e0-4f5f-b2f2-a65d70ec8f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "863af994-ef85-4781-83ff-5ea0622ac581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b24cbb1-a97e-49e0-9da5-f0f07266fa89",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b159adaa-bb63-4aa9-9e03-a3dab3b2ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d86659-4ef9-4abb-afac-69e6907badf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550bfc33-e178-44ae-afab-c2f93ef9bf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c877b3b-a85e-46a7-b832-a5e854167b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0f7e68-a509-4b75-b809-9985e542afaa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de46a82-a68c-4d68-b177-7a65841ab323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2698f50-52cb-4fdc-93fc-2b7cff328f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036323f2-1e5a-41a5-bf0f-ac7f6c6d4129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4e16d4-6c13-4b4d-9d73-2af6b039d6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4f3826-0d78-499b-a525-ec16103f5444",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d9cd4f-fd1c-4188-b835-aff3012995e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677b640d-0246-483e-975d-1457be7d20e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef27f0ae-0675-4e18-851f-4185e5764e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be5afae-621b-4751-a55c-1453b816291f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b825417-2b73-4465-ad0f-f905eb3c35f0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a42250-ee09-4681-9a7f-d2b2d2e9c4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa58f1c-b53d-4db7-b465-dce88484c1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5519d2-dd5e-48d5-ae9a-ef1ae3426b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10202013-ce09-4a64-bfc9-06103a9397b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3269a647-d0e6-4404-9361-81b06c4cc373",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4dc75-31af-494d-8d5b-2ce7afa25135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19a9668-cb84-4c55-890b-b3b59014c506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35768ad1-ad3f-4521-a7d1-94cd0874d74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e2faa608-b9dc-4ac4-a5dc-fbcfbaf72f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b53fb8d-a786-4efa-b914-5f549f550ac7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6999a544-a430-4c5b-9b6e-eb61a05fe98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06c974c-b0ff-4f2e-a27a-a5bbb014f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24c7c46-fc0d-4075-a3a2-5b7998bd14c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e369f061-cbbe-43cb-92da-6acaa4cea226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5814f6c-af75-4c3e-a426-73fb6d5a1d50",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03c395-336e-4ec4-b2eb-710af36397ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb2ac44-435e-47d1-9b73-825f2d13a251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad51df1-e562-4b46-b1b6-344aaa920347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e354d57d-a625-40f7-adaf-51f1f12fccc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd3dfbc-89cf-4719-b5b8-4f083b543300",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df61f45-9c39-4849-8de8-4d8a75ccabf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c17cb7-32cc-481e-ab9a-4b4b90e8dde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f853a29-3f21-463e-b8a2-435fce066f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc34891-e6ef-4dca-a7e6-4704bae67ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826195b5-29a2-4a3d-8f9b-5eed7b96237b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd0417-fdf9-453f-adef-e3acc9e2e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b639c9-5071-4dd1-9e3f-f0c1653ecfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4e7c6e-7d14-4194-9ee1-0b294e6f7fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e675148-fe48-4552-9a8e-191cbdb08162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62908930-72e7-4dd8-996e-481dd2770a53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c2704d-459f-4eac-a072-e13f29068558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c99659-596f-450f-814e-ac486ca6adc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc40b53-ef63-4cef-8fdf-7a46bdf8ee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb8f851-a02f-4639-9825-eb9ae4b240bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9cf293-b1fa-4172-9d1b-48afc62a7f32",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5496d6-493a-41a2-bcac-6c54c049e99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2033ba98-8d18-44a7-bc7f-ae9ebb9a8688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d9083b-e0be-46e6-b956-50f66e779ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e72c1c4e-da1c-4070-9b19-416f5689f1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e9476e-345a-460e-a2fa-7afd6547a3f0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86421320-8dd6-4868-92b7-0c8e7272adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8554e66-2595-4316-b777-ef18bfa00f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0748a446-4b6e-477c-acb0-c3445950d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc521bf-1919-4b8d-92c6-c23bcfaad36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4742fa0f-afd2-4a2d-b10e-c89a165603ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e8dd0-6d32-47f8-9200-149810e8613c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e17c5d9-6eae-4c89-a051-b8627c56c8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8be55b-c869-46fd-bd73-1bbce505a698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad611f3e-3a17-49c6-a2d6-8fb1b032e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9294dfb9-9bdb-4c3d-8a14-40c688c98587",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4615c56b-4aca-4694-bbd5-c88406e08024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04744b44-9d46-4ae0-a11f-9ac78b05f627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178cc02c-f097-4416-bc43-d33bad6cf882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6f0797-38be-4d5e-8ce2-897a10aa7a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5862fc-0025-4c8d-99e4-0dc1a6a3b2d6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28cb7af-c823-4930-981b-20c0755bdee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6edd2dc-3bc9-47a8-8b72-1cc0392e0bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbbc1a0-c88e-4420-8fb8-ad1efbac2737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "872d95fb-8b72-4a6c-b129-e8c38a8fd3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a8b546-1555-4ef3-bd95-1791837741f1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69bb04e-0f4f-4865-9a33-14efed07ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86cb1fd-4916-47c4-a60a-41a655af23a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a2f31-c4b1-4170-a2ac-01b30878483d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65ca280e-43e1-4b1c-928d-891b90ff72ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2587cfa8-bd59-4a35-9e8d-4412506a06b9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8050cfc-9f7e-4472-9562-06e280ae664c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b9f556-1bd4-481a-a09f-0121526a61ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6b9e4f-f30b-444c-baa8-f2ff7b787867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7278c414-d277-4b24-852c-c37ce8b07161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c834b042-2d21-4374-8f17-1998dd8a276b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94917d1d-fda2-458e-a873-fc106aaeb632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775b33c3-2dbf-4629-9e6b-bf3abbf554aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f7f563-74c7-4e2f-95f6-9d10df45f609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c8f032-9695-4351-a413-263b58aff609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74bdee5-99be-4c5e-989d-fef7b0c862a5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7589b53-bcee-402e-87e2-aa3894469261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a6e124-1676-435a-99c6-4a128a2d1e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a2274b-cd52-429f-ba25-7a61adb9d709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fce0063-1f6a-48ce-a527-087dc432b0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e157e55a-047e-46c9-a94c-660ec8f3e99f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90d8258-2183-4437-9804-b057059e2015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fe5390-4a0f-481a-8924-a768eb4a039b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c46acb-19fd-4b02-a2fe-a3c474c7deeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30faa961-ec5b-4353-b1b4-03990bb2147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e768381-8206-4490-96e2-b71f1cf7e52a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b05ace-279f-4669-8d85-a81e5e3f1a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6d549f-540a-45a6-8437-18abcde8ac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a0975c-ab7c-4d79-9d3d-f0a5000d090f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcba530-55ec-4663-bb3f-ca184ef8e06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572d0130-a94b-4657-8b1a-29482f1f2427",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fc62be-9334-4f7a-8f90-0ee576d2fbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269994cf-81c9-4e5b-be95-2545976ec176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8ae86-6948-4955-917f-0297576568e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad999c94-ca2b-4bd5-89de-05d0511c5eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa4cfce-55d8-4e59-9a14-c1bd38576db3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ebef97-dd5f-41ab-a306-291424ddd5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8279935-1b15-409e-baa4-6185ba147426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9fe900-2ef0-4915-88d6-8f7a5b304587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d68d28b5-5e4e-4e65-88fb-5885dd8f053f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbf5718-00fd-466d-b98b-0ebdfa90d6ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99477b2d-ee03-4bae-94ea-e89448c9592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d01e18b-0e6d-4167-bd6d-d52ba9dde886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1791765-0ab9-4433-807b-e573961c61e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e2febd-b19a-4d0d-9aff-061cc01b7e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece63d4d-4aa6-4248-855a-ece87ee802ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb03f7a-7ed8-4c6b-89bf-a398357afee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1288b6-faac-453b-aa75-5a0b4318a4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dfb072-628d-4c54-b1e5-b19c44a9be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4185eb-3f01-4811-afa5-74b2aeaf69cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c70adfb-77b4-4170-bb43-18827f4b54ba",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a25bee9-0e76-4be6-880f-ae8b7e4fdd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500c6245-903e-46be-9dda-b1cb734eb032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e0d40-2f17-4c8e-8920-338a3fcb2f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9463f94b-7e4e-4119-8111-bb5411fff156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027198f1-c7b7-41ad-af26-2b2880418104",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9492c40-91a3-481d-9e93-99fec9efe50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c1282f-640b-4f8b-85f9-4512a8bbd8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68325ca-5a9c-44b8-8b54-9aa9007bf647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a5dd3e-00d6-4bd0-95eb-ef2a02b000c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c6b9f0-969a-4a36-8f73-c9c640ed78bd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d0691a-40c6-4473-8ba9-ceab1c7a7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ac10ce-a810-475b-bcb1-1b5b8d3694e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b01d2a-aa3b-4541-8acc-6398e07f14fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b32909e1-4f74-4e78-a9f0-cdefe6641f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f353ac9-b1a5-4a65-b166-2aa8f570d5e9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a41fc-0958-49a4-b6b2-9e4cfd8dc747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dde4907-5061-4465-8761-78d61746fbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09ea239-e8c4-4abc-9513-4acd706b4004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6854e60a-7a9c-4116-9004-6f5acb3e3e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5c9ab3-04ba-4ff7-86ee-887b295a8005",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b16ac5-89c5-46e6-826c-dbea9832cd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dc46bd-7ac5-4cb1-8a1e-e448d8f52fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cb0206-ba0a-4b5d-8a60-5e0ff60c8143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45ccc9c-9cf5-43c2-90be-2ef577cd3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b522d32a-e847-411b-9d5a-8eaaf306129c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c90cb0-57b1-4637-a812-e98cb1f4fb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472c0613-28f9-432e-b18f-129971db4c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1ad74b-c3cf-43b0-8c90-a806e04fef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af99ed18-3ab3-422e-94a4-3a9564c6c483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc8c4f7-b29b-4479-8b67-8a1e729f3afa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bba72a-5857-4f0a-9990-62a90253b2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89bbfe7-9390-45b6-b510-98ea6d3c9b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2a5064-df53-4995-9889-ec9be94c8ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f86ec4-284c-45a3-869b-506d29faa65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e354bc45-dc28-4f30-b25b-cfe3540dc99b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0010c460-efa7-400f-9048-e1a1046ae616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b7a765-c2ab-41c2-b211-89a74156837e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd679b8-5055-480a-aad8-b6619e383144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4df2f15-3f71-46c4-aafc-80f0dd7ce663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc12de6-bd94-4054-92a7-0d882ef58413",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75dd1b3-d7d6-41be-8837-1a1228a53a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70d5a70-4b28-4f29-b33a-1376e8ff48ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3de530-0cff-4431-95a6-ac4dd1b1f4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71319f15-f6c1-402b-9f87-6d44bb96f53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d4942b-7b04-4518-b3a3-6a2a9418ac02",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145c51ae-e4ae-4e8c-bc47-146555b6b7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c281c0-7d5f-4ff8-9d6b-8335d4879142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb00a3-2e98-40f3-b9e1-156a8c21bda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "230d1149-261a-4775-949c-ff7359c37dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5458cecc-2fb3-47dd-9020-6a3784ed22bb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9ea1cd-0786-4d34-ad97-bdfa6848c3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac928442-c204-4cb1-92bd-7571ef3101dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2367779f-ceb1-49b8-bae0-cb05507fb62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a24f5d-1047-4bd8-8faa-d5f546b45f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fccc69d-5b5a-4d48-963b-38d7a62ced6b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa912c8a-1a5b-4c0f-9164-07348dce668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fde6eb-1033-4648-af22-46d26352ba50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bb1296-f548-42ed-9b52-1959733a4e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f47ea2-f5d0-45c9-9fb0-25111e322f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f35260b-75a4-4bbd-b74e-59da1b52eb17",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b94f9cf-b4d8-4bce-aaf5-c707c62b2fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e460cf-7524-41d1-b2a1-151d76a676f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a4490f-aaf1-4f32-a0e4-db13d72bb7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5afb9d-fdd9-4e05-ad72-752beb77a9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec4b52-a598-4431-a4ad-ea3c4c6125cb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc28a53-c0f5-49da-9b2e-4ac3c43d3cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a694077a-2569-44dc-91e2-f7ba45e2ffb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d2109b-cccd-402a-9b16-dec81f7c81e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e9576d-e96c-4586-aee0-7188fc36be1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9728c77c-6f93-4936-aeb0-bef62706e0b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c354322-0fa4-4e20-a8a7-5252da795505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073a914d-ddd2-4687-9158-92bbed890d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bcdebd-e2b9-4433-995c-d820e09b728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "30b7313d-8643-455a-872d-344fbc2068fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9616fd9-bc49-40ec-93a8-2287e80621b1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5234da70-0847-4903-8147-adc466563576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8552130c-7921-4cfc-8920-aaaee03f4eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3170a25-59fe-4e76-a276-51c1e9c3f299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb505410-bc76-4cad-8d87-c06f65d893c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2015e0d1-9d6e-4ff1-8cc7-b8ba8318f485",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "427a75eb-13dc-4616-8993-6f03eef8f3a6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46382070-9cd1-4813-ab73-ce39f4293c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d47e6184-e8a2-473f-8563-13d1fe2dc56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7de60b7-4b12-4889-a183-5b2a6482871f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2f56e11-8046-4f92-8c10-6712d4347c7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f916a31c-1a3f-4ae0-b340-58c3c5ac27ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8636e049-30cc-45f3-86be-97e400d9c5ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f06d9df-6657-4065-838e-d3d4b37e3875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3523562-69a4-430f-8010-e88053dc8025"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afd72d98-9e32-4adb-9122-fd9a829cf564",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01ed2594-3f14-4685-a891-7f4848d832a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c02ea174-ea93-43f5-85a8-c4bd2158f807",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65538c3d-cd2a-4e82-b024-5b9f26e022df"
                }
              }
            ]
          },
          {
            "id": "9d31239e-8815-4c6c-bc56-1cd1e05de60b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1ca5b6d-614c-4fe7-9846-4b46f1ff33f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01880b6d-d796-4e1c-8562-6a533831d6c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e94527d7-bc9a-4041-b210-43a17ded046b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b37b5c9-7200-46f0-a645-50feb9bc8584",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "925434c5-efa0-4132-933a-354fed5f3f02"
                    }
                  }
                ]
              },
              {
                "id": "c6762327-0068-4509-8b57-18349369b256",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63ddffba-b97f-44f6-92d5-d637b1ed21c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "530defe9-c696-420b-b0be-506fa938c7a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd3f90d9-efc0-4c72-9a61-108c05a90d9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e044c0c1-fda0-4527-af3c-04632d6e543d"
                    }
                  }
                ]
              },
              {
                "id": "f8d05874-289b-4007-a0f7-97140e70d753",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e453085a-2327-41fc-9c38-8d566646a476",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c967e6a8-8d2d-4259-a919-5eaca8d7829e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "008c9501-db4f-429a-ae86-0eb3dac3c06b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d855d85-f701-4b90-a51f-f69fc0e36077"
                    }
                  }
                ]
              },
              {
                "id": "ef247d6a-3888-40e7-9278-e05d97c57613",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e69b5ce-88d5-4e79-bcdc-93026c7f40ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b851450f-e036-44cf-9be8-952a7b2cf81c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec49cd67-3c64-4a27-9504-a7e30b608380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3d398f13-f4ab-4e24-b676-2c8fa62d8b04"
                    }
                  }
                ]
              },
              {
                "id": "1cca7a6e-fc2f-4e8c-b9b0-8e9400ee33b8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8626e693-5707-42ac-acc7-a02a10b496fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f50bbcb-8d79-4bce-82cd-7a8d6b56c4e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d71f265-f7a3-472f-bd15-d54850ad6214",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "da52000c-7dc8-4e03-a216-8281c4c2e6ee"
                    }
                  }
                ]
              },
              {
                "id": "f587faef-aa45-4c74-89e9-431350be98b8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83609d0a-bf4d-4813-9f1c-c8e06c6fcb4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0296a843-5743-4893-8f76-75b6e7eed08e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2a06bb-4d26-4a56-af88-9a3ffec5390c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d58cb5b-98a9-4cd5-ab66-be7d0838502e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d007fd2-20b4-4f8e-89da-973045840cd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76dfed47-9e2d-4222-9f48-bea3933824c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80c59879-9aae-4fc7-8a5e-b30ccc4b507b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "426c86f7-e001-4829-adb2-55e29b40652b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13e06421-164a-480b-beda-7713c15bc17a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f9d93c4b-d3b1-4acf-9682-02c9a9016d33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51477bd8-3d90-486f-85bd-23ff8d5e4a33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc9e922b-ad4e-4ff3-bd7b-ca3849cc0768"
            }
          }
        ]
      },
      {
        "id": "9495304f-9349-4c6a-a436-6f6d36558dfc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "79d17a87-8c8c-464a-b641-1cf73c30c684",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99556a16-cfb2-4e9c-ae44-e380a438c4f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b8d9afb-e90b-4c0b-b9d5-ffb25bcb2200",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28e216-be3e-45f0-8706-6647144146d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7516b117-fc4e-4712-8168-335f75dc03af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139e0e8c-82f5-4896-b9fa-e049900efada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc0668d-736e-4063-9f44-d90690bb77ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910d4a6a-64df-49b7-9788-3a7644eb9a54",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0bb330-daa9-4474-aa3b-92d0eeae1037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13325112-1cda-4f2a-a1a0-c51d62aeee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f117b81f-e002-4e4c-8ca1-da93931c9f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb86fe9-a9c7-497b-9707-93dc216fcdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f23063-4c91-40b4-a9f6-425716143e11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d71c304-3a2a-48ef-afed-4f083874bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294954a8-983f-498d-95ed-010744607d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ca6f45-ef44-4688-a85b-b074df7a71d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48763cfb-d486-4840-959c-763040b4d7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4722cae-9fe0-4f7f-900b-4d637b05623c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c946a61d-1328-4bb2-978c-281a7c458936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cca955-942c-4e88-ba25-dfde2241e9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dface3-7b8d-4847-aa62-faa0835330f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b428d7a6-41fe-4179-a5c6-286b861ecd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f44fb-ad31-40f9-ab3d-27b59f1d4eb7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128e757f-dc55-4785-ba27-50bb5f94be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acefde04-284f-4a8f-9094-cb2d1a6d814e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96a19b7-55fc-43d3-a086-6f4758d66a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b521fc7c-1bce-4a69-bc93-cfc77e928451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499aa273-1ecd-43e3-a721-9d12007fb5e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d92ad1-bd16-4119-bd85-0b164ef1d7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfcffee-9ecf-4917-bbeb-a46ff1f3f2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2651e3df-131e-4347-a775-f579989010d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "351f337f-4684-4fc9-8d47-24d4538d5b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af007b2-53af-4dbb-84ed-b0de044c1293",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f4dc59-19fa-4541-870c-690976b4090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2313d4-f720-4438-b34b-ea2d85cfbfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0a3bc1-6464-47b2-9cde-eca619d24d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b918c63-65a3-4e11-9fb6-b76abbc3f721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f09745-9e37-4a08-bafb-1d98405399d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32351ab-6b13-4966-bd3f-acc7e15ff808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dd6564-9a1a-425f-b76e-07e71e5a75f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b175c422-dbb7-4e50-9d94-6df7b8ae1837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fbf172-2448-419b-8dcb-9993eb64b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f18dc21-1c2e-4795-afb8-4934094bbca2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f571dc-3708-47b3-b77e-737ee6b72e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47871045-f54c-4271-bac9-49e52959ad6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1de7a0-7137-4521-b1cf-fc213b37b2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec74487a-8be0-4774-b3e7-705b9efcea36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efff4c57-908c-463f-94f5-544e80a39d17",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2761c612-0271-4a43-a9a4-062a52c05740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e894899e-68c7-4793-91c6-b4e38e5000b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4936f665-a361-40a1-aedc-f9463e0188e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f69887-fbc2-477a-900f-ea62341561a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643a0cd-0dca-4384-a470-04d256b659f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5405f314-61bb-44e9-9288-64a4c2c9efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bda1219-c1dc-458f-8c19-974d6e925669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50e5fef-6f70-4813-bca6-1d545a6c4fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "643008e1-5609-4796-b4ca-01801cd57057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89c51b2-5c25-43d2-ad98-685f81c26e78",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b21bcae-2465-4111-9d44-99b8163611a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c184bebf-b720-431d-938e-0dffebe65ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af062b2-bc11-4c14-bc54-265707c74692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfcb62e-9b1f-42b8-8eac-db419c3df8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f779f86-f095-4a4a-aec7-718ae359501f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468e4935-6b97-44fd-9920-d73cb4b714a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3debb754-96a6-4cf0-95d8-512af37628a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef3f6ac-9283-493c-a0da-623ed4619b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "842a891e-8382-46da-b147-5aa62c1066b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e378a1b8-ad9e-4ef7-9045-fbe5a2e8a281",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c57fc52-5e6d-4a2e-8440-d1a2a18ad64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122f570f-494b-428f-94ce-2318e5f5f470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ce7b23-f6c5-4f11-81d7-65be377b483a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a15726-aad8-4883-a76a-441d5fa97a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805e69a5-fcc8-44fc-828a-98bf6e9619fd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d70c13-5cfb-4df1-9032-c57647f95ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d891928-992e-438f-9709-270d7a3f59d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254ebd75-5c03-4c6e-aa70-09249a90264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "817ca901-f96e-453f-847e-65e3e1a4cea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d12387d-e164-406b-8748-204306718376",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24bcac8-9b43-47c4-b465-2a69578a8514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27420ab3-1390-4350-8a38-7243b7986cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c030aa4-b32b-4072-8b3c-552b2fb64802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "251e26ab-882d-4841-a695-246c9cb8452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da5ff8f-a9b2-4e76-86ba-b1ff892fa142",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fed33d-85ce-4174-8c6b-76bbeda115b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52c4171-f223-4aa3-a508-6efe70f4b720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dded001-437d-4f1b-8ce0-aec1a7cde251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4509c9-6233-45e7-9309-dbb84016c211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1efaf8-830d-4c4e-b9d2-364e264523d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4987f717-6f67-4efe-9e9d-a4beb3fe39dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a84d72d-8f41-451c-a088-7b6f69ef42bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f693b8dc-6c39-4f4d-abf3-665b96f00caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda20401-0291-4ce0-a710-ffdbb73e6a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f874d73-7346-47f9-9489-1f20dfd779ee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac81129c-6ed0-42e7-8ac6-d38d9e29941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ac03a5-036c-4152-9eab-c762cc8e350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381e5049-f8aa-4ef7-bbb6-49c6a9a90a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9a2fe4-ffb6-4857-8567-171bd8179262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c51b4b-1b50-4961-99ba-ccde85bdc1ed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c094dc-b837-4d2c-a8c7-24f3877405d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a53877-61c8-49ba-9791-4fc9b08d31e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22625eb0-e15c-41fa-b771-a282e9598eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ff7f04-3c3c-4583-a620-efd999a133dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669d2dc0-ae22-43fa-b8b5-b00817b70005",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4142cb2-8c9d-415c-b2c3-0b68759f6463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5144dcf2-1cac-4942-8362-601a2617e4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740dc19c-9ef3-49cd-8144-cf32b72323c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8109a2d5-0d7b-46f4-a56d-52fcd31f1212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b7e2d0-ec10-4699-a3e3-0411fe50eed5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ad3c0b-2a7c-4fa4-a83e-06274d8ec595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210010ed-a03f-41de-9082-fe5c65eec739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfbf1d9-7078-4394-a222-8eb7a44a6433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da58d556-55ec-487e-aa80-4a3661323055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f738fd-03db-447b-bbc6-273f8ce3bc89",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e03a13d-a0d5-451c-a51d-cd91497f2d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed56867-1c56-4b68-a895-cb9f639f579b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b286f659-5a58-4989-af0b-153b6b5fb393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfe04d8-6915-4422-b214-db612cf65f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca9cb16-9e28-405f-aa6b-4e08f29db970",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6ae2c4-8060-45e8-aea9-0e9a36fe627d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d981b6eb-7921-45e1-abb7-da243f99fc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42467d8-f1bc-4900-9b7b-74621851f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee132b88-c10e-47cf-938f-004a249707e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78a1c8f-da48-4594-92c6-0b9b78c83b8a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25704d92-24de-41c8-a7d9-eff98b8b4fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba24ec34-a367-4356-b86a-8a20c17de96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a67f16f-ac2d-47d0-a1ec-b757c7a66fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74767ce-90f9-46ed-bd1c-af239102d1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60952f5a-3e13-4a26-b943-bf563b6cb417",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27db2fa-833f-45be-b048-2f3e10a96b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4661c47a-8921-4dfd-b1b6-467f796c353c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e297f76-1c12-48ef-9f9b-d4a3ffd216b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54379c0c-65f1-444f-906e-49ea0baf7086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aad3db0-f19e-4029-99ec-5ec3505f4cfa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379d6ae5-3bac-4ccb-9058-623428e60325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc1c46a-57b9-4ac8-9dc4-dfef737af431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dcd792-2f85-496b-885f-f3580101f2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64be57de-f290-4e11-bf8e-12b740a82d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e89b184-fc01-49a9-8944-3fc15c7dcaca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cc90d4-1780-45f8-97f6-158f24238128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d944bb3-4c0e-446a-9117-d87e97da5854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f64d21-066e-4f50-88fd-dcdd434c1dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8ecbe5-d668-4957-acec-c1e9048ae543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd89b356-b259-425d-92d7-25f00b18132c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a165a42-1e4f-448d-abd4-475341092736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99e7ed9-a352-4a3a-8db9-8642c36eaf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a44c68-a79c-44bf-a627-b5675442cf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55ffbb3-919a-4df4-bbfd-f4326732fad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f246a193-726e-4f9f-8317-0b4801711d3e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69fa793-7cd8-46e7-bc58-fe06e4f78ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc8416c-a4e8-4eb0-9fff-88db4d72db21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f31b75-a043-4be7-98c5-170afaddb7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3991cfe7-4e7f-438e-8898-f9ef645332e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb70c917-792a-4b11-81d7-5b5a8e9bca97",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bea0226-18da-4b6b-977b-74ebb787ffd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93a423b-b340-46b2-aeba-a1e4dc20384f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3666c5d4-8644-4c8f-8fb4-03c684f1cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d042238-0b47-4390-9f7b-ea580dc9019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9def5a-7fcb-4cbb-b7ec-ba58b599cd52",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad60d36d-b887-4105-9df0-87eb28bace5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44d53b6-fe88-4b61-915c-8240034d63c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72f6998-64d2-45c8-ae2e-6107488d6cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1da972-e8d4-4d49-b6b6-754cbb6e06b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9ddede9-db9a-4b88-94dc-932b5fc73ba3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cbffea3-0481-4b2b-89f6-678976b4f556",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7feaeee-2895-4419-8fcb-1f53bf206d06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a22cfa12-cff8-45f5-97ca-b11c3b74579a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741607e4-0258-4144-96d6-63c424b53449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9855c9fa-3f85-4a7b-a69f-4a5932c2f28b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f715ec84-f544-4e4c-bd14-b440295ab1d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e16fc9d-5da7-4791-bd6e-61ac72c16fe3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7f503bb-cd5e-467c-a992-589f1796341d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b4ed56e-543c-48d9-8bc4-3fbbc5ae6493"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40521d2a-940a-4438-adf9-b5aa5077c1d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10349084-3d1a-44af-8510-1fc4ff57ff73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ae08751-a36c-4cd7-9b39-c73ffce9c996",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca953d69-043f-4848-9911-b8d84b498cf5"
            }
          }
        ]
      },
      {
        "id": "fe1717f3-67a3-4ba5-a939-fadb4a830b57",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e563d54d-e52b-4075-aa30-8fb764d206ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68e14df7-f313-4f34-adcd-74d2f73c478a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2a509a5-8f86-4b9d-9233-04288ec81fab",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac16b01-ce9f-4299-8cb4-c72c1d2704d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a84ccc6-99bd-4190-b515-ce0b2773ae2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba56d98-45d4-46ae-a4e4-d3c5e8ffaf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f3845a-48b6-4262-90d2-82b2152a9e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b2b367-1765-4a7c-b11f-66f1c9c194ee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52569ed3-f157-489e-bb18-da0f30317b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580d865f-a2f4-4cf7-8e04-2be2d8265eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3bc4a2-48f9-48dc-a4c2-43c75145e97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00575d3a-d6f7-4a03-a84e-44ae6f836493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65730ce-25c6-4732-9b2c-d81e8a14b69a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1dbd0e-50ad-43ee-9c73-8ce6dd23f9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53405175-336b-4ac0-bca4-3f5cb7f335c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79034c23-c855-4fe8-8fba-27528b4616b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca1ab0b-5c3e-4624-9c5e-262092eb6343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88434a96-4d20-4bef-b3fa-c738d42e4fe8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5616f876-1d9c-4a9c-94cc-e938a5b6fb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9df72c6-b30d-4b49-8969-b4d969bd716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cf5921-af7d-487c-b793-ffbeeb12fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ed0419-cb9b-4811-8ab4-21f6f8d690ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed3ae86-1c93-4cc4-96be-83981ce66a6a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caacbe5-195f-4f52-b87c-8ac62604e856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca26a233-fa2c-42e1-80ed-0cd0f277c8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b050e2bb-cd66-4a6b-bbd1-4b7d71dc8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29cdf13-5902-4f38-a124-37936df66925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5cf8d1-8759-4adb-9672-8c4b1af8f94d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409d4be9-d554-4837-a809-8c47808b9bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7cf0a0-10f6-4d17-ad0e-6495cc002c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af76b1af-86bd-4f14-959f-42f70d408367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a54378e-3f70-4691-92f0-7e9c92007e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8874cd-61bd-495a-b76c-5eda0e6eb512",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e806b569-04f4-489f-b360-21051e95605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac2c054-7f96-4a04-977d-fd1b716dc734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adaceb8-1b8f-41e9-adb6-37e37732cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece78f9c-d6d4-4fb7-b18a-019642fd1a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ffee84-b6e6-4777-81c0-669f68626d10",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78d653a-d00d-4df3-bf19-78c4af57c2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f5e74a-dbec-45a3-85ef-3efd98fd0df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d90953-6ec7-4176-9b70-44db76e49e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "949c067a-13d7-4704-be20-59665578afc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e108158-e183-41f3-bb6d-0aa63f9227c9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80453ff-20a7-4f1a-8708-1a2e79a87ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38efb7e2-1b10-4ce3-a05c-3ab0afd88b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db23eead-209e-43a7-a1bb-82f02dc082b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67160c50-c1a2-43ed-8459-662a04e9f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1379cad-f4f6-46bd-a8e0-9047b0c900be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbbd884-96c9-4ea5-9e00-09143e902e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63c0f2f-492c-411f-88b1-a00bbe1d10b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480c485a-c121-4f4c-a593-d7e98f8b8a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "755e9749-41b5-4323-95af-65dcad0796cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d6012a-f7cc-4c2a-ac65-0ba0a16aefde",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4985c23-3d82-4aec-ad53-338ec05ec841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd29c50-3498-402e-af36-911d9150fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1385d4-0865-4c3c-a3ad-50891f68a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8b91d116-4c3b-4ed3-b11a-9e0a5309ccf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c98c2-6734-4cc3-977f-985e11250eb5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cd1b09-bd14-4bdb-90df-3ae1300df78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58ea3f8-3ad3-447c-9958-2e5f7937a0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd5902e-8a10-449a-b504-f61dbbc52ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98b795a7-be7e-4bee-aaf1-57b92ceba788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379bf827-c59e-47e2-9465-68b73d7cfee3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c6fe0c-fa88-46dc-b48f-3f9558de32c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e5aab5-7baf-4861-8399-4bd5c2a07cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c049f01-ab97-4baf-b351-a79a7750c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "182fb5fd-8eb4-4d98-a190-621d7d315afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee1d0f0-160d-41bc-92d4-ddc80e682391",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721481fe-ad05-442f-9fac-eb5feaace122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2853b167-1582-49ed-b272-ca481b2d61db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26fa00f-b163-4971-8491-996e3dc5dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2583cc90-c9d4-46f6-85f4-f8ab6c413055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5261635-3f35-4ceb-8c61-6be45a3d6a70",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f134e3-2802-46cf-ace6-defc25555471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c371d6bf-8290-4388-9119-1b65aafa4e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb8a82e-5b30-404e-a78b-cee5f54dec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd6d9ae-6b95-44fa-b19d-6207d2be43e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8c888f-29ea-4e03-8004-dc4a34c586e3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e779fb2e-1528-4b4e-a328-a6fb876d3b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e738ab-74e0-4f22-a72d-f06eddc48ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a772c0-ef06-4ffe-85fe-79d5c2ca1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3048e358-c15f-4f1e-8b40-1493a2a50475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbf9df5-fe4c-459d-8f56-1e054db6c555",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528a921a-37b4-499c-a310-b1737223ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebda230-5747-4c2b-970a-61cd8bf3dd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d6751-4a9b-4e0a-838b-3537d746ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cf0b38-c29d-49a6-82e6-082a99597a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a553ece-89df-4f7a-9f5f-80ba5d24a73e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6f43cd-2320-4407-966f-3b54350d1d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aa6252-502c-4cdd-a878-72017639d37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a275979-2c26-4ae5-9352-0f767dfac333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54f5ce5-c36c-4ecb-933f-4c02a27272c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8a9c23-82c8-43f4-ae81-657ba4458233",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f079e5-a03e-431f-b77d-1442dfd0a27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f971d88-1021-4921-9a88-6e18ad9cc63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c413cc-bf52-42a4-80b5-b29c41336036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f9344b-79ae-4444-887c-bbc421e73c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f42d66-6d77-4032-a354-4fb29b526703",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450ce115-edfb-48c0-973e-a3329e65bcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9f3e48-996b-4905-9427-bbf5a79910ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb77c80-8096-4a84-a2ed-acb648bccd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb635dc1-ee2f-4ffe-97d7-88f3c5cef1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adf86f2-4372-430e-9b15-64e3f8f45f94",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f56b24-d906-4343-8b26-950029bc0548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a9225d-b86e-48ec-8b09-e3ec5691a017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2fda8a-920b-4d52-ac0b-86736e830546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba29e24-48be-4549-8824-4e5d0366077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ecbf6c-32e1-4656-a4cb-baf03f1ffee0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc4497-b437-4243-b33b-67cad033942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5a8635-067f-4227-a4a2-d063088b313f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6366d4c8-8dc4-40f6-b7b3-2c28523853a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c9307d-03af-4f0c-823b-487c7c4da634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7085d036-9df5-47db-afe1-5cf1849b8c0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26653add-1fa0-4d43-9843-8a42c3b2ace5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d69d449-4d8b-4f48-8567-51a288b51359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c719cdd-c8a3-498b-b750-5a426522367d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9632ce0-86e1-4e6e-b65d-6e40b3ddfdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af71b294-c7d8-48c8-93ee-cda51c0b93bc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ee17ab-10a8-4238-aa97-a589fac85daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7accb324-49b9-4661-91c1-a7fb44612823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a46fbb3-f5aa-4e75-9001-da86c1bd1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "692cba29-4ff0-4f23-8a15-866f95cef11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c10ff26-9cdb-429b-8cad-3d412ce87d0f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f0486-5158-41eb-860f-593983e24b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66662417-3554-49bb-b81f-0d4dd4bf2abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2e3aa9-3e65-47d4-8b47-d7f6f2495421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb82590-e695-4e23-bf18-1ac45491d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de25f533-0fb6-4dc6-83c4-5b5d65be9d67",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe243c9-09ca-4ba6-9299-268e9c46e7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bb312d-839d-451a-ac37-6737e1c77819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e87a6b5-23df-46ea-94bf-47d40caefd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179c2d9c-fb3a-45d6-89d8-76bf78edc1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea83074a-bcc1-43f6-b668-1ce4f7a55de7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75168965-db99-46be-8592-e6edf7812f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e56d60a-e181-45c7-a960-c9fcfd1a4e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4731729-a872-4118-9bfc-a0958a125344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "074554ce-db79-402b-b775-7701baa25ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ae59ff-fc55-4d91-8d52-de0808607f83",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb3c4b4-0f8e-4baf-9f28-5adb6087d664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f19361-d908-4c0b-9ee7-662af0910e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96686cd7-6f08-4a32-92fd-9743e1da99c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4808c1-4c10-42a5-aba6-f2945fa18aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7425e0ca-14be-4e7b-85df-c43f37b04f08",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f75063-6837-4595-af7c-42553aec3614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9881fe-7c7c-469d-8fbd-fd90da266ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef6344b-1575-4f26-9590-fd44b8e9ab1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98b54b9-acdd-44b8-a0d9-03fb935b3351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97868e53-212e-4b10-a586-7a82fd130506",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5177b06-fb07-4075-ba4c-62f7fb6a7ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3812dea-d6d7-4e8f-b584-87e002836674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc601605-d604-4597-b954-d3b47e7ad5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fb0b40-a21c-46a9-88db-8b95f9d140eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40b3cad-17c8-41e0-8504-028e6857758f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5189dbf-d26b-44ad-90b6-2e5af7f9f5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e78895c-44fc-4e7d-b20a-d8122c859b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12eee06-2554-44e2-b0e4-4a7281741fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6f5191-eb31-46ad-8183-a1f57aceee8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fcec98-ccdf-4798-98b4-d73559e77e90",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a233ab02-1817-4d13-a46b-612ddd96a73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730af33f-810a-4ec8-b3db-617b24f6d201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f64b3a-a7e0-47a7-a9e8-5d7bb8054ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "958228d0-0ffd-421a-8a45-088250897b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ba8ac5-bc5b-4575-95c1-85ed3d71577e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e5091-30a9-4043-84a4-59e8c09697ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840fa2b0-b772-45a7-b1b1-cc38bb78f116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2132e0-f525-46b9-910a-b4a91f8e0007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebc833f-4bfe-4398-a4c0-a0e70a198ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06884984-3f1c-4287-b865-705cdefaa3e9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549eab33-4c4c-4d6d-9403-d5be7e57d928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7fe111-f9c8-4aec-8524-29b1b3828338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d678dd6c-ba75-43de-838d-8eb1ef0ca30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "207c42f1-5135-4fcd-b170-3b8d6a3f68ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4957eaf-1223-49e5-a8f2-eca84252ea36",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5925c78d-3985-4478-87f7-3e87e1c6c51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d184b7f6-7d3d-42f7-8e5b-d6856328760c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd188f8-f0ab-4cd6-bba4-97b3a604002d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee04a8d-2667-44ca-b689-c027217f28a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a40324-650c-4ae8-8609-8af987e1f8dd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9cab03-438f-4d56-b5d6-1f3b60113bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c497ed-f0b9-424c-ae84-28bbc62078ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c39e32-e347-419e-b44a-a1dba89ad028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1484ffc9-a2c0-488e-880b-b24c5b666581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7324980-a990-4137-a60e-79205f2ee2eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb41583-2f16-4135-8c79-b1e4438800fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45109def-d048-48ca-a477-1191d8a9bc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7010a37b-b01a-4bee-8dc6-b2062c07ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d59d66-a243-42d9-8764-27b2ab792519"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8356359-2c63-42db-9623-1786c83d047a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fb1e08b-2efb-47fc-92b7-1608bddb8b97",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46995f7-fe87-48f9-a168-a2cc88ee8dfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "453e2687-3670-45a2-b19d-8a4ed524effa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f6b5ef-0135-4870-a11a-15b6a7e020a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80bcc3be-8553-42a6-8687-fb3068d5b718"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e9eef0-a016-44f4-9c2a-d1aeed38ca46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74168854-e90a-498c-9362-d41f66a33d3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "699e27ed-bb10-4d40-8ae4-0a4737961bfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "770532e7-f928-400a-adfe-daed48f23f1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9f0130b-2398-48bb-913c-19a7b232efa3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8586d0f-bf83-4520-93cb-c54ed03a62b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2250243-fdbd-4788-b8fa-c7f68473c3a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d885d7fa-5c90-48cb-ae0c-19e06e3edaea"
            }
          }
        ]
      },
      {
        "id": "8abd0761-d202-4dd2-a2f9-eee766a8dc29",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d94d60be-51ba-4e91-ae3b-8d6f104a3e2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc9af56c-df34-42cb-8a36-388cbdf0535e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57a53492-2cd4-4b2f-a460-5eaf170ef569",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c65a57c-a44a-4a49-822b-027f83755f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50da01a6-6094-4096-b179-10971e5d2565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec19046-c0a3-4b44-9f6e-0f71975f429c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58959d8-14e9-4f98-9808-bf8755a2bf35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294bdcb5-f3ae-4cf4-8d99-52c6a70a6a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33c0e5c-f2f0-4f46-9ad4-33d6f5f5f7a4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b61db43-c4b1-4ff8-977f-7a3ba75f022d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3280c00-7c93-4aaf-8d18-aefee2c89684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e959d8-29c9-4324-b836-f9916e9a24de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2710bb8e-3a0d-45ee-acd4-d6012a3dbe62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964fb924-e486-4001-ae4b-b584f57bcebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf73ca9e-1984-4441-ba01-469504d307aa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d38412c-82b7-4b2f-8ca5-72afd2cd0beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4028db9a-498b-43d7-a50e-61d91e215226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295e3ade-c401-4e82-a775-b39582978af7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80dc8d7-a211-4497-aa7a-dc9489107b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d25d80-0da2-41da-89a7-d896fb8acea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d086c71f-8695-4c00-bbcb-90c819cb9121",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490df685-c4f7-4599-b163-c3ca8b272806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6fc607-2391-4600-9673-f0f1519adb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5d01ab-a6ea-46e4-8fd3-6209d23f6b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56b2168-56f2-49f7-b65a-e73c112e4c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f04197-60f3-4234-b763-de47c85243a9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec6f576-ef13-4453-b818-c22c42b268e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b51e0b0-f98e-4a2c-8e43-8d81d45e807f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf582818-3e20-422b-82b8-539f5b520dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a132e00-d282-4b89-80f9-448cf93f74aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6887d09-5665-45e7-9e25-7cc0636f5ef2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bf00e1-fd40-4f9c-b7b8-e331a9dacf1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b98de7f-1763-4486-b3b3-3cda841d93c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b641422a-a30d-4e79-9e76-5cd309d266e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982ca087-938b-45da-9246-61c5d8ff7ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b79e36-c366-40c6-8ad6-29b41751d0f0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe426d6-d867-4e90-ba8d-89505de3d287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1bb7096-6c30-4d19-950e-1f064383672a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1e271b-0520-46ce-bd2d-a42d9ffa87b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02efe78d-2f08-4483-9cfc-aaa16e97017d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b64f140-5395-4244-9436-456dc124dcd8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e76f3b-6ec9-44b2-b871-10b817d1e981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0628e1d8-98a0-4080-bb7e-4b86021b057c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f97cc5-af34-4a9d-bcad-e7252c85bb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad37d23-912c-4093-887e-e4b2a04fba2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ddcd91-1d73-444d-ad3e-4087a3be2b8d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1ee36b-9a4f-441a-9aa4-5e94b620a652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef3a55d-e34b-4554-b2f6-5f3612d98c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ca47c3-2b29-4999-b94d-e996630e2252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488a09f0-86a9-4680-88e5-f89ab973e866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0627665c-7c80-4b8b-9b1c-ee9c7c3fc0bd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf533c7-cd68-49a6-a680-f39c479f4e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735e9080-95e2-48bc-84cd-54327418d4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bec1eb-c52a-445d-a1df-50622f61dc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e604478-632b-47f4-89e4-60b8ef3e8fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a44ff9a-8931-4a7a-a1d5-4c2273744141",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e55bbf6-76f0-4211-bf66-26a88246f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56dff87-4090-42c8-962f-bab4b36dbdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03bd38-dafc-459e-8052-7bf8b2d48237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824324a4-6f0c-4b4b-882f-4d4e0d799d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a95a1c-a767-4c9d-a7af-a0374a0681ce",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e1cbf-5ae4-44c6-96f4-f589e28d695f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a095857-0ea5-4d13-8bd3-8204dfc6f28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6bc3ac-0e2d-49c1-8cc6-9a2a4402c2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8f6f12-8345-492f-9a58-024dab3c626d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbfcb0a-305c-4207-8871-75d28832208d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5c956b-0ac3-4822-856a-3452fe38adfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3c3729-b48d-4d0f-b124-4d906c62c03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a77f6a-e711-4a18-8435-cf90909ac434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4841aa49-dbae-4a0f-9ecb-707e7e33307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b8895c-e4c5-40ed-9df0-7cbff1a5820c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec5992a-95a2-4cee-a36b-33e20404ec82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569a9cfa-46cf-468e-b33b-52f8847eb855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95cf270-6002-4228-9099-fc059608963a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc45246b-3698-4495-baa8-13b265db24dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db096c2e-432f-437f-8105-986b15c1e75c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06071db4-52c4-441a-8087-dc83a8b95c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d335d9-0bce-4fe2-9dca-e7e846f47e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab58b8c-3615-4ac6-8fc8-5ed26c2c7a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfacd02-0880-4cbb-ab75-d95accb8d9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44054b5c-b201-42b7-a148-a3f6682a9ee9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9366856-1556-409a-86c4-da14d45c523d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee5d2ff-c262-4817-9832-7939d71c3764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ed7908-dddc-4683-9ba9-4038adea6106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9931b1-8f78-4a55-88e5-a8441d60149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b716fa53-3120-49c7-bb8c-f5588180ebbd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78cbe96-a5b9-47ee-81b7-e8dc820b64b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af474cfa-cf02-4412-bb82-c1a6be4484c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0d5497-a349-450e-b3b4-52e2111e307f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75442728-205f-4f88-b5f4-600d4e68dfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedf62e9-2be5-4dec-ab61-6450601a06e1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fa39cc-6f72-43db-984d-290d79485d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ab8bee-8d13-4e4f-8a1c-5b6d61bcab18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d74122b-5675-480f-9a7c-7b9b5c9348a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827c6916-e8fc-40b6-ac81-66beb6251f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43ee678-e05f-4f90-8e21-7b0465968d59",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd7ca2-8847-4687-8153-54e5b08c2527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cacdb9-6e42-4c6c-9a62-9c0d8026e0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba2e367-88e2-40a6-8e05-f6524dd03df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5f0ff1-d84f-44d6-bc5f-40785cf5a6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb523fd-7476-45cf-a3fd-02f992ad9f4c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2a9ba9-c587-4a96-b09f-167cbc230e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483af85f-b919-4bae-a4be-c1ecb60923a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1d6c41-c3d9-48d0-a83b-17e7edb8ee15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1256798e-73a8-4023-b908-1158392f8817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a9b77-0282-43e0-8f1f-ce3109ecdcff",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3ec925-8805-4ee4-bc0f-03db00495c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3316664a-8ffd-49a0-ac57-879c1c0a8a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e314fe1-15bd-4774-b243-b6f0776922e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4b29b8-6f33-495c-b2c2-c41f5463b0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d1fc06-a5c5-484d-b38a-7f7016ee237f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ef8a1b-3ca4-4bda-aa23-334675bc63bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0803c940-ba49-4ee0-a0f2-9b965cb090d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d18139-52e6-4439-b299-4fe82f6cf251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda471bb-33b4-43f4-abbc-ac468320e6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06015795-0d8f-4cca-926f-62d464843047",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672932fa-d8a0-44cd-ac2e-000379a1299b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4226fd-4f69-40b9-96f2-e697c75e49de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc034c56-9326-4fcc-9052-1537342a0804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5daa1a-27ef-4b45-b671-091dbb01c10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceddf2e4-72ed-4ac1-b1a2-099e92aa946d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235384e6-8042-40f2-8446-ab0f0c8fbbf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b434490f-5bd1-4a34-b850-cfcec9305f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c03e4bc-3715-4a88-9b45-fa9c0b116f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076981f5-c5dd-4020-af99-c4de251c8b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d208845b-445c-4cb0-87fa-d2c4f8187292",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0abef2-fe81-4831-9c87-366fa654c203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4f1bdf-ad18-421d-9c70-70fcb5a21b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d82a245-50a3-47df-9e5d-8b12b818b359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba1dcfb-51cd-46b9-abe9-f426fbd3459c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218075f8-c3ed-4a42-aa04-d65815c77ebe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13510721-1667-4a88-9f5e-da363d9104ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd2109d-d61d-4dfe-a7a7-b673a1b115d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640ba14a-f1f4-4e44-a30c-a9c8b4bd59b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055cccff-13da-4070-86ff-3ee676e5beee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a676df-3021-4517-840d-b655ae1938bc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193fb820-6eda-44da-abcc-03c46b6d1036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b35eb4f0-86f0-4c67-a988-7210e6082006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a445be4-8f45-42d0-8348-9f6d4dcf1e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bcd177-68ef-40a3-b8b4-53142a900ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c9e9e0-60c5-4ff0-94e0-e8f4905343ab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4888f581-780c-41bb-b032-166f6454711d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b01b29-0e41-447b-8a96-fec33bf285d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb20884d-26c7-41d0-8a17-b9b14fa7df3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cea929-c28c-4a15-848e-9a2fd6ffb5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a993bd-f180-4bf1-8524-7a1db6098c1f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6949495b-ea02-4fda-ad7c-e966f4d8ba33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a24094-a8e8-4307-9e32-916208b60046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6626dc6-06b0-470e-8a0f-b1efd2db0229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4871adde-03f9-4270-aa34-a22a9c9643ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc50740-97b5-4bc7-b023-bf3a6dadfb3c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45712714-cfea-44be-8049-d88dadb4634a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e313802b-98bd-49dd-92a6-5f4a8c8766e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb4eed5-5a99-484e-8a3a-199fb75e1891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265c7b50-87c2-4734-ab48-8a0902589eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969b58cb-754e-4ec4-bc31-a230159cb768",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62591e9e-c719-4b91-a540-0897401b7d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b669857-7aea-4d1c-aca3-29c768febae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4127682-3e76-4860-8606-d267fda30fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c6f398-b13f-4ee1-aa5b-97826c144d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b854bd57-a7cd-4e3d-9aaa-edf3fae21673",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2fb458-368e-4afe-8279-fe3ebc530e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863f6e8e-0844-4908-8675-c6bc7e18dc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a81ca8-37ab-455e-bf83-d24863e4f09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8efcc4-21e6-4a46-9362-75444c559bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4425652-938d-4e3e-90f3-a6f136302204",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e6806a-1666-4355-85ef-b431bbef5283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36ae75b-9b0a-43e2-a819-62036734ffac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605becaa-bd2d-434d-b23e-b2353ccabad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af6a24d-ce2c-4309-8d3c-923cf9ebffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b730bad-9979-476c-8578-7fc2baa29466",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72aab75-803e-46ef-bdc1-021bfd1cbf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a82d66-db3f-400c-86c9-aea047574416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57942a33-142d-4196-895b-811afa58da80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d3c86e-698e-4bcb-a898-151bd87ea4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f6c760-cf89-4faf-a3c3-5e89244abe84",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7b4efd-4c83-48b4-8e5d-e4875f9a7c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9afe74c-19b1-45d3-8d68-8590e7d26ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8accd-d776-4ad5-a30a-dde0e6a07cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556b6375-c9d1-4058-8e7e-248dff877183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc45cb4-6503-4d7c-abc4-325754720847",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd43a0a-fb41-420b-a24b-525fba19ea35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083d39fe-bb03-4c13-b151-88f4b7a68711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af681f54-33f5-4cba-8f64-c5c2ba07eac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890af20f-7ce5-49fc-9208-4b04644d3943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2174ed-0bd2-4254-b09d-1f08fe2e5f67",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e3252a-68d3-489d-9fbe-17a40a0c46ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd11b8a-d5b8-4b45-8e4b-e63e5cf8695f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ca64a-0d4d-4c38-a1f4-70a1696d490b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d3f2b9-9bed-46be-9d70-f2a8c5e56429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6100f029-6259-4c42-99a7-04ad66f71298",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590289b8-c6b9-475f-8fb5-75dbf7df6e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f627c40-0e7d-4d2c-ade0-0224ccb136ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9315c62f-b5ff-4740-883b-f75627d2cb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d223e4-19b1-46e9-ba88-60be237ad8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52016f47-3ac0-4ffd-a441-0d61c6115577",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c62356e-9e81-4b9d-a27a-d453c2ac87d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dd461d-d689-46d9-b27e-45882509e97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3c3fc9-392b-4941-b821-4c3001900f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2835a80-ef80-4b4b-8bbf-89d76a4f6df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca17cc0d-7ea8-46ef-bb2d-7862f942874b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c37df7-3f24-49fc-a4cb-ac427eb70bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f76ce61-af54-4352-a9a5-a42349440e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0146b1f9-543d-4ade-a37d-93da820b9ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74219c1-6aa1-484b-ad65-32e507e80dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e59168-5fe7-40cc-91b8-999458f98331",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e698ab7-6ce3-4f9b-b54b-54edae89e90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9889e3f9-78df-4322-be6f-61f1836c0b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2019666f-7546-4af0-ad01-9ce5b10e5085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd81c85a-1cb3-4a0c-9e72-12c913bfd52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffc0b6a-03ea-45cd-92f1-53b7fec56d81",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d552e3d5-ea8a-4d4f-b8ca-98646be7426d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33030422-8bae-46e4-b97b-4af07a8f20b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89599cb-2a39-4707-ad8a-7a213d60ce3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717af704-0be6-4f7d-8b27-dcc5896bff69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b29228-6cec-4104-8e9d-a32e175caa45",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f6e78b-b24d-4cbe-9d0d-74f01c835b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f4e99c-e34d-4577-9efd-0599a5d5ea8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b5e730-9c7e-44ae-af54-22c9d25a4379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f301e76-b6c6-4fb9-9484-0f1d3e2c7e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9e5d09-8b40-49ac-84ae-f871dbc0b3d1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb07432a-c24d-4df8-8975-705e0c667d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81169c4d-f8b0-4282-a985-17f52327e9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9006bfd-4c93-449a-8018-dd0e9e42cd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef0cf84-51c9-4117-9f07-371fd12f0348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9824f736-25c6-4f73-8d31-eb20c82b4f8b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e766030-fd4f-4c16-a2e0-01f393e209d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3795cdc0-f727-42b5-87f8-8ba2aaf25e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90528584-84e0-46ea-9511-5f21f287e304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418155a6-34e7-4d46-ae82-9c14e394a0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d76af7-da55-412a-9a0c-4b130ad45dd9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad37d057-22ce-4e6f-9d8c-9f2185b0f089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac862d-4650-4011-85ab-27e2b4c8c237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aac489-ce10-4749-a3b9-88c89b7d9a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16f26cc-cbcb-4dfb-b859-1ef2aa3019d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a2e9f8-fc8b-4e2c-8b4a-ed5966d67114",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255ed9d4-1ad7-4a84-8072-cdbc324e93e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80eb0e60-2865-4885-b992-3d8c90e9da5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7000de75-f7c2-417b-8050-67648e5d4315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a1c805-ffa5-45e9-a71c-bc5eebb27006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117bcdff-4ab5-4dcd-b0d5-ed0b08bb5e61",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb3485e-a497-467c-a153-010d1cab6cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6899a3-019a-4895-bb96-dc7154a1cd85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e31f7f0-ad24-4b34-8a04-ebb8f82b150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b6fa24-acfe-4613-a2ef-44ce4055f8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0566db0e-b974-40dd-b207-63e6e2980965",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2060ab-0f69-4971-b5ad-865199dd942f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7ab5ab-5cdd-461b-a077-42a2e7fc8bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f18a80-9251-4a13-87f9-6b485e0b9f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e4b4be-e182-40fe-9772-06f3bc58ee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d85362-057d-4318-81e9-0e03743b7192",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4bf517-cc4d-42b5-8809-a777d3af5a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634a5b8a-2f52-4228-bb04-9f2c9c12e117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c39cc0-bd2d-4fd0-882e-68de5782c1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed63599-a86b-4768-848c-79a8d9c618cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8a37b2-930d-4ece-a675-114f786460cd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45699a4d-63e9-45cc-a127-2a2904b29f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23223c4-97c4-495e-95b2-78951aeed54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b9c059-3dd8-4e7c-b177-779a11fd4f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8e61ec-6e1f-49a1-a723-93ddddfeaad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b093d35-8821-4712-953b-f67b61379e6a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9ad6d7-e82e-4e7f-afc1-c1d99f3535d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff824a1-0cc9-4b69-b02c-de971a33c688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c70703d-fd10-4cec-b0b9-6aac74decfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494ba2c0-078a-4489-a387-7b5eff346abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9677fd-d900-4916-8449-18ddb3925399",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39af2522-2523-400f-a96e-092adbcdb7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6575c5-cffe-4461-9705-1a6133e2f377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b9001f-a7cb-47e2-b662-9401d6c5cf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a242e92-7da7-4531-ba8f-5430756c5f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9993de-4142-48fd-be81-48e5c53d5bc3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2de87c-5d3b-45b6-b8e2-ce7bceeb7c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac8f7fc-531a-4206-beb2-1632fc341ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5ec859-e6a1-4833-a550-430e125dc7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c87ac9-df2b-4fe2-8a1b-4ad45f94004f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776fa027-e3c3-426a-b46c-a06f9110a7a5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada278d6-0dbd-4c7b-b5c7-84a38eada49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbf99ce-5988-4308-9f6f-942259de7dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a1d7bb-0faf-4d76-ae5d-a70de18202bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b9ea10-25e5-4b58-a593-8a99cd8ff10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc399b2-57b8-4b7b-a9e3-e35d60327d09",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9475e8ac-9c8f-4c17-bcd7-6d967276e268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3c922c-a34b-48e5-a6ee-9b99512fd8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f71537-1a1f-4e3e-9efc-1d57b1573ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3823850d-1328-4f7d-a1ad-f56ba10fbd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efd0294-e8a3-4f41-acae-c5d428bfdc27",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8b24e1-acce-4e16-af95-8d3cd01dc974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d49f969-e5ac-426b-bd59-7c710d213c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a08d430-1f93-423a-ae62-5eb5233070da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6556b4ed-0f9c-439f-88b4-0349ca4c812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b25cf8-6384-4d7e-ace6-7f6b2ea650d4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d747add9-062c-40cb-8ddb-5e87a0e624c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546a8680-167d-4267-af1c-7f02df394cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc23896-15f0-47de-9eb4-7b5feff7f4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74200b0-3e58-479d-a606-21c38f9e0a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249b944-07db-42ee-aee6-f0d2e2822ed8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab404d06-a723-4a51-a939-5caa09137f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f0ae39-9e49-4c55-971e-95d7b3f6df8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498703de-cdc8-482e-88d0-00133f696454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbaf8e3-703d-4f51-82ab-3e48230e4e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30149767-34fd-4c9e-a408-4007c3fce19f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a5fdd0-9450-458e-aeb5-50cbc52b9d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71d673b-fe22-43f4-8b54-c7a70ffcf58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d0bb94-6450-4633-b150-f4856c15a530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f63b678-2d08-4131-b1a9-177b70351646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0545be-a335-4df1-b599-9eddfc0aef00",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a242dfa2-9927-4b4c-b71d-31b34020d64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dab6786-3f80-4162-b86f-4a936746fd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d58b13-483b-49f2-a84c-8f937fed0dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62af53a-f054-48c7-87c9-8fbbd5e903df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08295131-04bb-41f8-8d31-f98d8fc66f2d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92838e3a-64ee-45d7-b0bd-c9c2023d9e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e5cb56-33f7-45df-9585-da13d2ec804c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca473be9-12f7-400c-ad67-5033aeaca73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf90d14-0bf2-4dcd-9de0-d93784887c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c372b23-fb10-4747-8a59-be3a7bc0eb1f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b59b71-0bdf-4bb3-8021-1d775ba0a833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1c70e21-2c14-465b-b6c6-0ece955b9f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1871731-227f-4a4c-af9e-83532c72ec39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a63f72d-d753-4fa1-ba2f-4bef6213f3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc5f42b-b02e-4f82-a560-c8947037f334",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d158a-fd6f-4054-b6b9-575ea4aae07c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b699c59-e362-4729-87bd-ec26442dfaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934b5141-fbaf-41d7-9a72-d2aa2da70b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0124094-a955-4baa-b9db-f678210a9b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15422f07-67a1-4e95-847b-ca27fc96c69a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fa0750-4bf5-488f-8006-077e63e0f897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6302f7e4-4857-4bb1-bf8d-22581b453ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbc8834-fc75-4fa9-86fd-d34fa18ffca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26329a2-9707-48a4-b5b8-cabbc4028200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0151b44f-24fa-4d68-ae09-476870fc54b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ac92d7-babd-4ab4-a7a4-7209d2a9a5fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fea5c05-6724-40c1-98c7-3bd713ee2043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36227129-0e63-4ad7-8409-80468a862582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187ddf7f-690f-46b8-a8f5-0d91aa803be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba37425-4b33-4b43-b497-a0cf0edc6a26",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c11f7f-2529-4238-b030-6649500f9da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0564ead9-58aa-4dd6-956e-72cebab33d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5da4351-e4d8-4a06-b7c1-7c7e04dac8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ca24a6-e9d0-4443-99fe-e96e519b0107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2609a68-8dc0-4e21-91f7-ecc17aa4bbe3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8c5772-5fa4-4b9c-a90b-e6c97f0e0832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e11e6d-3836-488b-9689-0aa16d8b5320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4ebd01-a953-4012-9567-4485db1ecc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0363dd8d-73cd-4fe1-9cd6-0effcf4c80bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eccc629-e842-4839-8345-e750bc11fe5b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c9771b-67da-49e1-b88c-1a1723dc58a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52745186-0fda-4fe4-909a-76197982ab9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22765b08-7a53-4a8d-aa31-767219afefc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d3dd5e-abe5-4e3a-9b59-d647ee2a216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3285bbe5-4ea9-4ba5-92ae-034e427f43f3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abde580-15ae-4209-a690-d95471d231bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e688d8c-bffb-418b-a9cf-372283d0ea61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b7c50-8a32-4f73-b5a0-93d32885a185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de59ddc-1e7f-4293-9557-41d8e02bf2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdd784-f35a-4721-9cbb-49fb088542dc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e461db-db51-4776-8247-b1ddef676d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff944ff6-a5b5-487e-8de4-160a14617486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941eeab5-74ac-4171-b5dc-ff86101b2798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3957d46f-86d5-477b-a72a-539a30446ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f01598-fdd6-420a-b7a8-41234c2672f7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb85b473-50ce-4319-9e67-8a67cee64770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bbba4d9-2c64-41db-ae1f-036fd4c461f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b8855-143c-4a0c-bc1d-b882ffce3c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013ade06-a159-4aa1-8edd-6cb1b7550fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e4d3f-4c48-43fa-98db-8fe8f10354e7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95063b47-be33-47cd-8271-da32ffbfcbc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0a4b23-20ab-40df-a8ab-f67f1134b022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d91e4f-bae6-4419-84c8-49561c83ae85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6e2218-55af-4326-87f0-72899c07dad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47988d7-97e4-44ef-b825-590ec0fd6c2d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22dfe2f-b0e0-4a21-80b9-cf2b6d781c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413896e1-7ab7-4fd2-945e-f7302399f09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0985b6d9-b57a-4388-9c7b-ff176a1689d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971ff094-fc17-4c53-acec-56677a7acf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69892f11-90c2-42b3-ab8c-8487e10744a3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dafad7-fb3e-47ad-b273-1382f905a101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b097944-9483-425a-9ee1-f26b57141130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad10f81-b4b9-424f-b840-bcfe95e8e94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5367b045-493c-4d0b-9931-d2707bf4cdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d5a4a5-cd84-450c-a516-d2d2dfaa0854",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f2b2e-24a7-498d-8e18-82c908fb2812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc92b6c-0355-4b30-946f-2c5f468f8d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87de79de-1d81-4ae7-86f9-4a6859c6610f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c3f028-cc3c-41e8-adfa-961413ebace6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cc48a9-58cf-481a-89de-dfbe83602c4f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87428e9c-226e-4392-bf33-eebcbac0f56f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593487c3-cbb5-4afe-bf5f-4d648744854b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e783f-5344-4f31-a350-ab1fa6ab5f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d3db20-1a0a-4b96-bf83-e7d52473a739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c62a35d-0d70-4598-8ab1-17eafc88bae4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965485f8-62ba-4008-a4bf-e7950435429f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35af0582-448c-4118-8498-e3594fd28945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086579dd-c418-4b28-a811-5dcb59d8be35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e810652a-3683-49df-a260-0a60dbc6d5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b211fc69-ba60-4222-a823-555a99fa99de",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042dfa18-0045-4186-878e-05fa7aa11e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95da40ae-702f-4e87-a879-05b771c3d16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91016129-85d0-4e76-9638-95197e0e82ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053ba2d5-767b-47c3-a86f-01e38d83f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcff749-c164-48da-9e2f-5121fb99d88d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b95bb77-ad4c-4891-aa47-b211c650ffde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de930743-18f0-443e-b2f9-7fe2ef89002c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbee55a6-5d5d-40bb-acdc-011355fbadeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea2080d-8e6c-45da-b086-694acd004a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a816d784-b9c3-4f30-aed3-0edd06bbf44c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7221216b-54bf-432e-bcda-2e5440b45489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201a4ce8-6078-4dd9-9acf-0a6fd474275a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53a432e-7963-47f6-bae6-2f9d9742ae77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3425a2f-d7c7-4d93-bcf5-e7513a64708a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34952e6f-4b0b-4b02-b2fb-9ee7572f938f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afbaa62-1730-4690-8296-a7c8d41c4c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723d44d5-c452-4702-80c7-a15100abdcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84bca69-1dd4-48b2-aef1-953cc67c213b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd62c5e-fd13-41f0-bad2-c896c455d694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdc7965-f7a8-4d86-8f78-1faf09151e5c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dc89f2-478c-4da0-ae0f-9b973cd424b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a07e4e-da85-445f-a4f3-d3b99734be27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380695f0-a358-4a20-bdd5-19a069c392b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f1cef3-0a7f-4152-8284-cbc1481e3549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d04303-3331-4091-9095-529943ff2283",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef30012-a8fb-4a02-a621-49b8ae23dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba906b0-19a1-490f-87a7-209b8ed8fbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2150ad-da93-4e81-b413-d364eabd81fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d6442e-797e-49c3-89b7-d6a3e7333fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049a4ef2-1e4e-4192-be3b-47055097383d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6891e2d9-c321-46a0-9711-997c4bbdbb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0a4622-7735-4371-829f-085b0accf938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda4ed0-66ad-4334-8ea8-dd4e376c01b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3394b17a-a9ed-4fca-a0ea-61438ce1f719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3fd704-75e3-4d6a-8aba-3194c4670933",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da038c9d-c094-4e33-a31a-512d238bb206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb3b7c0-328c-48d1-8373-f080cb06c431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f69dcd-34d4-4efd-90f8-1bae60daabd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8110b9e-cb1a-4408-80f6-bd129958f976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa2b5c6-c979-4ff8-adff-7bf3c1cc6d75",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0028b6a9-f297-4f31-8eb2-137c1d3e82f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff8d90e-361c-429f-a96a-0f0d3c2a2f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0f63c0-a3c4-4732-a2ed-44e035336e4f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89506f48-765e-4506-93d5-8fe66b7edc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559427d-ef8f-4ce2-ac31-2d140d278304",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3c8691-e048-4478-893b-a5be300e72e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f25670-0506-43f4-9b7b-da291e652926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bbb28d-94e6-4f5b-9877-7b19884719ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc63c1e-5444-4da5-bb2b-9070b8129fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03b64b7-8478-4b39-bf89-1191668f213c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f8e1c0-ce1d-422c-bdbd-49eedfd8f57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64888662-a4a9-492a-a170-385a12439801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c87a2-d113-4abf-bf81-76cbd27eb4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61014b7b-bf7e-4515-9b99-233e812db333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafbaa3f-c60b-4ac3-8503-242917eef09a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3da2890-d91f-402a-9ea0-0e5e6881f090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74c3acb-dba2-4fab-b5c6-29b24f7cf224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a14992c-435b-4eea-99cc-a8f6d970f8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb9581f-3076-45ae-8a61-9c1327cceec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449af9f1-7966-4d3c-b0dd-5777124078f1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7ea0ff-bfa5-4c5f-8f10-d7b0ad3048da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c09864b-4a04-47b9-b1b4-200612fd7c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e59308-8579-4771-b925-84f7cfd0efd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ef31df-ad07-4ecd-9acc-b146e1b237f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb710f8-847c-41c9-8983-aa4c44d0bb3b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d535b6a2-18df-44aa-9034-648e032b6c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be70fc11-e50f-42b0-87ee-08d876eec4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795debaa-6381-46ef-8934-5606bcc8eb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc691247-26e8-4e64-a367-6e669e1e15fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f34553-8b54-4dfd-a89d-29335ee7a444",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1daa2d-bd14-41e7-9bca-520b91ac254f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024dd463-3402-4922-a15e-4545cf3bb6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1fc0c6-2ff1-4fdf-8ebe-1346b57f3c68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea624bde-8ffd-4b70-b48f-b1c6328ee24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33d9b03-debd-416a-935d-a3c0f6aa6ab5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aca9542-4eea-409e-9725-e2c95d3aa237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf15fe1-6dfa-42ee-9eb4-fe20ac5735b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc69e351-60bc-4536-b5b9-1ca59cb7aad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba285780-4353-4154-9412-341ed64a1c78"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f4acfe5-a2ff-408b-80e0-894d316bfcfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a644f2da-59ba-49c5-a812-203ef554d5c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0f5a9de-945b-4d54-9e52-6e7e04032b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3784ed7a-c051-46a4-9dd3-dbb918ee8be6"
                    }
                  }
                ]
              },
              {
                "id": "6358ddaa-3749-436b-809e-9ecfaa221f52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ba673b5-aecc-40c4-a90e-4955ddc1eb2d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9795663-e473-45c2-b2bf-b17454f22f63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4680672f-95cc-4bbb-b3a7-b51faa4fb189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e171b0e-2505-4188-86a3-3a176a1310a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3844604a-d101-49b3-b617-4293f7a0e2c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c4890e4-5964-4bdb-81ff-66974bb77505",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b07cba8-541e-448f-b680-5b7f563a9fb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f74928e7-e276-44f9-a93f-85867268a771",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b738f1dc-9c6f-45a4-85d8-44a274c9c69e"
                    }
                  }
                ]
              },
              {
                "id": "e7d81a1f-c5a4-4cff-83b8-74ea5d8d8087",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0c478a9a-36dc-449e-9e82-092e205f50a0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb4789a-7349-412c-a0fc-983d261db4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f049cc07-a913-4f4a-82d7-f68b85f738a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91926a40-0dc3-4519-9139-1c61d81cb8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117d0e6a-9688-41ac-9a8a-3f27998f3791"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6193dc1b-f0bd-4014-af25-73e08ad653c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40b1b1a2-bc04-4278-bdf1-6e2a18f6a379",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b99c866-246e-4ec1-a814-f23597488caf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "238e74d8-98d4-4f3b-9c9b-81e4c366d2f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3198db8-40ee-4985-8d73-22e50dae7abc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d07cb9d2-fbbe-4cc3-aa8a-3366143589a3"
                    }
                  }
                ]
              },
              {
                "id": "e1ecac83-9e77-4376-893e-3a517922c840",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73a19554-5a28-46cc-b6ac-6f2327b47fa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "64b2cc9d-a110-487d-bb27-744e890ef251"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52bbad94-2648-4151-a895-4b5dedd440e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a98c696-767f-4529-aeec-e1ffee0ced39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1cb3f0a-e6c5-490b-8c41-6ec9905ff77e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d920ec77-938d-4b77-b68c-8c9e00d89d30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "645e075b-9aeb-429d-9209-5065a3099dc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31b9a7ad-6932-430e-8e87-271a29dd4530"
            }
          }
        ]
      },
      {
        "id": "45cd6046-676e-4cff-b0d0-5f73c9286956",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "14fea142-fc92-465d-a935-e7d8727c9c5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cba60ca-d931-49ae-86f8-2a9658a0b9c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24c392c8-5a5e-4b4c-bba3-3f0e34681b63",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356f3e1c-5a08-431a-8ee1-10dcd46b5233",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4dd6d436-c0c7-4592-b66d-1043decb1ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a297c04-fcd8-4906-ae65-2fd8d47d5992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50a17c7f-bbb6-4180-8c59-93b1dce8bfc4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab2a9d0-faae-4e52-bb51-52e6207755e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f868fb0-8afb-402f-b030-47326cff25c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1e5c928-0b2f-47c0-be39-3ec146205720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "039790f7-f552-4785-9ad8-0395c0a43b51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c6772af-6884-411f-b312-0c67a80d4d6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7b40ae35-e59e-4120-9f2d-e7fc7f2e38e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e705959-03df-4580-949d-3464d7e7dd5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "205563ee-d05e-499f-a249-53eeda610460"
            }
          }
        ]
      },
      {
        "id": "4d3d7e6f-7121-4279-b5a5-bff0ae02ec19",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1635a896-fdef-4c81-9f5c-a350d5174546",
            "name": "Negative Testing",
            "item": [
              {
                "id": "490e8e32-47ea-4894-9f12-453549b82510",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "741c9227-2209-4876-bd4b-1f005fbaaccf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e763e-a9d8-4c1a-b9a4-f65be4bb8f74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dba1c731-6864-4ff3-a45d-fc5d91737f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d77c5d1-159e-4be2-b894-6f3a06244203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adb5248e-c3c4-4305-89ea-1d41058b65bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b293a7d3-11fb-4e4d-8486-dcc3a1701227",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3dde55b-cc4f-496e-bc13-0ece92ae0e4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26dcbe39-a9c5-44e9-baea-6954598577a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15be6657-2ce9-4209-ae9c-b49e85e8a001"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "092775f9-12c3-41ec-ab8e-25524a9f6c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "956d853a-ec04-41f7-9637-c838184b160f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12dcb0b0-1738-4aef-a4c3-49f14e42f99d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35cdab73-1ba2-4b42-a28b-c20d4a69ed82"
            }
          }
        ]
      },
      {
        "id": "78b31277-54de-45fc-bbe2-70bfd52ff4b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5f495d83-9c67-46a8-8b94-d40308f81216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c33142ac-2a7f-4314-9427-96eb57c502a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e87811b4-0330-46d7-ad7f-93f25ad55e90",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2ae5ad-8ac2-4e6c-a3f1-70d71f89afb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a3cb7dc-3f82-4470-b63f-3444c1ad3b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c7d6f-94a0-4d7c-87cf-9273e5bbd102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25f86d0d-b7af-4d22-bff5-de8f1bd4a6b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32fa15b8-a471-478f-ae14-0b71abf3d0cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aae11d2-090e-42f4-a4e8-9eae24eb38e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc01daee-465f-4182-af90-18d8ca9504d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0aeac51-3a0a-4eb6-a75a-8dbee33266cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ece9e35a-34ca-497b-8b4c-2cc16957c098",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "019a6a6e-b246-41f9-b675-ef4fe2be7032"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08261b9c-71ce-4ecd-8359-f9dc16987c51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e24b2f97-79c5-4e8c-b797-56925619d3dc"
            }
          }
        ]
      },
      {
        "id": "808a05d2-8827-46a0-86c5-d411c673c298",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45be2c4f-c107-4a21-8491-ecc1db6e2553",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9a62f71-13dd-482d-83d0-ca5bc48e3f7e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "773aaa64-c859-49a8-92ee-31d153330bf6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5323c878-a9d9-4513-8ae1-e54d8f313fda",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34383801-390a-432d-9680-a516ce2b26da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 248.07394366197173,
      "responseMin": 6,
      "responseMax": 7541,
      "responseSd": 930.103718749111,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690159300006,
      "completed": 1690159382425
    },
    "executions": [
      {
        "id": "fa5318de-811b-4725-949a-ed2bbefa72ba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "06365115-0110-47c0-8485-d05afe1cc6f4",
          "httpRequestId": "13f473ba-2ad9-4450-b14c-f557c113d2c9"
        },
        "item": {
          "id": "fa5318de-811b-4725-949a-ed2bbefa72ba",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "56389258-8054-4a6d-bdd3-cfde8c3aa102",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "2ee5f5eb-c5e5-4708-89cc-bc02a58cb511",
        "cursor": {
          "ref": "abce2022-3f2c-4ac4-a158-3e8354875045",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "247fe342-f227-45a9-b8e1-19b34142686e"
        },
        "item": {
          "id": "2ee5f5eb-c5e5-4708-89cc-bc02a58cb511",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "765ee509-2a83-4f16-8689-3b6064cc2e6c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5a296f87-938b-4053-9fb1-43710e30a527",
        "cursor": {
          "ref": "667aa962-eb08-4691-a0a3-dfddb60d7a06",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "924d6bd9-1983-4f77-a8e5-80124deea404"
        },
        "item": {
          "id": "5a296f87-938b-4053-9fb1-43710e30a527",
          "name": "did_json"
        },
        "response": {
          "id": "e52ea176-e274-4e0d-a9ee-0260b798129a",
          "status": "OK",
          "code": 200,
          "responseTime": 506,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aa7af7-24e6-4abf-ad49-55c87466022c",
        "cursor": {
          "ref": "316ef723-f007-47e4-9488-98247ddfae40",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0f53a11-df40-4c95-8462-4317aa659f9f"
        },
        "item": {
          "id": "58aa7af7-24e6-4abf-ad49-55c87466022c",
          "name": "did:invalid"
        },
        "response": {
          "id": "94a018ca-7f74-4988-a0c5-c7f4e4f484c2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1172,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aa7af7-24e6-4abf-ad49-55c87466022c",
        "cursor": {
          "ref": "316ef723-f007-47e4-9488-98247ddfae40",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0f53a11-df40-4c95-8462-4317aa659f9f"
        },
        "item": {
          "id": "58aa7af7-24e6-4abf-ad49-55c87466022c",
          "name": "did:invalid"
        },
        "response": {
          "id": "94a018ca-7f74-4988-a0c5-c7f4e4f484c2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1172,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d7d8b1-d3e2-4c41-9d7e-6a92060b8407",
        "cursor": {
          "ref": "1bf8e561-8e6f-46af-ac71-ce368ec9f3a8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "97e4e4fc-79bc-4634-b4c0-afb80aec096a"
        },
        "item": {
          "id": "14d7d8b1-d3e2-4c41-9d7e-6a92060b8407",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "574209c0-ac52-4e14-b460-75f13bf5ae33",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081cf92a-7ae1-4051-b1b9-e1df93be5a5d",
        "cursor": {
          "ref": "b5a222c4-a67e-4532-8b3e-3fd68fae00ee",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7477923b-9c41-4bc1-80a8-b9f628f5171d"
        },
        "item": {
          "id": "081cf92a-7ae1-4051-b1b9-e1df93be5a5d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0573e7f9-6035-4859-93e1-1ff3e65ef064",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918aace9-7a82-4709-8346-7626c7393a85",
        "cursor": {
          "ref": "19d4db0c-2f60-4e86-b426-f68b810b21b9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5c9fa4f6-f577-4c84-a319-ac2986a699de"
        },
        "item": {
          "id": "918aace9-7a82-4709-8346-7626c7393a85",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e682e6fe-f718-4cdd-b993-fdf8734ff924",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d74eec8-fdde-47ef-bdee-f0f4c162b833",
        "cursor": {
          "ref": "27663f21-1365-49eb-8eb4-03bfcf8ad1a9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0af97db5-e00e-496a-a2e8-f41da484b6c5"
        },
        "item": {
          "id": "9d74eec8-fdde-47ef-bdee-f0f4c162b833",
          "name": "identifiers"
        },
        "response": {
          "id": "fb5e3db8-adb6-4305-a3f1-5a47536ec6f5",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19b4d5-5582-4d9c-9711-0fca4ce1a72b",
        "cursor": {
          "ref": "a4e67afa-4a5d-436c-8764-45159dba107e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "82047e24-6bad-489f-915e-663aad09ddeb"
        },
        "item": {
          "id": "5d19b4d5-5582-4d9c-9711-0fca4ce1a72b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "19c90da9-7573-4ce7-a77b-1c58d2444c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8e82fb-9662-477a-9b25-bfdaea9c69be",
        "cursor": {
          "ref": "dd66cab8-26a5-4577-bec0-58463c1d191f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d159f49c-35a0-4dd0-b4ca-c28f63204a76"
        },
        "item": {
          "id": "4d8e82fb-9662-477a-9b25-bfdaea9c69be",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f0dc700e-2329-449e-a302-ac4552a54eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78e2e4b-d047-4081-8d7f-34d780654772",
        "cursor": {
          "ref": "52bdc571-4d8d-450e-bf4d-14bab7b4935b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2f9e9623-109c-4f69-b3c2-fde2ee704b9f"
        },
        "item": {
          "id": "d78e2e4b-d047-4081-8d7f-34d780654772",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "30cf8060-cfd4-4173-89d0-7334c0ef9695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea4bfaa-b348-44a6-9501-f7c80b800fd7",
        "cursor": {
          "ref": "d10a98cd-765c-4965-9865-5f1df2707ef0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65de0324-0b7e-4f25-939c-e2c9550b784e"
        },
        "item": {
          "id": "8ea4bfaa-b348-44a6-9501-f7c80b800fd7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1c79d790-78ca-4fbf-893d-6799ab3c34b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbf67a8-2dfe-421b-afb8-a20cf8763f17",
        "cursor": {
          "ref": "99bcb1ea-137b-47d5-b853-6f452b4fe47f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "372d9416-5815-46f3-8d19-3d3a219b0044"
        },
        "item": {
          "id": "fcbf67a8-2dfe-421b-afb8-a20cf8763f17",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b17bf533-9c4b-4375-96da-bfbf8ca44bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b0aef-85cc-4cd2-b68c-e1b63736c173",
        "cursor": {
          "ref": "076a56cc-9c1c-446f-8080-886bee689520",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d1b80b8e-c258-455a-9630-ee1baf4f739c"
        },
        "item": {
          "id": "417b0aef-85cc-4cd2-b68c-e1b63736c173",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "340e8901-5a3d-40d1-b7e4-34224c44172c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64547bbe-c13e-4746-97ac-8323e4651438",
        "cursor": {
          "ref": "ce21db98-6201-47fe-8ca1-9a53f8e4e6c1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "40c2828b-ccad-4468-94a5-a86f93796c26"
        },
        "item": {
          "id": "64547bbe-c13e-4746-97ac-8323e4651438",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b382536-30fa-43ff-84d0-84b3622f9603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab778b-7e6b-4f22-a56b-636657ed7eb8",
        "cursor": {
          "ref": "ef3b7a07-8ef3-469b-91fb-0d320cad4bf9",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "03e2d46c-c3c3-4438-b5af-86f6b9ca937c"
        },
        "item": {
          "id": "46ab778b-7e6b-4f22-a56b-636657ed7eb8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8d1ebe7c-7260-484a-ad8e-524bc588a2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c7baab-6c65-48da-b7e5-70afaf20559f",
        "cursor": {
          "ref": "b51027ce-f0de-4a6f-901a-115a505f6640",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bda31f55-b5bf-4c25-bcb4-6003431a0df3"
        },
        "item": {
          "id": "35c7baab-6c65-48da-b7e5-70afaf20559f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f8a4c3c8-a328-4e27-9b67-7794babbc605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4432fdf7-837d-41f9-81d5-2186114f6bc4",
        "cursor": {
          "ref": "198029a4-12db-4141-984b-6479637452df",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2a3da359-b915-4101-857e-3fc2c0bfb7a2"
        },
        "item": {
          "id": "4432fdf7-837d-41f9-81d5-2186114f6bc4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "abb457ac-0aad-4266-985b-870f7a6fd1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf6319a-bdc0-43e2-b815-0fff5c88b76c",
        "cursor": {
          "ref": "b58528c5-f4ca-402f-9c5f-ac4830d3afb3",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "de49fc89-3872-4235-b503-9285af9dc0c7"
        },
        "item": {
          "id": "adf6319a-bdc0-43e2-b815-0fff5c88b76c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "34673ddc-6621-4d38-b81d-b4bac8c1c278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4e433a-b48a-4ccc-b8a2-5ff87e40bef4",
        "cursor": {
          "ref": "d9991188-68ce-48c5-91f9-aa12e80d454e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c522de97-7722-41d9-ba03-fad2e295b660"
        },
        "item": {
          "id": "aa4e433a-b48a-4ccc-b8a2-5ff87e40bef4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "29b662e3-8863-4760-9e39-3b5ef3754c89",
          "status": "Created",
          "code": 201,
          "responseTime": 788,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "705c0c91-d7b1-41d5-929c-0d06f7a84b86",
        "cursor": {
          "ref": "d76d0ea3-bd7e-4387-9f7e-00aeb408eeb7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a9503cb5-fa78-47d1-abf6-3e6b656f0ffa"
        },
        "item": {
          "id": "705c0c91-d7b1-41d5-929c-0d06f7a84b86",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "adda9286-a702-4810-b50d-61e12570f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8042ae02-8fe6-4258-8b58-35e0dc8111de",
        "cursor": {
          "ref": "548922d6-8c0c-44ee-8c68-13b31ac24804",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "446b136c-bdba-44b4-8a6b-ad2457db5163"
        },
        "item": {
          "id": "8042ae02-8fe6-4258-8b58-35e0dc8111de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9b8dda0a-b82e-49a5-83e5-0f0553e0bde6",
          "status": "Created",
          "code": 201,
          "responseTime": 6697,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "300206ae-c522-4791-b61e-1d0aec63f85f",
        "cursor": {
          "ref": "be27384e-3e25-48c4-8141-0a4a31debc67",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "54c7e731-5615-4145-810b-623d59976db8"
        },
        "item": {
          "id": "300206ae-c522-4791-b61e-1d0aec63f85f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eaa80087-5ccd-4a13-a50b-f7bf0bac9912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12ed4ea-81d4-43ac-99f6-27fdc47e6498",
        "cursor": {
          "ref": "845e9084-c0a8-4f56-be4b-e8036d7e06fe",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "085f5d82-6fd4-47b7-b300-4f9e82ea295c"
        },
        "item": {
          "id": "a12ed4ea-81d4-43ac-99f6-27fdc47e6498",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9bff20c0-4e22-45b3-8d6b-c16f6dfa5caf",
          "status": "Created",
          "code": 201,
          "responseTime": 3357,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "63d1abc6-8041-43b5-b229-056ab7ebf450",
        "cursor": {
          "ref": "f9fedbda-830a-4a2b-a0c4-3219ff5ad0eb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6a425ce2-6676-411f-a347-65f4bb859a98"
        },
        "item": {
          "id": "63d1abc6-8041-43b5-b229-056ab7ebf450",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6a1372b7-5fa6-4d44-b6f2-9c6e1d8317b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569584f-962b-4973-b184-c10c8130dd58",
        "cursor": {
          "ref": "27a71fac-dfcb-4202-990a-44fa4e71bd60",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c3dc3e77-1698-408c-bd22-4f4b1446b238"
        },
        "item": {
          "id": "9569584f-962b-4973-b184-c10c8130dd58",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f1cd09b8-d35f-4862-b16c-3b792b352a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c210d3-4ad0-4bb5-99ac-cd25ffd3f579",
        "cursor": {
          "ref": "351201a0-029a-452c-8470-41877c899a78",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6cd408ce-3072-47d1-b48d-e93b834b9f55"
        },
        "item": {
          "id": "59c210d3-4ad0-4bb5-99ac-cd25ffd3f579",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9e72272d-48cb-450e-800a-32e04c8b611e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c08dc43-3e88-4279-a554-1c23b17beda7",
        "cursor": {
          "ref": "d809e10b-850a-443e-ae31-526837ab91dd",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ac0edb94-2228-499a-be5a-6643b8a29b0e"
        },
        "item": {
          "id": "4c08dc43-3e88-4279-a554-1c23b17beda7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "228c6faf-2e5b-4e5e-ac84-ad02f31aff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c095fb-3fa8-4a17-8fc1-4a956c2b2db7",
        "cursor": {
          "ref": "a7cb33fe-468f-43a2-b7c9-3d5089c806a1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "68106cb2-8af9-476b-b165-8822d23ec55a"
        },
        "item": {
          "id": "80c095fb-3fa8-4a17-8fc1-4a956c2b2db7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "13d63bb0-c231-4850-91e0-53b231c6d18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc2fd0e-dc19-4d07-9689-7bbb7ba68868",
        "cursor": {
          "ref": "982064f5-4d8c-4a96-88ac-f5aa28dffe6d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "691ad5f6-ddb3-4ca4-b4e8-8ef8f80c521d"
        },
        "item": {
          "id": "0bc2fd0e-dc19-4d07-9689-7bbb7ba68868",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c0a39788-66bb-4e74-b605-5ceae898b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebf4387-c4f0-4159-9d9a-696e280d623c",
        "cursor": {
          "ref": "4c282f10-e2cc-4852-aa32-0a8a1b65e798",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "12016deb-cbc7-43e1-8348-9dd2d80ed647"
        },
        "item": {
          "id": "0ebf4387-c4f0-4159-9d9a-696e280d623c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1e83627e-d81b-4d51-b3c1-5a223b51aeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d8b958-260a-440b-92bb-f8225dc56a0b",
        "cursor": {
          "ref": "b70331b5-0e11-4377-a8ee-b1299bc5ad4c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c516e6ef-794d-40ee-a0a5-f54adcfba52e"
        },
        "item": {
          "id": "84d8b958-260a-440b-92bb-f8225dc56a0b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f7f926f-cffa-4948-97a4-c4a495a4fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8c9ebb-b445-428a-a408-a7790b94438b",
        "cursor": {
          "ref": "285051b2-3a74-4d87-9a7b-66e3100190d4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fed0c37d-8ec3-4a9b-9e0a-97a27d8f41d9"
        },
        "item": {
          "id": "cd8c9ebb-b445-428a-a408-a7790b94438b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c0a4ba46-13fd-4e79-a2e5-c32a2b13b684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238bfa52-fe74-4279-9cd2-129f04a48a49",
        "cursor": {
          "ref": "ac87eff6-fc14-4033-9521-cb1966c93327",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f0da21b7-2c4f-4ddd-b0d1-a5a490c422f5"
        },
        "item": {
          "id": "238bfa52-fe74-4279-9cd2-129f04a48a49",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c14f2bf7-acfe-46e6-9214-b0fe6d4d1fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3f54f8-73f2-405c-94ee-aca448042148",
        "cursor": {
          "ref": "27971653-24d9-4a6e-b18d-6a16ffda2381",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "91d2cc38-06e2-4283-876b-d2c54abb3bba"
        },
        "item": {
          "id": "ae3f54f8-73f2-405c-94ee-aca448042148",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30eecfd4-5314-46bc-8794-3ad63fc3d014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b3288e-60c4-4b5f-bad9-2885bdc7d70c",
        "cursor": {
          "ref": "5b6f94a5-2578-4dcb-b275-05b2b5f01ee6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9092db02-cc44-4075-848a-d7a9ba245662"
        },
        "item": {
          "id": "32b3288e-60c4-4b5f-bad9-2885bdc7d70c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "584ef536-caba-4661-9e71-56c0b7d703b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140d9acb-41e9-439a-9d74-35df9728e13a",
        "cursor": {
          "ref": "6b6811d1-4041-40ae-9cf7-3e72782f402b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7a3e422b-bf4d-45b8-a731-f1c1c071eeec"
        },
        "item": {
          "id": "140d9acb-41e9-439a-9d74-35df9728e13a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "28f6bc24-88d3-4db4-b533-28054a10e11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a94071-567d-491b-b4a5-e7b9a50b072d",
        "cursor": {
          "ref": "b94d9018-fc8a-450f-91aa-658506fec84f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0a1da7c1-c4da-4a81-92ca-0ec3456853b1"
        },
        "item": {
          "id": "08a94071-567d-491b-b4a5-e7b9a50b072d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "be09ccfc-f9c9-4e9c-bf7e-56d5f4f3a5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b4d08-00f2-4236-bf76-9e85b17939c2",
        "cursor": {
          "ref": "0fef560d-efc3-4da3-8321-8a198cffa470",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "47edc34a-6f3c-4440-9ff8-6ec640258556"
        },
        "item": {
          "id": "833b4d08-00f2-4236-bf76-9e85b17939c2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "74651d83-88f2-4b83-91c7-07f09bbadbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5c4bb8-5ad5-4419-bdf9-3b1cc46a18ed",
        "cursor": {
          "ref": "72cef9c9-582d-42c9-aa70-3fc9ac5e9afd",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "27525d8d-c572-440e-bf3e-8790c9f98e14"
        },
        "item": {
          "id": "bc5c4bb8-5ad5-4419-bdf9-3b1cc46a18ed",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0c94c7cc-4f66-4612-a616-67f1a4c53fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0d3939-5f88-43c2-8555-cee76c820700",
        "cursor": {
          "ref": "ffe1571d-aec5-467a-b14c-194f0b5bfe3b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6d89ffd7-d459-4859-a790-013609a38215"
        },
        "item": {
          "id": "1a0d3939-5f88-43c2-8555-cee76c820700",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ef39ab43-e295-42ca-a084-492ad81124e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68301f3c-da58-428a-8ed4-04d95796e4fb",
        "cursor": {
          "ref": "ac251414-629b-404a-8b6d-05927f26b687",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ab0ec9f4-403d-4aff-ac5d-dfdde59ef821"
        },
        "item": {
          "id": "68301f3c-da58-428a-8ed4-04d95796e4fb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "751f2b6b-fc45-47be-95c6-29848fedbab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b24cb4-f4d8-4f04-8bc8-b0d1fbca2483",
        "cursor": {
          "ref": "da843fb7-f8d6-47c4-b049-8e23e5698d3e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e9229b62-7e8a-4e7f-ab84-31c0b08c592a"
        },
        "item": {
          "id": "14b24cb4-f4d8-4f04-8bc8-b0d1fbca2483",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "947c7d26-8eb2-4017-bada-e8d8ab0a15ca",
          "status": "Created",
          "code": 201,
          "responseTime": 2774,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "077991d2-f8da-4094-94eb-6056c5f2b8bf",
        "cursor": {
          "ref": "8ab9a019-659d-4b8c-b897-950212150559",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b732d554-acd3-49a4-aa96-93ebe87bb589"
        },
        "item": {
          "id": "077991d2-f8da-4094-94eb-6056c5f2b8bf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6eba226f-9396-4b13-a3c9-b777d2570e46",
          "status": "Created",
          "code": 201,
          "responseTime": 3513,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "eed7553f-0f0f-4dc9-8e19-fa2f073e846f",
        "cursor": {
          "ref": "f60382e5-c9e0-4610-af06-969d4e8da8f0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cb8b5ee4-e6ee-4629-9432-7891313db5f8"
        },
        "item": {
          "id": "eed7553f-0f0f-4dc9-8e19-fa2f073e846f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2f0552b1-4dc7-42c7-b752-473a840eb5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e965d1-074e-43aa-8612-f888c378ea32",
        "cursor": {
          "ref": "09b66e77-21cb-4534-b50e-c27c431eb509",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "710a34be-3314-4efb-814c-e4aafcd0aa8c"
        },
        "item": {
          "id": "49e965d1-074e-43aa-8612-f888c378ea32",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ee771da7-3569-4b09-bf61-35a5623973d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0decbfa8-b0ef-4a2e-9e6a-356536274a72",
        "cursor": {
          "ref": "32a4d32b-7f3d-4561-b880-df282f4f8b05",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8e6b73ae-199b-47ce-a9d0-3855a1ca6b78"
        },
        "item": {
          "id": "0decbfa8-b0ef-4a2e-9e6a-356536274a72",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "80562c65-5ca5-41ac-8f7c-c3250e2f7c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04626f71-95ae-4da6-8c2d-6f14edf9aea8",
        "cursor": {
          "ref": "d34b9f43-04de-478f-9679-1e7437c1cb8f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a4920b02-1510-4b27-ab21-6f3a5a677794"
        },
        "item": {
          "id": "04626f71-95ae-4da6-8c2d-6f14edf9aea8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5abcd066-4dbe-4989-9e90-de5599e36cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86acade6-103e-49f2-83ae-5d6094ccb296",
        "cursor": {
          "ref": "45a183b1-0407-45fb-866f-54b6888faeaf",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "05ebfa62-2768-4c12-a945-096928e1f887"
        },
        "item": {
          "id": "86acade6-103e-49f2-83ae-5d6094ccb296",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "92b98d68-9183-48f9-b65d-bd858e19568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759dbfd-4334-4477-ad30-cd86198d3011",
        "cursor": {
          "ref": "0eab12ef-3ce0-4f97-80b9-6699b3d41674",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3f50a5ba-9e6a-423f-bcf2-25a1e18f8126"
        },
        "item": {
          "id": "9759dbfd-4334-4477-ad30-cd86198d3011",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9ebeec5c-7791-4136-834d-5bdb58940058",
          "status": "Created",
          "code": 201,
          "responseTime": 2785,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "8ccc9c43-b78b-4f1a-b759-7e365e4725a6",
        "cursor": {
          "ref": "ed37fadb-d874-4b14-a127-ba7955a55d7c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c7523c92-70dc-4212-b1f2-ce97219a5c73"
        },
        "item": {
          "id": "8ccc9c43-b78b-4f1a-b759-7e365e4725a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "21f00261-0a76-48a0-a42a-67c2d910c78e",
          "status": "Created",
          "code": 201,
          "responseTime": 3746,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "b96530f5-cac1-40e4-ad4c-fa07f4dd2ddd",
        "cursor": {
          "ref": "7804d714-4c2a-472f-a2e9-ed495878dabc",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "703203c9-3f87-46ad-a206-bb813ff1bcbe"
        },
        "item": {
          "id": "b96530f5-cac1-40e4-ad4c-fa07f4dd2ddd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fffbb905-dd20-46a4-96aa-37807c46c031",
          "status": "Created",
          "code": 201,
          "responseTime": 7333,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "b81fc47b-49ef-4a23-934f-39d82b5ca428",
        "cursor": {
          "ref": "8255a7c1-35bf-496e-8844-aa5fbb301f5d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f10b691-c528-45f8-bc79-156d58a6f215"
        },
        "item": {
          "id": "b81fc47b-49ef-4a23-934f-39d82b5ca428",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "85175c13-53a1-4782-9c9b-5f65b358dc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afab838-872c-433b-a1ba-cce7670acac1",
        "cursor": {
          "ref": "96197116-c71b-4f47-b718-0dc5ca72342b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "54ae66c9-3cb6-4407-a8e3-5017f641fb98"
        },
        "item": {
          "id": "6afab838-872c-433b-a1ba-cce7670acac1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c1fa6a8a-10b8-4f1e-a151-9d03a6a0455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1279f1d-6f01-459c-a60c-4fb58f7cfe11",
        "cursor": {
          "ref": "f64f0ee6-5de8-44d2-a420-3cac5767bef8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0551d69b-f4bc-4a61-abd3-5eb9ab9731ae"
        },
        "item": {
          "id": "c1279f1d-6f01-459c-a60c-4fb58f7cfe11",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "827ae7e5-12f2-47f1-8bc8-03547163f2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8117fe1-0784-4881-8b1c-769c6fc91938",
        "cursor": {
          "ref": "aea428c2-99eb-4c5d-b502-898f14e4960f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "03c69e5e-31ff-4f39-a800-5e48f26397c8"
        },
        "item": {
          "id": "c8117fe1-0784-4881-8b1c-769c6fc91938",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7712d232-df65-4555-84b2-1f0bc6968e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c663f1dc-e7e1-48ec-a8bd-79a834bcca63",
        "cursor": {
          "ref": "330de4b6-14a8-4ef3-a068-caaaf9fa11b0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "69cc70b7-3a4c-4b1e-b586-0956d7ac84e3"
        },
        "item": {
          "id": "c663f1dc-e7e1-48ec-a8bd-79a834bcca63",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "41deb4d1-1a2e-4a5e-9aca-3f25afac63c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8345e5-d6c1-47e9-aac7-61cbccbbd435",
        "cursor": {
          "ref": "6e50a8d2-f44a-4ac3-960e-cf080321fe4e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "63ca2c50-489a-4460-9c3b-4b3b52e162c0"
        },
        "item": {
          "id": "4b8345e5-d6c1-47e9-aac7-61cbccbbd435",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e1682005-e895-4328-912d-1d6bd9072c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dcc41c-ae34-4101-894e-c48a7251614b",
        "cursor": {
          "ref": "1350adb0-7641-4d4d-a78c-e0107a362bd1",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5629da78-c42b-48d9-8b58-bbfdbd9a6dcf"
        },
        "item": {
          "id": "e2dcc41c-ae34-4101-894e-c48a7251614b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "08f86a50-02e3-46bf-b09a-adba56e4eb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b24cbb1-a97e-49e0-9da5-f0f07266fa89",
        "cursor": {
          "ref": "8b69714d-d5dd-4af6-b097-c6043974b31e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "459926f1-e8c0-4b82-9c03-8600d1ef7bcf"
        },
        "item": {
          "id": "6b24cbb1-a97e-49e0-9da5-f0f07266fa89",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "80e7a09f-f807-4c0a-8570-e5c065557eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0f7e68-a509-4b75-b809-9985e542afaa",
        "cursor": {
          "ref": "27b13b5e-fef4-409d-aaee-4dcbd4dc8d01",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e9a1e7e8-5c7e-4149-9cec-c06da75ca2d5"
        },
        "item": {
          "id": "ba0f7e68-a509-4b75-b809-9985e542afaa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c39bd502-fa97-46cb-9919-e2b77427b1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4f3826-0d78-499b-a525-ec16103f5444",
        "cursor": {
          "ref": "6fd38c04-8c13-4fad-a136-fa683115d608",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e23686d8-676c-41cb-9f6d-a93f1bfb65be"
        },
        "item": {
          "id": "ff4f3826-0d78-499b-a525-ec16103f5444",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1b4b8eb3-72ec-4fe5-8ff0-dd80099d2e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b825417-2b73-4465-ad0f-f905eb3c35f0",
        "cursor": {
          "ref": "d4c3fab4-0454-4a4f-a424-4ea08e88f7be",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fe36ba5a-2ac7-4a55-b4cc-a4fee8966061"
        },
        "item": {
          "id": "7b825417-2b73-4465-ad0f-f905eb3c35f0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "098a0b63-5b65-4b97-89f4-7fe5148f5d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3269a647-d0e6-4404-9361-81b06c4cc373",
        "cursor": {
          "ref": "5dc038c2-c75f-4762-8226-7d721686c2d3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6bc2a71c-503d-4d07-8d9c-d58638c62245"
        },
        "item": {
          "id": "3269a647-d0e6-4404-9361-81b06c4cc373",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "24c61acb-b05e-405d-81fd-6568137f353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b53fb8d-a786-4efa-b914-5f549f550ac7",
        "cursor": {
          "ref": "be707e7c-272b-4bcc-829d-efa099bbc254",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "98a9df32-0d6e-499e-bbd1-f66338a5935a"
        },
        "item": {
          "id": "9b53fb8d-a786-4efa-b914-5f549f550ac7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3e24e0fe-2bd3-43af-a6aa-c5ca2c9ae301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5814f6c-af75-4c3e-a426-73fb6d5a1d50",
        "cursor": {
          "ref": "69dcd284-16ae-4e00-a6fc-8c650f28f069",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "99724013-1bad-436c-a46a-c02cf189406e"
        },
        "item": {
          "id": "c5814f6c-af75-4c3e-a426-73fb6d5a1d50",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bf2510f8-1fef-4a7f-ae52-91fae5adc527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd3dfbc-89cf-4719-b5b8-4f083b543300",
        "cursor": {
          "ref": "34c15b14-79ff-40b4-8373-31066a6f49ea",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "89f5eda0-dc3a-4c42-9cec-229eb83044d5"
        },
        "item": {
          "id": "8dd3dfbc-89cf-4719-b5b8-4f083b543300",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e8c3b31e-217d-4158-ac22-8214ee37b2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826195b5-29a2-4a3d-8f9b-5eed7b96237b",
        "cursor": {
          "ref": "be7b64e5-4a15-46fe-9d9d-71b6d81db5fa",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7ded3ac6-b913-45b1-8c15-8d1475e03ff6"
        },
        "item": {
          "id": "826195b5-29a2-4a3d-8f9b-5eed7b96237b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8e38bc69-060d-439a-9255-a89ad921412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62908930-72e7-4dd8-996e-481dd2770a53",
        "cursor": {
          "ref": "7d91391b-43d2-4193-8f94-889799e1f37e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "30d4b798-8f05-4bbc-a2e0-36ce2e2c0930"
        },
        "item": {
          "id": "62908930-72e7-4dd8-996e-481dd2770a53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "87f8a0f5-d787-4e65-9803-1b112737d8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9cf293-b1fa-4172-9d1b-48afc62a7f32",
        "cursor": {
          "ref": "f320bc9d-9c98-47a1-a9f2-1d51c0c27a01",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d43caf3-b93f-40dd-85e6-94ed049fb346"
        },
        "item": {
          "id": "bb9cf293-b1fa-4172-9d1b-48afc62a7f32",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d73d8765-91e0-4eb1-94e5-1483510921a8",
          "status": "Created",
          "code": 201,
          "responseTime": 7541,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "82e9476e-345a-460e-a2fa-7afd6547a3f0",
        "cursor": {
          "ref": "d2cec70a-957d-4fa2-9463-847d992c7dc1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "76a83f65-9be0-4603-be8c-9f1b100db41b"
        },
        "item": {
          "id": "82e9476e-345a-460e-a2fa-7afd6547a3f0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "95c21a1c-60b8-4fd8-ade0-2b601db89292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4742fa0f-afd2-4a2d-b10e-c89a165603ae",
        "cursor": {
          "ref": "d846edf0-064d-4c2f-9dd4-f52f0d56bdfc",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a556d30e-7390-4ace-867f-db1901263b45"
        },
        "item": {
          "id": "4742fa0f-afd2-4a2d-b10e-c89a165603ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "66e73df6-26e7-4dfc-b9d4-12ea5be2dea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9294dfb9-9bdb-4c3d-8a14-40c688c98587",
        "cursor": {
          "ref": "23c49672-499f-4659-9c36-158b19ff9735",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c32c9a4a-3c09-4e4e-a688-fb20c20d692a"
        },
        "item": {
          "id": "9294dfb9-9bdb-4c3d-8a14-40c688c98587",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "59acb729-6ee1-4da5-b0c0-27422c2bd72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5862fc-0025-4c8d-99e4-0dc1a6a3b2d6",
        "cursor": {
          "ref": "6392e4be-013f-45b7-b488-f21176b2d65d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b6e16870-002b-42d9-89af-3f1607b45f95"
        },
        "item": {
          "id": "dd5862fc-0025-4c8d-99e4-0dc1a6a3b2d6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bbb40375-9fd9-4ef6-9463-af9551fd71ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a8b546-1555-4ef3-bd95-1791837741f1",
        "cursor": {
          "ref": "9fb5cdc8-b0df-4e7d-8966-d7d8fb465282",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5cd6ac5c-2236-492e-a803-431ecbd0170a"
        },
        "item": {
          "id": "a9a8b546-1555-4ef3-bd95-1791837741f1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7802b7be-ba97-466b-89a1-f647bde57ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2587cfa8-bd59-4a35-9e8d-4412506a06b9",
        "cursor": {
          "ref": "85493ddc-f465-4be3-84b8-4d9204d96e28",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8bd1e5cf-64a4-4f06-bd01-11a73bcf2340"
        },
        "item": {
          "id": "2587cfa8-bd59-4a35-9e8d-4412506a06b9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ab1e6d49-64bb-4b7d-b11f-16be1bbe73ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c834b042-2d21-4374-8f17-1998dd8a276b",
        "cursor": {
          "ref": "576067cb-54f3-4377-b01a-af4ffaa1a38c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d157d2bf-c592-4af5-bd36-ac99d13e2f83"
        },
        "item": {
          "id": "c834b042-2d21-4374-8f17-1998dd8a276b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a22375dd-949c-48ac-9821-df9177e858fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74bdee5-99be-4c5e-989d-fef7b0c862a5",
        "cursor": {
          "ref": "b6450cf1-1794-4f4e-84ec-f84c1426c9a9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7bd90fd0-cd90-44dc-8732-4c63d04419ba"
        },
        "item": {
          "id": "d74bdee5-99be-4c5e-989d-fef7b0c862a5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a1f54342-5937-4793-bf13-41db1ecd04fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e157e55a-047e-46c9-a94c-660ec8f3e99f",
        "cursor": {
          "ref": "7aaeddb7-99f6-4576-8ade-bfadaac6cf5b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f1a1ae76-1e7b-47d3-b7cc-cce9ca08d30b"
        },
        "item": {
          "id": "e157e55a-047e-46c9-a94c-660ec8f3e99f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b6bc6591-5630-4d6b-a008-e40070865fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e768381-8206-4490-96e2-b71f1cf7e52a",
        "cursor": {
          "ref": "3d4d4258-37c1-4fe7-b8ed-9dcdb0918ac4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9fee85eb-8633-450f-adc8-d7d0ab5c1f20"
        },
        "item": {
          "id": "9e768381-8206-4490-96e2-b71f1cf7e52a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "657dda8b-3cc3-4812-8f43-a2b2bd559023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572d0130-a94b-4657-8b1a-29482f1f2427",
        "cursor": {
          "ref": "8dbd59a2-ba13-46ac-a48b-e9dab26a17b7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7a415984-afcb-45ac-9556-66471da5ce58"
        },
        "item": {
          "id": "572d0130-a94b-4657-8b1a-29482f1f2427",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "46d14213-66d3-41c6-a676-476780398931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa4cfce-55d8-4e59-9a14-c1bd38576db3",
        "cursor": {
          "ref": "14cac237-6903-4b7e-a9d6-95086c2bdadd",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1c4c4770-4fd5-4e64-aeb0-ec4b4e0fd79d"
        },
        "item": {
          "id": "8fa4cfce-55d8-4e59-9a14-c1bd38576db3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12a9f39a-b401-4b13-987c-39ab6465a703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbf5718-00fd-466d-b98b-0ebdfa90d6ec",
        "cursor": {
          "ref": "1514a045-ba32-4170-84b9-1da3a18ce19e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6db3c05f-b8d3-47b2-bff5-3402595132fb"
        },
        "item": {
          "id": "0cbf5718-00fd-466d-b98b-0ebdfa90d6ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ddb64265-bf9b-4487-98b5-4546aec10605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece63d4d-4aa6-4248-855a-ece87ee802ab",
        "cursor": {
          "ref": "3c8efbd8-5bfe-4dae-98e5-0901d740fba3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9e0a7fe1-39ff-4176-8136-8364dc138e29"
        },
        "item": {
          "id": "ece63d4d-4aa6-4248-855a-ece87ee802ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0556a763-cc23-407b-b99b-af6ee40748e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c70adfb-77b4-4170-bb43-18827f4b54ba",
        "cursor": {
          "ref": "58a96680-388a-4a3e-97fa-b00dfa293dbf",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "87f725ff-22c2-4243-a9cf-53a05066dcb3"
        },
        "item": {
          "id": "0c70adfb-77b4-4170-bb43-18827f4b54ba",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0c4800b7-6e44-4b18-8358-7182f1d20257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027198f1-c7b7-41ad-af26-2b2880418104",
        "cursor": {
          "ref": "3ea94daf-5df4-454b-b0bf-4c2e990a9c87",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5029384e-47da-4f89-8bfe-649d7af0b0c5"
        },
        "item": {
          "id": "027198f1-c7b7-41ad-af26-2b2880418104",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d4892f9e-e995-43cc-b926-8ce426d895c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c6b9f0-969a-4a36-8f73-c9c640ed78bd",
        "cursor": {
          "ref": "3dad8154-39cd-478b-a919-df1a7a1c4124",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "07b990b5-fd79-4e7e-875c-823d6bda5053"
        },
        "item": {
          "id": "e5c6b9f0-969a-4a36-8f73-c9c640ed78bd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "49b19eb3-be29-40d0-b059-a2f490c3750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f353ac9-b1a5-4a65-b166-2aa8f570d5e9",
        "cursor": {
          "ref": "c733b85d-31a5-468c-8457-377e0542b728",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "465fcc5d-6f7f-447a-9b6a-b431aa60e637"
        },
        "item": {
          "id": "9f353ac9-b1a5-4a65-b166-2aa8f570d5e9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8de6600b-aaff-4c2e-bcb0-f36bfde2b1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5c9ab3-04ba-4ff7-86ee-887b295a8005",
        "cursor": {
          "ref": "5985d88a-3cf6-4401-9647-ae68c81aace0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ac875771-f74b-473c-ab79-cf4264d43651"
        },
        "item": {
          "id": "6e5c9ab3-04ba-4ff7-86ee-887b295a8005",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2d5f9997-3831-4180-b223-7463c489e421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b522d32a-e847-411b-9d5a-8eaaf306129c",
        "cursor": {
          "ref": "907167eb-60bc-4b16-82ac-440ad8c57b59",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1a891364-7a10-45a5-8197-3cc2057b7fa3"
        },
        "item": {
          "id": "b522d32a-e847-411b-9d5a-8eaaf306129c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0c3b2cee-e59e-4f4b-bf72-a5dc816b670b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc8c4f7-b29b-4479-8b67-8a1e729f3afa",
        "cursor": {
          "ref": "58035e50-fa2d-4ba8-a4a5-65adf9d00735",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fbb01a3d-66b0-4cf1-9f58-a0b9ca802b54"
        },
        "item": {
          "id": "5cc8c4f7-b29b-4479-8b67-8a1e729f3afa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "932059be-00af-4d9a-9ed2-f790372e9d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e354bc45-dc28-4f30-b25b-cfe3540dc99b",
        "cursor": {
          "ref": "d63b169b-015c-48fb-94af-df5f5be3f629",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "34258571-2550-44eb-8ade-328e7b5d73c7"
        },
        "item": {
          "id": "e354bc45-dc28-4f30-b25b-cfe3540dc99b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14a8f04f-1ba8-4ea0-a0af-864545a8e140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc12de6-bd94-4054-92a7-0d882ef58413",
        "cursor": {
          "ref": "1f5d5d07-fc4c-4e9e-9b43-ea3cd243d876",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e2598ffa-e7fa-4d29-a35a-8ab565f40bdd"
        },
        "item": {
          "id": "efc12de6-bd94-4054-92a7-0d882ef58413",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e9c1521b-988b-4493-a875-c23d3f6c11ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d4942b-7b04-4518-b3a3-6a2a9418ac02",
        "cursor": {
          "ref": "c1343016-429e-4c4e-986d-581cd574da63",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c25c510-241c-4cc6-8672-7014532a9191"
        },
        "item": {
          "id": "f8d4942b-7b04-4518-b3a3-6a2a9418ac02",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "86121712-2d80-4003-989b-d018bded475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5458cecc-2fb3-47dd-9020-6a3784ed22bb",
        "cursor": {
          "ref": "ecd6973a-6927-431d-ba4b-2875a0d041e9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1a62302e-8bf2-4632-bda0-a1fec76f5656"
        },
        "item": {
          "id": "5458cecc-2fb3-47dd-9020-6a3784ed22bb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a5e25aa6-b884-45dd-b063-9e53e3b49d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fccc69d-5b5a-4d48-963b-38d7a62ced6b",
        "cursor": {
          "ref": "e7c32291-86a8-4dd4-9412-7e76a1bc901e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "859a0318-80ee-473f-a4c2-11b06357843a"
        },
        "item": {
          "id": "6fccc69d-5b5a-4d48-963b-38d7a62ced6b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1cffb6bb-7714-4ccc-96aa-c7b891e1040a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f35260b-75a4-4bbd-b74e-59da1b52eb17",
        "cursor": {
          "ref": "9f1dd6f5-8725-4571-a243-d21975592290",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b9953265-2b6c-487a-9ccd-d24a9a8a1d8c"
        },
        "item": {
          "id": "3f35260b-75a4-4bbd-b74e-59da1b52eb17",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5760a572-969b-4520-a212-84f4bb2c10a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec4b52-a598-4431-a4ad-ea3c4c6125cb",
        "cursor": {
          "ref": "3f609fb2-7f34-41da-8c8b-c3542f782801",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ab4f62b2-3e2f-4c46-a4dc-a10b3a0e6de9"
        },
        "item": {
          "id": "76ec4b52-a598-4431-a4ad-ea3c4c6125cb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8ade52a7-c158-4c25-b8e7-f3deef5f2249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9728c77c-6f93-4936-aeb0-bef62706e0b9",
        "cursor": {
          "ref": "fba04b31-00c4-4f54-a8a5-b74b22c07a34",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fa440439-9947-429f-b640-2f14ec1b6fc2"
        },
        "item": {
          "id": "9728c77c-6f93-4936-aeb0-bef62706e0b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a7374715-b050-4e62-8767-522dbbc6ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9616fd9-bc49-40ec-93a8-2287e80621b1",
        "cursor": {
          "ref": "ad5403ac-0ce5-4e04-b37d-ba1cf44743fc",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "96234d97-7d18-442c-98eb-11fe26ddf774"
        },
        "item": {
          "id": "e9616fd9-bc49-40ec-93a8-2287e80621b1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2e0a8633-b29d-48d6-9c11-d49a4a862e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427a75eb-13dc-4616-8993-6f03eef8f3a6",
        "cursor": {
          "ref": "b5d1a12f-5437-4101-9e98-f3c751db79c0",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c2afa98-277d-466c-a414-239f4026eae6"
        },
        "item": {
          "id": "427a75eb-13dc-4616-8993-6f03eef8f3a6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "127dc382-2e89-4f43-a4e8-cb7285365243",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ca5b6d-614c-4fe7-9846-4b46f1ff33f5",
        "cursor": {
          "ref": "bdf61eed-6ead-4222-adb9-83e8245c5b7a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d962561f-e981-4491-aca8-2cb1fcd3d1d2"
        },
        "item": {
          "id": "f1ca5b6d-614c-4fe7-9846-4b46f1ff33f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce5dd49b-5349-49f3-95ee-140ad0976979",
          "status": "Created",
          "code": 201,
          "responseTime": 2921,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6762327-0068-4509-8b57-18349369b256",
        "cursor": {
          "ref": "ba2c5f24-22b6-4931-a41e-1457585ba0c3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a39503aa-7fea-43ce-8212-a7cdb38b078d"
        },
        "item": {
          "id": "c6762327-0068-4509-8b57-18349369b256",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f2dd8615-f85e-460b-a60d-4eea5036d96d",
          "status": "Created",
          "code": 201,
          "responseTime": 2677,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d05874-289b-4007-a0f7-97140e70d753",
        "cursor": {
          "ref": "97950605-03b0-4b41-9319-adddb09ef36f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ca66a253-d147-4874-ae16-581bc46cb52b"
        },
        "item": {
          "id": "f8d05874-289b-4007-a0f7-97140e70d753",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "47f212c0-937c-4929-940e-4b557bfe47bd",
          "status": "Created",
          "code": 201,
          "responseTime": 2672,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef247d6a-3888-40e7-9278-e05d97c57613",
        "cursor": {
          "ref": "f5b743e0-fc85-4adb-8a1c-98b5cbcde6d8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5e685da0-a4e6-4fcf-8441-8887f0ff8ed6"
        },
        "item": {
          "id": "ef247d6a-3888-40e7-9278-e05d97c57613",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9090700e-6303-425b-8ce8-58a8b5ed7fd0",
          "status": "Created",
          "code": 201,
          "responseTime": 3059,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cca7a6e-fc2f-4e8c-b9b0-8e9400ee33b8",
        "cursor": {
          "ref": "90be1853-5443-4d04-92d3-9ef9e4818f54",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "909d65bf-d26d-4889-a68a-6a9e0e42079d"
        },
        "item": {
          "id": "1cca7a6e-fc2f-4e8c-b9b0-8e9400ee33b8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f896d07a-e2a4-424d-b9cd-429b15fb76df",
          "status": "Created",
          "code": 201,
          "responseTime": 2836,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-24T00:42:41Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-24T00:42:41Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f587faef-aa45-4c74-89e9-431350be98b8",
        "cursor": {
          "ref": "24985630-6f36-40ab-8ba9-65b4f9d1fe01",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e68b0bc-74b6-4d03-9c16-35495e556564"
        },
        "item": {
          "id": "f587faef-aa45-4c74-89e9-431350be98b8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "34a8a3ce-9ec1-4edb-9426-c89169167ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8b8d9afb-e90b-4c0b-b9d5-ffb25bcb2200",
        "cursor": {
          "ref": "159f5cc3-d7ed-46f6-a140-f0d4ff2f0c78",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1e2e9e89-a368-4932-be00-6576464c1904"
        },
        "item": {
          "id": "8b8d9afb-e90b-4c0b-b9d5-ffb25bcb2200",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b3b5f03-81e3-46c3-aef8-fb6b2ed3022e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910d4a6a-64df-49b7-9788-3a7644eb9a54",
        "cursor": {
          "ref": "5f80ca82-cebc-4be5-96b5-73d56f5603a6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6c7dabed-52ae-444c-876c-9d6c7d73ddba"
        },
        "item": {
          "id": "910d4a6a-64df-49b7-9788-3a7644eb9a54",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76513ec9-81d9-4db0-be05-7f754de3e7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f23063-4c91-40b4-a9f6-425716143e11",
        "cursor": {
          "ref": "0f2b8524-10db-4d60-874e-03f52b65f51c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8ef53c1d-8c23-493b-9eb9-1906c2974641"
        },
        "item": {
          "id": "a4f23063-4c91-40b4-a9f6-425716143e11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "79549dec-f81e-41b1-9a4f-d98da1590069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4722cae-9fe0-4f7f-900b-4d637b05623c",
        "cursor": {
          "ref": "717b9c4d-5881-4e02-ab4c-a84e9907302b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9da8a430-02b6-43d3-bcd2-f8512dc56846"
        },
        "item": {
          "id": "f4722cae-9fe0-4f7f-900b-4d637b05623c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "643bc628-068c-4789-b0ab-1a6c6da9ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f44fb-ad31-40f9-ab3d-27b59f1d4eb7",
        "cursor": {
          "ref": "66365312-66b4-42a1-bd0b-1884c9c1bbf8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "78584647-fc20-4f6d-9f96-b2224bcb531c"
        },
        "item": {
          "id": "d93f44fb-ad31-40f9-ab3d-27b59f1d4eb7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "07393673-6576-4420-83ce-df6de4df59b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499aa273-1ecd-43e3-a721-9d12007fb5e9",
        "cursor": {
          "ref": "61d555f0-7fab-4173-9fa2-16d769202e8b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e8a07ae-9750-44b5-a5f0-6434374ba717"
        },
        "item": {
          "id": "499aa273-1ecd-43e3-a721-9d12007fb5e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "073d0f05-b154-4c10-950a-9587577d603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af007b2-53af-4dbb-84ed-b0de044c1293",
        "cursor": {
          "ref": "4a842a38-6bf5-41b3-bdc0-35c2dff2cf36",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd35a68d-4fbd-412a-8aa6-49cc44f81c02"
        },
        "item": {
          "id": "9af007b2-53af-4dbb-84ed-b0de044c1293",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3281477-9d98-4989-8757-d3b42fa941fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f09745-9e37-4a08-bafb-1d98405399d2",
        "cursor": {
          "ref": "918b5e7c-dd67-4ed7-bc3f-0d76b28e1d3a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "73f2cb6f-19f3-400d-8337-205efa2d1f2d"
        },
        "item": {
          "id": "e8f09745-9e37-4a08-bafb-1d98405399d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4037422e-e2de-4578-bf9d-837d6bba0d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f18dc21-1c2e-4795-afb8-4934094bbca2",
        "cursor": {
          "ref": "5ea14e49-e855-47a7-924b-5d68b678f107",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eb55f5b6-7ae8-4115-bcc0-7c3c28116958"
        },
        "item": {
          "id": "6f18dc21-1c2e-4795-afb8-4934094bbca2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c7f5282-1124-400a-8a03-4b46926fee73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff4c57-908c-463f-94f5-544e80a39d17",
        "cursor": {
          "ref": "6fe19409-1548-4e41-907d-318a328459f9",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "49ed534d-2abf-4130-a22e-636d6cb0456a"
        },
        "item": {
          "id": "efff4c57-908c-463f-94f5-544e80a39d17",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "752f9260-be91-4738-9e45-c0fc1f8a7886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643a0cd-0dca-4384-a470-04d256b659f8",
        "cursor": {
          "ref": "414a83c0-5566-4321-ba55-19da94dbecfc",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "802522ed-9581-49b9-82bf-1b66386a2c6f"
        },
        "item": {
          "id": "2643a0cd-0dca-4384-a470-04d256b659f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0af7ec5c-5513-429a-8d01-4ecf4f191c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89c51b2-5c25-43d2-ad98-685f81c26e78",
        "cursor": {
          "ref": "1d3cb59d-a704-4374-89f2-fec6fddd45b0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dfc16a6d-4895-42fb-9274-9104766324ef"
        },
        "item": {
          "id": "b89c51b2-5c25-43d2-ad98-685f81c26e78",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4be5628-0c30-4cc9-aedd-bd7cc059c26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f779f86-f095-4a4a-aec7-718ae359501f",
        "cursor": {
          "ref": "f364386d-a140-4859-bc76-70509e82d108",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bafaa7e2-172c-453d-8d74-4b088477cb85"
        },
        "item": {
          "id": "9f779f86-f095-4a4a-aec7-718ae359501f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8797cc59-bf0b-41ae-94ce-54281a6ad510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e378a1b8-ad9e-4ef7-9045-fbe5a2e8a281",
        "cursor": {
          "ref": "f04425b2-4ef7-40ef-a95f-83ae21ddd0f7",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a6b0f918-ae58-4144-b65d-cbe30ccf7331"
        },
        "item": {
          "id": "e378a1b8-ad9e-4ef7-9045-fbe5a2e8a281",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9fcfc1fe-6598-4421-826f-db6f379bdecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805e69a5-fcc8-44fc-828a-98bf6e9619fd",
        "cursor": {
          "ref": "3fe4bfd3-ad89-4f97-a379-4254757e147a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "18640956-a7bb-43c6-905a-f373ecc66ad7"
        },
        "item": {
          "id": "805e69a5-fcc8-44fc-828a-98bf6e9619fd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "214bb52c-25ab-4b24-9c94-f5329cceba34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d12387d-e164-406b-8748-204306718376",
        "cursor": {
          "ref": "adffd6f2-442d-4154-a044-77bb15b60202",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "df51ad8b-b706-4d75-902a-b66150c43777"
        },
        "item": {
          "id": "3d12387d-e164-406b-8748-204306718376",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4baa6cfb-c6d2-4bb1-ba82-323459441650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da5ff8f-a9b2-4e76-86ba-b1ff892fa142",
        "cursor": {
          "ref": "b09bdb28-494c-43d7-885e-58f2008b61db",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "177b3ce6-dabe-43e2-95c7-771c55ed9784"
        },
        "item": {
          "id": "9da5ff8f-a9b2-4e76-86ba-b1ff892fa142",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "70c3050c-32f4-472e-a1f4-325d6f1d8a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1efaf8-830d-4c4e-b9d2-364e264523d4",
        "cursor": {
          "ref": "e1d8c1c8-cee1-437b-a2f6-6d4ef67135d2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1698ed28-0ea9-4905-9179-83d550155dcd"
        },
        "item": {
          "id": "0b1efaf8-830d-4c4e-b9d2-364e264523d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b69d6c94-eb11-472a-88f8-118f2a6a8705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f874d73-7346-47f9-9489-1f20dfd779ee",
        "cursor": {
          "ref": "5fa50083-6a6b-43ae-9208-739490b412fc",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3d05c090-0642-4a25-af15-e6f68c74fe21"
        },
        "item": {
          "id": "2f874d73-7346-47f9-9489-1f20dfd779ee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41938a54-f34b-4d0a-a3d3-cb9e51e07a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c51b4b-1b50-4961-99ba-ccde85bdc1ed",
        "cursor": {
          "ref": "15b4c01c-d6fa-4d38-896a-cdffcba17822",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72feb3cd-103e-4db8-a55a-d6a3fc111c88"
        },
        "item": {
          "id": "92c51b4b-1b50-4961-99ba-ccde85bdc1ed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea0e8d22-3fff-4c77-a0a6-3f83852d84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669d2dc0-ae22-43fa-b8b5-b00817b70005",
        "cursor": {
          "ref": "21f807de-bcc9-4900-ae3c-48c2da113bfb",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b4a2ffdf-1294-450d-8407-197717fcc757"
        },
        "item": {
          "id": "669d2dc0-ae22-43fa-b8b5-b00817b70005",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "78ec4b72-0770-47ca-9c21-e845097949d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b7e2d0-ec10-4699-a3e3-0411fe50eed5",
        "cursor": {
          "ref": "48ada28c-ee66-4089-996a-c0a5aacf19ce",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d1184911-2fb4-415a-8ed1-b53cc83d27da"
        },
        "item": {
          "id": "79b7e2d0-ec10-4699-a3e3-0411fe50eed5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef7cac88-3eb1-4022-9c45-afc4fab10bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f738fd-03db-447b-bbc6-273f8ce3bc89",
        "cursor": {
          "ref": "081c429f-08b2-4aa6-ab34-9f7bcc0cecec",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e92626b7-5b6f-4236-a3dc-6924987f029b"
        },
        "item": {
          "id": "06f738fd-03db-447b-bbc6-273f8ce3bc89",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "804a7f34-4865-49a4-91cb-b849df917a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca9cb16-9e28-405f-aa6b-4e08f29db970",
        "cursor": {
          "ref": "982e3824-ac43-42f8-b046-49c9b2768c60",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42df577a-1103-448f-a4f3-12598d4b62d3"
        },
        "item": {
          "id": "dca9cb16-9e28-405f-aa6b-4e08f29db970",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "86b0d0c8-1842-4785-98fb-5ac782b083d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78a1c8f-da48-4594-92c6-0b9b78c83b8a",
        "cursor": {
          "ref": "c3192fc6-75c5-4180-9a3c-a81b90678392",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c8f1f562-9c30-43a7-bc9c-4cd123c93e6a"
        },
        "item": {
          "id": "d78a1c8f-da48-4594-92c6-0b9b78c83b8a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6791517e-4faa-4b46-9374-e0503c5d92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60952f5a-3e13-4a26-b943-bf563b6cb417",
        "cursor": {
          "ref": "16f0eb76-6eb2-4764-ae90-0b384caf4eee",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "605d0a49-2b78-4681-aecc-85fa5a463672"
        },
        "item": {
          "id": "60952f5a-3e13-4a26-b943-bf563b6cb417",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "25ae5d6b-72a8-47f5-b5a2-16002d72743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aad3db0-f19e-4029-99ec-5ec3505f4cfa",
        "cursor": {
          "ref": "ea377832-2129-425d-a67e-c2b908fce0fb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91892c6b-4131-440f-8321-5df6a4f1014d"
        },
        "item": {
          "id": "5aad3db0-f19e-4029-99ec-5ec3505f4cfa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c2aa95c7-e715-46b6-8933-2d0238e54554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e89b184-fc01-49a9-8944-3fc15c7dcaca",
        "cursor": {
          "ref": "dcbcb6d4-27fc-44c3-a630-9752d48921fb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "56c3443f-4a42-4b0b-85e0-070f85216fce"
        },
        "item": {
          "id": "2e89b184-fc01-49a9-8944-3fc15c7dcaca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "87e12d80-3173-40cd-95b7-f5a32d216275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd89b356-b259-425d-92d7-25f00b18132c",
        "cursor": {
          "ref": "f2b92436-89e2-47bd-9060-d3fb7b713ea0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b2a863c6-1013-4711-bbe6-524292ae15e0"
        },
        "item": {
          "id": "fd89b356-b259-425d-92d7-25f00b18132c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16d4bd7b-a33d-42fd-a216-ba10d22b65d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f246a193-726e-4f9f-8317-0b4801711d3e",
        "cursor": {
          "ref": "37beb98d-dc3d-4b45-8b7f-ccd4118ab698",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a1fdc57e-d4af-47ec-b0ad-aff14f1ee8e9"
        },
        "item": {
          "id": "f246a193-726e-4f9f-8317-0b4801711d3e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b7387d6-78f0-44dd-924d-63895b2e8874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb70c917-792a-4b11-81d7-5b5a8e9bca97",
        "cursor": {
          "ref": "e33e714c-8888-4abe-9aab-897b6ccc90ce",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0b2b2425-1a29-4b7a-bddc-3eb8030d44cc"
        },
        "item": {
          "id": "bb70c917-792a-4b11-81d7-5b5a8e9bca97",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0d950eb-54d3-46dd-8fa6-b9f601e82abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9def5a-7fcb-4cbb-b7ec-ba58b599cd52",
        "cursor": {
          "ref": "9baf8aec-1b13-4d33-82c2-e533656717ca",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d3921ac1-04bd-4cd2-bf01-dd20bfa94b99"
        },
        "item": {
          "id": "3e9def5a-7fcb-4cbb-b7ec-ba58b599cd52",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1c111c03-2fb2-4600-b864-2270c4b0d53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbffea3-0481-4b2b-89f6-678976b4f556",
        "cursor": {
          "ref": "927e2f44-8a1c-4aea-aeb0-ed328b01e983",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "549e829e-22c5-4206-9128-bc1aa040e2f7"
        },
        "item": {
          "id": "1cbffea3-0481-4b2b-89f6-678976b4f556",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "801c6274-e869-4374-b7dd-68cf85fec53d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a509a5-8f86-4b9d-9233-04288ec81fab",
        "cursor": {
          "ref": "f4a598fe-7605-45e6-b663-27b3dc65bc66",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d9be3dc2-5e96-4e06-93b0-6854deac6a75"
        },
        "item": {
          "id": "d2a509a5-8f86-4b9d-9233-04288ec81fab",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2875255-3eb3-4cdd-929f-8c77b865a99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b2b367-1765-4a7c-b11f-66f1c9c194ee",
        "cursor": {
          "ref": "39bedf57-9734-4fe4-99ef-5f7b36bef99f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c24766eb-6193-4699-8c50-4d025bf79476"
        },
        "item": {
          "id": "77b2b367-1765-4a7c-b11f-66f1c9c194ee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ee94888b-175e-470e-97fe-4229c86c6a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65730ce-25c6-4732-9b2c-d81e8a14b69a",
        "cursor": {
          "ref": "92473e8a-72b0-4419-a1d5-f0e3d564fb45",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "94d2cfb9-82ae-417d-9196-c663dd66b722"
        },
        "item": {
          "id": "b65730ce-25c6-4732-9b2c-d81e8a14b69a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56313f2b-f66d-4758-bb09-7de582f2e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88434a96-4d20-4bef-b3fa-c738d42e4fe8",
        "cursor": {
          "ref": "51bbf29b-6b15-4d54-9569-002be195a034",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a7eccc0-69cc-40e3-9621-d236f7630ff2"
        },
        "item": {
          "id": "88434a96-4d20-4bef-b3fa-c738d42e4fe8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "726bfd67-c955-4ef4-b29a-64d2a907e7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed3ae86-1c93-4cc4-96be-83981ce66a6a",
        "cursor": {
          "ref": "88a425e0-2b6d-4c81-83ef-d78a29326486",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ea97e178-4ad9-4fce-9ddb-a1948e040618"
        },
        "item": {
          "id": "8ed3ae86-1c93-4cc4-96be-83981ce66a6a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e044be04-68c9-405e-b102-4cd17955516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5cf8d1-8759-4adb-9672-8c4b1af8f94d",
        "cursor": {
          "ref": "5e7cd30d-1446-4a4f-b15e-1867ec6b3d24",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a20ad069-3419-4fac-a0c5-230140ace4c7"
        },
        "item": {
          "id": "6f5cf8d1-8759-4adb-9672-8c4b1af8f94d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2dced7dd-e1fe-434f-8d38-aef009352069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8874cd-61bd-495a-b76c-5eda0e6eb512",
        "cursor": {
          "ref": "3660462b-0ae5-44db-9d6b-167198d8c107",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d02ac7a1-1a69-44cc-a49e-cbea0b9ec1a6"
        },
        "item": {
          "id": "aa8874cd-61bd-495a-b76c-5eda0e6eb512",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58ed68d4-f53e-4cd2-b17c-32c7cc3bfcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ffee84-b6e6-4777-81c0-669f68626d10",
        "cursor": {
          "ref": "51cdf02b-3f4f-458f-b8a3-6790a37770aa",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "34bdad0c-38a7-47b0-9dec-ec93ec161963"
        },
        "item": {
          "id": "97ffee84-b6e6-4777-81c0-669f68626d10",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f323f5f-d2e0-4f0f-8e8c-4a83e04c7426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e108158-e183-41f3-bb6d-0aa63f9227c9",
        "cursor": {
          "ref": "daaa0052-deb2-40fd-96c6-b7203391ec9a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "712ee250-40f9-4990-93c6-e1137f041de4"
        },
        "item": {
          "id": "9e108158-e183-41f3-bb6d-0aa63f9227c9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96fd15ad-5210-4328-a383-b1a8eea45929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1379cad-f4f6-46bd-a8e0-9047b0c900be",
        "cursor": {
          "ref": "003578d6-1654-4615-8dc1-771301def938",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "45138a99-0909-4722-b774-8e7c6567f708"
        },
        "item": {
          "id": "b1379cad-f4f6-46bd-a8e0-9047b0c900be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7cf380c6-bc05-4824-a9bd-356ccbff9ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d6012a-f7cc-4c2a-ac65-0ba0a16aefde",
        "cursor": {
          "ref": "35c7d9e6-5d00-44ab-8f4a-ac49cb0a0df7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cb9087b7-0c3a-429a-b764-b50c152b2363"
        },
        "item": {
          "id": "97d6012a-f7cc-4c2a-ac65-0ba0a16aefde",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "073ee682-968e-4041-8114-c6994ca05843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c98c2-6734-4cc3-977f-985e11250eb5",
        "cursor": {
          "ref": "246119f4-1da6-41d6-a9db-0b6f122b1122",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b2fd17ec-7e44-46b7-afe3-8347af386f70"
        },
        "item": {
          "id": "5b6c98c2-6734-4cc3-977f-985e11250eb5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "80323078-dbda-4813-95b0-15d7814fa392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379bf827-c59e-47e2-9465-68b73d7cfee3",
        "cursor": {
          "ref": "0a164db5-6c72-4f6a-888b-3e15346a3339",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1b385db2-91dd-4a13-b35c-5494b1312aa9"
        },
        "item": {
          "id": "379bf827-c59e-47e2-9465-68b73d7cfee3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3c136a30-4ec1-4010-8253-f5a6a68a8467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee1d0f0-160d-41bc-92d4-ddc80e682391",
        "cursor": {
          "ref": "35c2af4f-5dd2-4945-8400-904ae69628a9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8605c5e9-3601-4005-ab2d-b75c8bfc0675"
        },
        "item": {
          "id": "dee1d0f0-160d-41bc-92d4-ddc80e682391",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "569da8e5-75be-48ca-9819-3c4998b7447e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5261635-3f35-4ceb-8c61-6be45a3d6a70",
        "cursor": {
          "ref": "c47c021c-cbb9-46f7-9d80-d2c6178f8e25",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "86393bd7-e5cd-4aad-9b87-c4895aae005a"
        },
        "item": {
          "id": "a5261635-3f35-4ceb-8c61-6be45a3d6a70",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd6f58cc-0dfc-45f3-aa61-dd6699cac40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c888f-29ea-4e03-8004-dc4a34c586e3",
        "cursor": {
          "ref": "2b11e3e8-b42c-4f7d-934c-41bcf5808d68",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "eb6a7a2d-af08-4e80-8a92-2789d080e6ee"
        },
        "item": {
          "id": "8d8c888f-29ea-4e03-8004-dc4a34c586e3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1718ba4e-2161-4633-9014-012efe147b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbf9df5-fe4c-459d-8f56-1e054db6c555",
        "cursor": {
          "ref": "8d7c3d6e-e64f-4470-9e8d-733e6a99f0db",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "16351fdb-c6fd-42c9-a8d0-d95516d1100f"
        },
        "item": {
          "id": "0fbf9df5-fe4c-459d-8f56-1e054db6c555",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "10d89c18-f8de-4bdd-80c8-166cf450c876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a553ece-89df-4f7a-9f5f-80ba5d24a73e",
        "cursor": {
          "ref": "5f82629f-ac0d-4711-aae7-7f390346d471",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7fc46580-aad2-4863-9c47-592bbc69be8a"
        },
        "item": {
          "id": "6a553ece-89df-4f7a-9f5f-80ba5d24a73e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "02a38ffe-9929-4fa9-83f8-66c4595b6096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8a9c23-82c8-43f4-ae81-657ba4458233",
        "cursor": {
          "ref": "16ab1047-7d81-4ede-9380-84aa56906774",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "47482182-9b79-45bb-9268-8941f35b223a"
        },
        "item": {
          "id": "de8a9c23-82c8-43f4-ae81-657ba4458233",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3eb58079-7bd2-4102-9b7e-1d130bf5613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f42d66-6d77-4032-a354-4fb29b526703",
        "cursor": {
          "ref": "e16ba6e4-09c7-4533-a78d-f8138158c1cd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b31f637a-56ba-478f-bc09-ccb8784eba79"
        },
        "item": {
          "id": "e4f42d66-6d77-4032-a354-4fb29b526703",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "750b8c32-70f4-46d3-9e9c-d141305191ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adf86f2-4372-430e-9b15-64e3f8f45f94",
        "cursor": {
          "ref": "59306e28-e050-4da1-b3eb-b5c240904fb1",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "abdf474c-5617-41dd-aa51-e27a332033b8"
        },
        "item": {
          "id": "9adf86f2-4372-430e-9b15-64e3f8f45f94",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2efed6e8-b8c2-446f-ba76-a4c5de8231df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ecbf6c-32e1-4656-a4cb-baf03f1ffee0",
        "cursor": {
          "ref": "a5b1d7e1-02fe-4923-be18-24ba00c9497d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a04f7832-89ab-416c-bf3a-e02a17f97b28"
        },
        "item": {
          "id": "b4ecbf6c-32e1-4656-a4cb-baf03f1ffee0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3971e80-daad-45c0-89d0-ce5040e3c28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7085d036-9df5-47db-afe1-5cf1849b8c0e",
        "cursor": {
          "ref": "c2b8f485-3fd4-4922-b1f2-ce73c59307d3",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a2abcc82-ec3f-449d-8ef4-a31439797f14"
        },
        "item": {
          "id": "7085d036-9df5-47db-afe1-5cf1849b8c0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10b56462-9422-4e4e-9ce3-d23f118dd21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af71b294-c7d8-48c8-93ee-cda51c0b93bc",
        "cursor": {
          "ref": "34d9c73d-f23a-4a7b-bc3d-6aa934fe7a83",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3649352a-f050-46a1-9dfc-8afbebe384db"
        },
        "item": {
          "id": "af71b294-c7d8-48c8-93ee-cda51c0b93bc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "12d56a16-86e7-4a5e-9ed9-cf471952ebba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c10ff26-9cdb-429b-8cad-3d412ce87d0f",
        "cursor": {
          "ref": "5bb93582-aa80-40c0-92d2-233cb7a771c4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "698ea092-d3fd-40fb-827f-d29c20bbf82b"
        },
        "item": {
          "id": "3c10ff26-9cdb-429b-8cad-3d412ce87d0f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a2b1318-2615-4c16-9364-87b8a5366225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de25f533-0fb6-4dc6-83c4-5b5d65be9d67",
        "cursor": {
          "ref": "f9afb6f1-1edd-4f31-b5f2-da3eacfab67a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6cab50db-7135-426e-9391-bb53e2482818"
        },
        "item": {
          "id": "de25f533-0fb6-4dc6-83c4-5b5d65be9d67",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "50f008cf-219e-428a-b18e-5c00e396eeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea83074a-bcc1-43f6-b668-1ce4f7a55de7",
        "cursor": {
          "ref": "548a5383-bb6e-438e-9132-da662bd7f7ad",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "557825a9-de23-41f3-8b36-9f242aa9c0ce"
        },
        "item": {
          "id": "ea83074a-bcc1-43f6-b668-1ce4f7a55de7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b26b1443-49d6-477b-9c64-cfaacf9496c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ae59ff-fc55-4d91-8d52-de0808607f83",
        "cursor": {
          "ref": "98a68334-7da1-4841-86f8-3a9edd6340be",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "93725431-cc5f-46ac-b175-0a8004c4eeea"
        },
        "item": {
          "id": "a5ae59ff-fc55-4d91-8d52-de0808607f83",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b8b552b6-dcb8-4370-a6d5-b6d1f464e105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7425e0ca-14be-4e7b-85df-c43f37b04f08",
        "cursor": {
          "ref": "c80e7a08-8842-4c48-81a9-3d7562520182",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "72eb706b-2eed-4c34-a0d1-7a016426e176"
        },
        "item": {
          "id": "7425e0ca-14be-4e7b-85df-c43f37b04f08",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7634290-2293-4c15-b890-a31178c18cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97868e53-212e-4b10-a586-7a82fd130506",
        "cursor": {
          "ref": "b81258d5-3aa0-49f4-a2f2-bfa88552d91f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a227eaf0-c9f1-4da5-8f5c-f7969211f8f4"
        },
        "item": {
          "id": "97868e53-212e-4b10-a586-7a82fd130506",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f1c996b-d2ee-4b6f-b05b-acd931f5b28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40b3cad-17c8-41e0-8504-028e6857758f",
        "cursor": {
          "ref": "86fc0480-28a9-4378-9314-e5ca5a2d0347",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2fc6e86f-150f-448f-bf98-28c458777a5e"
        },
        "item": {
          "id": "c40b3cad-17c8-41e0-8504-028e6857758f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c713503c-b14d-41ee-9d40-37581053e443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fcec98-ccdf-4798-98b4-d73559e77e90",
        "cursor": {
          "ref": "6382663c-1604-4ca7-90be-391af48cfdf9",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2372ce66-4350-4b92-9947-e418ea74d6e8"
        },
        "item": {
          "id": "18fcec98-ccdf-4798-98b4-d73559e77e90",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a56eb305-b633-42e2-8c9d-577042196aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ba8ac5-bc5b-4575-95c1-85ed3d71577e",
        "cursor": {
          "ref": "d6a970ea-6cd5-4617-9b16-71a355ba4fb7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "79c210ff-468f-4035-bb46-5f5174f5c6b9"
        },
        "item": {
          "id": "52ba8ac5-bc5b-4575-95c1-85ed3d71577e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a4378a1c-57cc-4906-bc8e-ed7fe92b070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06884984-3f1c-4287-b865-705cdefaa3e9",
        "cursor": {
          "ref": "edf74fbe-ea74-44e8-95ae-61090511ac2f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ad01ee5a-8a6c-49dd-903e-5cf0cd9816bb"
        },
        "item": {
          "id": "06884984-3f1c-4287-b865-705cdefaa3e9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4c4e124f-df49-4e4f-9507-f9dc84b26299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4957eaf-1223-49e5-a8f2-eca84252ea36",
        "cursor": {
          "ref": "57b0e20a-73b4-4116-af79-05ac08efad80",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68354c1b-ffb1-4b48-b452-528f536e3546"
        },
        "item": {
          "id": "d4957eaf-1223-49e5-a8f2-eca84252ea36",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "32e8f56f-7b74-4e6b-9f39-d10a04f7b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a40324-650c-4ae8-8609-8af987e1f8dd",
        "cursor": {
          "ref": "ee4b35da-8952-479f-9a13-3b418f1383a4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ffc5f7fb-e0e9-4504-aeac-9e88f41260a1"
        },
        "item": {
          "id": "a3a40324-650c-4ae8-8609-8af987e1f8dd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "670d460a-5fa4-4bf2-ada7-ee6a27a539a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7324980-a990-4137-a60e-79205f2ee2eb",
        "cursor": {
          "ref": "a217312b-aa63-4bf5-be95-1022760b5c67",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b17045ca-8f78-492e-97af-ab2f4aa64e46"
        },
        "item": {
          "id": "a7324980-a990-4137-a60e-79205f2ee2eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b4ea22d6-07be-44fc-bd42-b55f2998f777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb1e08b-2efb-47fc-92b7-1608bddb8b97",
        "cursor": {
          "ref": "6f08c935-85b7-41f0-bdae-9beb82d15af9",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6b893a1e-6c92-4616-bc65-16891fbe812f"
        },
        "item": {
          "id": "1fb1e08b-2efb-47fc-92b7-1608bddb8b97",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0fcf0a50-cd8e-401e-ae9d-617a685c8035",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a53492-2cd4-4b2f-a460-5eaf170ef569",
        "cursor": {
          "ref": "97edc331-9b9b-430b-840e-5a56757329a6",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "03885eb9-b903-40ae-b399-7609c27184ac"
        },
        "item": {
          "id": "57a53492-2cd4-4b2f-a460-5eaf170ef569",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3d31bd7a-601a-43ff-a9b9-710d6b7c1a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec19046-c0a3-4b44-9f6e-0f71975f429c",
        "cursor": {
          "ref": "6fbf3ba6-ab09-46f7-8d7e-da5ff636918f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a005900a-d5ae-4082-86da-915fd7118e11"
        },
        "item": {
          "id": "5ec19046-c0a3-4b44-9f6e-0f71975f429c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34565566-b57c-4f28-97a6-99ab4b6f8c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33c0e5c-f2f0-4f46-9ad4-33d6f5f5f7a4",
        "cursor": {
          "ref": "5c14d1c1-e852-4acc-b351-271ced6df598",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2c29823d-2deb-4553-816e-bd682a0df01e"
        },
        "item": {
          "id": "c33c0e5c-f2f0-4f46-9ad4-33d6f5f5f7a4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ff25701d-2b09-481d-a322-3878345b5b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e959d8-29c9-4324-b836-f9916e9a24de",
        "cursor": {
          "ref": "a746e433-da17-447a-bbf3-f0b8c9d34d15",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2a6a6b62-a467-4eec-86f8-3a119950530e"
        },
        "item": {
          "id": "64e959d8-29c9-4324-b836-f9916e9a24de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5d83f324-6530-4cc6-af59-14e546604b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf73ca9e-1984-4441-ba01-469504d307aa",
        "cursor": {
          "ref": "a4c3f92c-cd37-4df6-b2f3-9072aefde654",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "68af7735-1aff-469b-8361-7d9b959e6ea9"
        },
        "item": {
          "id": "cf73ca9e-1984-4441-ba01-469504d307aa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "241f828c-d12d-4041-a4a8-9d075e3ae45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295e3ade-c401-4e82-a775-b39582978af7",
        "cursor": {
          "ref": "a25ad12b-1c4d-48a6-a327-8d651bcc6821",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "64270bdd-0b7b-4af0-86cd-fe563dd86c17"
        },
        "item": {
          "id": "295e3ade-c401-4e82-a775-b39582978af7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9a90b97f-9828-48f4-a46c-58254e755c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d086c71f-8695-4c00-bbcb-90c819cb9121",
        "cursor": {
          "ref": "8c2fcb28-ab06-4f06-aedd-d13c10570098",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9a2afbb7-b543-4276-8cd5-e993e26026f1"
        },
        "item": {
          "id": "d086c71f-8695-4c00-bbcb-90c819cb9121",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d921f21f-3826-4306-a7b5-1605dc267bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f04197-60f3-4234-b763-de47c85243a9",
        "cursor": {
          "ref": "476735af-e3d0-4075-a576-2be9835fe7ac",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0953b389-6858-4334-bce0-f4f9b98f3394"
        },
        "item": {
          "id": "31f04197-60f3-4234-b763-de47c85243a9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b7d009d5-a6da-4157-833a-c6069bee0f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6887d09-5665-45e7-9e25-7cc0636f5ef2",
        "cursor": {
          "ref": "1592c90c-7515-4adc-8bb9-e2ddf7a7ea07",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e58b0964-e1b6-4af3-9e20-1d158bb74dd7"
        },
        "item": {
          "id": "d6887d09-5665-45e7-9e25-7cc0636f5ef2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4076936c-da18-4aaf-b1a9-a6d29a7aa328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b79e36-c366-40c6-8ad6-29b41751d0f0",
        "cursor": {
          "ref": "0661b92c-9238-4dc7-b2e0-cab78487e73f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "55c1a61f-43d5-4fc9-bd9d-8ff97aee9a10"
        },
        "item": {
          "id": "88b79e36-c366-40c6-8ad6-29b41751d0f0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "99642af0-6a70-4d16-b40d-5e651ca7d3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b64f140-5395-4244-9436-456dc124dcd8",
        "cursor": {
          "ref": "e3b0975f-e709-472e-96db-c2c1321cc573",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f2e9dfdd-7ced-4b04-85af-a6a6aae0a7fc"
        },
        "item": {
          "id": "0b64f140-5395-4244-9436-456dc124dcd8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "150fd03b-eaae-4a40-8551-24f930678835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ddcd91-1d73-444d-ad3e-4087a3be2b8d",
        "cursor": {
          "ref": "c6a7089a-0fcd-4985-a8ef-042fcd1fdc19",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b17edcb9-9d09-4eeb-881e-fef8e6f59e12"
        },
        "item": {
          "id": "64ddcd91-1d73-444d-ad3e-4087a3be2b8d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4d4f4cb1-1b55-4e45-ba0d-82bccdedf86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0627665c-7c80-4b8b-9b1c-ee9c7c3fc0bd",
        "cursor": {
          "ref": "0585fc43-2dc3-459b-b9a0-e23a510c7d4b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "315e4ff5-df5a-480d-8169-17c86cb42473"
        },
        "item": {
          "id": "0627665c-7c80-4b8b-9b1c-ee9c7c3fc0bd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d8c6941d-e822-4e4a-9996-204e9e01b1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a44ff9a-8931-4a7a-a1d5-4c2273744141",
        "cursor": {
          "ref": "8032d1fa-28c6-4f88-8dbd-3f2aa19fc18f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "12ed05eb-8526-4ecc-adbb-8ccd745b64db"
        },
        "item": {
          "id": "0a44ff9a-8931-4a7a-a1d5-4c2273744141",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6faa3188-fd64-4eb2-924c-0056c940b3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a95a1c-a767-4c9d-a7af-a0374a0681ce",
        "cursor": {
          "ref": "3fb985cf-e8cd-4ec2-bd9e-72126c87f6c5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "84065288-632d-4e64-b057-706efd7b636d"
        },
        "item": {
          "id": "21a95a1c-a767-4c9d-a7af-a0374a0681ce",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f88cb423-2c5c-4ed6-9816-7fdc80b8a133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbfcb0a-305c-4207-8871-75d28832208d",
        "cursor": {
          "ref": "b6a46c86-cc56-49c8-a7be-1dd147a78b4c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3d8cbfdb-7593-485c-be3a-a17e68462e8d"
        },
        "item": {
          "id": "2cbfcb0a-305c-4207-8871-75d28832208d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fa7f17bc-6e8b-474d-abd9-8a992005225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b8895c-e4c5-40ed-9df0-7cbff1a5820c",
        "cursor": {
          "ref": "b0a86009-7bd4-4abb-9155-a4c291b9d323",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dd9861cd-b86d-4a66-b250-1896c7ed43be"
        },
        "item": {
          "id": "a7b8895c-e4c5-40ed-9df0-7cbff1a5820c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "05043396-9b81-414f-9f85-2bb277fd65fb",
          "status": "OK",
          "code": 200,
          "responseTime": 255,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "db096c2e-432f-437f-8105-986b15c1e75c",
        "cursor": {
          "ref": "cb4ac041-776c-41fb-964f-7126e4e7f016",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "25b6bf3b-f422-46f3-8441-20633a6fd4c2"
        },
        "item": {
          "id": "db096c2e-432f-437f-8105-986b15c1e75c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3ded9a15-bab5-49fa-9048-64231028863f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44054b5c-b201-42b7-a148-a3f6682a9ee9",
        "cursor": {
          "ref": "bc33087c-e0f2-4658-895e-e19261a9aee1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e5cc4bc6-b35b-485b-a46f-315dbe4d9558"
        },
        "item": {
          "id": "44054b5c-b201-42b7-a148-a3f6682a9ee9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a21b621a-92f4-48a8-a7ea-b45a19dcc86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b716fa53-3120-49c7-bb8c-f5588180ebbd",
        "cursor": {
          "ref": "154d4edc-e2ed-4c91-9451-a5616487ca09",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aaecbc69-cd5a-4d52-ac6b-9b7979fb8cb2"
        },
        "item": {
          "id": "b716fa53-3120-49c7-bb8c-f5588180ebbd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35ec746f-e9d3-413d-b4ef-d59926a32ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedf62e9-2be5-4dec-ab61-6450601a06e1",
        "cursor": {
          "ref": "e04eb76e-6044-4f4b-8186-09adc2a96175",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3bf4b5f0-f9b4-4bac-b17d-4b91e7d6e16d"
        },
        "item": {
          "id": "fedf62e9-2be5-4dec-ab61-6450601a06e1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4643994b-cd42-4fef-9656-0bb60f19f4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43ee678-e05f-4f90-8e21-7b0465968d59",
        "cursor": {
          "ref": "4f14dd1e-12c4-4706-aa5c-c1dd6c2d1c8d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "616e269b-9584-4984-bf31-5b42173eff9d"
        },
        "item": {
          "id": "a43ee678-e05f-4f90-8e21-7b0465968d59",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f4397242-2d8d-479b-aec7-a78bab193149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb523fd-7476-45cf-a3fd-02f992ad9f4c",
        "cursor": {
          "ref": "02a5bbcb-bb29-40d1-8d16-e5f88f26fd0c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "97c9168e-14b2-42e6-80bc-c15c810b033e"
        },
        "item": {
          "id": "fcb523fd-7476-45cf-a3fd-02f992ad9f4c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d62c62be-f24d-4254-a3cb-60ca3e6a5af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a9b77-0282-43e0-8f1f-ce3109ecdcff",
        "cursor": {
          "ref": "bc4f4ec5-f7d4-4a69-b0b9-9e3f5afdfe4a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "960a7d0f-6cdf-446f-8564-3ade731585c7"
        },
        "item": {
          "id": "ea0a9b77-0282-43e0-8f1f-ce3109ecdcff",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3b4195c8-f487-4ca7-af36-d86024aeba8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d1fc06-a5c5-484d-b38a-7f7016ee237f",
        "cursor": {
          "ref": "31c8eac1-611f-4a39-9fff-205ec2b94d33",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a3abbebb-b9d0-4f4e-baf1-d8a146452993"
        },
        "item": {
          "id": "23d1fc06-a5c5-484d-b38a-7f7016ee237f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "755821d5-6be7-41b9-9a8a-fdafa2d4bc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06015795-0d8f-4cca-926f-62d464843047",
        "cursor": {
          "ref": "daa46cec-46b0-4814-ab87-43a3b12c907c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "94fbb74f-3f45-4f24-9bb1-add62e571ee5"
        },
        "item": {
          "id": "06015795-0d8f-4cca-926f-62d464843047",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2cbb1afe-8229-4ff3-b3ba-8b4a3564cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceddf2e4-72ed-4ac1-b1a2-099e92aa946d",
        "cursor": {
          "ref": "dd407ba2-6022-4cb8-abd6-9ab052837065",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "42256524-fb58-41b7-b5b1-ddd37fa426fb"
        },
        "item": {
          "id": "ceddf2e4-72ed-4ac1-b1a2-099e92aa946d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7d2810cf-b498-4f1a-a208-a506abb443d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d208845b-445c-4cb0-87fa-d2c4f8187292",
        "cursor": {
          "ref": "e3facdd8-c487-4560-ba24-86dcc09f68dc",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a0ffea9-bb74-4bee-b552-9efc47477175"
        },
        "item": {
          "id": "d208845b-445c-4cb0-87fa-d2c4f8187292",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cec20673-fd13-48a9-8bdd-9c7c0560234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218075f8-c3ed-4a42-aa04-d65815c77ebe",
        "cursor": {
          "ref": "7b71f007-f82b-4164-a348-5b0cf57505f2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "883bae6c-d56c-43c1-a8af-dd7ec586c64c"
        },
        "item": {
          "id": "218075f8-c3ed-4a42-aa04-d65815c77ebe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d20a9d09-fb7d-4438-95fd-cce1d09bc465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a676df-3021-4517-840d-b655ae1938bc",
        "cursor": {
          "ref": "8279ce2a-f1e2-4514-aafe-9dc016becd68",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f757ca83-f800-45c0-a2f9-c74d2ae5104b"
        },
        "item": {
          "id": "41a676df-3021-4517-840d-b655ae1938bc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "506ac1df-850c-4bf1-97da-5e23dacaf858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c9e9e0-60c5-4ff0-94e0-e8f4905343ab",
        "cursor": {
          "ref": "e99f9e56-f08f-43fb-bd07-6bf0af42f820",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6857ef90-f7fa-4506-a82d-74a7fed45b1e"
        },
        "item": {
          "id": "92c9e9e0-60c5-4ff0-94e0-e8f4905343ab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "503f5042-22f0-4c49-8024-3f7370de2102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a993bd-f180-4bf1-8524-7a1db6098c1f",
        "cursor": {
          "ref": "031addc2-f710-479a-803a-1200ab511faf",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bb900969-2979-4a7b-8265-5e648beaa99c"
        },
        "item": {
          "id": "23a993bd-f180-4bf1-8524-7a1db6098c1f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e9e758f3-3b02-457c-b1c7-95e7ff47cae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc50740-97b5-4bc7-b023-bf3a6dadfb3c",
        "cursor": {
          "ref": "0aaea224-6c48-4926-a0ed-79e14d95a0e7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e0e01bda-40df-4761-a9af-c8f2eb8d58bc"
        },
        "item": {
          "id": "2dc50740-97b5-4bc7-b023-bf3a6dadfb3c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3ddb90f8-a2b1-4a04-bf2f-b6abdadd51fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969b58cb-754e-4ec4-bc31-a230159cb768",
        "cursor": {
          "ref": "ae16b8a5-53d7-482b-87dd-38cff7cf8abf",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "462cd271-0412-4012-a656-afe09d9cd6de"
        },
        "item": {
          "id": "969b58cb-754e-4ec4-bc31-a230159cb768",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fe69281c-220b-4c27-acbc-4555cfb25fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b854bd57-a7cd-4e3d-9aaa-edf3fae21673",
        "cursor": {
          "ref": "ba012ade-d0e3-4640-af06-93074f1cc366",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "283ea6f1-f04e-4d60-8fd2-41604f1dce6f"
        },
        "item": {
          "id": "b854bd57-a7cd-4e3d-9aaa-edf3fae21673",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5df185e5-b115-400c-9f86-70277455c899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4425652-938d-4e3e-90f3-a6f136302204",
        "cursor": {
          "ref": "59abd62f-7f38-4852-b9d0-b775baa88120",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "81ed1e6d-e2be-40c3-8573-df924de18ffa"
        },
        "item": {
          "id": "e4425652-938d-4e3e-90f3-a6f136302204",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "785dec10-ecc0-4344-ae13-c0005ccf962e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b730bad-9979-476c-8578-7fc2baa29466",
        "cursor": {
          "ref": "3f259150-80f7-4a1f-9020-3ad759f3723a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "58fbcdc0-a55d-4f9e-95e8-5af121e60d1a"
        },
        "item": {
          "id": "8b730bad-9979-476c-8578-7fc2baa29466",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "60046cb3-0e09-4a18-ab32-240576671340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f6c760-cf89-4faf-a3c3-5e89244abe84",
        "cursor": {
          "ref": "4096e014-ffbb-4d36-a6f3-ac6496cdeadb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7e47d68-9be3-452a-821b-a9fe789e0d78"
        },
        "item": {
          "id": "13f6c760-cf89-4faf-a3c3-5e89244abe84",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cc83b4d4-e6e1-4047-8c95-a48de747be10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc45cb4-6503-4d7c-abc4-325754720847",
        "cursor": {
          "ref": "aa9dd5ca-8806-4a6c-9e84-5f2da3f0fd98",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f5133841-feb8-44c2-9adf-749f2bc70ddb"
        },
        "item": {
          "id": "acc45cb4-6503-4d7c-abc4-325754720847",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c343b28c-9b26-44b8-8002-9f484329b748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2174ed-0bd2-4254-b09d-1f08fe2e5f67",
        "cursor": {
          "ref": "c659b045-c652-489c-8d6d-43e4a91c76d2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9a624d74-c2c2-4d67-aee6-e2c27c7e43c3"
        },
        "item": {
          "id": "9d2174ed-0bd2-4254-b09d-1f08fe2e5f67",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1031b993-b4e7-4761-b799-6dcced4f5624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6100f029-6259-4c42-99a7-04ad66f71298",
        "cursor": {
          "ref": "7c26f22f-d28b-466a-859f-b66bac138b47",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "853b9c19-04bc-4d74-ab20-ceb22950c137"
        },
        "item": {
          "id": "6100f029-6259-4c42-99a7-04ad66f71298",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "762cbb5c-7364-41d1-8646-b9a091abee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52016f47-3ac0-4ffd-a441-0d61c6115577",
        "cursor": {
          "ref": "437075c7-5554-492a-91a0-68f02187ce58",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "749d951f-6b0e-4ffd-8da7-7e40e267d22f"
        },
        "item": {
          "id": "52016f47-3ac0-4ffd-a441-0d61c6115577",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3f1940ec-b002-4912-a49f-e81cb9b3214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca17cc0d-7ea8-46ef-bb2d-7862f942874b",
        "cursor": {
          "ref": "7bb7b1b1-d49e-4dc4-a7ee-65dd86af2502",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ba7fc23b-a9bf-4801-9bee-dbd3636f98e9"
        },
        "item": {
          "id": "ca17cc0d-7ea8-46ef-bb2d-7862f942874b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9d9f1883-07d3-4b11-9f1a-46a2ec04b21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e59168-5fe7-40cc-91b8-999458f98331",
        "cursor": {
          "ref": "0341021d-efb9-4d0a-bf6a-463569aad72a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b91feec0-31df-40dc-95db-6adda953dc06"
        },
        "item": {
          "id": "52e59168-5fe7-40cc-91b8-999458f98331",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "87784008-1077-4a99-92d4-6766b1a435da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffc0b6a-03ea-45cd-92f1-53b7fec56d81",
        "cursor": {
          "ref": "72b16e06-5824-4239-9810-5f58b3baf639",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "831f506d-b25a-4964-b0ff-8e154275210f"
        },
        "item": {
          "id": "2ffc0b6a-03ea-45cd-92f1-53b7fec56d81",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "93c05356-5bc8-4f17-aea7-547429a1c739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b29228-6cec-4104-8e9d-a32e175caa45",
        "cursor": {
          "ref": "be3f55ba-f250-4c63-9cba-94a9870d72f5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d0933c0d-32f1-4701-a35d-ff00b09760a5"
        },
        "item": {
          "id": "e0b29228-6cec-4104-8e9d-a32e175caa45",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "13aabe50-0340-43e3-88de-dce99ea60362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9e5d09-8b40-49ac-84ae-f871dbc0b3d1",
        "cursor": {
          "ref": "077fcd95-51f7-47a3-8ced-7cbd8ee2d01f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8db9d44f-405b-4375-ac29-b606601151e8"
        },
        "item": {
          "id": "ed9e5d09-8b40-49ac-84ae-f871dbc0b3d1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "623b8ce8-d704-4ef6-b68a-c38dc94c1c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9824f736-25c6-4f73-8d31-eb20c82b4f8b",
        "cursor": {
          "ref": "31f856b8-fd27-4e65-8e02-b556dd37bd75",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61ebefaf-ab8d-461b-ac93-b05be463edd2"
        },
        "item": {
          "id": "9824f736-25c6-4f73-8d31-eb20c82b4f8b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4c304d67-cc82-4f43-8c2d-68ff5599007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d76af7-da55-412a-9a0c-4b130ad45dd9",
        "cursor": {
          "ref": "8f58c163-d145-4e58-ae18-a7aa7c80cd6a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "51d83066-36c4-467a-bb26-bfa275d4e96e"
        },
        "item": {
          "id": "20d76af7-da55-412a-9a0c-4b130ad45dd9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e18ad5cd-83c7-4909-afeb-4939190b83e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a2e9f8-fc8b-4e2c-8b4a-ed5966d67114",
        "cursor": {
          "ref": "b09f70c2-a93e-485c-8d0d-cf9aeada4f3c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "17980299-c1ba-45db-b47c-4bbab6d3237f"
        },
        "item": {
          "id": "f4a2e9f8-fc8b-4e2c-8b4a-ed5966d67114",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "022a0e8a-a2d0-4be6-bd74-3dfa38f56685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117bcdff-4ab5-4dcd-b0d5-ed0b08bb5e61",
        "cursor": {
          "ref": "1017b2b8-ccaa-4213-9e09-18042912d9bf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1af366c1-b8dc-4791-95d7-ce80c90f245b"
        },
        "item": {
          "id": "117bcdff-4ab5-4dcd-b0d5-ed0b08bb5e61",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "92923185-0f0b-4bdc-85a6-2e8bd5e9a523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0566db0e-b974-40dd-b207-63e6e2980965",
        "cursor": {
          "ref": "e8806f08-b293-4149-970c-0fe6f6bd6ea3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "273c88dd-6e9c-4795-8038-f1e4ffc16c22"
        },
        "item": {
          "id": "0566db0e-b974-40dd-b207-63e6e2980965",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7de5a6fc-2c9c-484e-92ce-08752dabee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d85362-057d-4318-81e9-0e03743b7192",
        "cursor": {
          "ref": "8f0a21f0-16fb-4d33-b603-02141277465e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9bd39b27-0109-4f91-83a0-cee054aa761e"
        },
        "item": {
          "id": "d2d85362-057d-4318-81e9-0e03743b7192",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "71608520-076a-4156-920d-27b5c115bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8a37b2-930d-4ece-a675-114f786460cd",
        "cursor": {
          "ref": "a3eb9c0e-9476-457f-b70a-9db8ca73e106",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f57f65a1-caef-4916-8660-8156994861fa"
        },
        "item": {
          "id": "6b8a37b2-930d-4ece-a675-114f786460cd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "780b5d11-ec40-488b-ae34-3e62bc07c05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b093d35-8821-4712-953b-f67b61379e6a",
        "cursor": {
          "ref": "d218cace-69e3-4bbd-ba90-3fdf2e7e12b5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cd48ecbc-2392-43f5-8bd0-c6fa8294ddff"
        },
        "item": {
          "id": "6b093d35-8821-4712-953b-f67b61379e6a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "555c46b2-1fcb-46e0-9303-f65b48e83878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9677fd-d900-4916-8449-18ddb3925399",
        "cursor": {
          "ref": "812cff38-68c5-486b-94e1-cc8b2581e1f3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "72af7daf-c47c-4301-9ac5-8ff91e96037b"
        },
        "item": {
          "id": "fb9677fd-d900-4916-8449-18ddb3925399",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7e6c8080-569b-46d1-a2df-261f5078f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9993de-4142-48fd-be81-48e5c53d5bc3",
        "cursor": {
          "ref": "98270e92-cd30-43d0-b33b-70a818b4f387",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aae5eaa2-ea94-4dd5-9061-f391dde97c7f"
        },
        "item": {
          "id": "3a9993de-4142-48fd-be81-48e5c53d5bc3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56017480-03b4-49be-abf0-33e60cb7736f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776fa027-e3c3-426a-b46c-a06f9110a7a5",
        "cursor": {
          "ref": "92d02846-7a43-4772-a3e2-5a6f72a2cff9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f857521a-4ae7-441c-a394-7d8cd945331c"
        },
        "item": {
          "id": "776fa027-e3c3-426a-b46c-a06f9110a7a5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "be275577-bfd4-4e41-b2da-0d528a7590b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc399b2-57b8-4b7b-a9e3-e35d60327d09",
        "cursor": {
          "ref": "39fb498f-4d7b-42f4-997f-2e68a6a3b848",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8995e4a4-4bd7-4359-8e88-9e8c46354574"
        },
        "item": {
          "id": "9fc399b2-57b8-4b7b-a9e3-e35d60327d09",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fd6ea3a5-fc7c-43df-a07a-2d8c343b0a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efd0294-e8a3-4f41-acae-c5d428bfdc27",
        "cursor": {
          "ref": "50f0d19b-a0b7-416a-b071-6c5adf6bac88",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "08ae6f4f-f892-4200-a077-659e8af7fb74"
        },
        "item": {
          "id": "6efd0294-e8a3-4f41-acae-c5d428bfdc27",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6d1db79d-dcf1-4dae-9823-90b0f1b8b0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b25cf8-6384-4d7e-ace6-7f6b2ea650d4",
        "cursor": {
          "ref": "03f7de1b-2a30-40d4-9a95-533bba9910ae",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "60720d1b-bd7d-4c4b-b0bf-0ecfba7e113a"
        },
        "item": {
          "id": "e0b25cf8-6384-4d7e-ace6-7f6b2ea650d4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "659a07b1-f731-490b-ae90-ddb84eb113ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249b944-07db-42ee-aee6-f0d2e2822ed8",
        "cursor": {
          "ref": "eb4ad993-0cbf-48c1-84e9-e5fed5f6d7fa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a6f4004e-5758-4d85-8b59-d9e87515ec7f"
        },
        "item": {
          "id": "8249b944-07db-42ee-aee6-f0d2e2822ed8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "18d06c50-54fa-4d91-a8a8-31e251845628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30149767-34fd-4c9e-a408-4007c3fce19f",
        "cursor": {
          "ref": "d9cc4912-9684-443a-97bc-9de7fd030618",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5f350e30-ef1c-44b2-85d6-3dac22cd2bec"
        },
        "item": {
          "id": "30149767-34fd-4c9e-a408-4007c3fce19f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b06f958e-2d24-4bb8-9c8c-be37ceca29d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0545be-a335-4df1-b599-9eddfc0aef00",
        "cursor": {
          "ref": "d674c729-c868-48f3-a380-15da5c3ec14e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf807b1a-115a-475b-a1fc-9613a2874aff"
        },
        "item": {
          "id": "ff0545be-a335-4df1-b599-9eddfc0aef00",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fcb9b8e2-e201-480a-aab1-477d1523d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08295131-04bb-41f8-8d31-f98d8fc66f2d",
        "cursor": {
          "ref": "cfc73ca3-c816-4249-9738-98d112542b7d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4ffdf9d5-0788-4f3b-8eb1-c73909ba9961"
        },
        "item": {
          "id": "08295131-04bb-41f8-8d31-f98d8fc66f2d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2d821e86-6d69-4c22-98a5-6c0e3c985a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c372b23-fb10-4747-8a59-be3a7bc0eb1f",
        "cursor": {
          "ref": "bffc7390-c4d3-4c2c-8e16-d6a8c8712cd4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6082a1a8-55a9-49c8-b2d8-08b17266e170"
        },
        "item": {
          "id": "2c372b23-fb10-4747-8a59-be3a7bc0eb1f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ed61d4ba-ec57-419e-a7c8-561a4fc1c5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc5f42b-b02e-4f82-a560-c8947037f334",
        "cursor": {
          "ref": "7d9099b2-2377-4aa3-97a7-fbfe1a8aba33",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "78e437a2-26f4-4d42-a177-28f0f85c18e1"
        },
        "item": {
          "id": "ccc5f42b-b02e-4f82-a560-c8947037f334",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "457dac83-7ad5-4dec-8c79-2f7e5ba0302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15422f07-67a1-4e95-847b-ca27fc96c69a",
        "cursor": {
          "ref": "2be2b93a-51be-4174-b5a6-63d1da2531fa",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e7f625cc-148c-469c-8a94-b736cfbaac98"
        },
        "item": {
          "id": "15422f07-67a1-4e95-847b-ca27fc96c69a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e1e5246e-95a3-4175-82c4-4992cd2fa0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0151b44f-24fa-4d68-ae09-476870fc54b2",
        "cursor": {
          "ref": "8c095917-f657-4c04-b1dc-8f0885980bd8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d2eb8702-3ecf-4fe8-aae8-9775ad9925f9"
        },
        "item": {
          "id": "0151b44f-24fa-4d68-ae09-476870fc54b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "99fe673c-e3e6-4e10-b8ad-be41bbf3ef87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba37425-4b33-4b43-b497-a0cf0edc6a26",
        "cursor": {
          "ref": "ec842fc0-0067-4c95-a657-33dd78fd649a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6f983789-c55f-49e8-a68b-ef36a4291238"
        },
        "item": {
          "id": "8ba37425-4b33-4b43-b497-a0cf0edc6a26",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0153861d-8253-4436-a8b5-371f35d30aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2609a68-8dc0-4e21-91f7-ecc17aa4bbe3",
        "cursor": {
          "ref": "777e905a-da32-4fac-b93c-1f336db5c462",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f12255c8-c79d-4337-9ef4-550567f9468b"
        },
        "item": {
          "id": "d2609a68-8dc0-4e21-91f7-ecc17aa4bbe3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "61c7c599-a67d-4fe2-916b-517a4a14d8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eccc629-e842-4839-8345-e750bc11fe5b",
        "cursor": {
          "ref": "4d86fc00-13b8-4d83-b3d1-51b58c48959d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1ba92b22-ec2e-4dfc-92b5-b21e88050273"
        },
        "item": {
          "id": "3eccc629-e842-4839-8345-e750bc11fe5b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8e525280-ad18-47c5-915e-c668cdab895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3285bbe5-4ea9-4ba5-92ae-034e427f43f3",
        "cursor": {
          "ref": "66402ccc-1441-49fb-8f4c-d5986fd6f170",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9cb0c254-2bb1-4dd3-9a9b-5e1ed4ca045c"
        },
        "item": {
          "id": "3285bbe5-4ea9-4ba5-92ae-034e427f43f3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "29f9c4c1-30fa-4dc1-a077-418e47ffb61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bdd784-f35a-4721-9cbb-49fb088542dc",
        "cursor": {
          "ref": "748a5988-7d9c-4cbe-8d14-de481dfe11c0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "034d7b37-5dc6-4a76-bf60-f86aae82eceb"
        },
        "item": {
          "id": "56bdd784-f35a-4721-9cbb-49fb088542dc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0b692ab3-10e3-4e89-8fd1-3cf764af994a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f01598-fdd6-420a-b7a8-41234c2672f7",
        "cursor": {
          "ref": "9f0278b9-66ab-479d-af83-f2cdcc9c43fc",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "089dac3e-a1d7-491c-b4da-188c0b8d1a4c"
        },
        "item": {
          "id": "32f01598-fdd6-420a-b7a8-41234c2672f7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "47f9f597-d7a5-497b-99b5-e3aa3f03d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e4d3f-4c48-43fa-98db-8fe8f10354e7",
        "cursor": {
          "ref": "10865302-46c4-4b64-b2b5-df511a9f86ff",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9290290f-b93c-420c-8702-eb35be91fb36"
        },
        "item": {
          "id": "299e4d3f-4c48-43fa-98db-8fe8f10354e7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6e6d7dce-cf5e-4b12-aac3-ad2166cc707b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47988d7-97e4-44ef-b825-590ec0fd6c2d",
        "cursor": {
          "ref": "15f25a5c-4cc9-4a40-ac8e-f603c729dfc0",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9c0f2438-6993-4d27-b4ed-3fb031dc21b6"
        },
        "item": {
          "id": "d47988d7-97e4-44ef-b825-590ec0fd6c2d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e8919178-50cb-4f49-baf9-00c042084eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69892f11-90c2-42b3-ab8c-8487e10744a3",
        "cursor": {
          "ref": "1e3c076b-7fab-4294-8b39-5a47e4e81a2d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d22fbb87-bf4b-4c4d-84cc-5478ee5de9ae"
        },
        "item": {
          "id": "69892f11-90c2-42b3-ab8c-8487e10744a3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fb2a02e5-0d28-4e9d-81bd-7c1eb6bfb657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d5a4a5-cd84-450c-a516-d2d2dfaa0854",
        "cursor": {
          "ref": "9f6f0598-6216-4c7d-9ce1-a4003b37941d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1aacf89e-3c98-4c46-a6af-53029d0d4e2e"
        },
        "item": {
          "id": "e8d5a4a5-cd84-450c-a516-d2d2dfaa0854",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "165ec217-fad9-4fd4-92d9-f9680d6e9a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cc48a9-58cf-481a-89de-dfbe83602c4f",
        "cursor": {
          "ref": "4397fe4f-12e1-4b56-bb19-ffbce9b16ce5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2910cec3-7f60-4d43-84c3-4fd4a4a83cc8"
        },
        "item": {
          "id": "41cc48a9-58cf-481a-89de-dfbe83602c4f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c38c86a4-29f2-45b8-9b54-6c6e826ed7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c62a35d-0d70-4598-8ab1-17eafc88bae4",
        "cursor": {
          "ref": "cde65221-bde9-44fd-a8d6-cf26b1f6346c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b80ed805-de36-4e8d-a3fe-c407ea9c780c"
        },
        "item": {
          "id": "8c62a35d-0d70-4598-8ab1-17eafc88bae4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "38a1edf5-3584-40a3-b5b6-04b06afbffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b211fc69-ba60-4222-a823-555a99fa99de",
        "cursor": {
          "ref": "f73cf493-c34f-4e7d-8087-b0103996ba01",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1d53d72a-2d4e-4c7d-842f-16893a9ac091"
        },
        "item": {
          "id": "b211fc69-ba60-4222-a823-555a99fa99de",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "881a98c4-3c53-4a88-8c33-6190a6d9e9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcff749-c164-48da-9e2f-5121fb99d88d",
        "cursor": {
          "ref": "07d29c3b-c1ac-44ec-b197-c0b812aec2c4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "566471da-8d07-4160-be2d-909d13474d02"
        },
        "item": {
          "id": "8fcff749-c164-48da-9e2f-5121fb99d88d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6d9adf4d-d1cf-4736-8c4e-125f5b550160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a816d784-b9c3-4f30-aed3-0edd06bbf44c",
        "cursor": {
          "ref": "10790eeb-a20e-4b2b-9732-a4ddace453d8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "008384b0-f1d4-461e-8c41-c3d5869e8356"
        },
        "item": {
          "id": "a816d784-b9c3-4f30-aed3-0edd06bbf44c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d99506fe-9471-4d24-8719-32a6c537544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34952e6f-4b0b-4b02-b2fb-9ee7572f938f",
        "cursor": {
          "ref": "394563cd-b0dd-43f1-8869-5f3b996bc764",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c3d7091a-7b6f-44fd-a100-91091efc001e"
        },
        "item": {
          "id": "34952e6f-4b0b-4b02-b2fb-9ee7572f938f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bada234a-0668-42c9-89c7-c9a585c1dc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdc7965-f7a8-4d86-8f78-1faf09151e5c",
        "cursor": {
          "ref": "2f5b8c04-40aa-4fd9-97c5-2a281959b518",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "45c83e4f-1c72-4d38-897f-33aac55a5adf"
        },
        "item": {
          "id": "4bdc7965-f7a8-4d86-8f78-1faf09151e5c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cf990d79-97dc-4b9a-9aed-d8d659f49485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d04303-3331-4091-9095-529943ff2283",
        "cursor": {
          "ref": "2e57a2ee-6700-49c9-8cfa-67ab5024eb70",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b01236b0-01e1-4f94-bd1c-a8692472517f"
        },
        "item": {
          "id": "a3d04303-3331-4091-9095-529943ff2283",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2009135e-18be-4ddb-a01a-1ce0cbec6003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049a4ef2-1e4e-4192-be3b-47055097383d",
        "cursor": {
          "ref": "3f185623-e852-412a-8c71-ccc06ec04cb7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1a2612f0-0255-4953-b198-fc8908dd13b2"
        },
        "item": {
          "id": "049a4ef2-1e4e-4192-be3b-47055097383d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "18d39af3-4e0b-4cc4-8975-7c548a3180a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3fd704-75e3-4d6a-8aba-3194c4670933",
        "cursor": {
          "ref": "55be3311-4454-4e5f-b1f7-b85ffe93016c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d60ccdc1-7b91-4bac-9db4-f9a04cfe7309"
        },
        "item": {
          "id": "6e3fd704-75e3-4d6a-8aba-3194c4670933",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d2ad7461-94e1-4833-8c8c-f159135f27d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa2b5c6-c979-4ff8-adff-7bf3c1cc6d75",
        "cursor": {
          "ref": "f7facd3f-cfb0-45b9-b9dc-06320a062687",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f948f78c-723a-4cd1-bf16-b9577faac38f"
        },
        "item": {
          "id": "3aa2b5c6-c979-4ff8-adff-7bf3c1cc6d75",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e4b1bfef-91ad-46cd-af33-b0bb5607c615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559427d-ef8f-4ce2-ac31-2d140d278304",
        "cursor": {
          "ref": "62e136c3-39e8-46cf-9b02-d80ff77748b6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "186ce243-36ea-4fbb-b550-f8e6753b21f4"
        },
        "item": {
          "id": "d559427d-ef8f-4ce2-ac31-2d140d278304",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e973ed09-f90c-414c-b9be-ea9306aea51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03b64b7-8478-4b39-bf89-1191668f213c",
        "cursor": {
          "ref": "cfd4b73c-6379-4aab-b3b3-62558a43c3f4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a199c0a7-a397-4187-b88a-cb7f3693eb55"
        },
        "item": {
          "id": "a03b64b7-8478-4b39-bf89-1191668f213c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "45335e0d-caea-4032-991d-0bb5e31a009f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafbaa3f-c60b-4ac3-8503-242917eef09a",
        "cursor": {
          "ref": "65935769-538f-4af7-89d8-be347b63815f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "21f3fac0-45a0-45c6-ad29-035c9c194d52"
        },
        "item": {
          "id": "fafbaa3f-c60b-4ac3-8503-242917eef09a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "56cd5252-be8a-4b6a-92c0-f213cca45a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449af9f1-7966-4d3c-b0dd-5777124078f1",
        "cursor": {
          "ref": "9114ea9d-e6b1-4a50-89bb-42ecb24984d8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f8084b07-11f6-4fe1-8012-a8645a95ba6d"
        },
        "item": {
          "id": "449af9f1-7966-4d3c-b0dd-5777124078f1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "88e2f250-22cb-43dd-9582-d2a030b5aff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb710f8-847c-41c9-8983-aa4c44d0bb3b",
        "cursor": {
          "ref": "19ff862e-0b2a-4070-b879-4a248691f747",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a6fd923f-f500-4598-8af8-ea84412ca5c0"
        },
        "item": {
          "id": "beb710f8-847c-41c9-8983-aa4c44d0bb3b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fa27c8e0-4a72-493b-936c-b4a59ce59a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f34553-8b54-4dfd-a89d-29335ee7a444",
        "cursor": {
          "ref": "6c202a30-65be-49b8-b121-2e6959423599",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "db4c02bc-c137-47c5-bfef-2a6d605ceb57"
        },
        "item": {
          "id": "d9f34553-8b54-4dfd-a89d-29335ee7a444",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cf3b6782-cbda-4178-9c8d-f4f6d3e407e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33d9b03-debd-416a-935d-a3c0f6aa6ab5",
        "cursor": {
          "ref": "cf4318a3-8fab-42dd-a036-d6e6bf6cb829",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4a1d0abf-840e-41c9-807d-acfc82d0aabf"
        },
        "item": {
          "id": "f33d9b03-debd-416a-935d-a3c0f6aa6ab5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b638b961-f661-46ef-b2e2-99f31e6f5ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba673b5-aecc-40c4-a90e-4955ddc1eb2d",
        "cursor": {
          "ref": "8e1c2bd3-3dc1-46a2-a197-937a9f463d69",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "84be97d4-a426-47d9-b0c9-5f9e02ab0413"
        },
        "item": {
          "id": "2ba673b5-aecc-40c4-a90e-4955ddc1eb2d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cfce4d1e-4f78-46c6-b44f-50814938e1eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c478a9a-36dc-449e-9e82-092e205f50a0",
        "cursor": {
          "ref": "1dcdfd68-c67f-4a08-96ce-c558d0faf834",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "27ed5ecf-f568-4344-b84d-f6fc0030df76"
        },
        "item": {
          "id": "0c478a9a-36dc-449e-9e82-092e205f50a0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ae729cd3-065a-41f0-9b73-f2293726052a",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b1b1a2-bc04-4278-bdf1-6e2a18f6a379",
        "cursor": {
          "ref": "c4b02f41-a779-41cf-a3c4-58deead32f85",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "94423b6e-bcde-4702-b5eb-799c856b9490"
        },
        "item": {
          "id": "40b1b1a2-bc04-4278-bdf1-6e2a18f6a379",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a1d64f5a-42e4-4184-be83-8feb5b770582",
          "status": "OK",
          "code": 200,
          "responseTime": 1792,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ecac83-9e77-4376-893e-3a517922c840",
        "cursor": {
          "ref": "990d0628-5339-4f5f-96c5-8c7228f38ac0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "809edafa-c7b9-4157-807f-957d694dc74f"
        },
        "item": {
          "id": "e1ecac83-9e77-4376-893e-3a517922c840",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5913b9d6-fefe-459d-b414-72c3f58a0a90",
          "status": "OK",
          "code": 200,
          "responseTime": 2509,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c392c8-5a5e-4b4c-bba3-3f0e34681b63",
        "cursor": {
          "ref": "e3fc1e4c-bbaa-4846-990c-3a16439d8b40",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6946d892-b805-41b5-8821-af445a6613b0"
        },
        "item": {
          "id": "24c392c8-5a5e-4b4c-bba3-3f0e34681b63",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2366d3eb-4ab9-4f6a-9948-55c5f14bcf22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c392c8-5a5e-4b4c-bba3-3f0e34681b63",
        "cursor": {
          "ref": "e3fc1e4c-bbaa-4846-990c-3a16439d8b40",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6946d892-b805-41b5-8821-af445a6613b0"
        },
        "item": {
          "id": "24c392c8-5a5e-4b4c-bba3-3f0e34681b63",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2366d3eb-4ab9-4f6a-9948-55c5f14bcf22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c9227-2209-4876-bd4b-1f005fbaaccf",
        "cursor": {
          "ref": "2b75edf8-ee68-4432-bd45-b57bdf9aff50",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cfd9cfe0-b32d-4a66-a5fa-b31b21823654"
        },
        "item": {
          "id": "741c9227-2209-4876-bd4b-1f005fbaaccf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "22f61c9a-bd16-4188-9d2d-10c21dd5a820",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87811b4-0330-46d7-ad7f-93f25ad55e90",
        "cursor": {
          "ref": "1fa503e7-000e-4e95-bbe4-fb422455a41d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c2fbff67-b980-4982-8ad0-55516505c598"
        },
        "item": {
          "id": "e87811b4-0330-46d7-ad7f-93f25ad55e90",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7737cce1-2ec6-4fba-baf0-22476faa0c3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}