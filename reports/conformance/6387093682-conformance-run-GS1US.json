{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "49b862ae-1477-4d6f-9b02-ddaa9c3d413c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d507e7a3-28fc-488c-b9f5-9a0c1d95cda0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b2a024f-5f2d-41e6-884b-c7e47b61592b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30526fba-79f5-4f99-9dea-43dab8674e3b"
                }
              }
            ]
          },
          {
            "id": "a56efdcd-ba17-4e79-97da-bdb5b06cdc2c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7cf3ebcd-3d7a-4439-8133-b41783216d59",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6c593373-2bfe-42b8-ba4a-24ec5607437e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "57170da7-9d3c-449f-ae8b-a8891ecbfae3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ef03614-159a-4ef9-88cb-0c1e0608ef3b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e7cd7d5-d565-4212-a04d-3b1fbbd26fc1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d35addf-6fbc-4cc5-8372-fa91a702bc6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "374d6a8f-43db-4942-a7c9-259f82a638ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce3ba3c7-a0d9-4ce0-abfb-645122939ec6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8393775-8d6f-47eb-ac70-57525924b8a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33c36234-a4d3-4e63-ab59-342d85fe52d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab8add4c-e5bc-4172-bcfe-0b260a4e46f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29809e47-3c1f-4c2e-a881-d780b8337948",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "03ae31ee-14ab-4158-8ab0-d76533cd4773"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a31ebb41-618e-4600-bb29-e088b275c8ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13129800-004f-4410-ba38-0c4db4d8b3ab"
            }
          }
        ]
      },
      {
        "id": "5fdcf2ed-9680-4e36-a810-ef258ef2bce3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8dbb5b22-55e8-4b5d-bf6e-de3f30ee6fc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ff42abe-d07d-4e24-8ba8-b145ac7cda97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2aca16dc-9013-4663-9f52-01732088e29a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47f2543-c4bf-4253-a437-2251fe140070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4818cfe9-75ed-4ed9-89c5-df018005dd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed27be26-bc3c-4c73-a983-3ed3c3c49186",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e21e4fc-4a9a-4961-86fc-0fd9366db0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "584a80c1-5090-4bbf-8351-f4d707c653d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3690c2a0-0b09-476c-a6f2-431d6123287d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003e719b-8703-4914-9e39-0ec23a23936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b57338d-a1a7-4ec5-8843-e09685cb6f74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22debbed-f121-4656-854a-ed3ed3fd9e78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f79d3e4-a4af-4d46-bafa-2842d7aeaf49",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ada96de-a28c-47db-955e-946b6a589a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97fc846a-6ea4-4a89-adde-b9587cc9294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249d5197-c2b9-425d-97ae-c94df50b75ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd4e903-852e-49a5-aa00-301b9eeb2f4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "512cd45b-9a2f-43d2-b36a-c65427c01c3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23e3ce79-26b2-434f-9ae9-69bdf1709da8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bbf42c3-daef-4294-a538-959dfcca29bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7044d177-728f-41a9-92ec-77e6979370a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fb6997f-8907-419a-8de3-8de0c4db4b7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6ad56ca-a3a5-4ea8-a714-9dd33d76f12a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eb761c1-4629-461c-8070-04dbb265ef24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ab3ccad-6bdc-4b3a-97a7-fb1101abe262"
            }
          }
        ]
      },
      {
        "id": "6c28a800-c95a-410b-9631-2dc718f4d793",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2a29e567-04ad-4a5b-a233-d05b24e35d5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4735250-eee6-428f-8094-c292661ebf67",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "76360b5a-db8a-4e57-bb71-55105ee7f40e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb131f3b-412a-4f01-9057-bcd3f13e82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08498c62-36fb-4438-9ef1-2f64ad374bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17bea0a-af8e-4714-aa77-7c261000880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a19483-f3cd-4203-9e7a-b338da4b3815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdce0ec-682b-4a10-b300-ba66c9e17fc7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a416fc7f-c752-4b8e-820a-6356ff2447a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ba80f7-d184-4282-8b46-89db33d5f224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbd5124-1fc0-4842-9c34-b8cc31b080e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32cd12e8-1912-41f2-8605-71830c957f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec910bd4-eb57-4212-b22a-b669683e1aa2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf46d6e-4a1b-4aa1-ad9a-1bbef1d5c78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0804ea5e-8f6a-49d2-af1d-cfdad8b96390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c4272-e1a8-49c7-b17c-f7422f2653d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e4e1ddb-dfe0-47fb-b151-3d013e445d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98e2a96-a154-4c45-9e0e-7a3802bf27d8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209e74c8-4be2-42b0-b052-62a4cdab36c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6d91a7-e02c-4960-921b-17e1f8a9fee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8736a555-ef88-420a-b426-0ac3b63daebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a555c1d-671c-451f-a992-ae4c7df84596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfdb3b7-a674-4174-95aa-c1eecf210c2b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5462bc-cfbb-4cac-8b3f-04dca6365985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f273026e-b62b-4d19-9d53-806db58820d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4ce33e-ec75-44d2-8898-c7dae1b2f310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94fe06cd-d299-4ebf-8dcb-a2c8eae965ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c56b9-3ae8-47b0-87fa-8a711e4a1d7f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c14c15-7562-4bde-8f64-f57a524cd7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cf7c08-2b2c-4b1f-9b09-53bb3e889ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2dd4fd-3205-4bd7-80dc-50e478a49fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52e51c69-6a17-4b48-be52-b881f5173940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fc0bd8-e879-4626-aa11-fa2e34fc75bd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef9bf5-47fc-484f-b8a1-adb9d0e3e218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13722cb6-1fc0-4ebe-b618-a76239ae923d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b5d261-bed8-4aee-9a4e-21f979887415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a43ceff-3553-41d9-be83-22e274e79bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11030cb-3c54-402c-bf13-f199e4e808f5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1dd35d-5cbf-4242-95eb-df8edda95c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f775b7f4-19ba-4bee-8cca-8d721662ab40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1de46f-e3fa-4be1-b6f4-85366d092e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "febfa7a5-9044-4141-9f85-1df104e24966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c89a86-1cd6-4635-8260-9ebbfbe539b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f363a12f-0896-4b1d-b5f7-369dc0231751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55db117c-48e8-4e4d-ba2e-0397832a71ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94f29ad-c41c-44ea-9285-95e8269fd50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dabddf55-d340-473e-9ec2-531ae1beac38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34de7db-77bb-4281-967d-16360d27d159",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0020ee-b4e0-4af3-bbda-84d19b7c1c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953b88d0-df81-4ada-a67e-4c095cf4033a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f327b14-693b-4550-86a3-88eed7392a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5b1236e-5ce6-4ab9-be17-d035a6191957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1326c50-8ec6-4bf2-9c82-1813ece17fcb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6fe0d6-03b5-4533-a15f-e7acb0f548ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91def0c8-beac-42d3-993b-ae6744af5127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4749ee-baf3-4e18-a5e1-6f6caa4d6f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98311567-2041-4fe4-acbb-9e7c20386107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54a9ad5-a706-4d4b-9d30-2ed265ea0e1c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41822ba1-065e-4caa-8273-e0179dcd3e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6ec995-3760-4ba9-958e-16a2f64ff668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a71d8d-e792-4fda-b95b-854ee2176cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83cd53b6-7ff9-4a06-8e76-de169aebf9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a281df-fdcf-4147-930d-e2a18e3b0bb1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e208ea60-1d37-4c07-9ca9-10b9739d37f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3ed85e-8e11-40ef-962c-17c580725cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5cacf-96c5-4f8e-9cb5-31623b7b4ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "661f3b93-0c05-4416-8e12-a4ffd8d5c61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d149608-9932-4db1-bec9-26594ebba0e7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecb30b5-9934-44ca-96d3-8eca3a1f0a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae3fd6b-34e1-4efc-b610-b889594608bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec32f57-533c-43ee-be4a-aea0c5766836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66ec13f5-df07-4f35-9780-dce12050f1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7177eb2c-f148-4cf5-9c77-b5ea7fd9ec25",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e85b2a4-c1d1-44ac-a246-a107635c5f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c163f6-9cbf-44d6-ab4b-72afeb7ed65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e95e1c-3840-4976-9e29-baf32cfd63c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "860ea989-92e0-4784-bed2-25c22594137a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2258f9-d1dc-48f0-8529-49111f7f722e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90416230-afab-4225-b904-5444aec02d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e352e5-2664-4ec9-b931-ef686fe0925c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b196e0-3e2d-4f79-a2f9-213e44906372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bba1ec39-953a-475d-901b-514850b03ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848a22df-b0a4-4720-9538-e1c2c5c6e0ca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d46d6e-1f26-45a5-902c-8305cb37dc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cf571e-df47-4e3a-8872-bff32749a4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad91a872-09c3-43d6-a88a-19db8b2b2997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aecd3a6c-d17b-499c-9c18-ffab17243db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7155fd14-e3f6-4db7-ac43-d3964dc460d7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3de1b4-5182-4f49-a438-bf887d60597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7851c321-39c0-4097-9a3d-ede4b642884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba0565e-56ef-4624-be60-32305454c81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5416db0-4955-4a38-9230-12f960f92965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f734421d-4add-443b-8d9f-c6b11c2032c1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7278e900-7e5a-41d7-b635-6e2f86fbfa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16c8233-ae32-46e4-adeb-c913546e8faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e669128-5caf-4c1d-b3e1-12a50e53b679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19dfc470-1e5c-4b15-bdf2-bec8a3eee892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac776e-166a-4f68-b1c6-5e4a76684852",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4bd994-4c18-4b45-bb99-4fdedcf8416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326852a5-2325-4c61-85f2-a3d0cbc136b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a41483-3ad8-416e-af00-b52859e6f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f1f766-ef4d-4e4c-943c-108348df31c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a107377b-bd3e-468b-bca1-9a17c33ab0fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7369b446-430f-485e-a383-d2db8db70bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b41568-5fd0-4177-b110-f6ec50c5f6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce1bd7-e6d2-4ffb-8bd2-44cf92723898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed70c16-0a0f-4c2e-aadb-708105d7acb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e7614f-4912-449e-9aff-0faf192a08f6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc995abb-9bad-4a6d-bb97-ab9c0f23f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902a1c25-4f48-40ea-8468-e9b0903623bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b16139-44dc-4c29-a397-04081720a1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58f36a6c-49eb-4f2b-ae2f-ea313f6e9798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fe8c0b-1e11-4d69-8806-5ad8c12b3ff0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccef48c7-6468-4a39-9b23-a488edafe498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc94f01a-98c2-4f58-9eed-6dacdf13552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0acc558-727e-45cb-b0ab-6ec4606edb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce45f2cd-2106-4fd1-9d9f-f0006c3ea1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2833e1-b4e4-4f82-b2db-88aacd34578a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3701a6-e2ec-4171-a50b-61a3883a3389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3183e1-755c-4050-a324-6aacd5617d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93f47a4-bd78-4caf-9dbe-dc31f56ca53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d85296-816b-479c-b733-ce9d0001ca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820db22b-5f74-4376-b980-02c8a808e196",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a4ce9-4810-4541-8bf5-b9ce116e89bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c28c4e-4cc8-4427-9347-763b3e5b7668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186e4dac-bdb9-4790-812b-6d47726d1242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7aa1f9-e4d4-4556-83a9-f8ae8d046a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8add9f83-9bfe-4e08-a5a1-28a081186dd0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb904627-2591-41d2-b371-1271b4ef2dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9c450f-d029-4423-9104-c27895d13367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a59c398-cefb-4d15-a235-3a92be5fd20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95e3188e-b124-4c27-b322-975c87d78716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5044db-e49b-44bb-a45f-129865cb559c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6343ac-4977-4352-80ef-f438629e5dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36bea4b-40f3-42ef-a2ff-ad51ba647f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ac2cdc-51b1-459f-8f01-19ee17d6c21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c73f133d-389e-4f62-9ebf-f844787ca290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5bc0ab-40c0-4f7d-8348-1efd543c3772",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7825508d-e178-4e65-94cb-54bb2022666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e956f626-4d10-46eb-93e0-8e6ec36b485d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b43d0f-53bf-4c6e-87f9-25b1ecb46fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f45079-c6b7-471c-b8bb-9457c35d7d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa8d5f3-b1be-4885-b594-f71ac39cec5f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5b1f18-05f1-4baf-8921-391e239525b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb60e144-c72e-42fc-a4e0-ff6723dc8e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca6d307-e6fc-4a70-aa25-92e1bebb8559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8130632a-2bcf-464b-b1e0-177b3c6f3517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5a6326-5e5a-4119-b192-7fb5f2788df7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b460d00-4e55-46cf-8f2b-174f2e9e6311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdc84ce-317f-4ace-9ca7-c6c2ff20659e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6a0952-480f-43d1-b457-fcfa9acb07eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91965a1-7125-4b24-afc6-661f500cba22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e56eb2-f6be-4b9a-b3ab-e8962063af1e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c645f1ae-6199-43ac-879f-8bfcf557a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158a3b16-88d9-4f26-b40f-a32e8f087f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f507c4-1a3e-4e26-b35f-022e1290d77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7379ea6-3c15-434d-97b2-f158fa7c1d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f0395e-c23e-45b2-873c-71062b8d1287",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad817c1-600d-42a8-8891-8f7929b0b5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a30c29c-dba8-405b-8775-49f93ccbb243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696e6fd1-759c-4c8c-9577-212bba807793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff90b36-a59a-4203-a85a-712e737d8f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c9a7a3-77e7-4bf9-9478-18804aefbb3a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f07d55-502b-4f85-af1a-7bdffac96d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf92c31-bf0d-49be-aeda-95de4582e81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf354cf-8a14-4edb-9034-ff04264e2ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0160beae-fd7f-467d-8f1c-6e76fcc2f7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077d78c8-086f-4237-8de0-7d5621d3ef0e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1468d613-7603-4e58-ada3-f767962f2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df4b9c2-d07d-4417-b1b1-ce43d23a02de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434bd7da-023c-412c-a7df-4ea950019eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc44f70-f1fb-4c40-b82e-fe4d2a6a6a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7878d52b-818b-4baf-8210-dbc6c3be2565",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be25889b-bdc0-4cbd-b844-4d12a080f9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a41d02f-7ac5-4f74-8617-eafdf4ba9efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1338bfc0-22e5-4a1b-bb91-b827a3b661d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b671e2b1-2033-49ab-a128-e11f4e30c59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaf503a-a32c-4b46-affd-4acc7e47430d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f04765-9891-4af1-b04b-e493d3790380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "479ee46c-550b-4932-afcd-b1307ba46002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201039b2-ae0e-4a57-96c8-51d7ca8c959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e581dfe-8074-4547-aeed-36fb0f0c82b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a609ca24-0202-489d-9e91-6de08efeea2a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f30dec-7e54-4b94-8645-86acc0c7d912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3257d05d-9d33-4002-9057-acb7f4997089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db06edf-3b59-4769-b1f2-ce6eced269ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2629ccf7-39d7-4153-ac35-f859513ec734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcd15a9-a6f6-44df-a791-78506e11537d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70996a3a-d199-4e2d-ae7f-442a2e835558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1decec-7609-403e-82de-ffd714c9292f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b480feb-aec4-4f21-8767-e2c0a6abd33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2405313f-992b-44f5-984e-7d73f1a70f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed9d871-6cd1-41a5-8d54-d63bf4773c06",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f29967-aad3-4e46-8b1a-57d9cfcc5f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37151035-66c2-45fa-a206-cef68797027c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace8c712-5048-42dc-8e3a-37968faa19d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6016e2-6e9e-49da-b685-2acfb737303b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064fc3a0-a64f-4992-9c39-e5af8247f3c5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de468b09-74c4-4738-a601-730910838dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56917885-7a89-41fc-a87e-2d2aee8f1596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2cbd86-2ecf-40dd-a95c-f0a38515c1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a1bc86-5b59-4afa-8100-8e7ded6fa4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be80c38-f83c-4bb9-8659-10291d62ae5e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee731f59-8a64-4c9a-8d8f-9339bbc4ba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b564f40f-b368-48ae-be44-ffaf2f4d5c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae3fc84-0850-4e6c-82b7-9205987d55c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1436e461-db27-4b80-8ddd-f1e25e4814ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8c2a3-d71c-4d76-8a33-71b20f35c55f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9963f7-8b0f-4139-99b0-a3f55f8b46a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e46822d-d65c-4971-9d30-88faeeb4f790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b53ab-1770-4f03-966c-6086c0511f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf7ebb6-6b5b-4d8f-a080-0e59d6877388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c41f0cd-583f-472a-8811-4f7a35a1e1d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a9776-8b93-4af9-98a4-b61805105af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ee437d-c344-4a89-a51c-6190d48ed270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db4751d-3fb9-4a4b-b86c-7b125b1e4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "13235ba7-5129-455d-becc-a79e3218bc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3465f100-cfd7-48b8-aaea-5142fefd0746",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42df299-e90b-49c8-a54d-c91a6451bd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50aa5740-5c1c-467c-9942-664c64e23a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32398b0a-d087-4cbd-ae19-6c92b79deb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3af245-c16c-4ac9-b797-400c82683764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5016077-4871-4e99-b8f6-a8cafe4576b6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7fa55d-9f7f-45d9-8766-cededfffc6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf7e715-c542-4eb1-99c7-f35a5c2f2ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da4d00a-8a44-45f4-9de9-11e50c61e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a18f138-8aed-4b13-af67-52dc44f83859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b12eecd-7a07-449a-bc62-e8586acf9fd1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5501ad2-8bb4-4079-85c0-d011311f306b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abad768-e1dc-4e90-b3a2-3b48da050b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9d8529-e084-4ee4-9e9d-50eeac3a5f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de35ac5-b2b4-4c0d-9a64-f03000546991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ff4063-c022-4b85-a343-07e2ec0b1b6a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cae6b8-f30c-4701-a42b-acbc0a0a6e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14e1c6e-13e0-45c4-a4a0-89feba7ab77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ab4d13-499c-4325-a4ad-1554777f311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8d556f-7d73-40a9-8eeb-1646340849d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60438244-d933-4f38-aa3e-9d68c7996259",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af44e6a3-96fd-4c99-97de-14a2512bc825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1c96bd-0a85-44b6-bdea-6b9d5223b6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073d969f-6655-43c0-a7ff-073b123deafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3878a0-4ae3-4367-a6ff-357a787e746d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2040423-713c-4422-8684-7110a26d4fe9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636b3cbe-1cb8-4e22-b9c9-78034b5e3c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55f52f4-7930-45d8-a03c-7771222098a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647e3cbe-e240-4259-9df9-5e6a432678ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08442001-6c0e-45bd-8254-fa66be0be54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6af5f43-316d-4ab5-ae18-8d17a355a646",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcf4457-26ac-49d8-968b-0c4fd0984108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f6c06d-0129-455f-abcf-32f5248bb12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4179d45-7026-41ac-b300-d1cce69f4176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab048166-4bde-4526-b0ec-1632b00da8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba66bc07-4eab-4978-aa9b-eb3df622e742",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5fc6f6-f37f-4f2e-b4d0-19bcb0942b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb89f05a-188f-44f7-baa3-094acbe32ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614910e7-a243-4159-a02f-0061fb953493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa515504-4338-464f-a9ca-c7ce6f0ede61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e5b2ab-e303-4499-a59c-b452390c2b9b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41cffff-0c65-4b54-9be1-2367fdebb2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d798ae-e29a-4e8c-9348-ecc8651f4b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55a4aa0-13d7-422b-a728-fcd1fcdc5571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5f96af-0f28-4e7a-9004-85347edabd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7474602-87cb-4ac7-9361-8430d2c5b2c8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8eb870-7826-4396-be14-776d0c41097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8514360-864c-4cae-af87-dfa55b83e272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fd95e5-2be0-458b-b498-b1fc61648e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b86f32-d7fa-4ad4-a5c4-55dde6cfc0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01e6794-de79-418a-81b8-7dd74b39264b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b28fe2d-aa85-4ac2-87b8-a045a746e007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befbd3ea-4f29-4de9-a585-f9ba2b0fd1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e30dfc-f1b0-49fa-b1b8-d364f06faf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "953957ac-4112-4c26-8ee4-34e4b56cc066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf54d6e-7c58-48fe-a615-03bb3c27802c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94c468e-2a15-4770-9ff0-a424e4141ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6122b0a-1367-48ea-b91a-cf9fdff54b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693536b5-d37d-4448-8d8b-387fc7dacd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caca0da1-c1db-448f-a8a2-43783b5665fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c338001-6ddf-4705-ab8f-ec7e22359ffc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934be9d9-417b-4c85-8184-e2fa599ff42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3bb2db-dab9-4ae9-8b50-5abdf6a23272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81131a41-b420-434f-baa4-3ab99d7a84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ed768b8d-2864-4383-991e-18d12f3a9a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f50edc-0221-4656-a3fd-c1fa7a030c43",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb71ba-53e0-40d0-9543-600192a45b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f237eb91-c26f-4636-8e23-c83d8b97b7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5821c3-4621-4d7e-8a7f-407721b27536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49365e7f-a230-4fc3-b4b0-12ad0836c631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b232386-9251-4c0c-a755-21a30d3de4f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae1f681-2025-44aa-984e-e53046c2ff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dcceb4-4905-40ef-b869-9b3255d16f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6028c6-352d-4cef-b38d-fa781c952711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba47f9d4-d84e-4ac4-81f6-aa621649beaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc61166-c3d8-4137-8bca-2ab9f6224e7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a9f1e8-8367-490f-94e2-2b70ddafb2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6e62bf-7009-47a7-8cd9-c3e56c9563b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371ad33a-c26d-473f-aa03-4e4661bf0e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2a63e3-a9c7-4655-8e7a-bd3475acb69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e686fe83-191b-46d3-857e-c6978193a678",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0ba07f-2d16-4478-82b1-bd5c910c78fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8284187a-c152-4cdb-92bc-42d7902324b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6f525e-5fc8-4a55-bd1a-4fb81bf7a7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a017aa15-4132-4c78-8876-fe9f28f4af8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7ee2ea-5306-476f-94f6-6a7370728d81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401d5586-ca8d-474d-b2ee-3133797a45be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa4722e-257f-447d-987a-2432610fbea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42fa8d4-81e9-443e-a0d0-d863bacf6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "242f964f-9114-409c-b498-30449594550d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175d5f28-c792-41a4-8f6b-5e9c7a5e30b2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3abae8-ebb7-4d31-b7e9-5b3076795b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80abefa2-ab04-4b18-ba88-4c95084e0ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec7c862-7fa3-4b21-ab2a-75f653499028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ae6c80-a086-4f94-8c38-9ac9d6f00c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d031ae6b-771a-457f-bc96-5286e80417d8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06f76f2-4587-460a-bc72-3464c8f15b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a015c80-76a8-43ef-9e4b-def4f745fcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c34634-cc9a-47b6-80e9-34ac43bf7e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57fe6570-26e5-49c7-a326-2f13ff59df69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e54631-711f-453a-af96-3554a7d186de",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac9e0f7-04c3-4955-b03a-34fba3d596a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71368ab-97b0-4800-a263-caf75fe079c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f4fbfd-d564-4f45-aca1-be34459106f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4a0cce-3d0f-4e30-894b-41d353e74a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43293238-826e-4b92-9fe8-a10693325273",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788a915b-423b-45e4-8a61-0fe0dba2e074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dff50d-8203-498c-8729-bdfeb23dd8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b264a70-0fec-4194-ad78-609808fe1636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b320284-5f03-4621-8ad0-314b044b4b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afa156e-5981-4e71-925f-74d722c2bc46",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231c4ab4-9bb4-4614-9664-2439d7c2ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30008088-2527-44b8-a01c-fdcfc04a047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e3a715-bf62-45c9-878c-730e73631d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80326323-768b-4a45-bee6-3e864fea5244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e697572b-cef8-467e-96bb-31d7804c60d3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0f534b-2d58-47d8-879a-282e6971b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d0e1ce-79e2-4180-bbc1-e1ac2ad38f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f76c5-2f9f-4ce2-afa2-a8d0105feb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44c162d6-3da7-46e6-8676-c08133d900f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf174a03-4569-4ee5-ba7e-9816f8948cd3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5170cf9-fc3d-4982-8442-acc31fe4e261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834bc00a-7db2-41ff-bf12-048c67ac9d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a02eee0-3fc2-40bc-865a-5e5498a7c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76b10ec-1864-4789-bf3e-487466b9a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f41021-fa41-4ba7-b133-4198b45eef07",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc46cc05-8ca5-428c-89d7-527b0ce211ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d62ccb3-da07-47b7-bbe4-8e6a77f87744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf15b3cf-362e-4f18-9f0e-be855596bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3341d7c4-a0f8-43fa-b1d8-88950b4a86e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a317699d-0ff1-41dc-b382-510307bfbf67",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68af7d67-14e0-4bfd-be54-0c9d4d8f8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c048cd-1d76-41ea-a2b0-9cc636c9bdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212246eb-e49e-4613-9498-c793ce558d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb58ab4-6663-4d02-91d0-31ef9e139964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608e8d99-1324-4dfe-8af3-b34e450ac14e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbf11b5-2db0-4411-a9ed-cccb56981868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f991d2d1-5ec4-48b2-8392-83872cabf36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bd3558-a107-4117-9243-71df03674863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b0f6a9-688e-41bd-90bd-c8cf5738dd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fd0c83-a076-4d05-99c4-235ef1863ebf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1491c16c-861e-44d0-9575-2ec1ba038df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b96d32-836e-4611-bf38-de8acfd9b69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47436fcd-4ad2-46e7-be60-c0a9db93049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac54fe4-b81a-4fc9-b5e0-4d418de87a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c768fa6f-6cfc-481a-92fb-a15d2ead6eef",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e422575-549d-4069-a588-d838af3911b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026f5aaf-0dc9-4edd-9b4d-b6710f654843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f65f3-326a-4c92-b962-7c32ade2dadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e1eed2-cd25-4dab-8d7a-98f538741b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcb97c2-3024-4be4-b7f9-f14b124c0eeb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1e7f07-d9ee-4536-8eb7-a19d23556a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f4b654-7b8e-40b5-8ffb-e82fd5a58a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a423a7ec-7916-40b7-bf5e-d6ca4980203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de0d73d7-07ea-4ba3-9556-5c902a662e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f924a1-c0f5-4055-856a-4e5aecf33d1a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee50d172-4ad5-4c80-b1f4-092d4e5a0bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa15416b-d64f-4a14-a41e-9161d79b4984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12ff0f8-f31a-47ff-8096-9371dbac494f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e8715f-651c-43c3-b208-8efdb108afe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6bdbbc-3ad8-4327-a79a-f4c9035db05b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00072ea7-1a25-4967-b112-329e1d0b8546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f445a0-f366-47a2-9b9a-06c5bd1e7380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdff57c2-c305-491c-bb47-4901672e93b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f254d4-44e2-4640-817b-77f01f0519e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd48ff7-f484-424a-a9f3-555febb9c27e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8410cb4-d7a1-4ba0-a9d8-b3e6876086b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2dabdf-37c9-40bc-93e7-7a8c3cc2e2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193b7f83-4bfe-400f-a7f0-617dea118399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f895ef11-2e1a-40d4-a314-8c2bbbdf8579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6367a77-bfcf-4b9e-b871-aa8b8016ed13",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb0999-dd4c-4db4-9e15-83f5d6506e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161a4191-5975-46ef-9b8f-b8f12ac506e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda33099-55b9-4271-afa7-b323d0521d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d036395a-1796-49ab-859c-4ea45cab7718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2a277c-89e5-4d08-9947-2afd01e91eaa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dfe397-f331-4c3b-aef9-569b42aadfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22e547c-2a47-462e-8c35-c7008c1c6391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de742bcc-b94d-426e-b47e-dca7ca922087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d16e18f5-40d8-432f-85cc-831fd1858fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c136653-5a92-4761-82c1-0deb955c644c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e347c2-f474-4343-9552-41949cc08f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe9ad1d-1a02-4982-be01-e59afdc26150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9360f7ce-ddcf-44ed-b346-45de8ff47c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "261fda4c-8d67-4c42-b81c-a6971fde19eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79437644-47c1-4a4d-9f81-f884f8a1343f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa8089d-8e0a-4786-8848-7d9fa419648b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd6e5ad-16bf-4615-a9df-a1b545e4a826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d5ee48-4b22-4174-a1df-21eb3bdfce13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43921d4-a0e6-4125-8ced-4950c71892ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8b90e7-5bb7-48e2-b253-9aa8e8455b4f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74c0280-7ab2-47d4-8351-0f306db34a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5189d66-d832-4350-8a97-c803df7f52f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498e4403-719b-494d-ab17-7f0b18f01314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d720b8-5d59-4362-a6a5-0908add572ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a2945b-cb8b-4cae-aa75-753756505ce7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd85a70-e4d3-4f93-b727-42572ba5813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae62401-fa0b-49ae-9638-2f91f7e7cbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58feec9d-9d66-45b1-b827-1f541e771b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7915395-4367-48d4-9d46-2503ccca0a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea898be8-2772-46cd-8f94-67a84ae0bfda",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79662b06-e704-4638-9134-738f85b6e7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb03894-8000-4fbd-86c2-864aaf0eac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42275e00-18c2-4559-8ac3-2b14f36632b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf920f0-778c-46dc-b597-3020375aa0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3d58e4-fcee-4403-8b08-418e53f96550",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b599cfe-7031-4589-88cd-c11ede9266f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf822f2-d669-488a-bc29-87f5b476a59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b12b32-31f2-43fa-b75d-73fa14715c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c46e682-cb10-447d-b30f-e08848bb9332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaba4ff-c771-4f3f-83af-7090ef173b39",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa6ec0b-5dc2-4b7d-a19d-ac39e79ac00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee92740-fb91-4381-bfe7-f5640d13ddba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1cf7ff-d706-41fd-967b-318fee4242a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "872d0288-1e99-4c61-a53e-0af77dd26f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59b8b51-2134-4d21-90ec-f3c7c188d77b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310dc6f2-5b86-41ca-a77e-6c81dc671012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d462fb-94df-431c-b9a2-1b903d948e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ca41ef-b18a-4817-9b1d-ac440d009b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a547ae73-f03e-463b-8901-de6a71629661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4376ab71-5fcb-4850-a3a2-75532ac8df6d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312186de-2d74-4f28-ae76-745ab00f6234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4334c962-1f70-42a8-b47a-6281100c304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0cbd9a-7aa2-4f46-a3b2-6d052f1ac070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ccb006-8796-45c4-9555-9e4e659d068e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04d4cf7-6586-4dbd-b588-62ef232d070e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f80caa-4b7d-44bd-8b4d-672655bea624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84a487b-ee31-423f-ba32-aae3b3d2951a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb3e363-5d84-4c9d-8d50-b086499ac9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b834da10-bb09-4858-92a8-06904bad801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d64a0a-696b-4589-b56a-a36a1db10ed9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129b08cc-dd27-4c80-bd75-94085b9c32ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252a1b21-e4cd-42a4-9a39-594a67488a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4cd53e-32ea-4fb2-8757-45dcfdb71b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "966d2d4d-fa5a-4298-ae68-ba5575c5197c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf36786-7511-4ba4-bb4a-20b8a4c73ef6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7d09ea-dc8f-43f0-849e-7c3b685689be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b8ea61-58ce-45e2-9b4b-5fb1d4794f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da4079d-d179-4a50-82ae-3f33c8eeac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee90ed6-f474-4076-b525-f5e7568b8257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55b1a69-8e51-488a-9320-364fa82e7976",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d493100-1e28-4c76-8e00-64f9b577831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "235f6c1f-bcb1-4da7-ad2c-bc5eff0afb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97c4d3-c7dd-4d31-99bd-f7d36cd17fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5955642b-99ee-4778-aefe-ace292447889"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9fefd36-6395-412b-9a79-ccca572979d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21ba0412-cdd9-456e-ae9c-b7b847feae72",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944f5c8a-4704-4a5f-8d40-4791ae21250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfbbeacf-26e3-43d2-8cfd-5053aa3f1851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705be0ff-69fa-4f5f-8f25-39dd07be17b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5e58a88-2301-4328-98ac-f26a055d8869"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bb0ff26-e7ff-49f6-bb64-16aadb3e0725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e33fe7e-4333-4c38-b541-6c860fbbe032"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e26b541c-75a7-411d-8813-9d6b9978ab2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e682efce-d366-4e3a-95d6-087a21b8830d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05565629-5335-440f-b3e7-475b45088ce3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19d585b0-c9dc-4ab2-bf54-bb9cce9cb5e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "028d67de-bdd8-4b8f-8682-7e7f4b218229",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "264fa205-21a3-4fcb-bf5d-487a49156435"
                }
              }
            ]
          },
          {
            "id": "128e8a74-5c24-4269-9116-6c49f2bdc03b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f9f6674-7bc4-4866-a8ec-283085c0cb11",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6592cc1d-d63f-4ace-a40a-ef5529b258d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c86a6e9-6832-4880-8c1b-3ecbb955768f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54931891-5726-4366-b6ad-423cbf37aae1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0993297-7ec6-4ef5-80f0-2fdbfe9fc251"
                    }
                  }
                ]
              },
              {
                "id": "dc31d1a0-aef4-454e-8955-9fbf42a72709",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd7ecbf5-de66-4dd1-8725-9dbe980be62a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ac95a4c-1e24-40fd-90d6-f63da1571c56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2ddf9b6-3bf6-4130-a25d-3c8082d2fc69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93ecf929-b923-4bcf-9042-a46b5ff34d4b"
                    }
                  }
                ]
              },
              {
                "id": "75c2e184-b407-4716-a825-1f4c1e5d177d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a905b8-be63-48ec-ad87-8b8ddc9a187e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74acbdda-3303-4005-aa69-a80a1fa23d0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d826cb25-11e0-46c1-ba61-3b52e9f0cce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17e0640b-14f1-4ba2-af58-194b9c6eac90"
                    }
                  }
                ]
              },
              {
                "id": "14d6c707-b490-4c01-8f2a-5f050d45ba9d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8c429ef-f692-4c6e-828b-db794c39fd4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eee43df0-0f10-46ed-adb0-e9abd9c107e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3978e4fa-7ea6-45dc-92c0-d517dd4853eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a1813692-c261-4f32-9872-e861e8639395"
                    }
                  }
                ]
              },
              {
                "id": "d27199e0-7a65-46d1-b61d-5817b498c996",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1a00db0-2732-4f2c-b12b-9e62767abc24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33b27945-a195-4c28-99fa-76680a30bdf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed848336-d95a-488e-a477-91651185fa95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "19c69e5f-4805-4925-bbc0-1f1f54b025b6"
                    }
                  }
                ]
              },
              {
                "id": "41fcdeab-5509-4ac4-b83d-acd952011210",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b98d323-e2d0-4845-8e74-86d4b31d39da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7b69d97-957f-44dd-b359-ef647c6229e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "122e84e4-3559-46af-b914-62a4769a399e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "470ea5a3-6d2b-47df-8f45-f3dd9d36cc3b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0335c8cf-6452-417e-b8a6-9e325798f214",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6097394-89ba-43db-8204-27e287c92dcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e15e91bc-75c8-47e8-8ef4-698e39a95066",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd905b21-d6b2-4f28-9c6e-33c186486275"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af2a63ca-d406-452b-af36-683837e0ea65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "810b24bf-a1d8-4a09-bfbe-15a45a0d1b2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ecf3e46-b7f6-4988-a3e7-d1d0d20e7a5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99bdf5ad-4967-4210-84ab-5ca32c208c3e"
            }
          }
        ]
      },
      {
        "id": "ada74075-818d-4877-b72f-60898c019d4e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ec3be972-8203-43fc-8cce-5acbadf67fd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4005f582-b022-4fee-8e8d-fd76abd721c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18d1b8b4-7d21-4c7b-bd71-1c682937e0ed",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36dfa8f-e4aa-4f9d-ae4f-825ff5036e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229dca31-5d4c-4b41-b181-f23075e01a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c1c9cb-a3fe-4fb1-9e50-9d62b566399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "18152258-3c90-40fb-acb9-778139a89335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df37bd3e-d509-4ae3-b0d7-324b1d9a4c2c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1469ed2-1017-46ab-8a7e-b82da9323718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19d7f0f-205a-43f8-b38d-03bd9a0b3a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e4cf6a-31ae-477a-97c5-fb2ef65b5736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b36bc0e-616d-4975-ac73-f96aa3ab4c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b153ebac-b001-4af6-8191-46fedec5acb6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858c0f03-7096-4e73-9d37-db83d0f8099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aeafb0-0d40-4b41-bf4a-82f3abd4fcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a169866b-3987-4c85-99b9-c4cd7ad8949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56dae4b2-d3c2-4dd4-91af-ed1f4045fb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2564c02a-acd9-4152-a44c-bb6c06d995d6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66c145b-8293-46e5-a954-6c4dacb43f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef64e7e7-b597-44f0-8f65-30fdf5507d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045a23b0-994b-4b93-8899-45ce873f3de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8443d89-c172-4aba-b21d-e9d90cfc36e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98c150e-f45d-4aaa-9f5d-5de4ffa10b0f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11ac4c6-4205-4163-a784-3838d92fd7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe1e22b-2d8a-439d-a307-7ed62289eb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1ec9ef-7634-4e25-8b69-fc9a30af5e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d990a73f-dad1-4f3a-aec7-ce773dc7ad60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7df835-87bd-4b14-9d79-17801f005a40",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfea77c9-1f3a-420d-b945-bdc717f060ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c101d32-c067-43d1-a207-5b4faeef8435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6056ec3-e25c-4d6f-8445-107076c8bb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e827dcc-c51c-4308-923b-5957852036f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca9b0af-f273-45ba-9726-f0a5f8430ff4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f65f7-f390-4097-a35f-c0421c011f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c46733-46ea-4a44-a42c-1cbb5c0e970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba105a2-386b-4d6b-8fa9-fd02cd846a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b68f502-2269-4b38-9066-dfd8064fe615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a7b268-8d1d-4bce-8ca8-1283b6cd2549",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac2a921-19e9-47a5-9b4c-d4e7fe1be463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db4a0cc-2db6-4c66-89f1-8d8036bd39b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29fe4d6-809e-4321-9d67-160076fd5b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f5c8ac-eac8-4f6a-bbcb-3c21e1824a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588b4219-be7b-4d5f-a27c-94c7cad5f768",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3b595c-85a9-4be4-811a-b289c7e0f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df52e24a-18ef-4d89-b858-44802bef928f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e35a8c4-02df-4e3a-9f01-0d8196330bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b77394a-4525-495c-91ee-abd95d7898d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b290681-ea50-4794-a796-e7de948e00d7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb6a6fc-d018-40cf-a19a-7cbf9da29fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148a2eec-4799-404b-b2d6-ec9c3b501050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe24993-ad72-4706-9eab-84f25de055a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb32a83-358b-479f-8189-70a41ee3c939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282b045b-5410-4b7b-9312-ff2b96a00f2b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e46a0b3-d1fc-49aa-ba6c-41a82aeaaa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a99e657-abe4-4569-bd74-17067579d4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66acee3e-77ff-4344-a52d-224596886fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6b435655-de62-454d-b38e-e7f02bcdbbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7d28f5-d68c-40da-8da5-e8b1e394e045",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78498645-2f4a-4520-a21e-e5a43111bae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db5c13a-59b7-41a3-ac59-bf4fbeb47bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39022261-b11d-4257-a365-68f2897fb291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41be7acc-b4d4-4cee-9983-65ab81f2360d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5647b0a6-26b5-43df-978b-1bc41b40f2e1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b248815-3584-466d-9aa6-3ddfcc5dbd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e470d5-976a-4506-8b57-b424ef3223cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1640140f-2a09-4479-b13b-635fb8735b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d79f9d-96b6-4f06-ad2a-c6b3c51c79e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ae3bfd-2543-40e8-b46c-3fe4277b7ac7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a264c373-4f04-4023-ba2b-0031108cc773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b3d880-9c40-45b6-aa9c-62bc028f63a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ba165d-7035-4db0-853e-60388619996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4696ef58-b05e-40b0-b9a3-07151ab577f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdec92b-2a1f-47ce-a0fc-1693948bc0cc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c0cb7-8bd8-4233-aece-a1448ab4555f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10994ed2-7282-41e5-8a76-fd6d2147baa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a781814-3640-4dc0-bcc3-6f938b39de94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d4f066-2015-4aef-b19e-00075a56f75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95820673-914c-4ffa-9553-856b8d289897",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8020fe20-5c64-40c3-aa75-d594ebaf2d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2a73e1-744c-433b-90b3-251f5f053791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c60317-8216-44ed-a9ae-87b9cc114b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aebdc3a-5d92-4683-8d72-c0aeb864a385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a79a7-42a4-472f-93c7-7067b7e69ded",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c55e90-31db-4e01-82d0-2453275eea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e004cc33-a663-41ad-821e-480aae465bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b066a-5a27-444a-b121-fc5313617262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d2b82d-8763-4e4e-a866-a4431e795e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea864ac-9155-42ee-8a4d-ecffea404291",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea20d32-6bdb-4e9c-a8cc-ce14fde61ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1943cc8-9015-482e-9358-4a3bec8dd39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1b072b-85b7-486c-9737-f5e8f7435e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b75b984-c533-47a9-9e24-150c19a63049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d03e17-1676-43d4-bc27-33f24c4b379a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb54576-6518-414d-8bca-9c44c14c36af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482542ea-5e8e-4581-b5c3-08504d545b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eec531-ec39-4a6e-a4a1-f732b56d9d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "392d2127-bc7d-490b-a281-3d503c211e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9108b65b-faa0-4527-a95f-0d0f2de52126",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97875538-931d-424c-b5e6-073cc4ace2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a06317-5ed2-45a5-8030-496067dba3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8a0688-7e34-43fb-9428-f0cef1150782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a724e1-77fa-4678-a356-2271d7db5e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798a18d1-0c93-4fb8-baac-83e217deed2e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a4665f-c679-416c-aed9-b989e0de6f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9747fdc7-e9f7-4cd2-9c7a-cdced555af5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669a22d6-de07-4108-aff5-4070faa2e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbb2313-c3d9-4b17-b0d0-9c7c76a7ae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d6cb7e-19eb-4264-b087-65504a7aabfe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaf4a82-3140-4534-b4e0-957837c53a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd41770a-d08a-4f4e-baaf-ad0bbaa59ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc33089-4a57-4715-b4cd-f6429c943983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "430e40df-e806-4847-b756-cc3e5a51632e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e68e3b-2b8f-4a0f-af24-5ab7238ddf72",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a34e5a9-e846-4582-8359-b37f918e53ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153c0bce-291b-434e-9ae4-49b7d7d244e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e619ea-9db7-4c1e-9b39-e409f425d657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd60876-2a07-4d0a-b17e-48d58a03f010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67dbacf-aae8-4a4c-868f-c5540bcbd331",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3530c66-d9f7-4896-87e8-953549816888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7f76d2-5567-4276-8bba-083c8a182a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7d768-8db6-4423-9898-4b4ce025bffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b15ba30-f17e-461c-9588-65919d58ee7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c881c04-ebc4-47bd-a64b-1e8113102b6c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0e7356-431e-4134-a274-a94395af689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676e989f-0b1b-4bc8-a099-915ac49d20a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52af81e-4a14-4516-8e1a-2eaad19f939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91dc3b23-1c3b-4bb7-a64b-294f5b70a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97273c4-5415-4f6a-95e4-9e0b4e68368d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c21eae-5e16-4e26-9c8a-240e01368f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d121c-baef-4bd1-aff2-b0462129d915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64d0ce0-972d-4618-82b7-0fa9da810f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65809a3e-a48d-4b00-8d3e-26a26dc3e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c868a1ca-939a-464a-b86f-1ee6866f01f5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3481049-8606-4d1b-ba63-315935407ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39afe99-b76e-4c5e-a157-4dd457d8b6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d58b135-b2b7-47a3-9244-a0a67630866b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "213aab32-a727-49a4-81ef-c0c8d6de405d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c392c7bc-6929-433b-a0da-4756b27d62c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8faba4-c9c6-4d0a-afbe-c3483c132dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e64c9ca-4fd0-4de6-9870-cda7d1a35ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35affd10-e904-4a7c-8ad7-544ffe34fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef666ea8-eb95-45a5-b78e-f40b31648bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f78183-61c6-42e8-bcbf-299ba7459264",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913573f7-1e2c-4fc2-bfb4-a9d2d4b293c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affe1c11-8bef-4538-bab9-b304d86ddbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cbd3bd-e952-4860-bfd9-6f0d7844c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0aed3a1-e8fd-4df8-a638-6319f72d7005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c63fa8a-5d8c-4313-a0d2-ccfc2debae28",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e864ca-8d07-4dbf-9b49-dad1858103ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb780db-c78b-47b5-be57-f688bfda21e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3c1a44-dd8e-4e14-ba8c-1ab5b521fb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "186e431b-2255-4ba3-a006-cc01edb1f6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4375fc3-ca61-486d-97c9-d5f7cbcf2ebe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63047e48-11c8-4f1e-9984-3eab4f315520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be88927-da99-4d0a-a2d5-e69dfe835f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f3cd5-6f5c-4c19-94cc-b2d2819a06c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf64600f-90d5-48e7-800f-64403e9d8726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07533a2c-7fdd-4a91-8a8a-5359bc94112b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d4d3fc-45a1-4514-ae85-4c7d111ef002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d497b443-0734-40db-8aa1-1629f814379e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee8b87f-e1b3-4a67-a6a5-cc8f53f9d524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffcb445-de61-42a1-b600-6d31cbd96cb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d750bc6b-80ef-476a-b178-e352f01ed509",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "919544ff-4b0e-4048-b7cf-9504819ebf12",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633af092-f6ed-431b-b269-b2b83aa9dcca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e90e5b-07c9-48ba-af6a-00faa90fcf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5816b86d-6c2b-4d05-bdb1-f84f4a86b920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c93b87f-1e07-488c-b78a-88c727505119"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "291aa03c-8be2-4d82-9de6-6a3b92515a63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a8942e2-c3d9-4d3c-849f-627c50e946e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "840945e9-7c05-4472-a727-2b9c296d8c9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6dc3b19-0684-4905-91d6-1a64082c88ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a71db09-235a-4b78-ac68-e61e57e3187f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d930ae2-83d5-4467-9be4-a634e2e5c8c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de39d05e-bcba-4ff0-b9de-31bd8ef088d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc9861cb-6629-4d6b-9ed7-5c7cb6ea0398"
            }
          }
        ]
      },
      {
        "id": "5ad3ff7a-cfb5-4864-83d8-c23eacd54f58",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ee734a2c-01b7-4c2e-bc5a-d1411f673fd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7c962e4-508c-4e7d-923f-f7dda0ec2316",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d05e8418-9c2a-4d83-9c0c-932b0a443673",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a666775d-935a-427c-9159-b9844b32ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18359081-3297-4d86-bac0-72c75367725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3061c487-ab02-4c70-9798-c4a97c584052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2695ba5d-3efa-4fd4-9a69-8aeee15a72d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce9ef1-acc9-4e69-aa60-5aa6df439efd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec7c31d-63ff-4b5a-af17-b09eec1078c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc043cc1-01e0-4e3b-9c30-c6f4ae9b7d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a08be3d-65e9-4c64-81a9-05004061fe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "398a2289-c3fb-40c9-9962-fb8c9fd3830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5967ce-5011-432c-ad87-6d048b2cf11e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fe2294-30d6-4d11-a037-414789e4efde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025f16c4-7773-45c2-9151-a3f97019a083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a2ca5a-1cbc-4697-a06d-0199706b2f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0ad612-dac0-4875-b432-6d57b2496903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecc4e54-32a4-4b11-98d6-2204381b142e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333aa95c-fcad-4b18-ac46-f3f5ca05224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d11689b-f8c0-4810-bf2b-58e83f93f5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1865fa-11db-48c3-b527-549b49e6d015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5777113a-ed54-42db-bcc1-4f4c705acd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b974372-1166-4061-abdf-d25aaa99d1ab",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5023e301-14e1-461e-ba3c-c4bf2f810d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a02e193-3468-43e8-95e1-81770eb40d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dba468b-fada-4990-8b44-0d6841f3b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79e8fecd-aeb9-47c3-8dae-e014f281f9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f152f0ed-d896-4ce2-9b3b-f7a583d9bc15",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bb115c-391a-4f65-af87-6ecebf2be8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02353786-68ae-4d35-82af-a48a82728656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58389f03-0de3-46b6-a49d-5b8f904940dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8019697-434f-4aa2-8490-9ea860ebea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e123ae3-caa8-458b-9e3e-1212fc1a65be",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc01fb7b-abcd-497a-a507-2912cc4dbf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62aaa328-db7a-49ff-ab1f-8e133fbf5b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9718f565-6415-4ed5-a2d4-13b219468d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b415181-aad2-482f-b71d-035157bcb757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376cac25-348c-4d75-9736-52831c1917fb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5962f983-5421-4961-9cf2-4c69290c8e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4a9133-1bd5-4126-a27c-7388cbffb936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f44f87-22e4-4c93-bd7f-6d0f9522a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea7edc9-4176-4ad1-a293-f6325c17caf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d01e9a-ebcd-471e-b715-48468e4af565",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a951d8f4-3362-484e-9690-d5dc83b17c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7cffd6-c98d-4796-a6b2-2cd3db519fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc99312-cff6-49a3-a22d-70a94eba4105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1384c43b-7395-4adb-9f0f-24de3799280f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af56e6e-b805-4a60-a838-bd715dc25c14",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03038277-ecbb-46fd-bc14-38978a17e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a535985-ca46-4902-a56d-a0a330ca60c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fbf38d-e31a-47e9-895e-3f73cfd0d15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4985f07e-22ab-4ed8-a8f5-f1a5adc2fab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8618b7-b3d9-4b2f-8e50-434f95db5fed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fae55f-4d75-40cd-ab87-2af904406692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5531e3a-cdde-4583-a517-5204d08596eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a6c706-539a-428b-a530-f9cf33caaa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dc9fe0-348f-41db-9dda-13c7a7304f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264637b8-f68c-474c-8f1b-25144c053752",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29bccc2-23bf-4ec5-ae17-82c12ffb03a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2406e150-c66d-496f-8c9e-1f0052d0a8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb8afb6-dbdb-45ad-96a1-7e448f2272f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4304102f-696c-4d34-8a94-5ea33e07bf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643594f-291e-4861-9139-a980bce955c4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509072e-bad1-4bfa-ae91-184daa384a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac8a9da-7b06-46a5-9f38-21930487b36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2d3cfc-9ac9-4826-bcdd-cc132c9b2384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf85de48-7c74-43c2-b6e3-06cc12ac7b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2a0db3-0e28-4b39-88d6-ba5e405fc45a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930e8b3b-c159-4f60-a8c4-b4b0c7c82336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f98ef4-9212-4a0b-9d06-bf7c6bae1ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b9624e-b39d-4be9-abed-9e6fa04b0abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f39925e-6d55-426d-be8c-ad70f296290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4271f8-9ffd-42b8-b933-c0f81dad07dc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35a36fb-5f47-423b-abd5-01ee47728a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615ca327-b345-4cce-a538-c199c1e8e6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabbce44-eebe-48a9-afb6-bf6156716339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9ebefb-bfd5-4dae-a276-bf3353d82176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34c82aa-8f26-4c96-83fd-d567bf93740a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b8a11c-9db6-41df-8e31-d75ebad73bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0825fc7f-0c57-4bc3-9d80-19c474cb9e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df397636-f49f-4086-a74f-fb8cac657601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0cf69a-f16f-4b5a-b86a-cddbfc1c522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178c5b6d-3655-4040-b5ce-884f48c55041",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce3083c-2a4e-442d-9ca9-6c585f870a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550f5bfd-1117-4e1a-b235-85f0866767af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf00529-494d-4916-bdbf-239b5d68a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2a59d2-aee5-401c-aea9-3cb997967c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145805a9-6460-4c2d-b06b-8689eb60c5c0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb61a28b-181c-4bd5-b97a-dd7b55cab5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2346a246-ed6e-4977-880a-115044cf75da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89db6954-7e3d-43f3-8a34-5ccc4ebd4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e280034a-aa7f-4c97-92a4-b428f44d9656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab034e9c-eb35-44f8-9ec0-6895ff4a444d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749800bf-27e1-43af-a47f-2ded426ce9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79dc754-e90d-4596-8751-56060894709f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38f163a-164e-4e59-b0af-0a0d4abe8770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "962902d4-8ea9-4427-acd2-08fdac978c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e52fbc-3fc7-46a3-83e0-62241daddd9b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c9cddf-979a-41f8-8895-fea8033de938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8426fed-20b0-4d3e-b29e-daf9e9ff881a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438e6719-af32-41bb-a41a-7892914ff442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f2801f-1842-48e5-a6c2-9c70c8c441e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796bb75e-121b-4a10-9525-43a1baa345b6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294c70ed-b316-49ea-a0a0-41755cce4d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd8bdc7-52ed-4c7f-ac0e-bc7042afa311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ced9bc-fe84-4e53-b30e-c884ab9e414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4ab8ae-0282-4025-b886-c881ff0b198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0d8a6e-f24f-492f-8294-9b36bad0886e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dcfade-1562-48b2-85e7-ffd098ee67ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee2cb01-bd5c-46d7-9b61-cbe97996f1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8e7201-37c7-4c0b-8040-fff6159d1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2c7986-4bc4-41e7-920c-43c86b1f903a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c9f165-8996-48a6-84b3-9ac2cde2ca35",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c6be30-54c5-4389-ac2c-4a0b923d2cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62712cc2-409e-4fa8-8fd6-96d23f7681e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc92aab-2273-4095-8b35-a59407bc8b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e14b98-b263-44d0-92f2-22b8c0f836b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a6c15b-26f8-4be3-a93f-d43c380828e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621866a1-483f-42af-8078-ebed458de5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450abc28-95ec-4f61-ab46-2f17ebdf7526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecba1237-e386-48a7-ad36-c0c59ec895ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7a82b6-123b-4035-af31-c6e89b7be50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2259b729-37dc-4bf6-aed5-63feaa8bf9cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71e3bd4-1ded-4fb6-9f84-73b712a90139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78f9f3b-d880-41a4-a54f-d56f5161287b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ad4eb5-d55e-4ff5-8b93-8ab11d32955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "164ab04c-2058-41b1-a794-2ab3a02f96d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514d453f-67e9-4291-b5ad-daa1ae2e7a7a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c174a908-1af9-4a87-8290-7fcc62087ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a28c94-f882-410d-b8b4-3697cce0c874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c8f8cc-fdfa-4339-96d6-169ebb7e4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc377b32-02b1-4fd0-9f68-1828e6d1f6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eb5897-b227-4cbe-af5f-403efe1c4fa8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15049884-168e-4eb9-8eaa-c5da2287fe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfeed31-480b-43ba-bc30-df12151c1300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07bcb40-a2a4-47c8-9e2b-05fa2040d48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b79fad-9a09-4f6c-906d-3c7951a5e8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ca15b5-ab44-4e8d-806c-20bdde673e10",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03386eca-69bb-42ce-a6ef-16533e11dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa97067-5b7c-40c4-8c18-7d7f176c161f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec857ea7-8a07-483a-9c62-961713e0c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df6737a-39c4-4c17-9c4b-83beef5f8b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fd3c26-bbda-4797-a426-708a69a2c4ec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9044207a-8aa0-449a-9967-e156cdd7f37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfd3e44-5394-4e20-85ad-7d7e72770392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3569cb-14d3-4117-8e46-e4f46e612a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44335a0f-86a3-458b-9bdb-31f69eca68cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7c29fa-41eb-44a5-b7ed-c2fe2750622a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bdde23-8cd5-4274-936e-799e639db27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bf1698-5255-4c11-b56d-4908acda836e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2624c2-1857-4395-b6b7-637d14dec4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c914f9-0755-4a2f-8a61-c6500b967b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd94a40-c94d-4f72-8c31-40976ec23783",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4f3f39-7402-4911-b2de-4878a476688a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8c9b20-c85e-4a06-a770-2f21c17b3c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e20f9c-0591-4ad6-ba99-9a55b7ff2ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98cd4bd3-fcc8-4744-816f-f6dfe05cc2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733a6c8c-ce30-4a2e-b262-734a7e966fab",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca9b385-cd11-46db-9663-99f5f89404ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a16dc4e-5fb8-4e9d-bdcc-940b8f395598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a294497-f84c-495e-9b5c-f120d10d2ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "905b5e58-76aa-492a-b947-bb3aa3a48130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94509c4-ec42-46a2-ab10-65e631a887d5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c2c1e-a5dc-4dbf-9fe4-992ca8cb5f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af8c072-a620-4261-b8a4-cefae2dca0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a20962-e4a2-4689-96d6-834e7e277733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6413ebd-c7dd-4c36-a80c-c61b36a1494f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd91175d-f851-450c-bfc7-026f4a8c10a4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31480450-81ab-4cb3-b241-795f3ccccc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f037b5f-7aaa-4f40-9c9a-34c60c7accd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0844a2-54eb-4150-ac16-2826515dda88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed348a11-bdc0-4e35-9fbe-ffa946ce08d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c44f34-88ad-404a-8030-9da3f7ea496a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6524e5a7-20f9-429a-815d-3f5137d8ef61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564e8021-36ba-4acf-8728-1939a878d013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228760bd-e1de-4323-8574-fb36a498c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "603f62dc-e6d5-4c08-8c63-8a14d1733325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ddd0a3-38a5-4bf5-8603-5537cfa8de10",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255ad28f-95f8-4084-be8e-df4c31c89d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1a1211-6d78-4ef6-b63a-80447e2f20f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc66799d-3988-482c-ba64-d58ae7e42858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54035a4d-1967-4caa-a9d3-ac8be9da3cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f689994a-7c41-46f2-9bc1-1f526acc7631",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876e5936-ea21-40d6-836b-05bbdde9bd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be3fee3-6198-4ece-af07-6b966766d079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d68751-b698-4b08-93d0-c46d01e9f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42996f1-2b08-4aad-89fc-00ea69407fe3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ebc9951-1b91-4828-9da7-c23d545d1ca9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a25da86-8c7e-45fa-afe8-3d627bf36a23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28900a3-69ff-4805-9f9b-8dca695e55bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4debeeec-7f92-440e-9543-92dd5e5e5838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0334d51-36cb-423e-bcae-1d2552d65a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ad38556-d682-4fc1-b808-3286ffd11bed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "145c259b-d97b-45cb-82f2-5bc6891d009e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41cd43c8-d9b8-4a72-b62b-77e3c5eb90b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e9bf827-f1b2-4ce7-a334-0b603452ddfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "984ce6d4-c067-4bee-a985-3c6cf21801f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7915b1d-b701-4c43-8d3d-f95743cab0fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b96f9dba-468e-4049-922f-512848b12d35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b362e35d-e741-4a81-8ab1-25c4417c9e98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea80b04f-e6a5-4bf4-932e-8723f938c7b8"
            }
          }
        ]
      },
      {
        "id": "2a4bd731-cc43-4321-9f6e-cd4d696d3b4e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8a7aeb4a-c23e-419d-aef7-77a8f5f630a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a5290c5-0e41-407a-89b7-0777daec2c5d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82186ddd-aed3-4326-8114-fe8ec1b76c79",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc356d5e-40c6-4734-a9de-1a806cc58b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bef1e04-65c3-4ac8-805b-0cd1a186d133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c65bd6e-094c-47c9-9104-927058068039",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f497ceda-7747-4cfc-96ab-98a1ccef4a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e408be6-b5b2-4fcd-8369-a037239c9830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d3cd19-81e2-4b73-be0b-7e5cae974a1d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39988a2-df36-49a8-a5fd-f7b931e3eaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc21edb6-8ba7-441f-867e-492a45112e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64d3e63-33da-426a-a8ed-06d9019dfa9d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3cb3ce-ce60-4276-8ff7-4a66ebddb873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fece6ca-1540-42a2-b82f-77bbbea475c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff51abf6-95ff-49fb-9fdc-29ffc7596d2d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c802171-2c4e-48e9-8f1b-282e4d37d251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ea31c-2c77-4c9c-ab2e-b461aa8afd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708805a8-52df-419e-9a84-0ed5ab64bde9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc8625a-0268-474e-989f-7cc51688f29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da405c5-8ca4-46ef-9078-b9ac5efc11af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9084e425-15da-4fcc-809e-93d9b78c4994",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1169223-cf65-4542-9859-070ec93d8685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867906ff-ac9a-4d39-bd72-a39a183634c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fba4324-c741-4b03-b525-ed540b2159a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7066fa5f-5d49-4f33-9fbf-94cf912bd90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d7602b-0487-4dfb-b487-187652b6c1e6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd7dc27-1fb0-4e4a-9770-28df0965f9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e870a8-a3e2-4840-b25a-32614dea4029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6bc058-6002-470e-b5b7-000c933cc70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab365e7d-ba48-40cc-b985-946965deeee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025fea8b-5475-4ae8-a1a0-e370e6090ab7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d951f9-ef35-4ee4-9451-16030d312965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b05e4c-fed1-45e6-84d8-3831fa8ba7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d0fcf7-2f30-4076-8b77-01b5bb62b415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa088cc-2aea-4ac9-bce4-e0597bad2c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39e7c06-deb2-4546-8b96-e76bc65f4574",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3844d50-6b29-4b96-ba78-82d90cc8dce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bed02cb-bc4a-4bc5-8403-3e83aab7fbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1501a6d7-c5f9-4f68-9664-281f04e390d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e7a329-42af-40da-974e-cfc5c0d9548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488cf149-1924-44ca-b0e1-f238b03ab078",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0b4e10-c2b1-445a-874f-2a88879c2c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81455326-1121-41a9-945d-3ecb50a74aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ae4e34-9503-4578-8bd2-3b4172b3469c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450b649b-f9a9-4f06-8d38-28f9d9bb06d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1f676b-7749-4488-a46a-ac021c476e7d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983684d2-1e6f-47c8-a4ae-b01e9bca6bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47fd6e1-35f4-4f8e-a2ef-7ecd869cd30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2160276-bb50-40cb-9b8a-936635211b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16c0485-b979-4d15-bb76-cffb5dd245cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841edb0a-72aa-4c11-a385-9c35386858c1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a937b767-6a38-44ad-8888-1e20ac96ea64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830ae7a9-832a-4715-bc3a-ab531886f1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f409999e-3131-47aa-8f03-09d7a378eeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb073c5f-1399-4a43-b25e-d405145e57b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc65caa-70ac-46f1-95f4-73281037e78d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acd6559-f19e-4fa4-83d9-72a61d559f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9b5a81-c119-4ee9-958f-a160e8163935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262a52e6-06c3-4495-9358-7e72f2352abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556dc1a6-9ea2-4867-931b-2f7d8f3ab691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9265f7b8-48bd-42bb-ad95-d4f3c578cff9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f82d75c-c5b9-4d96-896d-639687800100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d857947-a566-4e0b-aa52-620e6465187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4134d1fa-d2cb-4926-9ad2-41c6fe5e7e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877895fa-dee7-4cd0-a2f0-f0dca73d7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65d47a9-e0bd-4ff6-8e58-5ecf3415806e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ace1e8-98d9-41cd-93c2-53f98d52f671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "100af7dd-b7c0-402a-a0be-3386f918578b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520b1e2e-1f69-40f8-ac9e-6600e1f3d547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771c99cd-94ff-4809-889c-5d934fa7a7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd50ded-eb98-4e91-8f9d-bf5a19ffa359",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d09410-52cf-44e7-95b3-0854ad7d6786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6924eeb3-ca77-4da5-8b68-19f08665d4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86834c1a-c1eb-4686-8f78-db893593f67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b0a33f-6493-4158-90a8-fc5f4e9a27a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b813cab-cfa0-40d9-9272-5429a6043b96",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8053aa-eaa1-412d-8d4d-b5df1042de24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d276b07-93ae-47c5-b5f4-218e93795d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d34e8b-d479-4326-aa6f-dfd2eaf38447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21a4b5e-6937-44a2-adc9-0807b9ee5cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e7e4ef-c0ad-4f1a-82ae-c765f2223b3e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efb6472-43af-4306-b773-9374d1ee6baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98bb8be-ffb5-458b-a756-08f22970e14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1be3b9-a8a3-49c4-9808-600640c45933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0b7545-f30f-454b-bb70-32ab314c0f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97747fa-f433-4ce8-8004-1751a591ab54",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d952fd1-2718-4090-92f6-5a2c50f1e12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0651e93b-1e23-46e2-bf8a-1fae317b48e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913f2475-b117-4ffc-8587-7f0ca8b030e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d302a50c-4915-466c-8ca2-c6c5658a6df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375b3dc6-7c4b-40bb-a29a-fa462e797256",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7882a770-25ad-443b-9e19-c921e339e480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32b0b03-2095-46af-adf6-c8aafce0ca6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330598f2-d393-4401-b424-60623564206c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55361a5d-c896-4928-8872-3b4fdfcb4c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1844e2d-2b2e-42fe-897b-ba2cbb6dd960",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82e6aa0-0f74-474e-94c5-5047ee7be40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6911abe2-1d88-4d6e-b911-610859d22c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70233d2c-764c-4886-aa43-d29447ac3982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64c2b79-5030-4a1b-84d8-d2601ae361e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c1613d-d98a-4323-a9bf-54d1a0713d50",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b239e-50b4-47d6-95d5-7f76d05e3f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a6affb-84ae-4be2-918b-7091b718a58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00f62ed-d123-417f-8cb1-b0d5686623e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d60d06-6fe3-4b74-be33-10c1c470c738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc9e59b-895d-4afb-816f-0a62e0882393",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6031387f-155a-477a-8a65-da269a00dd11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f403b8-5ea8-4df2-b993-61cd46a2f77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d249289-510f-4615-9aad-bdfa29e63bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16db8db4-3bb4-4ec8-880a-c5e53e144840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa94fbd-0280-464b-93ac-15ece91f1d1f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1ec007-e525-4c42-92df-acdd43431006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7cbedd-7fc8-4295-8606-7490a27b8957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c39acf-2689-44a5-8cb3-cca692c3ec09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0595dd0-d5a8-4d1c-9b3c-3843a337eb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8b8e82-16dd-4eff-9399-0c81eaa3c0b7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658fc289-bff8-42bc-92ed-c29610247639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34c2476-0691-4098-97d4-0f81929302cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac71c851-5cb8-40a8-8751-c25c6a8dec7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eed4225-dd91-4355-ade7-ce58af1505f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64492d0a-9863-45ed-8a8c-5937faf15384",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbed675-2b73-4f49-8c8f-be9409f29212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbf97ec-3c3a-4ddd-9c70-cb8cd3f3bb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb91fdb9-f0cc-4afc-8a82-46af1975867d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3463b8d-4013-42db-9d54-5942efc5c532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c49115b-5398-4337-81f4-32a670599291",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90caadd-406e-40df-a36a-6f07d6696e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5796d056-1923-44b9-8e03-f8cfeea23420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f140a4b-0b33-4cff-a492-fd68fc7f6150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ed16d9-e776-4195-b188-8e39e0573957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd73ac1-e8a5-46e9-9fcc-3e8c7da3f821",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709c1a45-6047-4d61-9185-658c859ae7c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0864253f-4e7b-44d5-97a3-b1b079cedb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978038fb-340d-45e8-9db8-2fddec8d9a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7961082f-e82a-417f-b9df-ee391fac40fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744a5968-337e-4692-96dc-ceb4dae56750",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385a6b5d-2e77-4b4f-81ab-b447d72a9ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb95694-6da6-4e15-87c5-529851ee4d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386dcdbe-f0ec-424d-9e13-11022a0ff104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55a1a7f-20dc-4b68-9ffe-7608726c7c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5fb483-153f-4b5b-8050-2d1b572695ff",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cbc5ce-85d6-4f1d-8d26-9591903db149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b55ae34-2d9a-4930-9549-d8857cf165a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c776eb18-42a3-449e-8385-89fc00ce9625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0541ac6-b317-4c98-871d-e20e8886e36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c61d50-27b9-46d7-a0c4-d0bd71b12ae1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb3ac14-17d4-4c6d-a275-bf1cb2432b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec20df4-ff12-4f34-99fa-7853a529617f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0fcf9b-54a9-4613-8bc5-e4044b43c2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557365f3-3c2e-49c8-808d-26a8d744ba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39adbe4b-c544-45e1-b62b-704558bb2c40",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb85781f-8667-43b6-a31c-2f2924102464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e9170a-127a-47e0-a1f3-610c0f198164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c836ad-450f-4c07-94cf-6d52762e41a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d14d86-20d1-40da-8b3c-8445a33e8e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34747835-2b31-4038-bd9b-84cb8ebd589e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de5ebc1-2ff2-4e92-91cb-4cfc0cb83354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "644ef67a-23ae-4172-adf0-ffb3b72164cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf563417-adb7-4e6d-acb8-ce92c2d99bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a291ccb1-702e-4220-973b-63a146d27743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481a3c84-da57-48ea-95e1-5ae36271ac2e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a36163-5fa6-4097-8866-63178ac2ba7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be700b31-8a85-4e2b-8c95-ab52e1700727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8939b32-4230-4760-b4d5-67f36d3176fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cff7e6-133f-4262-9208-a2ffebd7a92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6434cea-4f9b-4e5c-be29-1beff3513dcb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581cb79-ecd5-4364-84c9-84b64d327a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e69ebff-cf64-41c9-a106-339c76cab208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed69569-a2c7-42f8-aa14-8dbf7f27ea74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecd8873-3b58-4c33-9e16-581d1d6cba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b528ea-07d4-42fe-b470-c230c6f34b7b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93298c2e-f53a-4867-962c-c2276e0290bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d4b53f-9fe0-4b94-8a1c-d25f477c9d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7955b74-d56a-4bfd-993f-59b1b7fe7b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e675ad76-a2cb-40a1-bcb4-ab5a2c416dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758a308e-9388-4392-994d-57c92e249fec",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27a0e4d-6865-4d57-a166-bda343888d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd0e340-844e-4e27-8d4f-e1da8f4f3134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b90eea-b087-413f-845a-82d511f81531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305e9138-6452-4e06-bb9d-688e474376a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832c7001-47ae-4b99-884d-e0938defbaa6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27334e1-51d4-40fa-8ef8-4fade06baef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd66dd56-a51a-4b41-9621-20ba7c640955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517358b1-8fcb-4965-a8f8-9aad8de3a9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7db79cf-961e-4f3c-aa7d-0ed96c6a39d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3a9b6b-0a93-48a6-8ba0-54fe5950fddd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e8bc6f-3876-4f65-98a6-bba1e3f37c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d3f485-b9cc-40f0-b724-0a895db5a55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5b29cc-cbe2-4683-a6a9-b9916ba556db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e2c4f1-00f1-414d-8b03-a5590345e1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc719a3c-2cf6-4307-9d9e-e31b1895c329",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422ccb6a-ffac-4652-8d11-0294e9399a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9448a67-8425-4852-ab77-366cc4a38bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b53d7-4566-4532-8c37-b645e0204d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947d38b9-d059-4817-b068-d3294095e134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f3e65-55ce-417f-948a-282f35b315d3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d534d76b-5c3c-45a4-936a-d3c6218bf56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a174c3-f321-4ea9-837a-7f76c92c600c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03852d09-287c-4e0b-a47c-6d5cae654784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a197c8-3e35-4a72-a254-252add8a1af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2409b1-7781-473d-862e-ea231ddd27a2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb33b8d5-b8e7-4734-af45-a7e84a7ac9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97951ae-7d3b-4a9f-aaf0-26ab37739cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5304ccb8-ed20-47a3-8310-f9d99ae09db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84cdb98-e36f-4a4e-b2a4-36686cc84b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeb7908-aec5-407a-87f9-52b495454f6d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aade93f-249a-408f-ae95-855969ad88d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaf0863-64c8-4a64-8ebb-e340e83cd6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04909fd3-516d-4378-a5d4-61a1da0b028c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d202a430-7a09-4527-91e9-ffd9de0dbd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45688b0-92c7-4715-b6cb-78947b49bb7f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec89d98e-d085-4508-94a2-308b8daa848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364d0e7b-78f7-46b7-ac4e-ae5097b6d3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e56f3a-badf-497c-8fce-49f41a2413ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4a9bbc-4efb-4fe9-b2ad-d2493c99f0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204f4002-867b-415f-b876-69bff0dea62d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331bbead-c898-478d-8734-dbe6b9b89901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7af9d43-6f57-4dbd-a057-22dc326f6f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0020ba0-c899-4ec9-893e-1e4510f01187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928fb14e-f50c-4e72-b621-d4676841cb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f22fe3-1b70-441d-9c7f-4a629e56ecec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1415bfae-9c31-4b82-88cc-6377080c111f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddd3b39-c029-423e-9982-a83f8add85a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59c0777-241a-4db3-90a8-67bf8361cf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad35da01-5542-4c3c-9df4-77c249ca19ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f29c224-dede-4b22-83b5-3f971221c616",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9687aa64-32bf-4a9f-a2e7-dd52427a7414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12df7cf-c829-4313-8518-0b57029af35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2243f922-dbb7-40b1-abac-5dc1619a2744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa2b05a-7738-4ae2-8d80-ba744c549874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee2593f-9f12-44cb-bf5f-5dce512c9e09",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab2ae61-1c92-4556-8c9d-9465ee5e3251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac944df-5ad4-47df-b050-f7c59bdd1646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e085fe49-0cf0-4357-8d8d-81e5a3af3ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4007af3c-5ef7-4f8c-8df0-cc69bb0ff78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec65e734-f9dc-4318-8138-2893b072bf96",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2d6fc5-76d0-4617-8fbf-7a6e4a6ba531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843d13e2-5e33-4315-a976-52d64f8f8bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38a6a9c-6b2e-49d5-8679-0c098c7bac57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6395818-f0cd-4396-9775-4554aebefff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7223dc-ee19-47a8-9c4d-45544d9cf69b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e0d9d-143f-45de-97e7-5db335a17a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa7d070-2656-4e95-857e-267c83bee0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b4aef-a443-4043-a0b2-40faf7497ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a303051-ae48-47d7-aa0c-b935fd15668f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059def8c-0602-46e6-82db-eacb318429f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2123798b-ac9d-4bff-9129-a7d023609f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c54e976-a383-4ea4-983a-bc19c9ebadc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890a6d9e-8795-4c6b-82fd-f07f738c58f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d4f206-3190-4402-811e-da04bda00ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69e1cec-7678-4179-8fbd-238abf1659c8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b4f64b-7996-4cf5-9430-3feabadf9191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d573d0-d443-4923-8789-9f42bd0bd8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3ddde2-8693-425b-969c-e5ff3aab5465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d0da99-758f-4728-9054-d295e3fec60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c67fd60-d62a-4448-a700-57c8ece8049f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676fb815-2a68-4b51-a913-8585d3f63f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f561d13e-c802-4c54-b9f0-23e35f2f78a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a4f5b3-5650-4ab2-acb8-4db2e7236105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbf469c-3c07-4e4c-8926-937e8dd22ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228db3bb-be5a-4443-b625-dcaf5f35206b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22c3c0a-6cfa-4353-bd2f-a1ae86c4960c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec79ea8-7a3c-4a28-9aa9-2aef668f8866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e0744-ebdd-4427-b825-dc38e45edad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe7338-28d3-442b-89e3-794b52971208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf16b689-14c9-47a4-83f5-77a51a03047b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ba359b-e706-42dd-b433-03c5c181fd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69adcda4-0f4b-431f-b39b-20cb8532ec9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f050585d-bb97-4a08-ad63-7d5ee6efc06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10fc0c6-e1c4-4a24-a3b7-a49a02ac33ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa60952e-964a-4c92-93df-4a7ae73591ec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191773e1-dc40-4373-b5f0-60ad15190ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a787744-f758-4c41-b1d7-499ed846eb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c3cb8d-668d-4264-9da9-ee73a698ce99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c95a883-98cf-4b4b-9ccb-2e823d2f8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c12aca-9434-4baf-a409-8f1dbcf9f061",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87679b46-b405-42b1-a4a5-f706d4f955a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b4edc1-b142-4fe8-8dfd-0fd42d7358da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c5a433-d09a-4a22-96c9-e4d2964a695c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9a9480-b0fb-4703-9700-25b8d1dcf098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b9470a-a8d5-41f7-bae3-85a8929bc315",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e167f9-8c19-4fe8-9114-44658a79e88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58012257-15b0-4eb6-bec6-26259f3f625b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b057416-af9a-4b5f-95f6-33dff09125f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844827de-7b08-44cd-b9e1-120b009b4fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc80e4-bcaf-4af2-9e52-b0d50face509",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f2890-ff5f-4007-a5e9-be0a4d438797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d8faa0-43a1-46a3-a2e6-1701b9b582ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b7f38a-97d0-4d89-bf96-f69f41b2e919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8032921b-114b-470a-aa72-0600a8b0644c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8e82f5-f527-49db-8b33-716362266263",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a6e8b3-045f-4b3e-ae1e-00c16c963f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a262c79f-0113-4ed9-9a64-17f102e72ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e79d0-d8be-468b-b59d-5187ef84cd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be2cc63-e889-4271-a881-bd10123e20b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed0a554-4b62-45c6-b981-3921957c79fe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277143c3-17be-4621-888c-a3beb237b55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42374b8e-d84c-416f-b9ad-c2ea682381cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e32103-f8f7-4d09-b1f9-83d8ae9584b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5cbe15-f940-48ad-90e7-8f8125fcd796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c2ebb7-cbbf-4264-9053-8bc5e6fa93bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001185f0-6752-41dd-bc4d-9f273a9df149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31809527-14b2-4e24-9afd-53b28cc0960f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bdeefb-6e3f-4edd-ba82-27826d157ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0a377e-f8b5-410a-855d-7094b4d7f772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e536e1e-0e93-402b-af88-a8883f90b4dd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b7d609-8e0e-4fa3-8b71-e82859464a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147927a3-3715-4a68-88d2-ca860fe53f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2258d08c-29a7-4040-a238-938a01af660b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872dd1f8-712f-4032-a424-5e7780d790f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c8bdb8-60a7-45b9-86ba-36121295d75f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4165fa7b-7ce2-42c6-acac-5265435317a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d0cbda-5ddf-4ebe-92c9-f835b2b40a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daa53b2-f278-4b1b-9782-b43156d8df0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8606bb21-c41f-4299-8e7e-b1d563d519d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5ef7d0-94a0-4558-881a-746f9e528e6a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66ccbf3-0f0e-49d0-a704-1f58b018a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73aa9104-7e34-4256-9b44-d86d4f5bcfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb71a58-54ea-4d69-806e-b3cf40110e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e86008-491f-416a-bef1-c8260293e899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5751b487-97d5-4c5b-a718-9b7319c6f2f2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffef88ae-8567-416e-b3ae-689453bbc6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1714fd56-5e27-4001-b95f-67820e1a1dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7d345e-1bd0-4e9f-b722-abf8cef55877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cb2774-a830-40ae-b95e-92945210a5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb4c281-7ed4-4166-bd98-441eac08856b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c9eac7-1797-4dbe-a51b-a2ea46fd9dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ae628a-f1dd-4b21-a242-3b8f453f8b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08afe74-2c24-4896-bb68-0e11ece250e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a831c9-6c3e-4195-beb0-dcb8ade7452f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c484b84-25c6-47e9-906a-a92ac31c2188",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cebfb5-0ea3-4fb1-b012-da0f29435b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b92eda-15c8-46e0-8495-08c9deb8bd99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0892fc91-67b5-4790-a77c-69b47ce171ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd9b3be-4e75-4b47-8c93-c7e84e9c9483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f299b-3c2c-4259-959a-0a007661a861",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ebe645-526e-4ca2-93bd-4f4a49b5e90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b23b5bb-902e-4906-866c-f263296c3a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a63fec-e8f7-49cd-a95f-a2bb37688b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2328872b-4dad-40ce-ad3b-7b31f8ed3aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0c2870-54cd-42ce-83ab-e65bce4d7e73",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f923af-5b6f-450b-aff9-a5ac4b84dd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d91fb3d-8c7e-4eee-a0f2-e0b479a83a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d3a45c-64a1-4085-b43f-06975da7ef6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b12bc7-69cc-4502-9295-84f1cab5c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aff0411-6d97-4a52-922b-5d5f934149c6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e1e379-bed0-4f4c-ad10-60273998513d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bb90f4-b906-48f5-b7a9-3a8409f89786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e8388c-c8d1-45d0-ac87-66105fa7ac9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4332aa2a-6111-40a9-8a97-5b7aecd1aaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51646d0f-3f4a-417e-9e37-d37ad0637021",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6939a0b3-b4a2-4f82-8738-85df02e88b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720aa08e-2790-41ad-9054-a731e42024d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05857267-177c-40ce-98fc-aa212c0aea99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb66beb2-ad44-48b1-a10f-59639eafc752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09692989-0480-4482-950d-b1cccec77333",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290b43a0-a71c-433d-ae1c-59b5d93a543c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc65e834-c4aa-4a9a-a5a4-2142ca733cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fe8b48-a936-4a27-9f2c-cd6b330edb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7872bece-4276-4558-8f08-df43f8784542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4a8892-d8f0-4b6b-992b-00df0475a2c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf65371f-414b-4a84-b7cd-2d392414c26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bfb6cb-ad1f-4939-bb8d-8807de5b05f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa204890-6a8c-49b9-8b10-e09904f19274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84948cf9-793f-483f-a470-9cd4b189de34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de09a77-fcc5-4d33-8fdb-c01532596661",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff24a72-5af9-40b0-ab10-3861d95ee8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4751b35-6e1c-434a-b489-6e16443f694a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e12169d-9b7b-42fb-8f55-e8ce6991492c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc5d57d-704f-47f7-a89b-86ec36d61bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901f36f3-86c2-49f0-a3b1-72cbe831d066",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2555c918-f44c-4e2e-aff0-0b40b62b91a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10192a2-75d4-450f-9cc9-8a4dda676cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f72ab57-b0b8-40c0-a181-96e15ee3259c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ac6663-01fd-4831-80a1-975880fb7d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407362a3-58c4-4a3b-a798-244ba2632ecf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf078aeb-155e-44f5-b359-bf6cb04b02c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0cf932-42a6-406b-8432-ee7103aff265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4d4fa8-8884-4aee-875d-cb0f5ab15aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8a5f74-fff9-4539-97ce-b31ed1bb02df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75573752-4df4-4d17-bbc5-ff80f71b9840",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b187ea74-cb14-467f-96db-0f52f7f721f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d077bef9-f5bf-469f-9e7f-cd25e4fd5fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e2656c-d65c-4513-8269-ae3a94b8ebeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d1c865-7c4c-4016-a558-5d4902404f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559ff2af-16e3-4653-8a35-ff5db8bb5056",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265ea044-7720-49f4-9ddb-5b8295870571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb32b26-ff48-4576-b351-828ab5d6a3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2c0591-e87a-4056-b792-a40a9bd554d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc48beac-5ea9-409a-bda5-246c6c0f0c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4939e31e-e894-4563-8328-c0637e73a847",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e8fb41-830b-442e-a666-8199956bbd46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce299a0c-34c0-460c-a5ae-287c2e460eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99072d7a-6c10-4d78-9065-02f54c3c3c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c9a3bf-edf7-47fb-8140-b702a70a7227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ce1e66-1770-4105-af8f-8adbc44e959f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7b98e7-5c7e-4f88-8276-900470e5b473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0614241-0307-41c7-8685-296b2929cbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722db3bc-a02e-453c-9c19-ca6b34862952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea77d381-628b-4acd-912b-f1f87af853e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c436be1-5941-4cb8-9f27-5ed2a2435e6b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11adef1f-3c53-4872-88e6-867d721f6944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4260647b-ce7f-4618-b384-4c1c71497ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49f6de4-221e-4c1f-a169-36fc46c52ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dded7142-a9e6-488a-99cb-1129d56f462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9e9e4d-6fcb-4453-a632-10aba56ca8d0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2c3a14-54f3-4dc6-9bde-124e194b0461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14b8c85-2f7b-44e0-9fed-7217c88be236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f601792f-f7df-4dd7-b142-1d852b11a914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5af49f-8999-4620-91df-2166d55121e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02293ed0-5734-46da-88a1-e005862aa67b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db05df9d-a352-42a0-b0dc-156a38225eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502067be-47e6-4cea-b91f-f67ac9161da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c49105-348b-430a-ac21-d39122b7c144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eecbc6a-9403-4247-945a-c2f89f3ff10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743194c1-620c-4e63-824f-83d35d870572",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dba637-b164-4c9d-8178-5bca4c81e947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c88eae-6462-478b-ae8a-77a502c71186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad204761-a3ed-42f9-a196-c6653fa84ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba4364b-c932-4db9-83cb-348338a38a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b308f0-331f-483d-9f7f-6f55fc0e8dd7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ea5d8c-b9e3-4605-8ef0-6148d180e173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efe2216-84a8-42bc-8bcc-9805decf74c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35026181-d1e5-4a88-8899-f854fcfcbe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967d1ed9-9bb6-4dd2-a065-c3e6fc259db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b569fe-ef9b-4630-a1d4-213876642fb2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1731442-a885-4424-b079-60950b75b8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a65b54-2447-4574-9e06-acd506077f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d937af2-83c1-4b51-9596-16096b521647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07169f4-b3fc-4e92-bc25-75702ef335b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be454ca1-0dcb-44f4-a86a-86664ef5ffc9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31267a81-7e53-4ac4-9cbe-90742f15dda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f6f0b4-dcfd-4722-b1b5-a45309b05b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2701e23-366b-4ca4-8fc6-260c82a4e013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59e1d36-06ed-422f-9832-810efaa93549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871837c6-aec3-4397-8322-f2f7c70aa9e5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f79329-9089-44ae-a911-be78efead2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d32ed3-df1f-4d5d-98a8-b456d902a2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b452a-069e-4bea-9379-aa2b8be157d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4606c2fd-a8fb-45cb-9c03-57049dfc40c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13111bb4-0a8e-4b2b-990a-de54d26b9da0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96273665-4c89-4346-9fe6-80f76c4643a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8118ff7d-769d-48dd-ab6e-2fb4c125bf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c2615-ebec-4585-9fc9-829e26b81047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd01efe2-c247-425d-94f8-b9c7f46441e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2850cd68-d6b7-4231-b831-994357fead40",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41765f71-8eda-4e4a-9a73-9e468a6206f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37874cc-a46f-49e8-bdfd-f6630fda036f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021a2916-bbf3-411d-b7fd-58fa2ad9ce9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3720a7b7-253e-4191-9eeb-efe28fc611df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068932d8-1b96-41e2-ab2b-79ae6705994c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847c4c3c-f57f-43cf-9dc2-daf4e58e4c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474ecb76-34bf-4537-877f-250c262d8b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be7cfd1-b6e0-4431-ab74-89d2a60c5810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34125416-9b02-4bda-ad21-f50faf06b98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ab1972-6832-43e4-b49f-2f03d20ab4ec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a414a9-2531-492e-a69c-26862ffff095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d09faa4-1a7a-4fcb-8845-7a9220f813cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34484ef-ff30-4e27-9cf2-cbbe1d00447f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4421380f-4d9e-440e-983d-aef41df4ad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040405c8-fb0f-45bc-b68c-dc5659e301ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55736af-1c76-42ba-b5eb-3dc4c48a5ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2125be11-363a-4f9d-b120-725748bffcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff06e93-8e10-48ee-98c4-446b8104dc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41c1885-5a0b-46ca-aed8-1ed613656bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556e2173-6c33-4dca-be5a-106e3e3f8f65",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3663eb-7f91-47d9-965b-9b9787dddf3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81a0558-3300-423a-b9a5-082e6c62c471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b95f583-d581-4d81-a952-a514eda88950",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4c0241-0320-4cf9-995c-1e6572823348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d97028-4bb9-4e40-a626-198e300cb96a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58e2b59-3084-4612-8726-4bf73965286f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e471bb4-733d-4b05-8625-b1ef5c3ef543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3934f6-417a-4a01-b5d6-753d8fb514be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df831a0-07a9-442b-b265-b147e98198aa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5ab57fd-1a53-4e77-b64e-3012e1aaee81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8db2014a-46c5-4050-8b97-37335c7e470c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "862dc89f-82a2-4413-bbf3-0611d9623006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0f85879-2f06-499b-a36c-c02873ddaa27"
                    }
                  }
                ]
              },
              {
                "id": "f35a3dff-32ee-44f3-8659-77aa4246c61d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e17dc84-8200-4cd1-a7de-ce4df6ebefb9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb6ada3-de96-4975-aee5-c1e9fee671e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "da4f0887-1c25-4f66-88e2-92e2a4797956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433525f6-a2c0-4cd4-a489-4dfe406ebc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f0eb735-b770-4e19-8b60-6e84ef49c08d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eff1c7e9-6d40-4069-809e-9f76bfbe73f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb4e4a08-2fea-4840-a807-9300fe23d31c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56034462-24c6-4d7c-8540-9cb36b6da4ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69605c9c-680a-4352-bab7-a154c2d623c7"
                    }
                  }
                ]
              },
              {
                "id": "18bd1572-90f3-40ef-9a68-3f14722258cb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4984b9c3-2cd4-456f-b30e-756e7ec3038d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f789f-d5a1-4f77-a2c9-436b1e66b50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d812a01b-74cc-4c7c-abcd-ef57854376b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dbe977-04ef-42e3-952a-4052d29e3d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba344b3-137d-49cd-a715-ab2cc38d294d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4bdf820-27bf-4a2d-a5df-d88c129da2c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d0a3d4f-9c18-464f-8d64-4a646e2dfddc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af632001-77d2-4b42-a2e1-6f455cc86412",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cce70a88-bef6-41b1-ae8a-19d495e719ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54f551f1-2f0f-4ce7-8b0f-c51957745f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d5a2a81-4021-49b9-a857-4675c5b7130c"
                    }
                  }
                ]
              },
              {
                "id": "0a21d4e1-dbbf-45ad-9ec2-9d8633f9f3e8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0f52fe3-8410-42c6-9e7b-c1217f64903e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c24143c-6240-42f7-9809-beded33a8804"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "981cd8f2-f776-4fd2-a0fb-137d66952546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0aa7b28-ecab-450f-976a-b3a614f780a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40fb5392-bcd8-4a96-8278-c43f03ef6a2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "99bc7a04-813a-468b-bdb6-7041f5f9583b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0acf0037-907b-4234-b715-85c8acacee7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad1552c3-4249-430f-ad82-3de06d89c8c9"
            }
          }
        ]
      },
      {
        "id": "a740e39a-35ef-411e-a6d3-0e6af7a96203",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4f01b30a-0f83-4cec-acd3-a766b28e9811",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7284482-d66f-457b-959e-c41a2007be41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc865c89-e87c-4bfc-8554-d7db115e3a5d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdf5397-57f3-47d8-af57-c8b79505f640",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bd3badb0-561c-4c96-a75f-8cf6d71668bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fffb87-d1f6-4f9a-a53f-91769529874e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90dddb44-ca16-4188-b6a8-ed4784078d3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f03f612-f9b6-4f76-961a-58e039d8c485",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41d048a5-e189-46cc-a00c-dbec561cd383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "491cd8e2-68be-4e58-9b00-60d8db03f8dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05b3e34f-cd56-4593-9f13-a40e8e75385e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6eb98239-5a00-4b35-80a5-29fc4aaea8ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8dc82589-e512-446b-838c-77db8fe2fbf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66733e31-85c9-4ca7-97ad-1dfdd9f2be76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a111ba4-e4aa-4eba-9a63-e78534a6f238"
            }
          }
        ]
      },
      {
        "id": "895bb325-9f7f-42c3-8837-1d5187f2a9c8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5b91e397-95f5-480a-9657-86acd6ed92cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12c1848d-5b78-4a38-9f10-bb4411d86e7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2263659-749d-4bd0-b919-74bd6203be5e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc0c1f-5e5c-437b-8653-d05d87ce840b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bde25e9e-6645-4fda-aced-440c9610f8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b63e3-8a9b-4ff6-ba6e-cbd51c84b174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64dd27d-752d-45b9-adbc-166c171953b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aa9f8c4-b5dc-4641-a83a-3d0ae30cd046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0eb5080-1e5c-41bb-9573-15a1a1af128d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bd422dd-bd9e-45e8-887d-ae484bb3a51a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b90db1-ce3b-4204-80ad-a558b7cfba5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e49854d-974b-41db-a9e3-108191a78595",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1ea2ed2-8b58-4ba1-9c32-fdac979b7d17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "922b31d7-e124-4d5b-8be4-6b9e0aa78f98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ec74289-f2e1-4442-bf5f-207982120774"
            }
          }
        ]
      },
      {
        "id": "ea661a53-2b4e-4af7-8db0-ea241dcc1f29",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4bd734b0-cf45-4417-9054-f57236a1e652",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e210bde-03e2-41c3-93b9-6c83ada2eb8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61b9a834-7511-48c6-a18f-73da97973113",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67fc65c-469a-475b-a9e7-2807cd6f25e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7ac1f5f-b531-4c91-9079-3ce7717c4965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d2d5c3-b1a5-46a2-908f-559f7c225280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff8b7c49-54e6-4794-84de-6f05c7bae8d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ef375bb-a968-44ee-a01a-5008b06811b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "146dad96-a224-4f37-a0a7-ac787829b00a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80815505-26ae-4d4c-8ddf-34d55c4b7c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "043a5b48-10e9-497d-9c4e-6030c90bac9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57ff95ff-0701-4eec-ae4c-9b7e93b9e144",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c42f9bb-e42a-4d0b-8c3e-505d1437f3dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06884e41-b12f-49ef-b8dc-1d7143ea1f97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc212b6d-5110-4aaa-acb1-4f446c8482a1"
            }
          }
        ]
      },
      {
        "id": "a9aed3d1-e6dd-403c-8efd-6f2a29bd8178",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8c1cb40-2b73-4c96-963a-999f38001f54",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c8b1a4e-442b-40e9-903f-6887b094b157",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "01c0ac61-7775-4fe7-ac8c-0daf227103bf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ad9a3ac-f8c4-41b4-9dfd-95463cd44d8d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "875940c0-7200-49fa-8053-3fd46b1c315f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 156.86619718309848,
      "responseMin": 15,
      "responseMax": 5356,
      "responseSd": 493.31980783365196,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696293226701,
      "completed": 1696293283566
    },
    "executions": [
      {
        "id": "d507e7a3-28fc-488c-b9f5-9a0c1d95cda0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "66ad3682-94a5-463d-ab24-24681f956013",
          "httpRequestId": "66ebf8b9-bead-43a8-a63c-147733134ed9"
        },
        "item": {
          "id": "d507e7a3-28fc-488c-b9f5-9a0c1d95cda0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b3546f3f-d3d3-4de3-be42-55e68507dd16",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 0
        }
      },
      {
        "id": "a56efdcd-ba17-4e79-97da-bdb5b06cdc2c",
        "cursor": {
          "ref": "4d50d6de-b44c-47ab-81fe-0712c6924668",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a1067abe-9f9a-4a7b-b69c-9e3cec80b0e1"
        },
        "item": {
          "id": "a56efdcd-ba17-4e79-97da-bdb5b06cdc2c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aadb8cf3-2e79-4165-9864-81c4fb23e384",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "1e7cd7d5-d565-4212-a04d-3b1fbbd26fc1",
        "cursor": {
          "ref": "c0cd2a63-e3db-4937-a8ac-19c11d1b67af",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "83fd924b-5ee1-4aa1-b5f8-60276de5b783"
        },
        "item": {
          "id": "1e7cd7d5-d565-4212-a04d-3b1fbbd26fc1",
          "name": "did_json"
        },
        "response": {
          "id": "0c627052-6e84-461e-b683-031a6b273ac7",
          "status": "OK",
          "code": 200,
          "responseTime": 345,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aca16dc-9013-4663-9f52-01732088e29a",
        "cursor": {
          "ref": "409741fb-b437-4a4d-b188-76ffab728957",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea4ead5c-0e1d-44be-828b-399d5f698233"
        },
        "item": {
          "id": "2aca16dc-9013-4663-9f52-01732088e29a",
          "name": "did:invalid"
        },
        "response": {
          "id": "41fc06d4-399f-42d0-a9b5-ceabc440d611",
          "status": "Not Found",
          "code": 404,
          "responseTime": 663,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aca16dc-9013-4663-9f52-01732088e29a",
        "cursor": {
          "ref": "409741fb-b437-4a4d-b188-76ffab728957",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea4ead5c-0e1d-44be-828b-399d5f698233"
        },
        "item": {
          "id": "2aca16dc-9013-4663-9f52-01732088e29a",
          "name": "did:invalid"
        },
        "response": {
          "id": "41fc06d4-399f-42d0-a9b5-ceabc440d611",
          "status": "Not Found",
          "code": 404,
          "responseTime": 663,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed27be26-bc3c-4c73-a983-3ed3c3c49186",
        "cursor": {
          "ref": "dc848553-5aa0-4ac5-88e6-ddaf154dd975",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4eb7ac0-a76e-4b52-bcac-670cdc4e8a11"
        },
        "item": {
          "id": "ed27be26-bc3c-4c73-a983-3ed3c3c49186",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d6af5020-b899-47da-aa3c-069938cfe950",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3690c2a0-0b09-476c-a6f2-431d6123287d",
        "cursor": {
          "ref": "fe72cc3c-5bcb-43c1-bef4-9da50b1195ef",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7a2cd932-c3cb-454d-9429-70ed5a9d5d18"
        },
        "item": {
          "id": "3690c2a0-0b09-476c-a6f2-431d6123287d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6c6c70c0-14c2-4895-83cb-f7a6bfd7d354",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f79d3e4-a4af-4d46-bafa-2842d7aeaf49",
        "cursor": {
          "ref": "5dbd239c-fca1-4b5d-8469-aeba21fd4c1e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "878ec3ce-c421-460a-a929-cf2f7fc50fb7"
        },
        "item": {
          "id": "3f79d3e4-a4af-4d46-bafa-2842d7aeaf49",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2c688c95-9934-49ed-914d-e66db25a5a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e3ce79-26b2-434f-9ae9-69bdf1709da8",
        "cursor": {
          "ref": "66c23050-f0b5-4510-a684-54aa7be96e28",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76be477b-86a3-448b-955e-9f601c7c9ba0"
        },
        "item": {
          "id": "23e3ce79-26b2-434f-9ae9-69bdf1709da8",
          "name": "identifiers"
        },
        "response": {
          "id": "29f4fb40-481e-43fc-9dd2-ef3d34bb13b8",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76360b5a-db8a-4e57-bb71-55105ee7f40e",
        "cursor": {
          "ref": "cef0ff02-4fbf-4267-9b03-0f90afbf82d7",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2ee6fcf2-e35f-4f40-8b7f-4f324fdb6649"
        },
        "item": {
          "id": "76360b5a-db8a-4e57-bb71-55105ee7f40e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1a2dc30d-9d26-4fda-ad98-a06f8a5d0ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdce0ec-682b-4a10-b300-ba66c9e17fc7",
        "cursor": {
          "ref": "81f4999b-8f9b-40ce-b8dc-db17b214d718",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aed14abe-de35-4bd9-a4fe-49e3eef69951"
        },
        "item": {
          "id": "4cdce0ec-682b-4a10-b300-ba66c9e17fc7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2aaa1822-399a-435a-a718-d53728a12115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec910bd4-eb57-4212-b22a-b669683e1aa2",
        "cursor": {
          "ref": "9a69670e-3e3d-4e23-bf81-72097d371932",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f51cae35-e5c0-4899-924f-dfc73dbc1202"
        },
        "item": {
          "id": "ec910bd4-eb57-4212-b22a-b669683e1aa2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5db97eed-f6d1-47e7-bffd-97de88265728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98e2a96-a154-4c45-9e0e-7a3802bf27d8",
        "cursor": {
          "ref": "9f046d61-c5ef-498d-878e-cce07a0cc83b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "15905b59-b857-43a8-866e-d7db1f5211d8"
        },
        "item": {
          "id": "e98e2a96-a154-4c45-9e0e-7a3802bf27d8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e87e59a6-4724-4c59-9cee-b42764756f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfdb3b7-a674-4174-95aa-c1eecf210c2b",
        "cursor": {
          "ref": "1ba65bd1-fd17-44cc-b1cb-df5ca551c37f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5c104de0-59d1-4171-b990-c6bd39617d89"
        },
        "item": {
          "id": "6bfdb3b7-a674-4174-95aa-c1eecf210c2b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a19cd7b7-2d41-45a3-97b5-7f33a7558929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c56b9-3ae8-47b0-87fa-8a711e4a1d7f",
        "cursor": {
          "ref": "7253d370-41ff-4ff0-a16e-4a91a6d91ca0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "39a5e3ab-ff05-47f3-88ab-2fe7e3eaa5c8"
        },
        "item": {
          "id": "5b5c56b9-3ae8-47b0-87fa-8a711e4a1d7f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b31b909f-3800-43b8-99f4-a55f0784e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fc0bd8-e879-4626-aa11-fa2e34fc75bd",
        "cursor": {
          "ref": "51fde3ad-65b9-49bb-8530-8e407838eedf",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "42fa0067-0801-42e1-930b-adcab64a0a61"
        },
        "item": {
          "id": "e4fc0bd8-e879-4626-aa11-fa2e34fc75bd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "283cf291-1149-433f-b053-6364600161e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11030cb-3c54-402c-bf13-f199e4e808f5",
        "cursor": {
          "ref": "25f40dc5-0ea3-48e9-a705-e49c234ed75e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b5452fad-b3f1-4b1c-a3f2-455898f1a21d"
        },
        "item": {
          "id": "f11030cb-3c54-402c-bf13-f199e4e808f5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c2a09457-c457-4e23-be00-7d26015a9483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c89a86-1cd6-4635-8260-9ebbfbe539b2",
        "cursor": {
          "ref": "481ce486-55e8-4aee-b2a1-d0c7ade28fa9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "87d39b60-270b-4bcf-8a02-3875e7dd568f"
        },
        "item": {
          "id": "23c89a86-1cd6-4635-8260-9ebbfbe539b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aa98a1e6-e2aa-453e-b03f-1b4eda7c97aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34de7db-77bb-4281-967d-16360d27d159",
        "cursor": {
          "ref": "9bce19db-160a-48ac-b541-9bd73ec09dbe",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cca2ce19-2806-45d5-b3f6-2f71a7ef60a3"
        },
        "item": {
          "id": "e34de7db-77bb-4281-967d-16360d27d159",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9e3cdef9-002b-422c-a019-34b8150ce0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1326c50-8ec6-4bf2-9c82-1813ece17fcb",
        "cursor": {
          "ref": "5ffa5893-ba8d-46ee-bec4-da96875b6ddc",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4445a46c-7236-4b40-a2dd-00dd76849795"
        },
        "item": {
          "id": "d1326c50-8ec6-4bf2-9c82-1813ece17fcb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dd390fcc-27b5-4577-b7f2-7d9ab0c40d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54a9ad5-a706-4d4b-9d30-2ed265ea0e1c",
        "cursor": {
          "ref": "3395ca79-e1dc-43b3-846d-6337ac5928b4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cbfd3ac4-791e-40ed-b411-c45ef35cc92e"
        },
        "item": {
          "id": "e54a9ad5-a706-4d4b-9d30-2ed265ea0e1c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0fc75ab2-bb04-4666-b699-9c0484a27a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a281df-fdcf-4147-930d-e2a18e3b0bb1",
        "cursor": {
          "ref": "e1c5b267-c60b-419f-9077-9ddaa73ed19e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "05c28d8d-ffa8-4f6c-a424-cffa1e380259"
        },
        "item": {
          "id": "a7a281df-fdcf-4147-930d-e2a18e3b0bb1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a6396ba6-9b55-4c5d-8a22-d7474b83a9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d149608-9932-4db1-bec9-26594ebba0e7",
        "cursor": {
          "ref": "ebe50bc6-ee11-4851-a934-17b71e1fafd8",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c92abe5b-a022-4d78-8d8e-afb5c8e852a7"
        },
        "item": {
          "id": "9d149608-9932-4db1-bec9-26594ebba0e7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "11f4bdc3-b8a8-429e-b085-7c47dc54d6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7177eb2c-f148-4cf5-9c77-b5ea7fd9ec25",
        "cursor": {
          "ref": "8718235c-ed70-4de0-9fc2-f6faec7ce95f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e89fa77d-d088-43b9-b02b-185743150165"
        },
        "item": {
          "id": "7177eb2c-f148-4cf5-9c77-b5ea7fd9ec25",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d363c287-b6b0-44d8-86d0-399b42b10317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2258f9-d1dc-48f0-8529-49111f7f722e",
        "cursor": {
          "ref": "8054a8a5-2393-4bae-9bb2-06912961e040",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "161b3c51-985c-4fc3-abb1-5dccdda0336d"
        },
        "item": {
          "id": "9a2258f9-d1dc-48f0-8529-49111f7f722e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7995d859-16c7-44d4-8106-aad25b80896a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848a22df-b0a4-4720-9538-e1c2c5c6e0ca",
        "cursor": {
          "ref": "e9e94df5-8e73-49ff-b648-addc51b19c56",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf1f6a87-74c3-4c36-a741-694f6392f784"
        },
        "item": {
          "id": "848a22df-b0a4-4720-9538-e1c2c5c6e0ca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a14b2116-32a7-4d23-bd4e-8f718cb1a4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7155fd14-e3f6-4db7-ac43-d3964dc460d7",
        "cursor": {
          "ref": "af7364b2-a569-4448-93fc-7e8e1ea05da1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fe330b1c-3cdd-410a-b052-048c1adaccde"
        },
        "item": {
          "id": "7155fd14-e3f6-4db7-ac43-d3964dc460d7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "01a51d7d-31e9-47eb-ab7c-d5c53a5c6ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f734421d-4add-443b-8d9f-c6b11c2032c1",
        "cursor": {
          "ref": "361f2678-8e1c-455d-92d8-8103659ffb09",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cd3a196e-7f77-4801-ba2e-12c3ac9bf065"
        },
        "item": {
          "id": "f734421d-4add-443b-8d9f-c6b11c2032c1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32003e97-a443-4c31-a839-cdb7ae276c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac776e-166a-4f68-b1c6-5e4a76684852",
        "cursor": {
          "ref": "12cb6f67-3a01-4e22-976f-fc47cb2d703c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4d33be15-6e1c-4d7c-a0c5-e37e948019e4"
        },
        "item": {
          "id": "2bac776e-166a-4f68-b1c6-5e4a76684852",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "18ed98ac-2bff-4e76-b964-71798f5001ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a107377b-bd3e-468b-bca1-9a17c33ab0fc",
        "cursor": {
          "ref": "ec5b22d4-6745-43e7-bdcd-06229604e87e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a72f5c24-e76e-422a-bab3-78fae44f3037"
        },
        "item": {
          "id": "a107377b-bd3e-468b-bca1-9a17c33ab0fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "58d4f1c0-13c4-4246-a2f6-681a0528a229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e7614f-4912-449e-9aff-0faf192a08f6",
        "cursor": {
          "ref": "603489c6-0dcc-4b77-a474-b3ea621a0250",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7cb7c9fc-68fe-4d96-8548-e1525a3980e4"
        },
        "item": {
          "id": "a0e7614f-4912-449e-9aff-0faf192a08f6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "58eaaa8a-d2fb-4d77-bc33-57144dc46444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fe8c0b-1e11-4d69-8806-5ad8c12b3ff0",
        "cursor": {
          "ref": "0859170f-3bfb-41d1-b6ea-2645d2828c84",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f01c1a68-edaa-4190-9b89-7279b07b328a"
        },
        "item": {
          "id": "a8fe8c0b-1e11-4d69-8806-5ad8c12b3ff0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3294ebc9-9c47-4e26-a416-cf627659dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2833e1-b4e4-4f82-b2db-88aacd34578a",
        "cursor": {
          "ref": "bd8cfa03-1097-4c3a-894b-f267154418f5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "82c08f06-945d-41d7-ba56-19f27114b588"
        },
        "item": {
          "id": "3c2833e1-b4e4-4f82-b2db-88aacd34578a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7226000f-9573-4a0b-a00e-546637789654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820db22b-5f74-4376-b980-02c8a808e196",
        "cursor": {
          "ref": "f0f929d4-28bc-4e70-b5e9-3489120229ec",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0968f108-a80d-45ce-8347-195874e885d2"
        },
        "item": {
          "id": "820db22b-5f74-4376-b980-02c8a808e196",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "528067d8-4d46-4d42-9a80-2ebebfef2490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8add9f83-9bfe-4e08-a5a1-28a081186dd0",
        "cursor": {
          "ref": "ea7b78c1-ae7e-41ae-b1ef-e1cf96a0d889",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "79d8bb64-e9b9-406a-be76-79167029bcd0"
        },
        "item": {
          "id": "8add9f83-9bfe-4e08-a5a1-28a081186dd0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6d85e7b-5276-476d-a13b-bbe596c4c9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5044db-e49b-44bb-a45f-129865cb559c",
        "cursor": {
          "ref": "35aa76c6-7d30-4e26-97f4-b020af295b5d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5d99d460-828f-499a-9a4f-80b667b66879"
        },
        "item": {
          "id": "2e5044db-e49b-44bb-a45f-129865cb559c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fbc162ff-e84f-4404-8803-e609fa76b801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5bc0ab-40c0-4f7d-8348-1efd543c3772",
        "cursor": {
          "ref": "0222f065-fd86-49b2-8b9a-56673e317687",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5c4a81f0-407d-4806-b580-f52509fef121"
        },
        "item": {
          "id": "ae5bc0ab-40c0-4f7d-8348-1efd543c3772",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b9daa0a9-3619-4f75-89cb-b50810e3ad48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa8d5f3-b1be-4885-b594-f71ac39cec5f",
        "cursor": {
          "ref": "722cb1b7-b6f9-45fb-9dab-4db4222dd8d3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27ae8bb6-73fc-4e61-95a5-fabd8a55f10f"
        },
        "item": {
          "id": "afa8d5f3-b1be-4885-b594-f71ac39cec5f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "983bde87-9969-4608-bd47-2c798560a697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5a6326-5e5a-4119-b192-7fb5f2788df7",
        "cursor": {
          "ref": "0457d0e2-b023-4817-afc4-82db3fd007c8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "99d6f336-4796-47fe-83fd-3521961f8b58"
        },
        "item": {
          "id": "9f5a6326-5e5a-4119-b192-7fb5f2788df7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3c257c05-7ec2-4eb5-98f2-3a50122a69b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e56eb2-f6be-4b9a-b3ab-e8962063af1e",
        "cursor": {
          "ref": "6ffba52e-fcb6-4fd9-bf66-e0f11107fca5",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d627aed0-19db-4d13-af2c-d7cf8d0c6f48"
        },
        "item": {
          "id": "d3e56eb2-f6be-4b9a-b3ab-e8962063af1e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bfe0ff73-4b97-46dc-9627-c81e1b189a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f0395e-c23e-45b2-873c-71062b8d1287",
        "cursor": {
          "ref": "80c54233-977d-4bc0-ace0-4cbd093cb5c0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c166c69c-385f-4f36-8a35-36613119a7ac"
        },
        "item": {
          "id": "a4f0395e-c23e-45b2-873c-71062b8d1287",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "76e60e9e-3517-49bd-b419-656b31df35bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c9a7a3-77e7-4bf9-9478-18804aefbb3a",
        "cursor": {
          "ref": "4a72117d-4c8f-4c4d-aaba-b1cf5a9d8411",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ae778d83-ff64-4b13-8159-f70260c0e0d5"
        },
        "item": {
          "id": "78c9a7a3-77e7-4bf9-9478-18804aefbb3a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9bdd7739-7a41-45c9-a310-bdabc2a402dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077d78c8-086f-4237-8de0-7d5621d3ef0e",
        "cursor": {
          "ref": "32cae117-53ba-4987-b134-2fdfc8d15a5b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0d1e1dac-639b-4274-8679-f484279f7649"
        },
        "item": {
          "id": "077d78c8-086f-4237-8de0-7d5621d3ef0e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c47a9951-215f-4597-83fa-73505b5dc5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7878d52b-818b-4baf-8210-dbc6c3be2565",
        "cursor": {
          "ref": "10baf15f-89a8-48db-b187-0b9390a26a4a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5d8cde75-1bb2-48e4-8652-d83a7aa331d6"
        },
        "item": {
          "id": "7878d52b-818b-4baf-8210-dbc6c3be2565",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "05dbd973-68a9-436e-9da2-3c828d217326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaf503a-a32c-4b46-affd-4acc7e47430d",
        "cursor": {
          "ref": "c00a3474-f2df-4745-9e90-e876bf0b5c7b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "10d5114f-faa7-4abe-a7e1-0b9417c28572"
        },
        "item": {
          "id": "fcaf503a-a32c-4b46-affd-4acc7e47430d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cb6aeff2-fe46-49f7-a031-326beaa9afa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a609ca24-0202-489d-9e91-6de08efeea2a",
        "cursor": {
          "ref": "fd5b7b5a-3124-42bc-8b41-20e74df8ee08",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "992703ce-6cef-4671-8f18-b24020d6a204"
        },
        "item": {
          "id": "a609ca24-0202-489d-9e91-6de08efeea2a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "337be851-acc8-46cb-bc9e-fea9f00471b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcd15a9-a6f6-44df-a791-78506e11537d",
        "cursor": {
          "ref": "c8c472ff-a020-4d5b-b1f1-e6d2ad829485",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6628f5f0-e50f-46ab-bf6d-8636fecf6eb7"
        },
        "item": {
          "id": "3dcd15a9-a6f6-44df-a791-78506e11537d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0c26e210-22eb-4961-937f-c5f2ac3d967b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed9d871-6cd1-41a5-8d54-d63bf4773c06",
        "cursor": {
          "ref": "41dc8134-8a9d-480b-a000-50fe061aecec",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7f0efe62-f6bd-4a22-a4ca-0a0d1e8492b3"
        },
        "item": {
          "id": "eed9d871-6cd1-41a5-8d54-d63bf4773c06",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f0dc0ecb-2bff-4016-a29e-b1be48ee10b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064fc3a0-a64f-4992-9c39-e5af8247f3c5",
        "cursor": {
          "ref": "31b21844-bf14-4f72-bf5a-5ff47c0315f3",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eacb38a4-6837-429c-8b29-21e62306838b"
        },
        "item": {
          "id": "064fc3a0-a64f-4992-9c39-e5af8247f3c5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b5392e54-4c82-41b2-9c3e-7a4edcb9e1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be80c38-f83c-4bb9-8659-10291d62ae5e",
        "cursor": {
          "ref": "1a859d2a-bb75-4d5c-9744-59b35e6eb5e9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a25df9e2-46a5-4e46-a307-ea82d7faca5e"
        },
        "item": {
          "id": "3be80c38-f83c-4bb9-8659-10291d62ae5e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4c72a4cd-dec4-4f69-8129-2efad64e2bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8c2a3-d71c-4d76-8a33-71b20f35c55f",
        "cursor": {
          "ref": "666b1ced-1634-468d-a5f1-50d4c44d0248",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cabb0e43-e345-4595-933d-4fa462355100"
        },
        "item": {
          "id": "58b8c2a3-d71c-4d76-8a33-71b20f35c55f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "29d277e9-3344-44ff-9dc1-eef63134aff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c41f0cd-583f-472a-8811-4f7a35a1e1d6",
        "cursor": {
          "ref": "5c124ca1-61ae-4342-8013-9eb28759b334",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "171399c4-0094-4cea-8a84-d8e8428ecf7f"
        },
        "item": {
          "id": "7c41f0cd-583f-472a-8811-4f7a35a1e1d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f31ecf4c-6aa9-453c-9036-bd5eb7e711d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3465f100-cfd7-48b8-aaea-5142fefd0746",
        "cursor": {
          "ref": "36871beb-da66-4680-8b46-75ffab297dff",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dcc368c3-2e5e-46f0-8922-d9c190a6a5be"
        },
        "item": {
          "id": "3465f100-cfd7-48b8-aaea-5142fefd0746",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "78e62374-751a-4d34-b53e-b8840d0cd947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5016077-4871-4e99-b8f6-a8cafe4576b6",
        "cursor": {
          "ref": "04100ce1-bfea-44db-95fb-061eb729fde8",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "241f9b57-3752-4cf2-a761-bcac7646c1b1"
        },
        "item": {
          "id": "f5016077-4871-4e99-b8f6-a8cafe4576b6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3e9a1eb7-95a9-4719-9d86-b04e879315d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b12eecd-7a07-449a-bc62-e8586acf9fd1",
        "cursor": {
          "ref": "27c50bb7-1526-48b0-83aa-fba2a380ea55",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9315c4ea-1a35-4469-91b3-454ed9dec55c"
        },
        "item": {
          "id": "1b12eecd-7a07-449a-bc62-e8586acf9fd1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8c9e46d5-03ee-4f6e-a3db-1e19b1903e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ff4063-c022-4b85-a343-07e2ec0b1b6a",
        "cursor": {
          "ref": "30f8df2b-6c07-4729-a04d-552cf142c870",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b8867b18-bf30-45aa-8a92-b9a9482d7f80"
        },
        "item": {
          "id": "81ff4063-c022-4b85-a343-07e2ec0b1b6a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a49534b8-deb4-4292-82a2-20491601ce47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60438244-d933-4f38-aa3e-9d68c7996259",
        "cursor": {
          "ref": "cbf8c53a-3b1c-4c30-bfc4-7f8a04cafe40",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0bd51fe3-8334-4b92-86e1-9c85b6da5f2e"
        },
        "item": {
          "id": "60438244-d933-4f38-aa3e-9d68c7996259",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "808c9019-646e-4580-aed8-3cbd4fffc6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2040423-713c-4422-8684-7110a26d4fe9",
        "cursor": {
          "ref": "491951b0-bbbf-4226-9194-32ca5474da21",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c78b5bce-fc51-43d0-af1b-d9b5ee3b3134"
        },
        "item": {
          "id": "f2040423-713c-4422-8684-7110a26d4fe9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "279f3fc3-6aea-463a-9d60-73948f3e7ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6af5f43-316d-4ab5-ae18-8d17a355a646",
        "cursor": {
          "ref": "082d20d7-1e7d-4964-af86-edbdb15caee6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "80a5c74a-d3d4-4f64-8e7d-2e3bd337a3be"
        },
        "item": {
          "id": "f6af5f43-316d-4ab5-ae18-8d17a355a646",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d958d2ce-bdac-4ec8-bffa-4d60e32295af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba66bc07-4eab-4978-aa9b-eb3df622e742",
        "cursor": {
          "ref": "baa68323-f9e9-4748-be27-1eebf2a56668",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b67a5a6e-db78-4478-9eca-834e764d423e"
        },
        "item": {
          "id": "ba66bc07-4eab-4978-aa9b-eb3df622e742",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "05e08da4-9d0b-4a77-9e98-6255020f5062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e5b2ab-e303-4499-a59c-b452390c2b9b",
        "cursor": {
          "ref": "d768d9e5-8821-4614-b495-170f54e53682",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a0c52a6e-dcae-4ffc-9f94-1183015af8c8"
        },
        "item": {
          "id": "50e5b2ab-e303-4499-a59c-b452390c2b9b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d8251d0-0287-40f5-b271-10540aa68294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7474602-87cb-4ac7-9361-8430d2c5b2c8",
        "cursor": {
          "ref": "35b1e142-6434-48eb-9dd9-12898cb4ccf1",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b7edefce-ed33-4273-9b27-62e177dfccdb"
        },
        "item": {
          "id": "a7474602-87cb-4ac7-9361-8430d2c5b2c8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0dc61fa1-e0d4-40c1-b869-66bbbd064bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01e6794-de79-418a-81b8-7dd74b39264b",
        "cursor": {
          "ref": "cb408983-1d9e-4347-9024-af0f67aaf35d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "badad9c9-6076-4b9f-a3e7-8d631a84809e"
        },
        "item": {
          "id": "f01e6794-de79-418a-81b8-7dd74b39264b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "735d2ec4-34b5-432a-88c2-30c0b11aa9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf54d6e-7c58-48fe-a615-03bb3c27802c",
        "cursor": {
          "ref": "6db1e700-807b-4158-b2ba-f3067076c7bf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a987d757-cce2-4581-b77d-8f58079a3c63"
        },
        "item": {
          "id": "2bf54d6e-7c58-48fe-a615-03bb3c27802c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c19ab08d-3345-4e03-a9e6-e3cdad859273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c338001-6ddf-4705-ab8f-ec7e22359ffc",
        "cursor": {
          "ref": "0b19f0b8-618f-4333-a960-b47386cfe893",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f139a8df-b9a7-43f8-b3f2-0b3489255961"
        },
        "item": {
          "id": "9c338001-6ddf-4705-ab8f-ec7e22359ffc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f98da4dc-5966-4181-9c50-84bc786c1b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f50edc-0221-4656-a3fd-c1fa7a030c43",
        "cursor": {
          "ref": "08dd868a-f889-4ad0-9718-d2181e173d48",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "03e1c34a-5d22-4a6e-8c7f-b6bed9e08f4f"
        },
        "item": {
          "id": "e0f50edc-0221-4656-a3fd-c1fa7a030c43",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a71fce47-4d15-4e44-960b-b3c02a02e2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b232386-9251-4c0c-a755-21a30d3de4f0",
        "cursor": {
          "ref": "517f72f1-67dc-4aba-8392-84a5e5eed36a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9144317e-96ea-436f-821b-591ec2b7519c"
        },
        "item": {
          "id": "3b232386-9251-4c0c-a755-21a30d3de4f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fa8408fd-653a-46aa-beb5-f0cfd52260fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc61166-c3d8-4137-8bca-2ab9f6224e7b",
        "cursor": {
          "ref": "713b21d9-4774-4866-acc9-c156a3e389ab",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "15af1bb6-2521-4905-8ec0-4896fab0b201"
        },
        "item": {
          "id": "5bc61166-c3d8-4137-8bca-2ab9f6224e7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b95c236f-efb4-4a81-8f54-75c12ce5fc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e686fe83-191b-46d3-857e-c6978193a678",
        "cursor": {
          "ref": "7206b4bc-2a4b-4145-8046-4c787bff3cbe",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "35dcb7e4-32cb-4fd9-afb4-9bb129db9478"
        },
        "item": {
          "id": "e686fe83-191b-46d3-857e-c6978193a678",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98c780f6-c7e0-4673-9339-587fe8c68fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7ee2ea-5306-476f-94f6-6a7370728d81",
        "cursor": {
          "ref": "14fc0be5-91ba-4ecc-b1f1-a593a2c05511",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "44847878-1ace-4502-a3ae-35ea7ac8cfd1"
        },
        "item": {
          "id": "4e7ee2ea-5306-476f-94f6-6a7370728d81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fabddf94-ff1e-40c7-b5c1-7b2ddfe5e7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d5f28-c792-41a4-8f6b-5e9c7a5e30b2",
        "cursor": {
          "ref": "f666da27-ab08-4a90-bcc6-fea60e2715ec",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cd949762-9d81-4a1d-813d-c21bc0317f41"
        },
        "item": {
          "id": "175d5f28-c792-41a4-8f6b-5e9c7a5e30b2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c07c77cf-4d82-461b-8de6-6f9dd67ad8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d031ae6b-771a-457f-bc96-5286e80417d8",
        "cursor": {
          "ref": "bef4be50-5632-4cce-ba9b-ab63dd72ca0e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "acace4ea-eb5c-40b4-a15f-996cb969d40b"
        },
        "item": {
          "id": "d031ae6b-771a-457f-bc96-5286e80417d8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "04a71624-0f36-40e2-a96f-cc2283a89b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e54631-711f-453a-af96-3554a7d186de",
        "cursor": {
          "ref": "e46bbc43-b9c6-465e-a243-92d2e592279f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "de2c297a-03d9-460e-82e8-2a0c52513815"
        },
        "item": {
          "id": "76e54631-711f-453a-af96-3554a7d186de",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b1898846-1031-4ebd-9224-2be1eb62f7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43293238-826e-4b92-9fe8-a10693325273",
        "cursor": {
          "ref": "d16a4edf-6c3b-4d58-893c-e09c11d348eb",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "caa92ffc-eb74-473f-ad50-7b0ad800616a"
        },
        "item": {
          "id": "43293238-826e-4b92-9fe8-a10693325273",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f31fb072-2e5a-47ab-b0ad-99590c3dacfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afa156e-5981-4e71-925f-74d722c2bc46",
        "cursor": {
          "ref": "bc840a56-0271-49f4-b061-e6f80a3017d1",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "18cfa454-65fb-41db-ac90-bfcb52bc5195"
        },
        "item": {
          "id": "5afa156e-5981-4e71-925f-74d722c2bc46",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7c74572-849b-49c2-b5ed-e4d5bd6dc1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e697572b-cef8-467e-96bb-31d7804c60d3",
        "cursor": {
          "ref": "5941e22a-227f-4656-b66a-c33eae3f0cb4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c7494a25-0adb-4501-9659-502c454fbdb6"
        },
        "item": {
          "id": "e697572b-cef8-467e-96bb-31d7804c60d3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5ece46b9-223d-4f19-9b7f-907e69240eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf174a03-4569-4ee5-ba7e-9816f8948cd3",
        "cursor": {
          "ref": "1ba590e4-ef5c-46c3-8016-651d90d1ba60",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "92f014f7-fddb-4815-a6cf-61ae0049d442"
        },
        "item": {
          "id": "bf174a03-4569-4ee5-ba7e-9816f8948cd3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "33570da1-3377-4606-94a5-4faa32df81e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f41021-fa41-4ba7-b133-4198b45eef07",
        "cursor": {
          "ref": "56b1eafd-e9d1-4a38-9d84-da25385530c1",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "83dd868a-f55c-4312-8d7b-652eb77059ae"
        },
        "item": {
          "id": "d9f41021-fa41-4ba7-b133-4198b45eef07",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ee8876d5-5495-4f3d-af78-cead8d611e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a317699d-0ff1-41dc-b382-510307bfbf67",
        "cursor": {
          "ref": "67aae47a-134d-40b4-87dc-a4c33167e65d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a9aa6910-7606-42f4-8ab7-8b34dd4432f6"
        },
        "item": {
          "id": "a317699d-0ff1-41dc-b382-510307bfbf67",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4a957478-8d3b-4539-9b94-34772bee2ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608e8d99-1324-4dfe-8af3-b34e450ac14e",
        "cursor": {
          "ref": "60b399c7-f612-4071-bd54-424a54e49709",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e53308ba-ba43-49ac-9e7b-204bfe4ec28a"
        },
        "item": {
          "id": "608e8d99-1324-4dfe-8af3-b34e450ac14e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ca91579-de48-41fe-afdd-29c38841a77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fd0c83-a076-4d05-99c4-235ef1863ebf",
        "cursor": {
          "ref": "e5884750-a1f7-46bf-80a1-0e035e92d9b5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1fe4b8e7-ce6b-4777-a6e4-ef77c53a8c4e"
        },
        "item": {
          "id": "a4fd0c83-a076-4d05-99c4-235ef1863ebf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5e55324b-2007-40ed-8db4-5f188ab47a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c768fa6f-6cfc-481a-92fb-a15d2ead6eef",
        "cursor": {
          "ref": "ab141984-20cf-4788-9d4c-3a1741866452",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7126b817-b06b-4935-ba28-ffe7a55cb483"
        },
        "item": {
          "id": "c768fa6f-6cfc-481a-92fb-a15d2ead6eef",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a63fc1ee-e0b2-4daf-a1d5-744b9b086264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcb97c2-3024-4be4-b7f9-f14b124c0eeb",
        "cursor": {
          "ref": "a0a2c411-bf2f-4305-b458-98853f15401d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b52824f-5fc6-4c29-8dd1-ca137003a8fb"
        },
        "item": {
          "id": "2fcb97c2-3024-4be4-b7f9-f14b124c0eeb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f9d678a8-c6fe-435b-85b8-030147273c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f924a1-c0f5-4055-856a-4e5aecf33d1a",
        "cursor": {
          "ref": "4f501f64-efcb-4082-83d7-54234d99dea9",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "acc5cd9c-858c-4d41-8c67-525937f3c5ab"
        },
        "item": {
          "id": "16f924a1-c0f5-4055-856a-4e5aecf33d1a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "16f0cc81-99c0-4fd6-ad03-db494ec0ae78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6bdbbc-3ad8-4327-a79a-f4c9035db05b",
        "cursor": {
          "ref": "b2bbd225-ef89-403d-92b9-1e03119ab198",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "678b64b8-8dcf-46d2-b5d4-a946d04370a0"
        },
        "item": {
          "id": "cf6bdbbc-3ad8-4327-a79a-f4c9035db05b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "45862234-7a73-4075-8f1a-365119590eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd48ff7-f484-424a-a9f3-555febb9c27e",
        "cursor": {
          "ref": "63a48bbf-a844-4695-8ba3-094fbec1965a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6710f9ea-430f-4493-b628-d330b974aead"
        },
        "item": {
          "id": "fcd48ff7-f484-424a-a9f3-555febb9c27e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eec628bf-e86b-4564-8dcb-c8cad8c30e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6367a77-bfcf-4b9e-b871-aa8b8016ed13",
        "cursor": {
          "ref": "9e5dec6a-252f-43cc-a4ff-c75264f8f34a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0015acaf-b691-40d9-aabd-194c6ef664a2"
        },
        "item": {
          "id": "b6367a77-bfcf-4b9e-b871-aa8b8016ed13",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1e6f7713-62d8-481a-a6e6-82c0006e87db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2a277c-89e5-4d08-9947-2afd01e91eaa",
        "cursor": {
          "ref": "9c1b92dc-44e9-478e-955c-01b8c418b77e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2d2255f0-db86-4241-ba57-05c5a56b831c"
        },
        "item": {
          "id": "ac2a277c-89e5-4d08-9947-2afd01e91eaa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a716aa40-174b-41e6-a46f-ad21e230ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c136653-5a92-4761-82c1-0deb955c644c",
        "cursor": {
          "ref": "4fccb8b6-746a-4f72-8cb9-6ed4a395e806",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "77143816-c066-4eb5-8477-86cd6fceb3bc"
        },
        "item": {
          "id": "6c136653-5a92-4761-82c1-0deb955c644c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec30796f-e672-4fbd-a5a3-82eaa45663bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79437644-47c1-4a4d-9f81-f884f8a1343f",
        "cursor": {
          "ref": "b46c426c-e7a6-4d2a-8182-0cb758929ab8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "01417730-850d-4bfc-9213-83fdd6a508e9"
        },
        "item": {
          "id": "79437644-47c1-4a4d-9f81-f884f8a1343f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ceb093ce-4d51-4cce-8484-326579337f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8b90e7-5bb7-48e2-b253-9aa8e8455b4f",
        "cursor": {
          "ref": "5ff0d925-0f4b-4664-9372-c4a95ed2e3c7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "780eb83e-6054-4c67-badc-4b46bebbd10b"
        },
        "item": {
          "id": "6d8b90e7-5bb7-48e2-b253-9aa8e8455b4f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1ac64c20-f0f4-45f4-8bd8-8a0300298724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a2945b-cb8b-4cae-aa75-753756505ce7",
        "cursor": {
          "ref": "051f12a3-1968-4ac0-8eda-7ce1b598f434",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "85b02362-bcff-48e3-af1b-42450b94e7b6"
        },
        "item": {
          "id": "98a2945b-cb8b-4cae-aa75-753756505ce7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e214f1d7-5e63-4a66-8dd5-d0f10cf64d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea898be8-2772-46cd-8f94-67a84ae0bfda",
        "cursor": {
          "ref": "cef41c96-f818-4e13-940c-06e689443dc2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8e6a63ec-1aa8-4f42-9b0b-ebd932047e6f"
        },
        "item": {
          "id": "ea898be8-2772-46cd-8f94-67a84ae0bfda",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0412972a-ecff-4f4b-af65-6568ffc538e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3d58e4-fcee-4403-8b08-418e53f96550",
        "cursor": {
          "ref": "0dc66de9-972c-4dca-a72c-10f6c5328d6c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4e9241f4-fce9-4d0b-9ae4-7f6ab2d17fa1"
        },
        "item": {
          "id": "1f3d58e4-fcee-4403-8b08-418e53f96550",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3b42eab2-6713-4b8c-9a9b-4eba3e05c6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaba4ff-c771-4f3f-83af-7090ef173b39",
        "cursor": {
          "ref": "88ff91cc-7f29-40dd-b7f8-4bf3148d150e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "71347d39-daf4-421c-a9a8-08058b22541a"
        },
        "item": {
          "id": "eeaba4ff-c771-4f3f-83af-7090ef173b39",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "177cbf79-867e-4176-8bec-b07cd5ce5c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59b8b51-2134-4d21-90ec-f3c7c188d77b",
        "cursor": {
          "ref": "8a14ff9f-960c-41f1-bd3d-f10b63d020f0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aa5c6209-c7d4-49ea-bac2-c73f8c83f292"
        },
        "item": {
          "id": "f59b8b51-2134-4d21-90ec-f3c7c188d77b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "01750953-1042-460c-8033-7488d8d02789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4376ab71-5fcb-4850-a3a2-75532ac8df6d",
        "cursor": {
          "ref": "7044f7c8-f55f-4665-a39f-3850fbd100c8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e04b6438-d3b7-44b6-b68c-6080c4c5dde0"
        },
        "item": {
          "id": "4376ab71-5fcb-4850-a3a2-75532ac8df6d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9ef64e34-a946-4c68-a8ab-245e785cd0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04d4cf7-6586-4dbd-b588-62ef232d070e",
        "cursor": {
          "ref": "12fc454f-4a7a-45f2-9bff-3bfd071567be",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9937e8ed-1127-40f8-83e2-e6228ec32dba"
        },
        "item": {
          "id": "e04d4cf7-6586-4dbd-b588-62ef232d070e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "93942287-c0a1-409c-b845-f70b127d468d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d64a0a-696b-4589-b56a-a36a1db10ed9",
        "cursor": {
          "ref": "db9775fc-4a1f-4699-b13f-7cc3412fd7eb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ccdbbb7-b474-4a20-990d-24135b76b78c"
        },
        "item": {
          "id": "c7d64a0a-696b-4589-b56a-a36a1db10ed9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5e029658-eca0-4920-a2f2-34a514782a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf36786-7511-4ba4-bb4a-20b8a4c73ef6",
        "cursor": {
          "ref": "b0a82c45-a388-4620-a3bf-7614819e85f1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b869f61f-cb14-48ec-8c37-50b79cbed2a5"
        },
        "item": {
          "id": "cdf36786-7511-4ba4-bb4a-20b8a4c73ef6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b9e518ed-7b7c-410c-afa7-d29ef230a364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55b1a69-8e51-488a-9320-364fa82e7976",
        "cursor": {
          "ref": "ddf38247-80d6-4bcd-860a-2777240f1343",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cd7cf6c6-5e84-4657-be58-43ef8b2e5c6a"
        },
        "item": {
          "id": "b55b1a69-8e51-488a-9320-364fa82e7976",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9dcf610c-a663-40b9-b2bf-adbe94753344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba0412-cdd9-456e-ae9c-b7b847feae72",
        "cursor": {
          "ref": "8becb755-a94a-412f-b7ee-9c75128e6020",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1dbfb386-f164-4f5c-80ae-a2d254f5e97a"
        },
        "item": {
          "id": "21ba0412-cdd9-456e-ae9c-b7b847feae72",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ee28a7a6-3260-4bab-b7fe-0ce4e31e87f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9f6674-7bc4-4866-a8ec-283085c0cb11",
        "cursor": {
          "ref": "2e907b44-c84c-493c-9c4a-194d5b1d9611",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00b7b52a-f39b-4883-930b-603b7f6767ea"
        },
        "item": {
          "id": "7f9f6674-7bc4-4866-a8ec-283085c0cb11",
          "name": "credentials_issue"
        },
        "response": {
          "id": "44f3224e-918e-49f6-8a6a-64b0c558da34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "dc31d1a0-aef4-454e-8955-9fbf42a72709",
        "cursor": {
          "ref": "f7ba9fd0-751b-453d-9019-5e23c91532b9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7f096bb4-2509-4c8f-9bbf-5b721d111fa9"
        },
        "item": {
          "id": "dc31d1a0-aef4-454e-8955-9fbf42a72709",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c98b353f-6cd8-4c10-ba30-39ac8c25ef56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "75c2e184-b407-4716-a825-1f4c1e5d177d",
        "cursor": {
          "ref": "6a8d2882-496a-4da0-9f3e-ff6b776376cd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "67366f48-9809-4dab-8285-065a2fff3a9c"
        },
        "item": {
          "id": "75c2e184-b407-4716-a825-1f4c1e5d177d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3d1c9bbf-a52e-4ccf-aef3-334aff2114e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "14d6c707-b490-4c01-8f2a-5f050d45ba9d",
        "cursor": {
          "ref": "fc00a766-8988-4437-8072-ddb43bce9c36",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2afdfda9-e7f6-4e51-b65d-68ee65212441"
        },
        "item": {
          "id": "14d6c707-b490-4c01-8f2a-5f050d45ba9d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c0e2922b-b612-49ae-b8cc-2262b61b873a",
          "status": "Created",
          "code": 201,
          "responseTime": 5356,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27199e0-7a65-46d1-b61d-5817b498c996",
        "cursor": {
          "ref": "e87ba7a2-55a8-4e8e-8067-c4e10f8fe7b8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0fccde7b-4877-4e5e-82ee-2459cca95a2c"
        },
        "item": {
          "id": "d27199e0-7a65-46d1-b61d-5817b498c996",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5b730a12-f2a1-43ea-99be-49ae838f05b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "41fcdeab-5509-4ac4-b83d-acd952011210",
        "cursor": {
          "ref": "cfc1a6a1-28a2-4b4f-81ec-a70380574b9e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "62a6b001-4f5c-43bf-b2a6-07c14d7915f3"
        },
        "item": {
          "id": "41fcdeab-5509-4ac4-b83d-acd952011210",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ca3806fe-6c1a-402f-808e-fbd46d385246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "18d1b8b4-7d21-4c7b-bd71-1c682937e0ed",
        "cursor": {
          "ref": "4d5bfcd7-9dec-4aa2-9203-5397febf6551",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "afdb0c37-3d0c-4ee3-9a50-910ace09c9d6"
        },
        "item": {
          "id": "18d1b8b4-7d21-4c7b-bd71-1c682937e0ed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "097c7fd1-c43a-4570-9261-c06e7e7bcfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df37bd3e-d509-4ae3-b0d7-324b1d9a4c2c",
        "cursor": {
          "ref": "c6a5201b-5d3c-407b-97ac-6dd36f16fc37",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b774a68f-56ba-48a4-9111-e14407bc8498"
        },
        "item": {
          "id": "df37bd3e-d509-4ae3-b0d7-324b1d9a4c2c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "389ce8ea-84e8-4161-afa1-aee97b5aa7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b153ebac-b001-4af6-8191-46fedec5acb6",
        "cursor": {
          "ref": "9ce6bc39-faa0-4255-864e-7736ca36fc6d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ee1ce8e4-defb-4222-88cd-fee6ceab3eb1"
        },
        "item": {
          "id": "b153ebac-b001-4af6-8191-46fedec5acb6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3cc496ef-b15e-4b33-8b51-80512888e58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2564c02a-acd9-4152-a44c-bb6c06d995d6",
        "cursor": {
          "ref": "fd7a6465-f9f4-42be-a05c-d4721b1a2997",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46f13e17-cceb-46c9-bb2b-db4fd8e44174"
        },
        "item": {
          "id": "2564c02a-acd9-4152-a44c-bb6c06d995d6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "99e3d0fa-6ac1-4432-90ea-9dcedebf7d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98c150e-f45d-4aaa-9f5d-5de4ffa10b0f",
        "cursor": {
          "ref": "1ccee7c5-fcbe-43b4-8342-0f7eb3d62cf6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8392ce2-a6f6-4e20-af1b-9f64b4fc3b8c"
        },
        "item": {
          "id": "d98c150e-f45d-4aaa-9f5d-5de4ffa10b0f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "01e2892e-deb1-4ae5-8506-ce62ccb67b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7df835-87bd-4b14-9d79-17801f005a40",
        "cursor": {
          "ref": "0bbb1f56-0195-4cf2-ac12-1f919682394a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c0a6492-8c29-42b4-9a5e-3f796cd6f1ec"
        },
        "item": {
          "id": "9a7df835-87bd-4b14-9d79-17801f005a40",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebb14ba6-7d92-413d-8dcb-b5d80c521569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca9b0af-f273-45ba-9726-f0a5f8430ff4",
        "cursor": {
          "ref": "e2e87966-4294-415e-9bd1-e6292b94f88b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a570361f-884e-4bc2-9f3e-21a6e08d4e63"
        },
        "item": {
          "id": "2ca9b0af-f273-45ba-9726-f0a5f8430ff4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "39422c8d-db1e-4b12-aa43-cab55567e5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a7b268-8d1d-4bce-8ca8-1283b6cd2549",
        "cursor": {
          "ref": "8cab84ec-ecd7-4faa-9749-efd3f6e90509",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "702af632-53fc-48f8-86ae-311e7676c0d7"
        },
        "item": {
          "id": "54a7b268-8d1d-4bce-8ca8-1283b6cd2549",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe7a042a-c325-4cf0-970e-b356ce3ae5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588b4219-be7b-4d5f-a27c-94c7cad5f768",
        "cursor": {
          "ref": "3c7776b4-0457-4ff5-b044-26de1b9dbe3b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "22aacc34-66b8-4b2e-ae1f-80184564bbc2"
        },
        "item": {
          "id": "588b4219-be7b-4d5f-a27c-94c7cad5f768",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "45ab7499-e7f8-441e-a9b6-fb26f9fe008b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b290681-ea50-4794-a796-e7de948e00d7",
        "cursor": {
          "ref": "a203e959-d4f6-44bd-8fe2-71a6e29aaa75",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2ef21b18-8feb-43fb-8613-434d506aa28f"
        },
        "item": {
          "id": "8b290681-ea50-4794-a796-e7de948e00d7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22d9e350-b3a0-4636-8b8e-48e4cb10071c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282b045b-5410-4b7b-9312-ff2b96a00f2b",
        "cursor": {
          "ref": "18b33cee-53a4-481a-8d03-ddfb85280319",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "69f78f27-ddd0-45ea-8144-e43f314aefb1"
        },
        "item": {
          "id": "282b045b-5410-4b7b-9312-ff2b96a00f2b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "de478ea9-3fa5-40c1-9c99-88d3f4cddb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1233,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7d28f5-d68c-40da-8da5-e8b1e394e045",
        "cursor": {
          "ref": "50e18448-fa44-48bb-af4f-5b78242b289a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b815dbb4-84f8-4f3c-b03c-b91f4349f6d1"
        },
        "item": {
          "id": "ce7d28f5-d68c-40da-8da5-e8b1e394e045",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f58b0000-5295-48ee-9ef2-1706f7e0d3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5647b0a6-26b5-43df-978b-1bc41b40f2e1",
        "cursor": {
          "ref": "1491ab76-c392-4c5c-a2c9-e4b18d57936a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "15dab2df-0b92-44c2-a19e-cf4eacd2d743"
        },
        "item": {
          "id": "5647b0a6-26b5-43df-978b-1bc41b40f2e1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ab0ef80-cc8c-43d6-bb94-c8b03f96385a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ae3bfd-2543-40e8-b46c-3fe4277b7ac7",
        "cursor": {
          "ref": "5e19da5c-315e-42e1-aa7e-d7b0ccb28041",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d6d0f238-b684-4b8d-ac60-8ad0612c83cc"
        },
        "item": {
          "id": "93ae3bfd-2543-40e8-b46c-3fe4277b7ac7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b5fa610-5f3c-494f-a64f-6a151433c5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdec92b-2a1f-47ce-a0fc-1693948bc0cc",
        "cursor": {
          "ref": "a09725a0-8915-42c3-8ec1-810545ce8ddf",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ab4be473-baef-4cc2-881b-860bbf3f29a3"
        },
        "item": {
          "id": "4cdec92b-2a1f-47ce-a0fc-1693948bc0cc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4e0cb8a4-2cf1-4da8-a1c0-7330000fdeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95820673-914c-4ffa-9553-856b8d289897",
        "cursor": {
          "ref": "fa9dfdc7-0ac4-4a5e-8d1d-0ef0ca8aad99",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aa79f3c9-b996-4e37-ab87-4856ae65b21f"
        },
        "item": {
          "id": "95820673-914c-4ffa-9553-856b8d289897",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6ec1fd9e-0187-414a-9fcd-bb4ac005f806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a79a7-42a4-472f-93c7-7067b7e69ded",
        "cursor": {
          "ref": "8ead0e9a-1763-413f-a5b0-7661f31605a5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e02acec-2ab2-4597-82f4-3483fe40f251"
        },
        "item": {
          "id": "074a79a7-42a4-472f-93c7-7067b7e69ded",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4a3e61b-b0c4-4913-89ed-af565fc5685e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea864ac-9155-42ee-8a4d-ecffea404291",
        "cursor": {
          "ref": "8e35e7e5-66a5-4b2d-9671-8b53ff8f6920",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eb83cd4e-9555-40c8-be57-90441060b21f"
        },
        "item": {
          "id": "3ea864ac-9155-42ee-8a4d-ecffea404291",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f4a7225-4767-4463-8168-ec4613050993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d03e17-1676-43d4-bc27-33f24c4b379a",
        "cursor": {
          "ref": "4a3b4a60-3a10-4a2c-a7a8-1d660c2dc533",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4453f2da-1dcb-4a10-9631-4a8da865fed4"
        },
        "item": {
          "id": "b0d03e17-1676-43d4-bc27-33f24c4b379a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c911a5d8-c755-4ee4-a1e7-dbaf4ef6fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9108b65b-faa0-4527-a95f-0d0f2de52126",
        "cursor": {
          "ref": "ee6e6811-a7fb-4e06-98f5-23ea44e8eff0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "25282a68-7706-4eaa-ab2a-995e40dd62c5"
        },
        "item": {
          "id": "9108b65b-faa0-4527-a95f-0d0f2de52126",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "03aba5c3-1d37-495e-a363-13c933505c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798a18d1-0c93-4fb8-baac-83e217deed2e",
        "cursor": {
          "ref": "276e4243-fecf-421c-9d5d-d9bbbe744fdd",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ec5a2f4f-ffbb-472b-819a-167d28f9237c"
        },
        "item": {
          "id": "798a18d1-0c93-4fb8-baac-83e217deed2e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "401b7559-a766-423a-a9fa-fdd6126f49db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d6cb7e-19eb-4264-b087-65504a7aabfe",
        "cursor": {
          "ref": "4653bb3a-8a2e-416a-a0d7-7fbd0d96600d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7efebf69-763b-4066-9a10-59ed26e3062c"
        },
        "item": {
          "id": "d0d6cb7e-19eb-4264-b087-65504a7aabfe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "de3af387-d011-4819-942f-bf28b7a1d1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e68e3b-2b8f-4a0f-af24-5ab7238ddf72",
        "cursor": {
          "ref": "37a8457f-3fb0-4f01-896b-7f59abd70625",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e3c87b0c-a182-471c-b118-1168bce2c625"
        },
        "item": {
          "id": "e9e68e3b-2b8f-4a0f-af24-5ab7238ddf72",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a5ba2808-94bf-459b-ac68-28853ade488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67dbacf-aae8-4a4c-868f-c5540bcbd331",
        "cursor": {
          "ref": "59ef5600-2d75-455e-ab2c-4fa71e4efd01",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6c96ce32-a6d2-413f-9674-cb1769706b2e"
        },
        "item": {
          "id": "b67dbacf-aae8-4a4c-868f-c5540bcbd331",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aeae2085-a966-4888-86fa-5a96ada01f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c881c04-ebc4-47bd-a64b-1e8113102b6c",
        "cursor": {
          "ref": "5d479389-9feb-4cf0-a388-bad185bcd637",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8248e138-3a6b-4cdb-8072-b4177e18e2a1"
        },
        "item": {
          "id": "6c881c04-ebc4-47bd-a64b-1e8113102b6c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b9227964-31fe-49e4-bf59-dc3c6e8e7920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97273c4-5415-4f6a-95e4-9e0b4e68368d",
        "cursor": {
          "ref": "635c8cc3-3556-482b-b6c9-50d00676625b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d999daf9-a8dc-4d31-9956-b35eed1ad513"
        },
        "item": {
          "id": "d97273c4-5415-4f6a-95e4-9e0b4e68368d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7400ab26-0f4c-4ac5-92c7-ce6714317f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c868a1ca-939a-464a-b86f-1ee6866f01f5",
        "cursor": {
          "ref": "598dae3a-7615-4824-832b-713e54d3565a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "087136eb-7035-4359-b884-55946093e4d9"
        },
        "item": {
          "id": "c868a1ca-939a-464a-b86f-1ee6866f01f5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "53a89405-3329-4180-8f8e-7e9c3b128c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c392c7bc-6929-433b-a0da-4756b27d62c7",
        "cursor": {
          "ref": "ff7e7ace-d13f-4249-8095-2ddf4ad94d89",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cea7a02c-04eb-464d-89c0-8969aad97f73"
        },
        "item": {
          "id": "c392c7bc-6929-433b-a0da-4756b27d62c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6de5dadb-6f93-4f57-98a9-7ba24f44b198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f78183-61c6-42e8-bcbf-299ba7459264",
        "cursor": {
          "ref": "f23d0688-bd5e-4c68-8353-61a930ba2c7c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a25a9ceb-9266-4717-8d32-af6585850224"
        },
        "item": {
          "id": "63f78183-61c6-42e8-bcbf-299ba7459264",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efcc7bc1-a84d-46d5-bce6-320e7a4be5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c63fa8a-5d8c-4313-a0d2-ccfc2debae28",
        "cursor": {
          "ref": "9a3a8bb1-4854-419e-bc9a-6b48c0314a59",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "045063b9-6a56-491f-97bb-8397dbb70b3d"
        },
        "item": {
          "id": "8c63fa8a-5d8c-4313-a0d2-ccfc2debae28",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2fab95d0-49d5-48fb-abfc-ebbfe9658614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4375fc3-ca61-486d-97c9-d5f7cbcf2ebe",
        "cursor": {
          "ref": "e65f5b29-e2e4-4fcc-8505-ee97fb18d86f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aa2f9cb9-d555-496e-b2e0-fbc75e0d051f"
        },
        "item": {
          "id": "f4375fc3-ca61-486d-97c9-d5f7cbcf2ebe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee200368-b8e2-4dd1-808e-126b68f208a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07533a2c-7fdd-4a91-8a8a-5359bc94112b",
        "cursor": {
          "ref": "f82c2cd7-1aa6-457e-b230-05eb10bfdbde",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1722b3a2-bb38-4f36-9feb-ef5fd88da361"
        },
        "item": {
          "id": "07533a2c-7fdd-4a91-8a8a-5359bc94112b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5a120213-b24e-4fdf-8e5c-97a8e4ee9db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919544ff-4b0e-4048-b7cf-9504819ebf12",
        "cursor": {
          "ref": "2d72d06e-c8cc-4cd3-9c73-a7c2dbab23e9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb19c295-f961-4374-bc0e-b412099dbabc"
        },
        "item": {
          "id": "919544ff-4b0e-4048-b7cf-9504819ebf12",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0bc72167-0a96-4b0a-b775-0ae64c1cbc20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05e8418-9c2a-4d83-9c0c-932b0a443673",
        "cursor": {
          "ref": "21922cc2-fcbc-441a-9482-b15f1457e2ee",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "091070fc-8dea-4686-9a86-fb2b24f82e5a"
        },
        "item": {
          "id": "d05e8418-9c2a-4d83-9c0c-932b0a443673",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "32347e7c-a408-4bf9-9aff-96a646c992b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce9ef1-acc9-4e69-aa60-5aa6df439efd",
        "cursor": {
          "ref": "3b5bbcce-2d34-4a2d-b71a-44da891b483c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "37b3cd70-1e36-4055-b959-9e0bb780922a"
        },
        "item": {
          "id": "79ce9ef1-acc9-4e69-aa60-5aa6df439efd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "655a10f1-6ff1-4614-9d89-02710b4e9227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5967ce-5011-432c-ad87-6d048b2cf11e",
        "cursor": {
          "ref": "f97cbf4b-865f-481e-932c-713659548ea0",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d89fc095-2b8a-4779-97b2-ca3ba55fe895"
        },
        "item": {
          "id": "fc5967ce-5011-432c-ad87-6d048b2cf11e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1aef16ba-b31d-43c2-b84b-035b1c6e3b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecc4e54-32a4-4b11-98d6-2204381b142e",
        "cursor": {
          "ref": "b9ef8d40-db6c-45d8-bd8e-8689a61e7183",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aa5f6bec-cc49-4eda-80a8-d481a3b2ea21"
        },
        "item": {
          "id": "fecc4e54-32a4-4b11-98d6-2204381b142e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c53dc91a-a2a4-4f3c-9445-329f08734fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b974372-1166-4061-abdf-d25aaa99d1ab",
        "cursor": {
          "ref": "b67c5a05-e95e-4867-91af-665d88a6d69c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cba60545-c52e-4773-baa9-5d34ea01986b"
        },
        "item": {
          "id": "4b974372-1166-4061-abdf-d25aaa99d1ab",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c0096d2d-c9a4-42fd-bebe-ce786d898889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f152f0ed-d896-4ce2-9b3b-f7a583d9bc15",
        "cursor": {
          "ref": "43b24ebc-cf1e-4015-8b44-c042c60d302a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f784cb64-0efb-4640-9070-4d0f586ca2d7"
        },
        "item": {
          "id": "f152f0ed-d896-4ce2-9b3b-f7a583d9bc15",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eea9e809-84ea-4590-a93a-60c408fc32d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e123ae3-caa8-458b-9e3e-1212fc1a65be",
        "cursor": {
          "ref": "5d52b24d-f417-4936-b988-e3da9601a72f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7261b8d9-dec3-4ecb-9c91-a26b2c36a586"
        },
        "item": {
          "id": "0e123ae3-caa8-458b-9e3e-1212fc1a65be",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "93f56537-8590-4344-8fd7-1d0832381335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376cac25-348c-4d75-9736-52831c1917fb",
        "cursor": {
          "ref": "b63635b9-5e33-4a1d-ab45-a6c571a4cff8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd49e35d-d6c5-4725-b57b-93ea8845fb60"
        },
        "item": {
          "id": "376cac25-348c-4d75-9736-52831c1917fb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b9c3490-c3c7-45d2-935d-1b1cfd4fbf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d01e9a-ebcd-471e-b715-48468e4af565",
        "cursor": {
          "ref": "3c882e36-6638-468f-81e3-43f5b512d5a9",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3cdea869-f8a5-4d94-8246-ea9734015d5e"
        },
        "item": {
          "id": "02d01e9a-ebcd-471e-b715-48468e4af565",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f638b644-25db-4b5b-9f63-b736ec4c35f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af56e6e-b805-4a60-a838-bd715dc25c14",
        "cursor": {
          "ref": "c0d8db2c-b966-4ae6-9497-9cbf04ed849e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a4ae4175-9992-4995-a79c-a8e226657077"
        },
        "item": {
          "id": "1af56e6e-b805-4a60-a838-bd715dc25c14",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "937bfe9c-fd5d-48eb-97d4-5ac72ca90898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8618b7-b3d9-4b2f-8e50-434f95db5fed",
        "cursor": {
          "ref": "203287fe-8224-4bea-a8e1-8bc97b5517ed",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b83c0bc2-14b5-4e04-9bc4-da023ee26e0f"
        },
        "item": {
          "id": "4e8618b7-b3d9-4b2f-8e50-434f95db5fed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cfd55720-b952-4e26-a96d-a3ce608bf3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264637b8-f68c-474c-8f1b-25144c053752",
        "cursor": {
          "ref": "b93b2eb7-408f-43b2-b3ca-45ccec64aede",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b96690d3-6075-48ce-875f-a1b859f31e48"
        },
        "item": {
          "id": "264637b8-f68c-474c-8f1b-25144c053752",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e2d7d9a-5a4a-428d-8e84-d3ee4ce2de1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643594f-291e-4861-9139-a980bce955c4",
        "cursor": {
          "ref": "63676466-4649-4954-aada-58e9f6d50c97",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b76860fa-dd36-49ba-980b-70ceaf29577a"
        },
        "item": {
          "id": "2643594f-291e-4861-9139-a980bce955c4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b600bdf9-bef5-4d3e-86c7-2eee62be22b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2a0db3-0e28-4b39-88d6-ba5e405fc45a",
        "cursor": {
          "ref": "c9113b0e-0eda-4913-8ed1-46cbb8ab50d1",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "85bd0136-8d01-4384-b90e-8b8ab0cf7045"
        },
        "item": {
          "id": "ee2a0db3-0e28-4b39-88d6-ba5e405fc45a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "981e71c7-3bab-48ed-9bf8-6a1eb3157a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4271f8-9ffd-42b8-b933-c0f81dad07dc",
        "cursor": {
          "ref": "ec2543c4-e4ac-4428-9f7e-7d22b8ec0507",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "54c0f554-87f2-4f80-a8c4-a7f9c7612e08"
        },
        "item": {
          "id": "de4271f8-9ffd-42b8-b933-c0f81dad07dc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c971330-dffa-4e44-a592-2ccebc11547c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c82aa-8f26-4c96-83fd-d567bf93740a",
        "cursor": {
          "ref": "3aaf6bb9-131f-4170-a48a-9b052ada09c6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1bae1ec5-d4b4-42e1-a4ce-a224b069f504"
        },
        "item": {
          "id": "e34c82aa-8f26-4c96-83fd-d567bf93740a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e8541ee-7df8-471e-957f-b4647c71aa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c5b6d-3655-4040-b5ce-884f48c55041",
        "cursor": {
          "ref": "01f2f87e-90a3-4389-945a-3aaad3db4a00",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b46217d-342a-4187-9edc-947b8b8d9577"
        },
        "item": {
          "id": "178c5b6d-3655-4040-b5ce-884f48c55041",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d7368643-1e9e-4979-8332-bea5334ba103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145805a9-6460-4c2d-b06b-8689eb60c5c0",
        "cursor": {
          "ref": "a953f439-c86a-404b-98f4-5223152b2e78",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "af745666-0029-4286-80df-38bf6347a72f"
        },
        "item": {
          "id": "145805a9-6460-4c2d-b06b-8689eb60c5c0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3e4c19b8-c773-4db3-ac2c-b414e247e899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab034e9c-eb35-44f8-9ec0-6895ff4a444d",
        "cursor": {
          "ref": "bb0b1394-52f3-4017-9f2c-08a75e3fdbc0",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3879f25c-a76e-41bb-8ab7-fd619f535ad2"
        },
        "item": {
          "id": "ab034e9c-eb35-44f8-9ec0-6895ff4a444d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4b005bc8-2bc1-422e-ab3f-62d594c6b003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e52fbc-3fc7-46a3-83e0-62241daddd9b",
        "cursor": {
          "ref": "80eb004c-2550-4ff8-b4f8-8735e35abcf3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d08dd81c-1a6d-44ee-ac5e-81d7f16c56d9"
        },
        "item": {
          "id": "f6e52fbc-3fc7-46a3-83e0-62241daddd9b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "470966c0-eba4-4240-8cb0-e9975275e639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796bb75e-121b-4a10-9525-43a1baa345b6",
        "cursor": {
          "ref": "534e84cc-fadc-4715-91a4-69c0c1570464",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d642230e-e8a5-45c0-9677-abdeaea71f49"
        },
        "item": {
          "id": "796bb75e-121b-4a10-9525-43a1baa345b6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3689f707-8629-4edb-89a1-b848f0ad3079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0d8a6e-f24f-492f-8294-9b36bad0886e",
        "cursor": {
          "ref": "d77a01ef-b8df-4445-83cc-c0a5bd227915",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9f158f54-f14e-414f-a41c-72fec9939b68"
        },
        "item": {
          "id": "cc0d8a6e-f24f-492f-8294-9b36bad0886e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a21d7d45-c4fd-484f-bb7f-7ab952815ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c9f165-8996-48a6-84b3-9ac2cde2ca35",
        "cursor": {
          "ref": "f3f24586-f6a9-46d4-a0e9-3307267e28b7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e91b7d65-b2a9-43f8-b82d-b4bea6822025"
        },
        "item": {
          "id": "00c9f165-8996-48a6-84b3-9ac2cde2ca35",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7f0f71c0-4527-4f9c-8d36-5fe1cf60ea14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a6c15b-26f8-4be3-a93f-d43c380828e2",
        "cursor": {
          "ref": "04660830-e301-4939-8a8c-09998950c7a9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "00d40b07-dc36-429f-8af1-7ddeebda748e"
        },
        "item": {
          "id": "89a6c15b-26f8-4be3-a93f-d43c380828e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "085b936e-8952-434d-b9f1-546ef9666ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2259b729-37dc-4bf6-aed5-63feaa8bf9cd",
        "cursor": {
          "ref": "a027bab5-c2bf-4fdb-b81c-93a136016075",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "31f45a93-7bfe-486c-893d-4122ab8a1285"
        },
        "item": {
          "id": "2259b729-37dc-4bf6-aed5-63feaa8bf9cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0e1553e6-dc18-4204-b083-709f9774ef0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514d453f-67e9-4291-b5ad-daa1ae2e7a7a",
        "cursor": {
          "ref": "240cf495-5ebe-441d-a447-b754dce2a751",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "48373fe2-cff8-41aa-8a8c-92e584263120"
        },
        "item": {
          "id": "514d453f-67e9-4291-b5ad-daa1ae2e7a7a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7bacfe71-b9a2-4358-9b0a-70584f4406b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eb5897-b227-4cbe-af5f-403efe1c4fa8",
        "cursor": {
          "ref": "ebcecffb-c9b7-4771-b404-b8116f83e5c2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c8b55323-d43d-4d7d-85d7-d47a8fb443f6"
        },
        "item": {
          "id": "b1eb5897-b227-4cbe-af5f-403efe1c4fa8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "27a8645d-597e-41b1-b060-9f317fb602db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ca15b5-ab44-4e8d-806c-20bdde673e10",
        "cursor": {
          "ref": "e2bae163-5bdb-49ee-b5b2-0ebc00060d1a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "980ce5c4-28f8-4e2f-9d48-253a58e21b4e"
        },
        "item": {
          "id": "d8ca15b5-ab44-4e8d-806c-20bdde673e10",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99d9f0f6-ac3e-4563-bd84-3aae5b282336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fd3c26-bbda-4797-a426-708a69a2c4ec",
        "cursor": {
          "ref": "d3e14a3f-c436-406e-a83a-314382ef1b9b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "60b175b9-d80a-4c21-ac47-7f8371233a1b"
        },
        "item": {
          "id": "96fd3c26-bbda-4797-a426-708a69a2c4ec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e440a61b-eec7-4990-96b8-bb98e15b792f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c29fa-41eb-44a5-b7ed-c2fe2750622a",
        "cursor": {
          "ref": "73f0a6a4-dd14-4176-9917-91755aa5a09f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a3807708-f4e5-4bf7-9a32-13f78fd291f1"
        },
        "item": {
          "id": "2c7c29fa-41eb-44a5-b7ed-c2fe2750622a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11a9da54-a089-4478-a824-81ff3b47d540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd94a40-c94d-4f72-8c31-40976ec23783",
        "cursor": {
          "ref": "91c5ae31-8101-4b01-94a5-e5991b273190",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "affd733e-8b12-4856-b465-1da56996facd"
        },
        "item": {
          "id": "1bd94a40-c94d-4f72-8c31-40976ec23783",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "446690bf-c145-4051-9a76-85848fbacbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a6c8c-ce30-4a2e-b262-734a7e966fab",
        "cursor": {
          "ref": "24b6868e-3d7e-4351-90ff-67769a05b86e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a70caa0d-d869-4dc8-9908-f673c922d57c"
        },
        "item": {
          "id": "733a6c8c-ce30-4a2e-b262-734a7e966fab",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d8f37054-5ee4-44e6-98f9-2dab645b8418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94509c4-ec42-46a2-ab10-65e631a887d5",
        "cursor": {
          "ref": "22fc86ac-5aea-4ebe-bd75-204f320a7ac8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6b56d789-75a7-4ab4-b283-711fc3062942"
        },
        "item": {
          "id": "d94509c4-ec42-46a2-ab10-65e631a887d5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1dffef5a-3e25-4e4d-8c16-550c9652b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd91175d-f851-450c-bfc7-026f4a8c10a4",
        "cursor": {
          "ref": "6e5d66b1-f5fa-493f-adf5-abdea70d2159",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "58d60642-6041-4699-87a4-ae07419d018d"
        },
        "item": {
          "id": "bd91175d-f851-450c-bfc7-026f4a8c10a4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "132f4a64-6399-4c68-8e23-106daf8954bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c44f34-88ad-404a-8030-9da3f7ea496a",
        "cursor": {
          "ref": "37d6529f-db32-44a8-b166-d2fe374379c8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "31779777-e55a-438c-8691-bad2a9da8251"
        },
        "item": {
          "id": "13c44f34-88ad-404a-8030-9da3f7ea496a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b1a35892-dea5-4bcc-8fd8-9fbb5ff531e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ddd0a3-38a5-4bf5-8603-5537cfa8de10",
        "cursor": {
          "ref": "d63bd8df-539d-45aa-95ec-d98bf569ea7e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "84433754-d6da-49c0-a5cc-4f9bf4965d74"
        },
        "item": {
          "id": "f1ddd0a3-38a5-4bf5-8603-5537cfa8de10",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b0686f3-641a-465c-83f8-b97d36df2464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f689994a-7c41-46f2-9bc1-1f526acc7631",
        "cursor": {
          "ref": "72b1dd17-4316-41cb-aaa4-fe2ef1632ab4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1977af7a-b681-4280-9a7a-0c0de184bfab"
        },
        "item": {
          "id": "f689994a-7c41-46f2-9bc1-1f526acc7631",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d31737a-b8d6-49dd-b29a-0fb3af2b8ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a25da86-8c7e-45fa-afe8-3d627bf36a23",
        "cursor": {
          "ref": "331fb2ea-a8af-457b-b4c4-e30d039f7930",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3723f682-f915-48b4-8e28-ad05a6b6c8a1"
        },
        "item": {
          "id": "4a25da86-8c7e-45fa-afe8-3d627bf36a23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7518b0ce-6f90-456e-86da-f29a9e0def93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82186ddd-aed3-4326-8114-fe8ec1b76c79",
        "cursor": {
          "ref": "549addf1-2137-4281-9d5d-eff6b949a0a0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1939f7f2-ed42-4bb6-af41-0371650a4248"
        },
        "item": {
          "id": "82186ddd-aed3-4326-8114-fe8ec1b76c79",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5e884064-deae-4c5f-ae61-d603ab1e3bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c65bd6e-094c-47c9-9104-927058068039",
        "cursor": {
          "ref": "2dfc9ae7-5804-4a41-8f44-f938e55d4cf2",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7228f84b-03c5-4502-ab9b-e91bcda053ed"
        },
        "item": {
          "id": "4c65bd6e-094c-47c9-9104-927058068039",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "603efd91-18ed-40e0-89eb-4c876ebf4d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d3cd19-81e2-4b73-be0b-7e5cae974a1d",
        "cursor": {
          "ref": "52525fad-ced3-4ef2-a800-01dffc400b46",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "20a090ab-2d81-4d3d-a3a2-97f9a5404dc5"
        },
        "item": {
          "id": "a2d3cd19-81e2-4b73-be0b-7e5cae974a1d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "86425f1e-6bc9-4dcc-9372-ac1cb228e732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64d3e63-33da-426a-a8ed-06d9019dfa9d",
        "cursor": {
          "ref": "424db728-8406-4c35-8175-bf1b60d28f0c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4348d7a4-677a-446b-8624-407d9e7aca8a"
        },
        "item": {
          "id": "b64d3e63-33da-426a-a8ed-06d9019dfa9d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "61fe8f33-eee8-44b2-b6c6-890811264805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff51abf6-95ff-49fb-9fdc-29ffc7596d2d",
        "cursor": {
          "ref": "b00b0aca-fee1-4f9f-a877-5992cc0862ee",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8678c6f3-bbf5-4f06-a193-8098ed1e0fc8"
        },
        "item": {
          "id": "ff51abf6-95ff-49fb-9fdc-29ffc7596d2d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6d0902ef-c80e-4043-8110-75744cd26d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708805a8-52df-419e-9a84-0ed5ab64bde9",
        "cursor": {
          "ref": "6e936cda-b3be-41e1-b76e-ff70f1d9af8c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a796df4b-1c95-40fc-aed3-dd8f0bc4d8a4"
        },
        "item": {
          "id": "708805a8-52df-419e-9a84-0ed5ab64bde9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dea65727-b460-459f-ac9e-ac38929b67d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9084e425-15da-4fcc-809e-93d9b78c4994",
        "cursor": {
          "ref": "e0b0e387-f200-4eb3-8c4e-2df0528090a4",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69c057de-834e-4b23-a82a-8a89aeeee87c"
        },
        "item": {
          "id": "9084e425-15da-4fcc-809e-93d9b78c4994",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "00286f86-ca48-4fb3-b953-0e53dc6e805b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d7602b-0487-4dfb-b487-187652b6c1e6",
        "cursor": {
          "ref": "f13a2e38-3432-4796-aebc-2f4951e294c9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1ff32e73-720f-4e4f-b19a-84e948208213"
        },
        "item": {
          "id": "00d7602b-0487-4dfb-b487-187652b6c1e6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "24cd5b52-a8fd-4cac-9a81-d5e857a73317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025fea8b-5475-4ae8-a1a0-e370e6090ab7",
        "cursor": {
          "ref": "7a37b8d6-a4b4-414e-94d6-e413f93a461f",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b8d78dbb-1ada-4062-b22f-e173ef95fa7b"
        },
        "item": {
          "id": "025fea8b-5475-4ae8-a1a0-e370e6090ab7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc692afb-6f3b-4be6-9986-c1c4d1e8c7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39e7c06-deb2-4546-8b96-e76bc65f4574",
        "cursor": {
          "ref": "e44b035a-118f-4c9a-8748-3eb23b767442",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d57be5a0-3616-4a51-b9f2-4a108eacbcd1"
        },
        "item": {
          "id": "e39e7c06-deb2-4546-8b96-e76bc65f4574",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de582cdd-4e7e-4b99-9be3-8131004b798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488cf149-1924-44ca-b0e1-f238b03ab078",
        "cursor": {
          "ref": "39fec986-e27f-4f09-8cb7-0f2d8f5b2554",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f613ba9f-a7f2-4804-ab17-9aece4d9f1d0"
        },
        "item": {
          "id": "488cf149-1924-44ca-b0e1-f238b03ab078",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dd3b0fb3-5d5e-4ee7-b152-5ba13d340a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1f676b-7749-4488-a46a-ac021c476e7d",
        "cursor": {
          "ref": "0121a157-97b2-4cd6-9bf0-9d70f9aab4a7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "76f16374-acb2-4711-9cae-902ed9643524"
        },
        "item": {
          "id": "ab1f676b-7749-4488-a46a-ac021c476e7d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a0f2fb3d-98f6-4fee-8860-1a3268543236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841edb0a-72aa-4c11-a385-9c35386858c1",
        "cursor": {
          "ref": "7c630455-1122-463e-9f5b-26f8ea9f5c43",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ab0daf0e-ee45-464a-b604-d2ead3731e98"
        },
        "item": {
          "id": "841edb0a-72aa-4c11-a385-9c35386858c1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "876d900d-6ab4-46ab-bbc8-4996d56c78cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc65caa-70ac-46f1-95f4-73281037e78d",
        "cursor": {
          "ref": "5689c1e5-eef1-48aa-a82d-fda515e0e4ef",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bfd67e8b-0eae-4211-9169-dece3c5bb67e"
        },
        "item": {
          "id": "ebc65caa-70ac-46f1-95f4-73281037e78d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2749e74e-2e00-4d18-928d-8dd97ebbb7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9265f7b8-48bd-42bb-ad95-d4f3c578cff9",
        "cursor": {
          "ref": "87b945a9-509b-4fa1-970c-d674706f67fb",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3d41fc5c-61eb-4b1f-8cfa-55aac69d4036"
        },
        "item": {
          "id": "9265f7b8-48bd-42bb-ad95-d4f3c578cff9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c563d251-3599-43fb-84b4-a3653e0ab2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65d47a9-e0bd-4ff6-8e58-5ecf3415806e",
        "cursor": {
          "ref": "5496edf3-ed92-47a2-954a-3a994592c4c5",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "077e801d-2c81-42be-a5b3-50464114d86b"
        },
        "item": {
          "id": "c65d47a9-e0bd-4ff6-8e58-5ecf3415806e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fcaa29de-669b-4f73-839c-c69c504d25de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd50ded-eb98-4e91-8f9d-bf5a19ffa359",
        "cursor": {
          "ref": "1a830792-c545-4dd0-9d9c-9cc8424c676e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7c02c30-279e-4a3f-b935-04a8f9936c30"
        },
        "item": {
          "id": "fcd50ded-eb98-4e91-8f9d-bf5a19ffa359",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "053c67e1-6bff-4a8e-9f98-808d9570adb0",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "0b813cab-cfa0-40d9-9272-5429a6043b96",
        "cursor": {
          "ref": "44fe4dd3-637f-4211-9dfb-47f59209b3cf",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3b8536ca-b8f4-4c96-9a5b-c7ab23f80d56"
        },
        "item": {
          "id": "0b813cab-cfa0-40d9-9272-5429a6043b96",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0c859ae7-29b4-4ccd-9985-9a091af264e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e7e4ef-c0ad-4f1a-82ae-c765f2223b3e",
        "cursor": {
          "ref": "31efc12d-332a-4975-9504-6e68c922231f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cbf53b6a-b851-4adf-a505-08f28fbacbbb"
        },
        "item": {
          "id": "b8e7e4ef-c0ad-4f1a-82ae-c765f2223b3e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4248f766-6535-4699-92cc-47d90ca40282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97747fa-f433-4ce8-8004-1751a591ab54",
        "cursor": {
          "ref": "2431f712-33fe-4480-a85a-282e86e42aa4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e5683dc9-1c16-4c13-aff3-e1b1de28f687"
        },
        "item": {
          "id": "d97747fa-f433-4ce8-8004-1751a591ab54",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a1e54048-88e1-4779-9b14-c8d4c1308815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375b3dc6-7c4b-40bb-a29a-fa462e797256",
        "cursor": {
          "ref": "7c1978dc-5dfd-484f-b2ab-b24cee1956a0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9110108d-4616-41d0-bce9-e7553410e124"
        },
        "item": {
          "id": "375b3dc6-7c4b-40bb-a29a-fa462e797256",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ce02e48b-f2f1-4adb-868a-0e66a4febabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1844e2d-2b2e-42fe-897b-ba2cbb6dd960",
        "cursor": {
          "ref": "650df408-ed18-4c18-a0ae-a7b989870d33",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a9b6b5bc-76b1-4629-ab42-2c2fe3cf1478"
        },
        "item": {
          "id": "e1844e2d-2b2e-42fe-897b-ba2cbb6dd960",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f9e7ba09-4503-4ae5-9d53-b12ae419d968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c1613d-d98a-4323-a9bf-54d1a0713d50",
        "cursor": {
          "ref": "fcb82ecd-3469-44b9-ad3b-bda3209d3131",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5b5f2cfc-4f1b-47dd-8f34-613079c0cd10"
        },
        "item": {
          "id": "28c1613d-d98a-4323-a9bf-54d1a0713d50",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22cf1168-6537-4c00-ad55-ed674ffcc8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc9e59b-895d-4afb-816f-0a62e0882393",
        "cursor": {
          "ref": "0ea6fc5c-56d9-4218-a55c-85efb10474bb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "831b56b1-2f29-426c-ad1b-f0df06a87b66"
        },
        "item": {
          "id": "3dc9e59b-895d-4afb-816f-0a62e0882393",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2a04eabd-b95a-4836-8000-25b5ba131630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa94fbd-0280-464b-93ac-15ece91f1d1f",
        "cursor": {
          "ref": "370ed0a3-86de-4119-9a7b-945d74595c0b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7662310e-8468-4344-8448-55d6fef970d1"
        },
        "item": {
          "id": "8aa94fbd-0280-464b-93ac-15ece91f1d1f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8dbccbd6-664b-467c-968b-05e444a8734b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8b8e82-16dd-4eff-9399-0c81eaa3c0b7",
        "cursor": {
          "ref": "da9af68a-dde2-473a-9631-0720de5e447f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bbdef677-a2a7-498c-a7d6-71b1f542e4a0"
        },
        "item": {
          "id": "ba8b8e82-16dd-4eff-9399-0c81eaa3c0b7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4de0d64e-3e82-43f6-95e3-3633126d595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64492d0a-9863-45ed-8a8c-5937faf15384",
        "cursor": {
          "ref": "64cab4f9-22ba-43b9-9fa4-9bb94b67e8a2",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "57aefc8d-a31d-438d-af5d-378d0094ea65"
        },
        "item": {
          "id": "64492d0a-9863-45ed-8a8c-5937faf15384",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "138f271d-17e9-4047-b1c9-1cafdd3be2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c49115b-5398-4337-81f4-32a670599291",
        "cursor": {
          "ref": "37c8e128-f1d5-4c6d-9849-502cf6bd87ab",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "673de591-1483-44d6-8ca8-f688b8575744"
        },
        "item": {
          "id": "6c49115b-5398-4337-81f4-32a670599291",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "24b9a395-5d4d-47b5-bbac-c1aab4ac00f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd73ac1-e8a5-46e9-9fcc-3e8c7da3f821",
        "cursor": {
          "ref": "6fd4fb72-01d4-44ea-96ff-8ec7c7d0eb81",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a248f7ac-aad9-4f9c-9ae0-7fc04e005459"
        },
        "item": {
          "id": "3dd73ac1-e8a5-46e9-9fcc-3e8c7da3f821",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "07fa6ca5-a16a-40a0-a6e7-7c26d001cca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744a5968-337e-4692-96dc-ceb4dae56750",
        "cursor": {
          "ref": "cc2d28de-5dd5-4f3a-9cab-ce074082ffdb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "66d7b622-3d84-42ea-bb38-a291907436a8"
        },
        "item": {
          "id": "744a5968-337e-4692-96dc-ceb4dae56750",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dee05dbc-c8a9-443d-a4b6-907f10363b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5fb483-153f-4b5b-8050-2d1b572695ff",
        "cursor": {
          "ref": "02d64fef-a17f-44ab-8699-f8aca67fb7b5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "25902f7e-c2c7-43b8-a22f-1990d937c9e2"
        },
        "item": {
          "id": "0e5fb483-153f-4b5b-8050-2d1b572695ff",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a324e149-26ba-49ac-ae18-2b0e2ef13dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c61d50-27b9-46d7-a0c4-d0bd71b12ae1",
        "cursor": {
          "ref": "21f048bb-1069-4c6b-8bf3-9b2d2126548e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "639bc006-9ea9-48de-8178-3daaea9d0d3d"
        },
        "item": {
          "id": "89c61d50-27b9-46d7-a0c4-d0bd71b12ae1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "448d81b6-8c81-4291-94a2-a3f841e0f60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39adbe4b-c544-45e1-b62b-704558bb2c40",
        "cursor": {
          "ref": "62a3b1ad-cc4c-4c53-b25c-c902e615605e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a7d5b728-4115-4810-b52d-32d2cb523f29"
        },
        "item": {
          "id": "39adbe4b-c544-45e1-b62b-704558bb2c40",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2431755f-5fc7-4982-81a1-fad881054174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34747835-2b31-4038-bd9b-84cb8ebd589e",
        "cursor": {
          "ref": "5509fc61-223b-4df6-9160-17e98a0571ac",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "794dc1ee-f445-4dac-a92c-87f911f03d04"
        },
        "item": {
          "id": "34747835-2b31-4038-bd9b-84cb8ebd589e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2cf3471d-710f-47bc-8f24-54085d5a9cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481a3c84-da57-48ea-95e1-5ae36271ac2e",
        "cursor": {
          "ref": "4dc3259e-3911-4069-a967-afb6887d884f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5053766f-32c1-40d4-bf01-318ceb3122b6"
        },
        "item": {
          "id": "481a3c84-da57-48ea-95e1-5ae36271ac2e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "07494d83-ffb7-4445-9112-6ef5cf5b270b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6434cea-4f9b-4e5c-be29-1beff3513dcb",
        "cursor": {
          "ref": "53a9897f-7d1a-4234-8916-d0394e001db1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "32e65d23-e0eb-48d5-a313-ba6c1483c578"
        },
        "item": {
          "id": "a6434cea-4f9b-4e5c-be29-1beff3513dcb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "24aeee66-4beb-4382-8b2a-da2e865d9644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b528ea-07d4-42fe-b470-c230c6f34b7b",
        "cursor": {
          "ref": "dd639a62-8efb-4af3-a352-5435aa18ff62",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f54a7bf3-7be7-4408-999a-96d610db32e6"
        },
        "item": {
          "id": "99b528ea-07d4-42fe-b470-c230c6f34b7b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "95857e8e-69f0-4f5f-955f-4081b0f1b66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758a308e-9388-4392-994d-57c92e249fec",
        "cursor": {
          "ref": "f5508e77-f23c-4f4c-8683-4c79debc9de5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "df4a3978-7cc4-44b1-8d37-d4095f41c499"
        },
        "item": {
          "id": "758a308e-9388-4392-994d-57c92e249fec",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "45c5ff18-acec-49a9-b103-f3b1ae179aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c7001-47ae-4b99-884d-e0938defbaa6",
        "cursor": {
          "ref": "ce96d8fd-3e21-4584-b814-f4c176a09974",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1aac9f4-068e-4077-936c-aaf30af9ada1"
        },
        "item": {
          "id": "832c7001-47ae-4b99-884d-e0938defbaa6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7db2b3bc-9205-4462-9235-a604e5fde893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3a9b6b-0a93-48a6-8ba0-54fe5950fddd",
        "cursor": {
          "ref": "b0ce00a3-b8f3-4138-86f7-5324f0b1e6b2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "71c13824-2901-4147-902d-86c08b46c1c4"
        },
        "item": {
          "id": "cb3a9b6b-0a93-48a6-8ba0-54fe5950fddd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bbab6e34-90ba-4f76-bafd-259bfd22cd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc719a3c-2cf6-4307-9d9e-e31b1895c329",
        "cursor": {
          "ref": "d8ee5cdc-95ca-4c94-9f75-c9c510951cf3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "38cad8aa-d282-4265-a17b-8c36140fbf2d"
        },
        "item": {
          "id": "dc719a3c-2cf6-4307-9d9e-e31b1895c329",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6b8f2b01-6738-4f5d-bf0f-96bec768b03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f3e65-55ce-417f-948a-282f35b315d3",
        "cursor": {
          "ref": "0fc2f0d8-bc83-46d4-86da-f7f4b762b4ad",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d5458ff1-a795-4c23-81a8-d2c81b07c166"
        },
        "item": {
          "id": "c53f3e65-55ce-417f-948a-282f35b315d3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d2b17890-c296-432d-a0f5-7e15dbd475c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2409b1-7781-473d-862e-ea231ddd27a2",
        "cursor": {
          "ref": "6110d135-dda6-480d-9bf6-97eb0849b993",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0a4eca92-64df-4b84-ad84-8bf399e33aba"
        },
        "item": {
          "id": "da2409b1-7781-473d-862e-ea231ddd27a2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9a2aed89-3d2d-410b-a00c-b8a7908a3c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeb7908-aec5-407a-87f9-52b495454f6d",
        "cursor": {
          "ref": "9abb247b-d2a6-427a-8a14-fc1389c13a93",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7fb825d5-1f23-480d-8d97-8a0befaf632d"
        },
        "item": {
          "id": "3eeb7908-aec5-407a-87f9-52b495454f6d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "92aecbcf-981b-4f35-834c-03672520d188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45688b0-92c7-4715-b6cb-78947b49bb7f",
        "cursor": {
          "ref": "cc6632bf-9432-4dc7-9fff-11b166899bb9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "443d679b-4c28-4f30-9a64-778e5122c4c8"
        },
        "item": {
          "id": "b45688b0-92c7-4715-b6cb-78947b49bb7f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "098b8917-df30-4590-895c-f0eb11968601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204f4002-867b-415f-b876-69bff0dea62d",
        "cursor": {
          "ref": "9b2a25bc-7b65-482e-b0f1-80ffd4482f4c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c83ed8df-96c3-47a6-9f90-1e7187a7a4fc"
        },
        "item": {
          "id": "204f4002-867b-415f-b876-69bff0dea62d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "05ff78f6-a81c-428b-a5b4-928cf9f249a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f22fe3-1b70-441d-9c7f-4a629e56ecec",
        "cursor": {
          "ref": "cff4d6cc-4a3e-4c42-8d8a-d32856dd3765",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "efe2d8b8-0222-4df2-846c-cb0c40370a1e"
        },
        "item": {
          "id": "32f22fe3-1b70-441d-9c7f-4a629e56ecec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c358af19-bcf1-4046-8f75-bca08824ce32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f29c224-dede-4b22-83b5-3f971221c616",
        "cursor": {
          "ref": "570af281-fc35-4419-aa21-7ed5cd2c960e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "05355bb8-79fd-43f3-8a1b-433c9d8696b2"
        },
        "item": {
          "id": "6f29c224-dede-4b22-83b5-3f971221c616",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7fcb8e08-fa57-40b4-90cf-17ac2f4feddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee2593f-9f12-44cb-bf5f-5dce512c9e09",
        "cursor": {
          "ref": "45aa3077-49ba-4d93-9411-75edd020e6db",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a1915577-60b3-42f5-8524-5e96c73b43eb"
        },
        "item": {
          "id": "dee2593f-9f12-44cb-bf5f-5dce512c9e09",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fabc4a85-b443-4496-9ad7-9a6e988a57cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec65e734-f9dc-4318-8138-2893b072bf96",
        "cursor": {
          "ref": "072c8acc-5428-43d5-9ad7-f781dc08e308",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f496951f-866a-4e17-80a3-9f063384739e"
        },
        "item": {
          "id": "ec65e734-f9dc-4318-8138-2893b072bf96",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5bba1c14-4ab3-4ab8-b909-efca1ba87511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7223dc-ee19-47a8-9c4d-45544d9cf69b",
        "cursor": {
          "ref": "0bce4ab5-37c1-4e6b-a43b-e80435d03e03",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8313ab39-cd2e-4921-a312-27df31576b8e"
        },
        "item": {
          "id": "fb7223dc-ee19-47a8-9c4d-45544d9cf69b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3c811d72-ccd1-4e61-a39c-890533308a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059def8c-0602-46e6-82db-eacb318429f4",
        "cursor": {
          "ref": "33a91208-a881-47d2-9779-bf44fb0c4235",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3e2c25d8-8e9d-4b54-b1c7-c6535b22dfcf"
        },
        "item": {
          "id": "059def8c-0602-46e6-82db-eacb318429f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e81e88e5-a755-46e1-91a5-e206a8c67bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69e1cec-7678-4179-8fbd-238abf1659c8",
        "cursor": {
          "ref": "b2e7ea00-01f4-44bb-9883-1705000ba7af",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0f5253d4-f999-46f6-8c23-65cd1a9d957b"
        },
        "item": {
          "id": "d69e1cec-7678-4179-8fbd-238abf1659c8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "29f2b862-2248-4d30-9b6d-6c406af225a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c67fd60-d62a-4448-a700-57c8ece8049f",
        "cursor": {
          "ref": "6398ec31-6c8b-4278-bd9d-f4166b83fc12",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d4768d25-1dca-4363-b1ad-a6485921fc8a"
        },
        "item": {
          "id": "6c67fd60-d62a-4448-a700-57c8ece8049f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ba8bd220-ab48-42d2-9181-c20cf27528e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228db3bb-be5a-4443-b625-dcaf5f35206b",
        "cursor": {
          "ref": "be9f8bbc-0a9b-4d2a-a6dc-fe7c0ccc7aea",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1b61935d-9b65-40dd-93d0-20c01d436a67"
        },
        "item": {
          "id": "228db3bb-be5a-4443-b625-dcaf5f35206b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b69c496f-4410-4f05-b584-18ddb57f5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf16b689-14c9-47a4-83f5-77a51a03047b",
        "cursor": {
          "ref": "c73220d6-e017-4915-b89a-d6e53f85c5c9",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fd572520-3bb8-4827-ad5f-655253f1125f"
        },
        "item": {
          "id": "bf16b689-14c9-47a4-83f5-77a51a03047b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "389750b5-dbb7-42fa-9040-bb3d925675cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa60952e-964a-4c92-93df-4a7ae73591ec",
        "cursor": {
          "ref": "040c8ba9-f6cc-4cf7-a927-7d6e91b529be",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fec7ef7b-7bac-447f-a504-efe03ff758d2"
        },
        "item": {
          "id": "aa60952e-964a-4c92-93df-4a7ae73591ec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73212b47-d0d6-4800-b80b-97abd35ffb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c12aca-9434-4baf-a409-8f1dbcf9f061",
        "cursor": {
          "ref": "b9ee7a0f-5e27-492a-9623-0aabd56b1467",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "556a9408-0b1e-4838-baf3-5554d126f83a"
        },
        "item": {
          "id": "61c12aca-9434-4baf-a409-8f1dbcf9f061",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce83fab0-e204-43f8-8f5a-68b6b56f7d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b9470a-a8d5-41f7-bae3-85a8929bc315",
        "cursor": {
          "ref": "c5157d7b-cf28-42ea-891e-aa87d9ae051c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "83f6890e-f703-4289-893a-92a8bd43cdab"
        },
        "item": {
          "id": "67b9470a-a8d5-41f7-bae3-85a8929bc315",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ce993703-09ad-4b22-9c75-a237dfd23e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc80e4-bcaf-4af2-9e52-b0d50face509",
        "cursor": {
          "ref": "1a781bc7-4c64-4182-8e96-be3a638ffaa5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d1cc9a9c-909f-4ef1-95b5-b5804b232624"
        },
        "item": {
          "id": "0cfc80e4-bcaf-4af2-9e52-b0d50face509",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "37ee946b-ac14-4a88-bb0a-3ce004483e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8e82f5-f527-49db-8b33-716362266263",
        "cursor": {
          "ref": "696600bb-ad20-4848-96fb-0e20f06fa79a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "38e8a739-7f1a-4fa2-b3a2-8dc1039fd0e2"
        },
        "item": {
          "id": "0a8e82f5-f527-49db-8b33-716362266263",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "31d06146-b4f8-47d0-a8ce-aadc6146dec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed0a554-4b62-45c6-b981-3921957c79fe",
        "cursor": {
          "ref": "a37d8cf4-10e9-4a97-b816-9e83ea59ee44",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ff399580-9a06-486b-954e-724eaaf63248"
        },
        "item": {
          "id": "fed0a554-4b62-45c6-b981-3921957c79fe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fc52d427-d2dd-495d-80ad-b2f21bb80b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c2ebb7-cbbf-4264-9053-8bc5e6fa93bb",
        "cursor": {
          "ref": "24c02710-180a-4be7-a431-4b306ebccdd2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "12b3956f-d873-423b-a5a2-965793646a53"
        },
        "item": {
          "id": "b2c2ebb7-cbbf-4264-9053-8bc5e6fa93bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fcf371ab-32e3-4f2c-bb84-666099819d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e536e1e-0e93-402b-af88-a8883f90b4dd",
        "cursor": {
          "ref": "e71b9569-8b09-4770-9ab0-833cb31fdfc3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3807762f-26cc-4876-83ec-712c2c33c350"
        },
        "item": {
          "id": "2e536e1e-0e93-402b-af88-a8883f90b4dd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "75368ce1-1a1c-41ef-8954-8f761410f09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c8bdb8-60a7-45b9-86ba-36121295d75f",
        "cursor": {
          "ref": "239df037-4c38-4a61-a25d-f46c2639bbfb",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "83d8174c-8548-4c18-b9ee-f5d28ff64dd0"
        },
        "item": {
          "id": "62c8bdb8-60a7-45b9-86ba-36121295d75f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "72cc503f-7374-4f35-bcb8-ec6c74b7ac51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5ef7d0-94a0-4558-881a-746f9e528e6a",
        "cursor": {
          "ref": "3f85f1a6-ad71-4173-9871-e462b8086549",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a506cbdf-8db3-42f5-83bc-cccd7fd27307"
        },
        "item": {
          "id": "da5ef7d0-94a0-4558-881a-746f9e528e6a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d14cb9d-6deb-44da-b461-dbea5e64296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5751b487-97d5-4c5b-a718-9b7319c6f2f2",
        "cursor": {
          "ref": "d94c6b59-a4e9-4103-b79b-531de6ba4552",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3885f897-7f2b-499f-ac28-0d4a0700f8c9"
        },
        "item": {
          "id": "5751b487-97d5-4c5b-a718-9b7319c6f2f2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9a4228e5-7377-4177-997c-73b2e7ced037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb4c281-7ed4-4166-bd98-441eac08856b",
        "cursor": {
          "ref": "0c4ed69a-a311-46c5-92e4-23ae4d0f568d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4732c39-6638-459c-8133-9dd7086286ff"
        },
        "item": {
          "id": "5bb4c281-7ed4-4166-bd98-441eac08856b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "edaf58ab-fa95-4b38-9a74-50764354153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c484b84-25c6-47e9-906a-a92ac31c2188",
        "cursor": {
          "ref": "b11c0d05-73c1-4339-a9d5-b0eb2e09a6e1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4edc18f3-2e19-4e70-ba1b-ea23532c2e8f"
        },
        "item": {
          "id": "1c484b84-25c6-47e9-906a-a92ac31c2188",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d85dc76c-5ee3-44b1-b2cb-7adc2e5068d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f299b-3c2c-4259-959a-0a007661a861",
        "cursor": {
          "ref": "ab11ade4-ee94-45ef-a41e-f332d89a524a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd46d392-e479-40e2-8087-95224c794ec7"
        },
        "item": {
          "id": "035f299b-3c2c-4259-959a-0a007661a861",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ee834e7f-40b4-4b5e-b4cf-80623ff0854d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0c2870-54cd-42ce-83ab-e65bce4d7e73",
        "cursor": {
          "ref": "c9171d05-a421-4212-be62-9d925e32a586",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ddfacaac-9067-4f5b-aa85-16c04c1fc61e"
        },
        "item": {
          "id": "1a0c2870-54cd-42ce-83ab-e65bce4d7e73",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c0744d4b-3e75-4158-9aae-ae17f4e5edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aff0411-6d97-4a52-922b-5d5f934149c6",
        "cursor": {
          "ref": "d1706115-e343-47a3-8394-cb9abb17f3a6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9268c1e7-ba90-4b5c-a36e-b4ca270a895c"
        },
        "item": {
          "id": "7aff0411-6d97-4a52-922b-5d5f934149c6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b43c9eb2-e02b-4a76-bf70-8ab1861265c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51646d0f-3f4a-417e-9e37-d37ad0637021",
        "cursor": {
          "ref": "95d06174-33a0-4602-b9a5-2af72d57a001",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e9f4fb45-ea6b-4767-a1a9-32a50af9b772"
        },
        "item": {
          "id": "51646d0f-3f4a-417e-9e37-d37ad0637021",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ea33c9cd-8e66-4344-a440-00436f90456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09692989-0480-4482-950d-b1cccec77333",
        "cursor": {
          "ref": "30995285-3267-4654-bb7c-5e3512ad1369",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "38411b94-1df8-4c4e-9529-e1af93254722"
        },
        "item": {
          "id": "09692989-0480-4482-950d-b1cccec77333",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7f000faa-ec75-430e-88fd-7dffe5684b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4a8892-d8f0-4b6b-992b-00df0475a2c6",
        "cursor": {
          "ref": "57aeae5c-e33a-4945-9630-b09553932256",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f47c0c21-c4ab-4520-a168-08dac296b93c"
        },
        "item": {
          "id": "eb4a8892-d8f0-4b6b-992b-00df0475a2c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bbafc78f-5977-4854-bf58-6870fd65319d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de09a77-fcc5-4d33-8fdb-c01532596661",
        "cursor": {
          "ref": "1952f4b6-d562-4a41-b972-072c055fcff0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f2983e9d-99f1-49e8-b5ed-2ed72f0874f9"
        },
        "item": {
          "id": "7de09a77-fcc5-4d33-8fdb-c01532596661",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3399dfd3-aead-4f62-8ef7-95c3d4e16e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901f36f3-86c2-49f0-a3b1-72cbe831d066",
        "cursor": {
          "ref": "6f3ccf8c-9368-490a-a76e-2eb17e328a03",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7229b24d-5b7d-486a-8af9-718d2d7351a4"
        },
        "item": {
          "id": "901f36f3-86c2-49f0-a3b1-72cbe831d066",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b1ef9362-74a3-42c3-b69e-3d16e955fd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407362a3-58c4-4a3b-a798-244ba2632ecf",
        "cursor": {
          "ref": "d0cb66a6-340c-44f5-b884-b8e618f0911f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "af3b2fa0-5aa3-494d-9523-fb9846c85329"
        },
        "item": {
          "id": "407362a3-58c4-4a3b-a798-244ba2632ecf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c556c336-9fed-41d7-a5c4-9eb0ae85a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75573752-4df4-4d17-bbc5-ff80f71b9840",
        "cursor": {
          "ref": "e187e9e0-9198-4338-875e-b79f5d834724",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "eccb7cb7-b6c6-4309-91dd-19d61627f507"
        },
        "item": {
          "id": "75573752-4df4-4d17-bbc5-ff80f71b9840",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6a1dd34-52d1-4494-ac14-7ed5331a89b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559ff2af-16e3-4653-8a35-ff5db8bb5056",
        "cursor": {
          "ref": "38551a28-9470-426b-9091-8a993223f864",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "208d6319-5a89-49f7-9331-68b14621157d"
        },
        "item": {
          "id": "559ff2af-16e3-4653-8a35-ff5db8bb5056",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b8d600e3-0201-4f6b-96a7-e11d0ef2f36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4939e31e-e894-4563-8328-c0637e73a847",
        "cursor": {
          "ref": "e7357f8e-3f68-4aac-bb43-3534f1b7f021",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cc9dd2f8-1f99-41ba-a2d1-f679e0277127"
        },
        "item": {
          "id": "4939e31e-e894-4563-8328-c0637e73a847",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "de076096-0d63-45a6-92f5-2d71336a4be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ce1e66-1770-4105-af8f-8adbc44e959f",
        "cursor": {
          "ref": "ff4f2c22-e27a-4819-be2a-d8ad6d2d78f5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "90335422-b152-41a5-82b9-5aac217caf35"
        },
        "item": {
          "id": "e7ce1e66-1770-4105-af8f-8adbc44e959f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7f8fc5de-d249-4230-af05-b6212a5b8e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c436be1-5941-4cb8-9f27-5ed2a2435e6b",
        "cursor": {
          "ref": "a524225b-914a-4bf2-ad89-f10c94ed3fe6",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "008818f6-7d55-4dc0-8af2-8421b13df999"
        },
        "item": {
          "id": "9c436be1-5941-4cb8-9f27-5ed2a2435e6b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4ddd6a8d-8574-46ba-802c-3859ff253e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e9e4d-6fcb-4453-a632-10aba56ca8d0",
        "cursor": {
          "ref": "a90f1f17-6bf1-4241-b5d6-0ed5bd7b947d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d66882bb-323e-40df-a8e4-a2c498130d16"
        },
        "item": {
          "id": "1d9e9e4d-6fcb-4453-a632-10aba56ca8d0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "26567323-fc70-46b3-84cf-487f977ce2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02293ed0-5734-46da-88a1-e005862aa67b",
        "cursor": {
          "ref": "be6833bf-6ee1-461f-914f-de4e1d448978",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "372d7407-e5d7-4d95-88a7-fdab09887334"
        },
        "item": {
          "id": "02293ed0-5734-46da-88a1-e005862aa67b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "42877a52-c467-4eae-a0b4-eaa0ff0bdf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743194c1-620c-4e63-824f-83d35d870572",
        "cursor": {
          "ref": "c23fbb4e-ede1-4172-a762-c845d7a7d451",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1c90540d-5f8f-44bb-a054-3adfc34619b5"
        },
        "item": {
          "id": "743194c1-620c-4e63-824f-83d35d870572",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8ea5ca22-dfcc-481f-a8d7-7df1c4fbceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b308f0-331f-483d-9f7f-6f55fc0e8dd7",
        "cursor": {
          "ref": "da831fde-3258-40fb-b224-fb5e70656ae9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "65afb981-8f22-4c79-b74a-acbc49219a8f"
        },
        "item": {
          "id": "26b308f0-331f-483d-9f7f-6f55fc0e8dd7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "36a2d216-f556-4621-af95-8501a8bb7bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b569fe-ef9b-4630-a1d4-213876642fb2",
        "cursor": {
          "ref": "6c651ae6-f866-4781-9ca5-e7c1522b71c7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1ac5f830-14bf-4197-bbee-0b19f3f08996"
        },
        "item": {
          "id": "48b569fe-ef9b-4630-a1d4-213876642fb2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a9d5bb34-e9e5-4882-b4f9-9c9b3ea1367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be454ca1-0dcb-44f4-a86a-86664ef5ffc9",
        "cursor": {
          "ref": "b33c8e19-82f0-464b-aca9-6d82ed99577f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e000b93c-3f43-41a9-b9cd-679c6a6af6d2"
        },
        "item": {
          "id": "be454ca1-0dcb-44f4-a86a-86664ef5ffc9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6e4bee8f-b478-47b5-974b-27682af56bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871837c6-aec3-4397-8322-f2f7c70aa9e5",
        "cursor": {
          "ref": "4f2d96fe-61c9-4ec8-b1d5-3098a99045f4",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9f3e0066-cc00-4197-88bf-a1b4547c35f7"
        },
        "item": {
          "id": "871837c6-aec3-4397-8322-f2f7c70aa9e5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5d40621e-4e28-4248-8979-91f1a053b9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13111bb4-0a8e-4b2b-990a-de54d26b9da0",
        "cursor": {
          "ref": "c98c2982-395b-4595-bc7a-ee563fd15a96",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "87ea41ff-6736-4d7f-9855-afa5ab5f5085"
        },
        "item": {
          "id": "13111bb4-0a8e-4b2b-990a-de54d26b9da0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2903041c-a11d-45c4-9b75-c9c0e22d274d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2850cd68-d6b7-4231-b831-994357fead40",
        "cursor": {
          "ref": "093f9fc2-0b24-4823-857b-f27d72baaaae",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "627deb85-5ce8-46fd-8d3f-b1dc00817d67"
        },
        "item": {
          "id": "2850cd68-d6b7-4231-b831-994357fead40",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4f9d468c-f2e8-436c-adde-c004903873a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068932d8-1b96-41e2-ab2b-79ae6705994c",
        "cursor": {
          "ref": "d741d8dc-1b5b-4075-a384-740173d349b0",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5da95be1-7ec0-4017-ac98-27952d5a7197"
        },
        "item": {
          "id": "068932d8-1b96-41e2-ab2b-79ae6705994c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1afb20b8-d1be-4048-8f63-162c9b04e380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ab1972-6832-43e4-b49f-2f03d20ab4ec",
        "cursor": {
          "ref": "6119e98c-5122-4601-bc1f-84f6d57886ad",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "876b2cc1-2d75-4474-a06c-be88b15006c0"
        },
        "item": {
          "id": "84ab1972-6832-43e4-b49f-2f03d20ab4ec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "515091bb-15b0-4170-a8dd-309ef70b8169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040405c8-fb0f-45bc-b68c-dc5659e301ca",
        "cursor": {
          "ref": "032685ff-1a43-4faf-988e-e64ef03453d7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "98f533b9-81db-4fa7-bff4-fab2d2e872a3"
        },
        "item": {
          "id": "040405c8-fb0f-45bc-b68c-dc5659e301ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c362e7cd-1eac-4b08-b869-63caf2b1a6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556e2173-6c33-4dca-be5a-106e3e3f8f65",
        "cursor": {
          "ref": "79b678bf-e8fa-4a93-8e26-b72b2081e21d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3d76f427-4143-47df-a40b-52055a097e07"
        },
        "item": {
          "id": "556e2173-6c33-4dca-be5a-106e3e3f8f65",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4f47084b-7cd7-4584-ab94-055233d585cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d97028-4bb9-4e40-a626-198e300cb96a",
        "cursor": {
          "ref": "437b1c53-ebe6-4cb2-916d-037ac5df9578",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c90550cc-2c7b-4248-989c-b35189e965a7"
        },
        "item": {
          "id": "86d97028-4bb9-4e40-a626-198e300cb96a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cf08687a-4d66-4d5b-9784-7adfe50240a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e17dc84-8200-4cd1-a7de-ce4df6ebefb9",
        "cursor": {
          "ref": "79c38ce9-376b-4734-b0a4-88c8105a045a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a0bbbd66-42de-4a7a-b9a7-b8621f90e29d"
        },
        "item": {
          "id": "0e17dc84-8200-4cd1-a7de-ce4df6ebefb9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7b43bed2-b5fd-408d-8c99-af99f1239bd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4984b9c3-2cd4-456f-b30e-756e7ec3038d",
        "cursor": {
          "ref": "2e55f6aa-b9e3-45c5-982f-4edaca60527e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a850ec77-4a60-44bd-b7b7-3ed7a074bbca"
        },
        "item": {
          "id": "4984b9c3-2cd4-456f-b30e-756e7ec3038d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "426ff80d-722b-4249-b906-0b4290776f54",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0a3d4f-9c18-464f-8d64-4a646e2dfddc",
        "cursor": {
          "ref": "3c35ac58-8a68-4de3-b5f9-2daa3df60df0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ba3e042e-c7c2-4559-b234-64cb17fd8d69"
        },
        "item": {
          "id": "2d0a3d4f-9c18-464f-8d64-4a646e2dfddc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a9e1d981-7a67-436a-b878-2d931ed70df1",
          "status": "OK",
          "code": 200,
          "responseTime": 5153,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a21d4e1-dbbf-45ad-9ec2-9d8633f9f3e8",
        "cursor": {
          "ref": "4acb26a7-a710-44c9-a8ed-de322cc4ae2b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f49804df-229c-4879-a187-b11afb6ac9fb"
        },
        "item": {
          "id": "0a21d4e1-dbbf-45ad-9ec2-9d8633f9f3e8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c574efff-5518-44a1-b037-2b5b0bff8afe",
          "status": "OK",
          "code": 200,
          "responseTime": 2507,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc865c89-e87c-4bfc-8554-d7db115e3a5d",
        "cursor": {
          "ref": "e6d5a768-3b68-4c2b-ba55-4905d4a37c98",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cefc5afa-4140-4fc8-bd4c-2d21ed2a1758"
        },
        "item": {
          "id": "bc865c89-e87c-4bfc-8554-d7db115e3a5d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25c3625c-2064-4b5d-9697-8c8b290107ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc865c89-e87c-4bfc-8554-d7db115e3a5d",
        "cursor": {
          "ref": "e6d5a768-3b68-4c2b-ba55-4905d4a37c98",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cefc5afa-4140-4fc8-bd4c-2d21ed2a1758"
        },
        "item": {
          "id": "bc865c89-e87c-4bfc-8554-d7db115e3a5d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25c3625c-2064-4b5d-9697-8c8b290107ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2263659-749d-4bd0-b919-74bd6203be5e",
        "cursor": {
          "ref": "18b7e51b-b79d-4850-8a11-48809c6b4a45",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4a6e2841-a043-4164-ae55-7c72f3729c0c"
        },
        "item": {
          "id": "e2263659-749d-4bd0-b919-74bd6203be5e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96222a80-b6dd-4b0f-8090-701e3e08d284",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b9a834-7511-48c6-a18f-73da97973113",
        "cursor": {
          "ref": "fc9d5e05-42a5-4533-899f-ac0424543072",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d3a89282-1063-43fd-b8cd-202084d6d7a1"
        },
        "item": {
          "id": "61b9a834-7511-48c6-a18f-73da97973113",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "36a2663a-42df-4952-95b4-f0a93726e498",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}