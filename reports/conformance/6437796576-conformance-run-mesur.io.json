{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "64a9ae01-5d3a-4abe-9aa2-4bb28a401a56",
        "name": "Clear Cache",
        "item": [
          {
            "id": "af22be23-dd5f-4cf5-8861-832b00904c62",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94dd35a7-086b-48ca-88f6-5d1434851d5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1697a43e-e3bd-483a-b232-36b4a7ad75e7"
                }
              }
            ]
          },
          {
            "id": "a3ca0790-0a12-4e89-92a4-4a1088160bdc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d5295b3-df33-45ec-bf7a-7bd9605df58c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2892a119-e4ed-4cd6-b30e-bd16fffb2ff3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0c516bc3-0af5-4980-949c-9b450a4bd364",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "517702e5-2ea8-4117-bbc7-0bdd7569bbc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1895a88-7f05-42d8-8bd8-4c1b71eff98e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2c11b1b-4b56-41ba-8e2b-412de1e37d33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d41d88fa-ab0f-4b7c-b16e-e61041f11254"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "141136c0-423a-4ae8-a4e7-780b1b4ede11",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12309d60-0c00-4635-ad2e-061fb2c77ba1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ccc9946-d38a-4b64-8ecb-7dc024e86380",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1323ef17-6dbe-4825-8290-b45efeb43432"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f412acb1-23a7-45de-a5a0-9a9bf29c57ed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fc8328b3-a7ef-4fa6-bc81-9b5098a9df3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b4edfd1-f4f7-47a9-b6c6-fc9bcec20bf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "860a0f85-09be-4807-9c07-2eee9bfda581"
            }
          }
        ]
      },
      {
        "id": "bc83bd1a-3081-4e95-bf7d-263ca6700ac0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9155628f-a918-4386-a3dc-7e27534e097f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "534fe38e-cb65-4355-8734-14f8372b59e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e832ac4-9bf7-4f2d-a256-d364025e8f61",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5b0c87-5061-4645-ad43-431548979006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ec36c46-17c7-4e30-86d4-735df924e17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f738985a-1c06-42d6-b9f6-c1e1b7c9d409",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e020c584-41fa-4fde-9b7a-232af5cec12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "168734a9-e357-4b2a-b232-8b385aecdd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbf9f63-6623-4462-9eae-e201e7750e76",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41e8034-a2a7-4433-90af-6aac754a52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "897aa76f-7260-47e2-ade4-43d5d0afb89c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "947db4b4-ef80-43ec-8ce0-eebf4c01879b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "723a8388-f645-4d1f-9dc5-a8f6ff841b1e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2adee0-9eb4-4e9c-a6c5-1bb4ff2d84e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52a7e7c4-99bf-44b7-8deb-fe3ee25d31c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c809c68-3d30-4ebb-bc8f-44f7e4fb2bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bffecc-2696-4745-8bf9-693241a21b3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a65aa670-93ea-4662-851a-6ae648a59bac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91cbc2e7-4ee1-44a9-bc30-41825b818abe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05547d05-4be7-4adf-ad92-ca0cd0e2f915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f74b82bb-84b8-4efc-a8c9-d216f31e0bfb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4b600f8-e8bd-41d6-baa6-c960c706e8a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c9e80b53-84d2-45aa-8133-d9736bcd7b0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04bd650e-71d3-4af5-8ed1-f2f8ea66edec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f81ac219-3a5d-4b16-8a53-3c1cde85f4c3"
            }
          }
        ]
      },
      {
        "id": "51e18bf9-ccfa-421f-8789-e2c9343fd754",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "22c2c4e1-cde7-4e73-9427-7fcf0dbc7530",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8c45d82-d7c0-4342-9ae0-e62127a6f1fd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "48c152fc-c272-4aed-a91e-5524b7b829a2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14603a71-e5ec-4c74-96bf-93309a0e8157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46cc576-e673-40b8-a74c-d62628431d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cece15b-092c-4005-b8d4-c7135e60f033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e3d0661-edbb-43ac-a659-c91161c85fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee326d7b-ded4-42af-a790-5c69ffa61d88",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da3453-1d5a-4bf4-a4a9-00b859ab7b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa7e846-df5e-45f0-a548-a22e1c7386ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e93cf0-bd50-4f71-98a6-1d598d010706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01c58af8-b594-4e13-b0a7-51a608648f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231687ff-6246-4939-821e-dd8a63440709",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e24cbeb-b7d6-4302-9723-f2921080e53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2791f7d-c9dc-4eb6-a928-6b3dc094d7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f55fbb0-275c-4abf-85fb-dee748046744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa23c3c6-5a14-4224-a1cf-82adc810d13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af371d00-7e10-45d9-a6ec-7d57c6179b1e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec5c89-0a73-4eae-90b2-4d10c9e092f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60051db-0976-4799-b35e-fe738c691e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48b255c-f125-41b0-86ac-19429044f8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1014cfcd-48d2-468e-b1fd-d7e4af39a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8db32e-7bc2-4e6c-a9a6-c92cb36d3191",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d1c0ee-02fd-4eb9-ba79-81aee6c7a5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb9d55f-f466-43dc-a57d-ba63ec594958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd34a6d-39eb-40b1-ab4e-38b1f09a3316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7ae3213-efbb-4ec9-8eed-9581f6a861d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4848c0dd-42be-4701-9de7-3da90d427096",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e015570c-fb07-473a-8e21-ef502b94284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef7e558-17d5-4a28-b7d9-e45f94ae068b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fa5735-deb7-4ed2-b225-51815cdbc885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c62b8e-9954-4b42-b64b-7fb990355838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b232d5-6593-4d9c-8f49-c8300f7b04d3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72435df-c744-47c7-88e9-5a82c378c673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b24f7e-bde4-4108-ba1b-e4464a206275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6330b1-66e8-4e0b-96fa-c42ed9d65a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8a3413b-8950-415f-8f07-5ae59eca232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b551e50-e1fd-4ba3-b2fb-49f8243ba46c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd2f7d-66e9-4239-a8d6-94a4bafe3021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76443890-e4f4-475e-88c4-e6dc44e4c9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ab42a3-f33e-4e8a-b0a0-8a20b07eea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6e19bf9-cd91-42c8-8409-1d80844b99a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9a14b0-088d-4072-97b6-141e5b0b4e26",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a071d1-36de-42ce-89e0-63edf8fe46d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197df0f4-5afa-4f9b-b635-c5f4946b9a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2846f0-4b05-4ca6-8d66-18aff7eaddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a32bd84-7090-4f90-8f73-1a0ec69c2584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d605740-d76a-4e02-aacd-4f69320ce17c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1145d8-10eb-40fc-a205-4c40ae9d58e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0ed23d-6e53-4442-9b7b-0c75f1710268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef823e36-20bd-431d-9e4a-e19de3b2f058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fae6410-7912-49b3-ba70-ff0ec083c207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d03b166-a8cc-4a82-b3fb-0073e91e051b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e87cadf-d4f5-4bb7-9443-98659d2fe32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b804d599-3a64-44b1-a012-d88a575366a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f41246f-3fd7-45d2-a5e8-33ca4b578a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e0fd89a-e9f3-4995-97e7-97f459978ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be488c9f-4204-4872-a6b9-1dcc9f4308e2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700672e3-7d88-4ef1-b52a-8b3d886338d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e784073c-b574-44c9-ae56-c83403740760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00dcbc9-3233-400b-ab09-92eb59e0d224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f95b6e61-7191-48a4-bf28-a73141af593a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51c011c-3e4d-4229-816b-e0819a25e32a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a181087-979d-4ac6-80c7-4c06ce5e6b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577e1e65-f7d8-4a61-a52b-2f801d95a275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd62c15-a0c2-4c1a-bb33-0759ea1b77db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c72b77e-6f89-46a1-bcbc-7b079b62ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2967df-5ba6-489f-a0a0-8aabd30dd923",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c2a946-5b54-485b-9fcf-ca42e7ae8d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b55000e-1c77-4289-b447-3d6ee37ad0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34f7a18-7d9b-4c12-a80c-3b10ddea9515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "400c3dbf-d62b-4bad-a28a-6c92e1f66133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c7013-97b3-4e96-98b2-85bd209bae88",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe494a6b-1be8-4f41-989a-ebb6681f2897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e37e46e-f5e1-45a5-a541-c7549e5dfd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ff0faa-a66f-4381-a1f2-09d8ae6eb1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01861af0-9ad1-4403-8cf8-696994c35819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772e9276-aebe-453c-a9c2-49f6e72ae950",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab1a288-95d6-46ac-b1d2-c1c6ca4779d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04928bda-ba2a-4e7b-8537-d0b983ae63ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9169dcd-a3de-4767-8745-c27ffefe5bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370eb173-4d70-43b2-96b1-fbdbb7845800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1ba116-0498-4bf7-a826-91404c1cc6f5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478993f0-06bc-47f7-a3a4-50c63c0709e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcac708-f791-49b6-9961-67d5cb98330b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b0928f-222e-43fb-b9b9-72a90e24e9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3284828c-759a-4cd8-b37f-ea5e24c411f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3eaa0a8-5e1c-41d7-8fc4-067a3c0506dd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5a864f-ad85-4005-9947-00ef3c51119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1db73b-711a-4cb1-809f-66fe5b576133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56ac4db-1fa8-4dc5-8b31-1a12854a8fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0acbb2-b71d-48fc-80d2-c906d0650512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba5362-bd58-45dc-a9a2-ec052e9efd6d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80035c6a-eb0f-4e06-991d-44a17d6e1bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576022a2-f075-447a-99a5-9d020fe6be58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a5ecae-bf5a-47c4-9d40-61cf55f72993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0176522-f6b9-4d79-9703-972a53179d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7acc32-8fba-4c3a-b6ec-df00fdff1931",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86bc43f-31b6-452a-ad67-d6968bcac9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d43a55-c7c9-4c82-a475-e023dca34742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb5877-da67-4466-bf4f-014580b4f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f295dd-40c3-4740-95f6-8ce1bfe9be89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227b392f-79e7-4765-b1c6-527bd16fdd81",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff5cef-39ff-47be-8c95-35aca489d2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869f0335-1592-41d3-ad62-8eff3bcfcf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6210034-b29c-482e-898f-4663a776f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f6befa-ef9a-46d8-8ee5-bf7be9b4b555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e1c0b3-31e9-4972-8ec0-22058f7a1e82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5e0c0d-cf7e-4fc3-8060-aaddd252e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786fe693-6b09-4869-be92-44a18fcbb9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ac2c9b-0cc6-4a6f-bd24-88cef65bff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a43d95-3394-47c0-aa89-228a0b1b8468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674f44a3-1454-4ef5-933d-a94ad0b7cf23",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54be4386-5a26-451b-b9c5-b42df4dc8985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc8e754-110d-434d-9989-29008610c2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8effe13d-8efa-4dc5-873a-9c56bfdb57b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "821ce179-a88e-4c18-84d0-220045a0038a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1f160a-5b51-48d9-90c9-c85fd274726d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41bee8b-8851-47e8-9761-cb3b94353261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7075c6-6128-44a3-84a0-10d57094e0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71b7786-462c-4cc8-a69e-5fcfcb51dd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f29291-8257-4662-ab2e-0f54fed66abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f42272-e3d1-4c3b-b4b0-5abd5b6db96b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8eea22c-6f57-423a-bd6b-5c5151189734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcde02bb-c1c6-4107-afb4-f5a73df1d9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fb00f2-21da-4a4a-99d8-d56590d0b8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d39b50a-37e9-430c-8995-2ad4dc241da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bf9496-6f84-40b3-8d18-eeff9ec8e09a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421be8c7-da46-4318-b8ba-f8a6f186aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f57f51-0a35-4cae-9461-a2582c64edc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a15b67-c5d9-4f9d-994d-4f29edc504f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a3c770-c44e-4bc4-90b9-74550dc26899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b6ae84-706a-4786-8eaf-b1cf267d193f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7587fe5-b765-432e-b6a7-a9d07ed00d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ae6aed-1ec6-480d-bfd0-a55d48a7d7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56aba517-d74a-4c1b-a8fe-b4d7e7a28ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d59d9c-12fa-4d1b-94f6-0a18f786c29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1216d4-49a3-4a78-8052-87ebd639e338",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb4efae-6c31-47a3-89ea-041cc2594fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0f75ef-0048-4056-9e37-78176f4ad01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1540b522-7f3a-458d-bc87-a3db7a6644b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb4e7f6-88e9-4ac7-a708-fa3f0109ac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544698aa-bde9-495c-ab6d-9d101fbab848",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376531ea-7fba-4ebd-8b44-79ade5031d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1420d627-23bc-4a2d-b568-a62016daed68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe3fc51-909c-4561-b55f-4ec2e4d67024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaf4bc2-56e7-429d-a41e-174fea83f342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cee61d-ea8d-41e5-ab22-2dc50c69f99f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b5f29-4a90-4284-a4f8-d5160b9d74ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d52074-a2c4-4147-a408-e7549f20e1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc456f5d-d241-455f-a0e8-46ed5568833f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "917a815d-74f1-4543-914b-18707ca4dbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4d86ba-80a1-4bb8-892e-b76a1f29d7aa",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a243e75b-03fd-4ffc-b7b1-769f4adfe188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5f3da6-92bf-4c65-b032-cf9a16d4aa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3534754-3174-426d-bb8a-7088031de7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7505c121-d05a-4184-b045-7f4934a69fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c7f315-9ae4-4adf-ac52-37c166c3574b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f65a48a-8610-45b1-a010-adadcb5763f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361c4110-8983-4ce0-a690-18666068b994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586a0b8e-6aae-46c2-93ca-b7d7011e9a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad6d59f-4643-453d-aae2-34611352a83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01322865-72f8-41f8-b9ae-ea84005be43d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617cf260-4482-4136-9403-05a58bcd57f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1935445d-2b99-4111-9557-f933b97acb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab06ec-fd6f-4655-b620-a38448747f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "902c4f5b-9dca-4ef6-8a9c-cb62bb9580cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f89fa6-640e-46e8-82d9-62b53c6c287e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5200b5a-8ef2-448e-ac60-3c7bc0f03e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d8a117-883e-431e-b027-12f4c65c70b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a9ba01-5236-44a3-a64a-3386970439ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc35910-91c8-4516-b754-4de56304bdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a3fadd-6fd1-4fcc-b9d6-bad6d2cc144d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52452166-501d-4c8e-900e-ce884d179b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68de0752-4f59-40f4-a37a-f902a5292b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73832342-a88a-4b21-bf3f-d00f46a244e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "29ff7bcd-9d1c-48b5-aa29-d1983f6d7d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d962b0-ff85-48f9-ab40-db288d8300ab",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2517c27c-191d-47bd-bd85-faf09f1c34a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa3acf1a-c742-4317-9cd5-e979bebcaa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fea7060-7d94-40eb-9962-4eede4c433b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2006b5a2-7fdb-45f2-8b8e-6c328d47d605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65675837-0a65-48b2-91e2-0d94fccd790b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b58783-c977-4c8f-a98d-983dfb6b4e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61b62e6-3832-4e1f-84ba-58c1623d46e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c824ea-f455-47dc-b02e-5ffb697703b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9eda6d-6c7e-44ec-a1f8-c215ba2e9932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe50267-e80d-4189-a3db-d1ddb88a4483",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe400f1c-d63e-4987-bb44-b4794e10d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef0d05e-e610-4b6f-b4a4-102b5579da28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f4b6e9-82dc-4a02-a685-f38933a79737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4abb6b8-191d-4921-bfdc-701f0bf68ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699a53d7-e43e-4373-b0ce-00260bde4af4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25df1510-e6fe-4db6-9e0c-16985801e30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa359288-a6d6-4a85-889e-565fb535f231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072b64d5-a662-42c3-8aa9-bcd9e2ae7247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73518e9-f3b3-49d2-904c-1c5d0ca45e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640911a-e158-4af0-8506-a8d5ae0b2981",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be65a50-4157-47ea-ba19-4b2ec4ab1480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9308fb39-4a73-46a0-9919-be48f54ebe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4194d091-57fe-46af-b3a3-9ce4f2ce226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73bb69c4-c840-4cae-9571-e58b06feb4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a927d1c-fa64-46e8-87ca-2b0311a6d73f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e05e84-ceb0-48a8-b36f-156a5deabe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e5fa61-67da-499f-9724-b823fa609769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55eaea7-c707-49d4-bdef-3f4297c4d912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29bd6dcc-faa6-4595-92e8-d658a7320a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802d3890-6ff8-4747-8335-88c6d3552e22",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513d6515-ff42-49b9-bcd2-fd3e88d88786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f76aa5-7109-434e-83e2-0d1ae30b9710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595195b4-86ee-47b1-9bfa-22ec32e2f523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7d087f62-c8af-4aaa-bc9f-ad41005d0cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81421aff-236a-4050-8f43-6dca224e77e3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0606a65-5ebc-45ed-bad1-5eac096de9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b1945c-af54-4e72-8b1f-3104c53530e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a174263d-4ee3-4f4e-b595-7bdf99b128ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae73728-53ea-4425-ab35-4983bb30eb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4754f9-56aa-4b55-b7fe-b8e4564d71f4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9653b99-aeaa-4156-b6c8-326a2bece8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f38f14-ccd3-4510-9099-6a96abc2d2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e52ecd9-b5d1-4f7e-9335-ffe54ec99673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7376b75a-500d-48a0-81f4-0694a4a423a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433eb289-375f-416d-a0f4-ff9c5ad72e14",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69600f3f-125c-4d01-a6b9-5e85f6e9d08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e0892a-ecfa-44c3-8290-fe4bc617b127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c889678-e888-4fb6-a044-19e274ce4e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f843c4-36cc-441f-8b1e-56e3cedef72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbe3ddd-c556-4166-95b5-c532ba4244d6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2f0270-b659-482e-833c-a65a5e44fc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bbc807-58f6-421e-ba94-64b680ba028c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc726dc-2b82-45e8-9858-847bbac1952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95a3bfc-f298-436a-8b34-885ee31cc86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9732acb4-95ad-46e5-9e96-02b342851239",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d770d2-7696-469a-9c3c-1d1b1bdc66f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96a7ae5-68de-4ae6-b296-95a39dd0a407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361788ed-5e35-4d2c-acaf-6c244c9517f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1fcbd7-c591-4d82-ac28-52df0ac129cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b1c274-4990-432f-9c8c-f46d007a3980",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dea74b1-42c1-4a0b-9fe4-061b47305628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae90846-0a44-435d-a0de-340606315923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bb1378-bdda-4f0b-aa22-2a35e1c8894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68df250d-fda6-4b1d-9316-299349e5f153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42afc4ad-b9ee-4dcf-9465-847d36d14f60",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eda9594-bb46-42e9-b560-222edc3824e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8402526a-3cc3-4118-89a8-c6b0e82519a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fa2d5d-afa6-4ca8-adda-a1a773b7303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e997d5-55e9-40bc-aa14-c96f0571ac07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c324f18-611e-46de-8e05-bf10ce72c3a3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c04477-8dc7-4992-8944-9896633e5d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2638796a-5bb8-4f06-a079-dc5c7c00f237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3df901-8dbe-4f8a-9f2c-fd43b6c07aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8110db94-3f06-4b4a-bbf8-88e7c0c0e8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3d2950-a06e-4ad4-9eb2-86234378585b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40b4054-ed08-41c3-838d-db7c16b67488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7093f754-1f10-4264-bbf9-2cb345d0aae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d1a402-814e-4099-b592-ce6f5d352d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3917c6f-8d77-405f-93ca-82a84789d8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d6c909-e7d1-4953-8f2c-b39b7a3fc12f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85782503-84cd-44e5-993e-1d5eecf110dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5777922-308f-416d-a4e4-a23b493ddd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c4e357-24df-43e9-abdf-dc501e52e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff12521-502a-4c47-807e-96ebf6fb3eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74a511e-5167-461b-a31e-54e6efb56cee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0151ccbf-af1e-439b-a193-2fa2711d5d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b141603-12bc-4a6e-b416-b474dfcd9f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f487c5c7-c7d5-402e-b70e-7bb086450e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "777a7200-ea01-4acb-9ba3-36f4a48138a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46404ce-f5f0-4e87-a85f-79c1697e3e5a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c083f-15cc-47e1-a508-601d40f3ccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd118970-2556-4777-95ce-ea309c7ebaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812b5ff4-6eee-4b3c-858a-90e4dea9cb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b164f1ec-5088-45fc-a183-fcdbe55cf18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed49319-b4d5-400e-b743-8ea825a59146",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e84c56-ac4c-4017-add6-53a5e59adb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7f97f3-11b6-4abf-be85-ce1dd700bdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c7b27f-3451-4398-9c23-8d7a3b217936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b03436-f432-4e16-8932-cecfdf8fb66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2d6d87-2f0d-4d1c-9dbe-c3d0c323a26f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb75442-1d2f-4de0-a0ee-6571b11caefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4afeba-f973-4537-b5c0-6b89683000b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c458be39-a7c7-4c5c-b1fc-57195eaf718b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8f953fb6-a733-428a-89ba-eae0d36187b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc10210-a08a-418a-bcc7-8c7eb6dccb16",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f6b663-4808-41c9-a1dc-662e01091cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1b6b0e-57b7-4f1e-94b6-f95027e4a6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0487d738-c8d7-4f7d-983c-06fe543a5a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b47216-4179-46ee-88bb-3c9062e4fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374c98c-9208-42a1-828b-5a87c6c245e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5d4e8-2d89-4e76-928b-1a83fb69c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26811911-cfa6-43bf-8922-8a2ce9a814d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af2d13f-ed03-4383-bee7-ed7e0017410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8948ba06-87e9-4597-bba9-aebb626e215c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de0f367-e1ee-4c03-b330-9aa68c936a45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4e476-2c6b-403f-bf99-a57fef08998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc55fe1-0a1d-48ae-8e23-242b7868fb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b96c214-8068-4563-8981-0c6e72c56378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "935a0d31-9cb3-4b2d-a7bf-497d8d31359f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ffd41b-5492-4ebc-baae-f0e835f418e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fe9b21-36d9-4328-96c8-30ea924cfee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b90ecf-a503-4be8-ab71-6ec0fa10601c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517ca04f-229c-47fb-a994-685a35c7f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ac5d95-e2d5-4661-bda1-2858d37b9add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f4cd2e-f26f-4a3a-ac13-bb82ca819066",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e777be-cd94-4a5a-8136-59a51553f1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f906e79-85a9-4e23-b0f4-bc8653733298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee30385f-15ff-4264-9619-a06f911674ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "147243a2-e92f-4477-9b25-fc8b08e6bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b643f850-679f-4c6b-a521-f7c761f4b0b1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cb3d18-962d-469b-ba46-41d31f5b42cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bc5707-d2c2-4eca-b746-ef58626b1783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394c9903-555a-4205-91e6-181f87894dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f820397a-c9e1-496e-bf63-8be7d2d9ad70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdf253c-5619-4b06-8f76-887198f94937",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081f06d-36ee-4f5b-be63-4e6fa32a4e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0402029d-9567-4f23-899e-4d968d6d229e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0442137e-cf63-49bf-be24-28f5fbdba24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07936611-4d1a-47ee-bf5e-f86dfbab05a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f6afe4-9124-4322-a418-56e9cc471cc3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9a3c68-0b18-4ede-b8a4-b02bf0899321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be098b4-6472-477f-afcf-965a8fa4a2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468ac586-97db-49b9-9d28-5b1dfb1de7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e62ec2b0-8dd8-4089-870a-a0d6b4c16e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746cf0e7-cd37-4271-b6d1-b4bb72a9d007",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd0aea0-7426-48c3-92fe-2e6354605b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e11fa6-0992-401b-9c41-140d8c4a21c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5775b698-539f-4a85-aab1-e7c65c0b3655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3aa2e75-dcbe-4de1-b6e4-2c8105ed22be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ae4fa7-837f-4142-9b46-ada4e334e698",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081dac44-12b7-4e06-beab-e25ec9c977e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764bdd62-29a1-42c7-a023-96904c978938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6dbb86-0d37-4b3d-86c3-91c669ae7cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1918c0c3-8f47-4b17-a2d6-604a3a0e7676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566c3cf8-ac13-4ba8-b88b-9d0345b5d011",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f9fd9e-4771-430a-a82c-0217c6bfa26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd19311-a966-4a73-adf5-5e2b53d7adf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2c5877-8376-4180-8df5-1dbc97c4e6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19a8d624-2b22-47ad-9a1a-77e3982809a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafa8c89-c903-4f55-bd6e-77c1c44dca66",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904e2f36-b5f6-4426-af0e-c284ce38582e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58284c7d-48b2-4034-8c23-abe363294d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cb0711-861d-43a7-8c67-6943d8057b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa7db31-6456-425f-a5a9-66964a291c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51cc7b6-56ef-41c4-8fee-d937ec9b4caa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec6e348-a193-4e7c-aba6-fa8e599968ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e7782b-bc8b-4986-9080-faa84e571ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06de03ca-7a58-4809-8d0b-17a543c68ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f37f194-5058-4730-84ee-b62b9f0be0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cef130-1a76-4369-8444-ceb102e58fbd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef953b2-a941-4b0f-9265-eb518d2d83fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ced51f2-d8bf-4dca-9475-44766f6e4407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9201c548-4803-44b6-9aa0-6fceda1d77bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d64999-edbe-4d19-920b-8a7405dcaa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b2bd9b-ce98-4203-9a7c-8f28a34155b4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4bec42-5a7d-4c6c-900e-056611bcf04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13be5b2-8286-449b-8325-0187af9ccb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f64c41-984a-4a29-90c8-f1fcb5bcf1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc71c9e9-a81a-403a-aa70-957586ce289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c154e2aa-e5a3-4d89-99bb-5f6e9a704f10",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e14393-acf3-422b-bca0-805f4d91df27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a15c187-0857-4562-8805-f50e3a3ae42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4854b12-3d5a-4fd6-a7ed-4a24b12c75ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b888003-f248-4046-864e-16ed07ae66d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa764b4-1fcc-41bd-92c1-67ccd850aad0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d2ee0-b593-427a-9011-7f4e006adad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6af719-bd45-4dff-9f5e-bafd36d3cbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48de9a2b-4aff-44e6-9402-f47b8be30ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f347252-098b-48d4-99f0-d4ade99a7690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a3df60-03db-4c83-80ff-b0a029583d5c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a340032-27ec-44a7-ba52-f58e4770bf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05992794-8367-4c09-bf46-a4c29db35995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65845468-07eb-4c99-8767-b51003c0048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b5ee3a-4023-40bf-86c9-defa294f4173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb0221e-f1b6-4af6-835d-e23159c40051",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97722fa7-9993-41e5-896e-67eca41e7ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f873c3-59bf-4c76-8ccd-0ae6d895e413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820206fb-8779-4e97-8331-c6b7443b7924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f532e38-6f4a-4c82-9324-a622b12e5e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8665512-92a8-4516-a85b-044e678800eb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4018bdb-a229-485e-9d4f-44e2c265e515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4b487f-6c49-408d-830e-51a6545cff87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb1dec-8103-47c9-a631-d47416f4c170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba04d8a-d7c7-4b52-afd6-feeb02142dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444b1102-02cc-42f2-92a9-b65f4fe63910",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625db80a-0a74-408b-9eef-c0f6278f7f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127819a0-7f1e-4e0a-9832-fcfbdf2425aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce077de-66f1-4b9d-b1e7-703751f356ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fac8ff8-c30f-43f4-9c67-ca6b327ddf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e8bd8e-7a0a-4d72-8215-c485dfc497e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a764de45-e3c6-4ebe-952c-8e4edb7ce856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d33e0b4-3e77-4677-bbe1-704194e5cadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78c5704-4466-4286-a4e0-c308d6181fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f35e93d-8f88-40e3-ad63-12e76b1ca8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e29ca02-9958-40bc-89b9-48f8fbcfb825",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37ed886-5226-427d-b4a7-15060ea3c087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d317e7c-f067-47be-b043-0a89635652df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228a1e86-afe5-4a16-b743-428208f4c755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "481137a6-1ae4-4c8d-a6d6-7cdb776ec2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62518872-c4be-48ea-b892-9b9f107d556c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6353614-1d9b-40ba-8a7c-22ff987e0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9789e61-fb8e-414a-a7e6-b652bef34c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dfb461-de56-4ee3-94a2-09ef34990328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33123b0f-9079-4677-aa4d-7c2eb44480d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a363544-368a-4786-af4a-496fe3fb0236",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9d1964-556f-4a32-bc3b-86271d4123f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76234db4-d886-4373-a7cc-b98d9b18351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5d8916-41e1-4b3b-a21f-3b859030cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd46adee-8120-4efa-b934-2e3a00f3df5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d4e86-44b5-4af8-aad6-5d6b76a926a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c67760-d0fe-4bf1-bd2e-6be2f83cfe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38144757-8cfc-42b2-ab41-38abc5483923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094b809e-eb6c-49eb-868a-94ff40381a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c936954f-fea1-4e70-9776-559cea0c5a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbb450f-cbb2-4fda-ab62-c46584f10cdb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fe493f-f670-428d-9fdf-dba1677cb3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b689bb-9c38-43d8-8233-6a71b7fe9902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3ddb40-f8b3-45c4-8d31-f488846a12f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "949ff03a-6815-4b15-bacc-d688b670f12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a009b7f-1bf1-4c81-9b0b-2f961478777a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae21ae14-bce1-402f-85cd-cb76ed68089f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d185cb9-d926-4e75-80eb-7d9a7e328c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a287e105-2c79-452f-b642-da3ea079b306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04499dbd-8e94-4f72-8c83-25b774223da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67c9c51-8418-43ad-87d2-40da944e8e43",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315f7046-92c3-4bb0-8300-f6e4452fc9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8a4d0a-42ac-4abd-824a-d931c3e6c11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593e1321-1a24-4b61-bbad-c9312f3a82b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ead375a7-e171-488c-9feb-78739a55bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5858bd5f-96d2-4585-85b8-7593594ec02e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd3931d-b2d6-47ed-9fc8-62b73e991d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c639ce43-b749-4c94-9c14-b2ecdc106f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76588cc-2fee-4ed7-8185-fce5aac6239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b15109-df74-4cab-a653-80b713d91701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c934d00e-2134-44d5-b7f0-56b6658f63e2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81807d03-0f88-45a6-9668-3fc84b6540be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76375ae1-b8be-4820-a3e8-16fbac3c323b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025c5875-2d72-469b-9212-4013061fd295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2c9f05-822a-4959-ab72-2a05305ea8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbdb525-5abc-42af-bd05-e40fba501769",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c02cb-2059-4575-853d-4109a45fef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414ca2ce-4744-453d-909b-4e627cfa6a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68a95c4-9aa1-437f-b13a-f810a1820bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec256bd-8613-40e0-b3e1-a001b786c8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11123f94-28a3-4e65-a9f6-ed9a7a9533ff",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c427574-576a-4fff-8dff-3ea6802c69ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f62064-35fd-40e2-806e-e913ea5f55cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1780462-e37a-4a59-bf02-7f0f3b9db6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd5c01f-54ad-400d-99d9-f081560e20e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e54f5ee-9fc1-46ec-87bd-6d85adf0b405",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a391ec67-c6b1-4c49-8253-f1516e1b8217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653f6913-cfa2-4ddf-b3d4-d8bc88af59f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b09fe3-70bb-4312-ac05-d607695c3a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6e1709-7db6-415d-ae67-e9f14b8694b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e82b2b-c2d4-4569-9cf5-50e797132ac3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2016c9-4f13-4d2f-8d69-f17ecb8be4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b63d81b-be0f-47b6-89d3-2d5f0811dc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdaa6fc-431a-4f63-b688-551fe0314c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f75b0573-5b2b-4249-81fc-be16f2016eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9c8688-2cfb-4bf7-be70-bfa0d485ec47",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32138e3c-57cf-43d3-89a7-0dad5d7a7c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e731f722-eac3-4274-8ef4-5ac27d4e97ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a302673e-7ab6-4253-b958-4945c83331f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7766144e-9c6f-47a7-95af-c91faef3bb54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de62a6ad-248e-4d39-8828-87ffd4823e45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "100dd741-4c8f-4ec8-9bd1-80ef4e813a83",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5507eb-506c-4102-8f5d-437177cd1ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "952bba76-59b7-4796-81da-c264e4a7436f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ab3045-3346-48af-9311-5ce192606aff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e5cfddd-c9e8-4b29-87d5-a26ee9d1b2b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff6836c-2790-4fc5-be14-563ed8371096",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c84fb6ba-9721-4bf1-b6ee-ebb6975bbba8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43ee3d9e-23f9-4dd7-a05e-f28ee573aaa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "503fcc02-6749-46ff-8370-2c0619d2de66"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da672ad8-b1d2-4b0b-8302-4d73476589eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "737b798e-2ef9-4578-a123-ca11b008fc3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c68ccd20-96d9-46bc-b9ee-694d9c0a13bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13d84113-395b-439a-b4e8-d93b9347a852"
                }
              }
            ]
          },
          {
            "id": "ac5d7da9-8c70-4be8-94dd-fed941e96617",
            "name": "Positive Testing",
            "item": [
              {
                "id": "710786a4-dcf8-4998-9e49-1507e3542ce0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae88dc76-c22c-418d-b4c4-b6bb278fa55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b600d70-dc61-4e24-94cd-ec56e59b7af0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "767545a5-6874-41e8-a324-54d674486378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c8fc13b-f2b9-4738-817f-1061c5b08ac7"
                    }
                  }
                ]
              },
              {
                "id": "43878274-93a3-4352-8d7c-6f49f3cd9c04",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c30754-32b2-47f0-9aba-95f76473b0d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1431dd7-40b1-4ad3-8e97-8d0bfa36ac06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3abf641a-fcc6-4fc7-a8a9-8d226d36ee15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fec22e25-4644-4ddf-a428-4b083d0a976b"
                    }
                  }
                ]
              },
              {
                "id": "6ccd1ae2-2295-4021-a472-5f9994f65f19",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fb62ee-1dbc-44ef-82d9-15f805f0787d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "788b0c53-0839-488a-8811-b295a89124e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4cf79ca-03af-4e18-98b9-22269f520a0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07011828-d7cf-4c3b-9ee3-afbfcce7eeb5"
                    }
                  }
                ]
              },
              {
                "id": "dc28e13c-16fa-4bef-97bb-776db445e1cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1649281d-ba35-46fa-b502-8f3524dd5aa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80db9034-e29e-4035-8719-d334f9b0479d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e7b0b24-ac54-4e4c-816b-8fd8b451a789",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee8abe68-de1a-42de-83bf-ac6610320739"
                    }
                  }
                ]
              },
              {
                "id": "7b78f9ea-e53d-47ed-b3ff-9435f4da280c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a5d54af-01a9-4c4c-a9f3-f0f11e67ffb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c901385-28be-44b2-99aa-195ff56f6ad1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35bce7e7-f999-43cc-af89-681cea83b84c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c06b11d9-83a4-47ff-a211-0ec17024214c"
                    }
                  }
                ]
              },
              {
                "id": "a5963ede-bc90-48e8-ae18-e0b50291f7a8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b67ae3f-a52c-4c56-a9e9-c9039ee6e520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6aa37f9a-46a9-4423-b053-c538d0b35000"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0d258de-63a3-4505-a3a4-4adb3917b9a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc824c4c-3d82-485a-b079-b63187ba7671"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17ab7235-b3b4-41fe-a54a-77665a4189a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76188939-3b23-40cc-9d45-a99dfd48dce9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "342fe55e-e45d-4da3-a02a-a22c68441bb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8978dd3f-ae01-4a1d-b02a-9316f9733d11"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c19c444-6b75-4875-8909-a4a23ead38cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d9729420-eafe-4424-84aa-abdcd93ccda9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ed654c5-d36d-4bba-aed6-1b25de8eaea5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d31d225-5a2a-40cb-a839-53ea5909180e"
            }
          }
        ]
      },
      {
        "id": "395a247d-994f-40a1-8718-97c382f14cc1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b9d530ea-b04c-40c8-9ce8-91c7dffeef36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a783579-29c4-4a29-935d-c0ca0affb440",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad608c92-7595-4883-a5ef-ae335af21c89",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96be6305-9a18-4eb2-8945-5d79c9423f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2159d3-58bb-44e3-a15b-4c2f6aaa2bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9aafe6-d6c2-4f28-b4e5-16d2588411df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e52db6-162b-4a4a-8075-790738ec100f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6232f91-0fe4-49a7-b7a0-c4a559fa8a0f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bc8e22-a0a6-41c1-a91d-44d7aa621ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b901f-74bb-455c-824f-f87947efc553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9042f85c-11ee-4aa1-bec9-0210dccd0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "494060ea-e27e-4170-b2b0-900b9fe517ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed60ac1-0f95-47d9-a384-dce66348c48f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f744c20-a488-42c8-9d7b-6d5124a88979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7f2b03-cdc2-43b4-af20-6265968a693a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82d7350-abe7-4510-86f6-0eeac02d8329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d269c327-849f-4694-96bc-17e43734a46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ee8b03-a3c2-40b3-a880-d205e91fa47d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0708abaf-e889-4551-978d-47e2f918c21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17325037-22a5-4fb8-ab47-cfa75347f301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ed429b-31f1-4b04-be1e-dcacea17b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2d5a02-bdb9-402a-8ec9-8ede7a875a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e42177-d7de-43e8-8989-00652c0876bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babf7645-151e-49b6-8b47-00c49a0b596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13b62fb-de7c-4e51-9505-01dfb0a261e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647fa4b8-d4cc-4791-8b00-840a416ae343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a90bec9-87da-4912-baa8-a5c3673e1602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a055ee0a-cce9-4f0c-a43a-305684276905",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f76ed6f-b7f4-45a5-9d15-5cd0d18befef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1dbff9-c091-41fb-a81a-893646dab3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16e15db-a6b1-4710-bf47-302587422559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff2d2a8-14d9-4202-b0ce-73e30398c0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1cb575-bfc1-4cc5-b7c1-062ee10bcf12",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73e5bb-8356-486a-b77b-64fdc62af696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603a73b3-36a9-4e9e-83d0-b6dee3e2c8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93714fe-d2b7-4596-bdad-b3726fbaf4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a56feb-82f6-4d86-a06f-ec92b5f66929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5203a04-4cc4-4efe-a617-bf1b7aa33d90",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504829ae-278d-4be9-b0b0-d8b8a6c6f3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1977a6b4-fe75-4267-8bc9-d83bc478271b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778c89c4-467c-4ef2-beac-261661ee7cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "919d2e68-9240-4b5e-b345-7cd2cb11d645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074c497d-79e4-4680-bab7-63a6d08148d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e812b4f9-3eb3-49a6-810a-e3ea2b0bb357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c140425-af89-4f47-90f0-77aed55e34cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17020ac-b80d-40c8-aab1-3b6d0a7670f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a29222-f87f-48ec-a67f-4a0c31a33985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf3d945-7789-4b20-9a88-ee1411705b10",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7f2067-8c74-47c8-a149-b1b2786189e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acca2f6b-4ea3-4832-a1be-ea2ca1f94916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034fc3d9-c5bd-4a32-8439-5fb63d317dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd10ea8-b410-4d32-87c6-f27398e13a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e6e82c-584e-4cac-b9c4-527646428e6a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81fee57-cab8-4c56-b2e8-fb4d74376dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d480dd-3999-4249-853f-2db53c868e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8096526c-3e5d-471e-be79-30225c328586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6058db38-7cdd-48db-b871-b83d7cf9e28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f1b03-6d2c-4f03-aad2-4641a8513972",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558be77e-a5f2-44b9-9a06-f2a51c4e48d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56047757-ac42-4889-8b5f-78467a3150f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94cb5a5-ab88-4f27-afa4-a124b2ce157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bbb341-4658-4a31-a387-75a669bf8d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da17c57-76ce-47ac-a99b-3eb6ff67f55a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dd8146-92e9-4b6e-a5c6-c7b54f67e258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae96d96-0b55-4f8a-b606-356a316d223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953aab98-162b-43aa-8ca7-fbd7a770955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "056528f7-a3cf-4db7-9ba1-06984473e114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaccc6d-32ad-4152-a600-0b18005f0269",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88b4de7-379b-458b-85b2-3013f35d131c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4033a433-ea58-4fe1-a55e-4ee7c0ad4ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868ecde6-0be1-43cb-a03a-3cc2f842b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28c3d5a-3aa0-40d0-9c5f-85a2d140985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a397815-4670-4178-8b66-075a0ec97b03",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adec5873-0e9c-4b47-bdf5-8a852cc69301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8c90b3-c5d7-43a1-a202-62957e2f7b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db90a44-97a7-463e-bbe3-3f4089f6504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc772ce5-731d-4fad-93d1-a9dd76381849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace514ef-240f-4139-b3e6-a2a905091eab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf0f1d-844a-41c9-a9d2-a2c4c21b8f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6e855b-92b0-4cfd-ae69-823993c36c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5992b4db-6c64-44c2-94f9-3cb2538b4bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdf4187-edd5-4183-b9a5-a139c8dfe27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525eae11-be5f-4d24-b94f-4877e65a88f6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff951ed-859d-419c-8ee3-1970165ec3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13b1cd0-1475-4884-8250-487bd33a843a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129acf43-6056-4952-b9ec-afbeb2d5d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d91abf-d043-4537-8a54-96c8ad473f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b21c01-a390-4d49-ad2b-8b779dcdb479",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddc0599-4d7f-4a99-b704-4687caf177b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2737ded9-82d6-4a64-9042-af286a4b422b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45035c10-070c-4ff6-9812-7f62dc871eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f086d3-9d0f-4d07-b5da-3577de820a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a143fd-67f6-49f0-87cd-5005e879909d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6b728e-20a1-422a-a057-4639bb104662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd3a608-94a2-4dd9-952b-cba4b7a4b4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717a539a-8463-4eca-8787-f8d07d67c5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df445826-3fb4-4ed1-96a0-3fdca1d4fcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e54b051-b5b5-4399-86e5-0caba2375c57",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90da844-d9ba-41b5-aee2-ae22b28d03da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3147f5a0-9d99-4dea-a097-d90a1e1b90d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc09322-85b5-49f0-a870-39a57f22ad08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e970427b-480f-4db7-9bf1-c3b0ba9c01be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab58aa9-4c83-44c7-b8ba-ac4f57b1b34b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf891a9-35b4-486a-b26c-9086137dec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce3fc23-694a-48de-b2e1-f7e488d13144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ca1f66-05a3-415a-92bf-6e446540177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39221530-c66a-4d5a-b33c-9bbca430c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343760b2-4708-49f4-87cd-466a46b5a5e9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958a88a3-3ee5-4228-9289-8548820f438d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4103e44-fe66-4605-8fb8-c01d19a4f15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0654864c-fa7b-4f08-a371-1ad1dae075aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b59ecc5-83c1-42da-ab41-69a4094d7d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac78ba2-aa95-45bf-8b5a-531ea414afbb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e3e81e-0eec-4203-be90-c8d342d74fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989dee67-97ba-4868-adf1-ed53ca5b42c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abd9b64-7b59-4f27-91f9-ba71b69a0e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd9eaaf-b595-461b-a02a-64a3355dd2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034f78d4-af83-45ab-b697-101c93f4a68c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65784bdf-f4bd-4f2a-9618-c24ce08a8b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07340b7-55e0-4a9d-9551-593cdfdb4791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b035cb-e19e-4fb3-8a6f-3bf850c3b6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7562b1d-1f69-470f-95c6-0e034f6842c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1222ef-f62f-43e5-a07d-ccd6608e6e1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28f6087-b478-48ad-a6cd-49f6344c533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8053c9c-45eb-49d0-9113-d790e1ca5e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa03e11-b112-4b9d-924c-7a200300ab2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d32add-8bd4-40e1-a7f6-878460f751f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39168cd1-1570-4c20-a015-6e2b335c19fd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8cc436-f67b-4697-a83c-c10bfc4bc85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb612eb4-cf8b-4007-974a-b4fe96c4f4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895e5fd9-9cce-4821-bfcd-af7eca4beda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f77c9b-292d-41c2-a78f-17f266b0ef34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadbc3d3-9314-4131-9111-767741c7b1c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cb0a80-028f-4e1c-892c-988654690a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da5ae71-ef53-4488-a67d-3ad5998829a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222b3b64-8f86-4743-9f00-5976419e4476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a23d638-f2fb-4383-86ce-447a338e0c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4413ede2-7718-4abb-9a7d-bf543016b731",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11417bda-6a41-4a3e-91d7-3b3968732da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb0e2f7-3c93-4f9d-9306-34cc65b4ce45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7a20c-8658-4d96-926e-aa8b0c87721f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42be67f5-c0e6-4072-a00a-cbaa59d1da7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dad8710-e5bc-4604-8f2b-79b220000a6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707923d7-8741-40b5-a30a-cfb4fef0ab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de85693a-213f-423e-ae67-ccd0a700d296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae43ecd-20bb-4b1e-895a-dba518fec752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059c4a3f-66e8-4263-a000-db5ce5f7014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a8ec89-6869-4c7a-ade7-c4981148a6f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f240d4d7-38d2-41d3-901c-d7d2bd29ea09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2580088c-bb0e-48ae-a472-75cf9ee5b96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90d42e7-95e0-41e7-8309-bb6e47c93bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97857eda-ddf9-4179-9d12-facb04202442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3117d3b-ea34-47d8-a817-afabc4044587",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad55bec3-c5db-44d9-95ce-e77075196d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd96f4a7-4d16-4d1a-b0a2-2ff418cba6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6fb66e-b1b0-49c8-9554-5e0313557305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "317d251b-428b-4024-9150-e24c64ab7063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e688d2-f7ec-4739-9358-3ab0035f8956",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c9cec-9cca-42d4-b85a-4ea92694e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fefad20-db71-4fa8-920f-84b352fa7bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41882d6c-5ff2-4395-ae9d-946b10adc49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b18ffdc-7ca9-4166-b0b5-1a5748488481"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "afd3fdc9-655b-4640-8eab-0a9cb5dd3778",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ce2f6cf-d445-4da8-8faf-2dc218c9493e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61cf1b1-58ad-430d-b746-0dd61c09ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4aca6e-1294-43aa-83f3-3930395f14c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0160a0db-f54e-4905-901b-e6ed3c3470f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b485e154-baf8-42f5-8980-9bc825f22e24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ecc6af6-906f-4b30-8990-c85e89a540a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ede561-94df-4a03-b1df-8047efa4a9f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45f37ecb-ca05-4580-b5e1-632827cce5d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d4545a2-af13-4586-987c-963440940221"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48d341ce-a179-4e80-84ad-b788c1cf0aaf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0eb2ef3f-41e0-4d57-870b-3e16896a3383"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d053f4f-a839-49c8-a784-040a37f473d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "892aea5b-6b2b-43b3-8660-8fc34663105e"
            }
          }
        ]
      },
      {
        "id": "82e5ccef-39e0-42b0-919c-3e9668fb634d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f03ffcaf-4b3e-41cb-8b50-1e84149d40ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fdb6e67-317e-4079-84cf-4d09269e2d0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b1472d2-8574-411b-9b13-939a6c8a7be8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc83b20-f4d1-4168-8b2a-1ec18e140d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929f73ed-80a4-4635-90f2-0526c4497ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696a1f8d-b6c0-421c-9bc9-1953fd146cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d0f154-ad52-4094-a956-20bb89f35d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feff49f9-34a3-4ddd-ba81-34f66a38508a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dc5db6-59a9-4f19-97a9-738b62ec45e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bd0a12-ffae-4bca-b73d-640bb388e673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80281a1-e171-4276-9cbc-3d218c210c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2120710f-b286-4d4e-bd6f-f4eaff0fd217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcb41a8-0421-4a1a-badb-867d814a1a6c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f45b9d5-0395-4456-b596-55df06e3f363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079423c2-b562-427e-9734-1c8e6c8961ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0371c797-9e33-49ff-a490-c99215507378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b134ae8b-a739-45fd-9fab-aeee6145ce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439f9a0d-8bf9-44a6-a735-521ee6478e1d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9924da4-c619-4c8e-99ed-b34a511b5142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2865f905-e5b3-4036-a5a4-ac7b9e349ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a906d634-aab6-49c1-a6df-017e1159149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb339bef-15ae-455b-a6f7-1ca5e023d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a2b2d7-61a6-45db-8af7-40c3ed50793c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed7020b-2223-4f44-b94a-72442d12a0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4b6a1c-a748-4003-9fc6-5e5c5e4927ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88cb9a8-36ac-45a2-bc32-800dea6c4f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4b7cc4-9cb4-4768-ac93-c713e6a1b963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c0a18c-20f8-4f96-a3dc-45ed26aea6c8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8209b605-c07c-4639-b72c-bd4431e7ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26dcac2-e8a8-442a-9434-2191a58619aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a394e4b-c723-4ace-8bef-f3d766c075d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "974e305f-f605-4b52-8b54-7a04c224801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca1ef54-3da4-4bb1-8f47-e559c424c8e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cdc415-060c-4c89-ab6c-ff090c783c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dea1d3f-7bc7-4c81-ac75-946a8f953fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f7bfd4-c29e-496b-96d0-7d11a2242475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4249b8-be69-4cef-bcf0-321a5bf72c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b59594-53fd-4812-bee3-1f494a873a80",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583d7446-187c-45b1-b3e0-538ab3ddf282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2c416a-e19a-45ea-a130-b1295b26cd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0494a6b3-9987-4eab-a843-bbc9d91ae4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "275fd872-9e19-4947-9e23-61b3d3ae0bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8c4db5-920e-49e7-87b0-fbbc890fa40a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c7fdc-c3d0-418b-bd52-fd8989bdb7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01097d4-15cf-4922-939f-431cd2c57ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3b9401-236d-4977-8d18-a43a648ef192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4d07ee-7bbd-4d71-bc5c-181e2cf8461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead4eea6-3ac7-4082-8ac3-c870a8bb8522",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91287596-5ff3-474d-90e4-9d9ce19785dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcfaac5-cbf5-4b0f-b252-ea28befbd76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783101ee-373d-483b-8776-e50d733611bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed75034e-006c-4354-a2a1-cb3e1b619100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7f3913-2b82-4118-b935-e8af219f5816",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddfbe4e-8abf-4b69-b2af-dffb9e8137b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb9627d-f047-4e84-be5a-9d030a7725aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd24369-f66f-4652-8cfe-98eb2eae5bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "80a2e09f-dc70-4cfd-9261-ee2d388059f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162882e6-a7c5-4065-81a6-340f3a71931d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcee61b6-426f-4ccb-931f-5833da00486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6c4f85-92ef-43ae-8dbe-0caed2e94471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8523d43e-d76c-458d-b9c1-061a0c9b285b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "336a8fa6-7ebb-4a0d-9bbf-9322c0ada9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c637a2c0-0a45-461d-926c-4a4e3ee31c6d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255b969e-c13d-4be5-95c9-422077d8a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1138615-51fc-4caa-b9c5-1de8c43f9369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50de3db0-e050-4ecd-aeb8-700793441370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3dc359-e90c-4175-b398-e4a37548b224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6070cdd9-3586-42d1-9214-c055400cba40",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3dcf09-f7de-4b4b-82b0-2ea10e05da7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e662df6-e0ab-4899-bca0-3bb85ddd5d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f6b108-c523-4d0c-bc5a-30505cb3b61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d4bb4d-2197-499b-bce6-d7a236ed077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5802d8-f756-48aa-9032-4459569a1c71",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060428af-14e7-4164-a2cd-738c5fb127fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc027eaf-a7d0-4b81-a2ec-286a4ea03ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1e2596-8807-4858-9f1f-9adc64d3de15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e240461-f3d8-4ed7-a091-4190c253857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d9fc00-02bb-42e5-aaef-1ee44a468156",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6901ab99-002f-479e-b5a5-331adacc55f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04826c8b-134e-498d-bb9c-2f7d0e700fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5350b9-5950-4c02-8a27-8b952b20a48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe6bc5b-0b10-4697-b1be-2e9efb971215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550d5b29-ecdf-4cde-8c15-6d6740722f6f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b31d4f-e778-407c-9e2e-0cfde905e47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db4f143-aa92-4bcb-9255-f1d424c75334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7313754e-c61f-43ff-b80e-6b0a7c3a08ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdceed0a-2517-4724-9839-f6cc5606b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effb3587-f934-498f-a995-3e8ec9dc1014",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8794b97-1d90-404d-b577-770f75fa0988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c29c216-f471-4f9a-9734-87528ac0552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5c90e6-6906-44cc-ac5e-3684d580b9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d088fb8-8898-4e02-a6fc-1355813f367c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c5dec5-19e9-48cd-891a-7e1e4fa8fc99",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ad30bf-b490-438b-a639-ff0514157723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ae463b-475c-484f-b208-20d34c4b2a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cc8810-8a96-462d-8d22-f2001b485a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bd8e47-9946-4f1f-937e-7f2b49ed82be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99212a21-c4fb-45c9-92bd-3abb88e669f3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77681449-e0c8-420b-a538-070177a12a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb5dd3d-cac5-4254-b518-81e9c9f169b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fe933d-4cd8-401a-b277-687ece12b801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eff87be-37bb-4ac7-a910-3ad32ad3e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531c62f8-0cf7-4d3f-aade-6ba47404a4b9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727ac22f-cea6-404a-8792-9058a63fcea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abbabc9-4afe-4fd2-ab71-766486b82812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5460936a-bd58-4cf0-bb06-dee4ae5d3c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e59585-e565-4bb1-ae9b-d5de588c641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25587990-bea4-4cd8-957b-c609c3a4b346",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04323fe-47e3-41d9-9340-29d1302384f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946d3328-2e81-4937-866c-72e5dc09b043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d064f63e-c3c8-4b70-9eb9-e6ffb66fcc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1667bfd-7fd9-49e5-9911-b5432a7c68c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e3b501-d8f6-42f7-af1c-77053f133979",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32648eac-cfda-48f6-8aaf-b783a7f82534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ef8fb7-b8e7-4148-82d0-08dc88fa2328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff0e402-bc3f-4348-ba18-b7c119cf161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bea37a1-8b4a-4aea-a58a-02e112e26747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bb8d49-8069-4ada-9a3b-e7bfbb312c79",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6688c7f2-7c58-441d-8a6a-aad74ff4f3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974263ce-bbd9-4edc-bb86-676c02a8023a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643c4651-24ba-48d4-babd-2da36d64ea88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0cd1fa-d918-4756-9fd2-669639a41872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d39a13-5383-4909-bbc3-7487bea10ec6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f8d5ba-6afe-479f-9602-658b4baf7826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce06d695-bb30-47aa-879e-c091a93aeea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de904ff-127b-4e92-ab82-8de97e7f305a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd8257f-0a57-45dd-957c-07e3a33b7f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34287804-3a0a-495d-bb80-04a9306b4c97",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255b6eda-724a-4d4c-837b-6a1e0df6eb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aa50df-156b-4d73-9459-d30a1f18a070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa8964-b546-4ef5-aa8a-c3c223675a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabefa35-3b4a-4c0a-a6bb-32e00f93569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded7784d-1991-41c3-90fd-2f72685a0dce",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9216a7-7472-4181-9ccb-2ad20db9717d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24ca9a9-b817-4bf4-99b2-1488f211ebe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fc3ac-0d8d-4d17-b2c9-213eaac2e67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a04783-8a04-4c88-8810-f014aa4a0d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d506e44b-19f9-4530-b277-8dda5aeef450",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32850f5-cd53-4a24-91b6-12496a586117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ae49d7-d012-439e-a237-45ab55a9f04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95bc55e-c6ed-4e61-8540-3f547ef01e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0efce4e-66cc-493d-ba0b-20f49019f880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6f7534-6cc2-40f5-aa6c-04c760184bed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8653418a-fe78-4e9c-95d2-5ea6d77a1788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a725834-650d-4ea0-8e41-1d7206550383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db8587d-2850-48ff-bfaf-5eea185266dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34194e84-dc00-44bb-892e-1bc67d7fbfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3236e498-020c-49c9-bfbd-e9fea54b39f6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f987a3e-6fdc-4193-95ad-68e82d715bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef00e00-19e5-4524-afd9-700bed615673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144b37a2-aef7-45e4-8945-c9f145f40b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d4ab34-b47e-4e9f-9bcb-70f3ada5babe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174c05c7-8fa3-48d7-a74c-f4de8c8b1d15",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b260758c-94fd-4c35-84ef-ce4298e2ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570df552-fd9b-42b9-a925-33d33b783f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361b864e-fa1f-43c4-8513-da7b89ecd17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a55171-18cc-40ee-a415-34271eadbe9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7049c2dc-e1e5-4b0a-9aa1-a64b396648ac",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd391951-55cb-44be-8bab-4e01caea55a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dbf07c-6d24-40a9-b97f-f531204ff53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275a2a5c-d76e-474e-b365-a2514e850224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b49e9c3-4201-4599-95ac-cb11c045161f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cefeb8-15ab-49d0-9b4e-b327c4510644",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df893dc5-35b3-4db6-8185-d6564682d1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86aa013-b161-4c94-b04d-fb7eacce2f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6423ea-760c-4a02-a769-903f91705f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ded12f-dcfc-46eb-bd60-1bb1337a0339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da08ee9a-3620-42a2-abbc-4fdb01e55c29",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4692924-79f2-4cb6-a209-f1388d558476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e10a22-a6f2-4318-b574-743abcbf5429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ca8801-f903-4f09-aa09-5073c7de8ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd475d2e-60c2-4e4e-8ab7-7a140123cd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b3f8a0-a901-4e89-aca3-eec67011c0dd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902be158-b5a4-48f6-8c4f-4b56764a35c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9461d07-c1e8-4a11-82fb-99f24487d818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2040ba58-de8c-4997-97e0-016e45ae244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9106aa55-5c86-4325-8a2a-e1608e727755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925bcb31-68b1-4d29-9d49-6b12e1edd9ac",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb993ea-e94d-42c6-abb0-a0d9afc08854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00110d6e-324d-4e1b-8391-6a46abb2d1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced7089e-4d1c-4e4e-b6cf-79c3dc949d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e476c361-fe23-4557-9060-9c4643c57e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77f4f29-7abf-4a1a-bfae-0576419f16b2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791eac63-d2c2-49bb-a692-970b040a5b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3f2dba-a158-4875-884c-1c80d73b12b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81bf9f6-2fdd-496b-b21b-0f70f9865462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b69ce9b-e0b2-48d0-9956-788eafc8fb0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d97b7b9f-f0db-46e9-8484-1652bc8731ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a14737be-775a-4651-a1de-a68780b5be6a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee027452-21fb-4394-bfa5-df3502301025",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f7f0cd-7b92-4dae-96cc-a5a5e72ecb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102e29d8-f05d-4cd3-922d-3af13f3c6eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6b165ff-7bc3-4e34-84eb-d9508632337c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e95d073-1907-4677-9f0d-3ce8877a0cc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5290fa53-e5f5-49fc-a91e-a577ea2a1647"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97548ca9-e627-4b03-90f6-1b448c0a4e6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ca165bf-716a-4e77-9d06-61150b04ca24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0061696-220b-4452-a1c5-5ac451780017",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1df69563-fb86-445a-8a9c-a62d4812929f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b690ac9-5500-439d-9b43-887f709059e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6911f4c-1a1c-439b-b99a-626edad90d90"
            }
          }
        ]
      },
      {
        "id": "f7504c1c-114f-470b-adb9-852712f8ea2f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a9c730aa-6fd9-4be4-95bf-5d161d41742e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b12f2b19-7f7d-40d5-a11f-cc58b5d45785",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "497ea053-4888-4a32-9e6b-cd1ee8cac5bd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c867d-6f19-4ec8-b709-cbc01aabd94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a590b47f-bb6e-477e-9b5a-a37debf73fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce728bef-d18d-4cc6-a8b7-834247635462",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd09727-675b-4b4f-8fd3-970d24847aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2208c50d-bc9f-4393-b30a-924ffe2ca7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3e9a53-45a3-4054-af31-66eaa33f1663",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351b27b2-d127-4df9-94df-7605b5e29424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14457348-3620-400a-8f7d-46d464a9d6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b178f5d-2878-4b97-8943-fe95e3e22195",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7dc7d-0657-4fe1-a37e-98f3cfe0748e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad4fb44-104d-44ee-abcc-2fa6ab397ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058f9495-9a69-46c9-a7eb-aa43348bda77",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb711f6-5c48-4eed-af57-5b4652936fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c137e0-d5eb-4abb-afdb-74b17ae6e8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefad2b8-09ae-425a-9d53-038b7b5d9395",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b28be1b-bdd0-47d5-bc27-00ee9bb7172c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3c3876-74c4-4047-b1a6-606679d60db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cc0ac9-fc68-4b6d-9367-797046bca1a0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8a3bc-af3d-4bf8-8596-27677116ccec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b14011-c6f7-49c9-88be-98497a89c83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2f332-abe5-450b-b352-33173ca8ac67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ef8f05-a0d4-4818-b9bd-f7875a355cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853c83f2-8e44-4bbb-8bc8-81cf070f977c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9fd28e-2302-473e-a500-7c177f4852bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b1fc96-299a-4cfc-a96d-64b14bebbd7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c75828-31f1-49a0-b041-0e3a90c6d7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9532b41a-2d91-4292-bb4d-3aeac44f6227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cb5d50-6321-4395-acc8-c1e12106823f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226e36f5-6c5e-40c5-864a-33539178c607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a602bb-7a49-4a1e-9566-625d2a122ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbaed14-b232-4b53-897f-afd877a29396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7533cb1f-8aa3-46f1-a212-b96eeb9ae118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965eb0b2-1bcb-44d9-a7a4-2219f558b9ba",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054b7fe9-8228-4d7b-976c-57ca3ed977c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a67589a-fdec-4b49-9c78-3ecc2b0f3380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef883a1b-a50a-4050-86b4-9e6d4a02aa0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da22d749-7cdb-4977-857d-0e00b96567be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8a693d-94e3-4a1c-a36a-11af246b40e3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa32019-3a92-4662-b86f-4605545a7ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7bb790-1f3e-4dc3-ab9c-69efbadaa5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918a6c54-490a-4410-be16-c8e430870a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19977dd6-0695-43eb-a5ff-7fdd933ff0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1295ad5-5ba2-4e09-93eb-6843a13611de",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b18fef-fe3a-4707-a9cb-c86fbaa517e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30a6f3d-28f0-4ad2-a6b4-1222aaac4921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d159b52-9706-4701-b5bd-a0e9df632b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19749486-ce95-4351-83fc-64eee11e98e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8160ca84-ffff-4e16-9be2-5f091fb41b84",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd903005-da4f-4118-8a2e-d51e754d78ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be8ab23-d868-4705-a4f3-8d43d318cd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dfdddc-d8fc-497b-bc52-06ae5ed59098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cc677c-364f-46c0-8059-cc1f056ead77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a8b6e-7f1c-4c7b-bb59-97560327c22f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34dfe68-aea6-4da7-b4c1-b1a85238d891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d2afdbe-37eb-4116-8ef8-c435274c8604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc060a3-2b85-42f7-b2d3-052cae404b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da96af7-726f-4dba-a4ec-536093f7ea38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d50ccfc-a7d7-4e23-b351-c88fef3d98f8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1904381-3486-4b7d-802d-cc4d03f81026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a34e5d05-9144-4f21-b469-166daa84290a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1025a0f5-8913-4473-b284-329d840b8335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4e2a12-e7d5-4a86-bea0-3b0d55942d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7578c-5fb8-401a-8386-863ad86506ed",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b4a786-070c-4e27-b8d5-bcd13fcd919a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0366b77-ad57-4332-8f80-b66760ca3edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f126a-b995-48c7-88a5-7d42de9f36e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0144f81c-ed4e-4444-ad1e-4c6ab4d553bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02da6bdd-da6b-4a32-add9-ad4e1ef5c03c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a624c6-93ce-4d26-8fb2-9b186d066761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f020dee0-8767-4b9f-af12-6d45800195ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e9d96e-dac8-4600-b253-3f9f1e952a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a25250-a51b-4ef4-84db-d64c6e8a02ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829d88b8-0797-4c04-8fe0-0b423dbb9fbe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26cdb3b-e4fe-4b05-9a26-c1c8bfe6e71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac4de17-566b-43f1-b458-380cab743754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf045546-4c6f-48f5-bd1a-18e1f8aeae69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb27e446-f848-45bd-8a5d-8eb16ca6c51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a1d86-9c21-4eed-af33-6e2b18abb249",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853f7290-4b5b-4450-97e0-106c49e0f638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f0e18c-17ff-43fd-9c38-543ef8561dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e435c4b-6ee5-4a58-99a8-242fe996240a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4cf9f3-dd56-4e93-a6ec-5ae6f3765f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c96138-cb06-44af-b10e-e9eb2db24b64",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005d46d4-0dc1-4d27-aaf5-9e9f98bca28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f33e8d-16a7-4c99-a82c-38ad5a7cac4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3aba7f-c01f-499f-8391-c01349a8b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f547ae3c-8bb8-4699-9f11-26857bb47930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5217f1-1a04-467a-94f9-9b779d6f49e9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249b9162-3817-4720-bcb9-c788413f9170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4323de-0ddf-4eef-8fb6-4fe44c1541a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbef9e92-3bed-413f-9572-73d1fbdeae0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a256c6-9b78-4943-9d4f-cda323baf5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2c647f-4af5-4a71-9160-296c0842e83b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cebd13-8982-40f6-af7c-5bccf0bd35c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a52b09e-68a2-4478-8ba4-0add25acb589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e77decb-535f-4075-96e0-0afd33509a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad7c8e5-591b-499e-ba65-75606da7f946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a372df4d-f4b4-4cf1-b1b3-ffbf9ca9fd3a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6efa443-f362-432e-9e4e-e747298aad8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121b581b-f1c1-4f0a-b14b-cd05a977ab76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514e2922-4732-4a56-8e44-ac65540e36d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc516fbb-bcb3-4316-8774-138a9ffe89ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de0989d-2049-45e8-b648-d21c9749008f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80330f4-5079-41cb-be37-9ac7e3b0f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a966ca5-1a1c-4a50-9c71-afc58c057663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caa7f2c-221e-43dc-9ce1-b39f8ad1c486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a90020-8b0e-4374-8fb5-f8a743b74d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b232225b-d864-444c-98d4-6b53d2d42d0d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270e1377-4bf5-446f-9f52-b88f9c3a78db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce09087-3377-4570-a304-673760320fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d2e246-31a1-4699-84df-4a07f12f42a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e775e21-6926-4b4d-a847-55f5b92a3d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d71f770-8998-4f20-b7c6-d6696af1bc53",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21b64ea-74f4-468d-bbaa-a0302b4e5503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2196b935-1a63-4470-a03d-e313f248ede7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b580351a-5a38-46e2-9592-b5013b795d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30ea58f-d458-4662-a758-f159e037184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4626838-202c-428c-852a-0631f9c773e4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5c915d-86c3-41ea-8a27-33221f450cb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a4b330-62b7-4809-a534-b07b6352722f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47444ffc-24ee-4a63-b1c0-bc7f561f618e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c0b42f-3bba-412a-859a-c0810572438d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7c8257-cfc2-4a4d-9b81-ff490146ba71",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6b767c-ee10-4233-a043-bb081b714871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1d717d-4d62-4638-bf64-61d6a7f4b6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e72c8e-eae5-44cc-a0f2-ce702c7512e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588870fd-559c-4743-a6ef-37c056cc1823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e5678e-e0f4-4b89-9523-d6533d451a76",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f306b4b-a50e-4783-8ffe-561d9c2e7189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96776e74-8955-4a5b-9433-fa45c7e2db69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625ee95e-736c-4993-8d24-a9a0db412fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac952a0-a057-46a3-9f8d-8d88b6ac6701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b28978f-fa6e-4617-85c7-4972d3884a1d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03f4545-caea-4d66-bfe7-d5a59ee44078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04f9351-3d6f-4742-89fa-bb3e0745c41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f6230a-0f24-4354-9b9a-ad4a2c71c41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b233f12d-95c0-42f4-ae2f-9e9f060ede57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8431c990-22d0-4a22-8848-d550dc35fbf3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c84ee3f-a7af-4fa2-b7dd-9125c0494ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bab749b-a11d-4fea-93d5-4f52685ba3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd196cff-9691-4647-9ec4-cdb2cebf4416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86647bfd-f921-4294-b964-199ffc76ca8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2514595-f13c-4bd4-98aa-898cdb4cf066",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebf6fcd-7ff4-48fc-bead-751a92285a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83935775-3fd0-47ae-bc89-3643f18cc537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07349ee8-bdcd-440c-92db-75ddefc91bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0b4e20-5390-440d-bdf1-907d2a45c3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0397a9f6-c842-46e3-bd74-952e93528589",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812efbe0-79e2-46ef-97fa-03e75f6b4e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6692d249-3b58-4c4b-8b67-d5147d4c61d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35022edc-3b33-4527-9732-36de80db246f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f180162c-7548-426e-abe7-bfb8860189e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55083eb9-3559-4ecb-b3b6-8fec808d02b8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feb611d-bd32-44db-9e39-c68f72e79ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a19c22-0650-493f-80e9-1a95a526baa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2799f3b7-8166-49c2-8107-717f6d72b7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c9fbe5-cd6e-425a-b082-769b7e12e875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8110110-a7a4-4f98-909d-ac346d0b99fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3e6bc3-f11a-459d-a1de-ff27ad95fa06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd736cbd-1989-4eee-a26e-e249d1970daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c72de8-def7-444c-8d35-a4dde9d366ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d96d21-c897-4fb4-a480-c80bb409539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc948500-2bbd-493c-a251-db6a1b7e2b8d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f16084-3c30-4bd0-bb62-1cc5bf01cbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060998ce-5b40-4451-a5c2-ce19b9e548ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aff615-d793-4f26-97f5-c1b42425b89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c813c7d-3c18-4c01-807f-2832cdc6e260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a24163-6434-419a-bd80-d11e4ed87363",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb83670-22ac-408a-9d1c-3323e2451a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b60a03-9ba4-4742-b7ef-f07dbc59bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cfb36d-d646-4747-81a0-48fd3e7c0d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677148ba-299d-448d-8da0-b8e2aa363242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2b022f-9518-4423-ac53-abce843fc006",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65322009-3a54-4b7a-b029-9cbc78fb69c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c00ccb-a81a-47f7-8d9b-7a5a0a74d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63fafb6-f3d9-4960-85cf-473c8c9c48c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a54a3c1-aad1-44be-9e97-4366fed87814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a70669-1300-4518-b42d-4439e0beb9ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a25b9c-648c-4770-82d3-3060a5a5480e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99370be-279a-43f3-a2b4-75a09459b034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2653bad5-ae51-4bda-b39c-3ceebd10053c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45672e6-eaf8-4f78-9364-7b34751ea1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f878fa3-afb5-418c-bac5-25363b7d3f9e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5c2a1b-6e52-4acf-a014-7e570558feb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d31d52c-34a1-4cbb-9bd1-7f35e4a2d0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459bd1cc-9258-473d-b620-7fb669d4ffd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baf3c1f-c578-454b-97f0-8d6852ef28d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf580f99-d7bb-4b91-a519-cf0aa3b2a4ed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb3d1bc-3035-4040-a564-01ab0fdab0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7a43b4-3d5d-426a-9e80-055586697ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770c1c94-a522-4c31-bf16-fe78022965c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d987568-8275-4e6a-ab06-caba0f730ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3853db-e384-4cd3-949a-e15b2228387d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6f8ac9-a5b1-4252-a01d-eddfaa23aa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad36a8c-35c6-448d-a5db-9b2c71ca0cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03d702c-52e7-4789-8410-7b9d749348a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89487a0-3f30-4a5a-a2ab-73dbe6d30200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52063753-7320-4385-918d-7ec7b7cd1b4d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca59942e-bd3d-41ae-957b-8534b19c01c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d973139-4499-4a48-9b38-03c104a57f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16f9559-fd5c-45ef-93bc-c6e2021c1c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb898923-0e15-4180-abe9-32400c158fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69c09eb-e152-472f-b936-47836b59f0cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35468bae-5d4e-47d6-bb63-fe036e958876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5e1ce2-8691-4fed-a9e4-72cc3d51bafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b16b06f-1969-4013-a64a-e3b23d5696e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc4841a-81f3-44bf-9292-7fb7e35bfbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b69c9dc-1c9a-4d38-9232-f92c7a79d99d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfd140c-ccc0-430e-9c2c-ca3889d7d2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b08b3b-0407-494d-bc79-127770a0524b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05d10e6-7b67-49d8-9e39-faa31393b72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44d76bf-2aaf-49d4-8743-408fda20c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e468d6-a917-4162-bb50-7c17fdc0f506",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d0aad0-c0c4-4019-8fcd-766e120d8ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f4cd68-2c11-48ab-b222-e4ddd3309e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb18930-7c9f-425b-8f9f-2b1c7cd32d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88458492-d284-45a8-ae46-6436f6e96c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aaa9f5-b008-4de9-b4c9-df8020cc7634",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24f447-2937-417f-b75f-55675eda46e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18470b5-4260-4a69-a746-590ab1b6efd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1562a65d-3efa-4ac2-aa1e-0939a4639499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c6513f-b3a6-4d84-bb3f-89eec8290856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf59a5-a7bc-4646-9462-d1304da69f37",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f091da9-5ced-4f92-9eaf-10d9cd254e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21c5c2e-7847-4169-ab7a-9e18ce1af082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02759398-938a-42d5-a0a5-85739604ed24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc8e7e9-73b5-481c-ab12-6f1fa70e00ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa4a120-885f-463c-85c3-507fdcbeadb8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb89823-3a05-4ed3-8a29-61536d9d6d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb048cc-2b6f-4709-bfb3-a255628a7f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac1880e-5c98-4643-8589-f20e44d36b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de60afc-5a7c-4985-9f3d-5b327ee3e327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c00eb1a-44d7-4e3f-99ab-8fe0e7eda885",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d8a8d6-e312-40f3-9458-f46ed22761d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be241e4e-7611-420a-8dff-c53e38717663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9983ad-d6f8-4714-bdd8-2a8bd86b54c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3878296-aee7-417e-a7c3-fe832f2f760b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ff774b-d2bf-4c27-8168-6e4210fb53b5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6756211b-0f7b-4196-8adb-cb4be3b263e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bc9c0a-5872-4912-acb5-209e57920581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab35b647-6169-4dd9-8536-632255c821cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54523dae-fd74-4491-963d-78a6f3bcd558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a47150-0370-4edf-9712-ad2cbca96c2f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6c7b84-d49e-492c-ac5c-76b03b00568e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d14218-f26c-42a4-8246-71e714253ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5113df0b-7922-4cf1-8aeb-ec31e3fce359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d8bf03-f4fd-46f2-8464-4a570adb701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cb447c-e3ac-4f14-95d1-b609b418498a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9058fb7-7c93-493c-ada5-10515277605d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb3b9e5-7e24-4a58-92a7-b221546b9794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19725d9d-7415-4fb0-bf44-c3a297c8ae16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9c4c12-8e1b-446b-a8db-e365a8475d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baff843-5574-4d96-8958-96258e28298a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b9ae46-f39a-4e42-941c-8ff75cd804b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a97721-4dc5-42af-b6ac-dd5104bf0436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f5d986-be79-42e4-a568-b4ec04de4e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41cb119-9be6-4994-b95f-7a58722616df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7244d35e-3f1a-4c30-a32b-e0a1158c6525",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad02f17-f875-42df-90bf-78a7a17deb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64e8d97-1b8b-48f7-89d0-6593a40b7b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba53e155-d3e4-4694-8b08-c0937e612687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3552d68c-df8a-4bea-a8f0-f8998836eaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb1dc8-cf7e-48b9-9000-1f4ce48c9cb5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04048e13-b73d-41d9-a385-e1e64eb036dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bc11bd-150f-41ab-b725-c5853658632d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85a146b-7533-4c11-8804-441f13fbd851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f039c896-01f3-4994-87c1-9f2eff7e0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19db087-00a5-4be6-8f83-6d81b3d87c58",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e77de14-ba75-4465-baf7-f218eaec1a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d96549-47be-4c7a-a545-e5a44c81a95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14031f77-c5dd-4a8f-b9f2-1adc0977d21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94a9adc-c35e-459f-88c8-37ffc5029e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eb4c5a-92d4-4acd-a743-f33dfdd2903a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6f306a-c5aa-4f20-aa06-1687cbc32e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7316a8c8-21de-4f25-8159-8de1bc7ca346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f7847f-56cd-436a-990c-d8ec19e8faab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a94b89-b6da-4055-985f-9e9d192a004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a3f411-db3f-4c32-b81c-2632a4a1cd91",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c49155-6daa-4b8e-a92b-5f079697b7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb0f682-556a-439e-acad-4ace36ce892d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255e1ac-bbb6-4e73-972c-89d4eda55059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965b75ec-4811-469e-9142-f39e609ae8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b095473-7fce-4408-a0a2-1da20036939b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabc4419-66be-4c24-8fa6-31c845554113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bde9ca4-adb0-474a-856f-9339743fc9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0fa190-af8a-4a08-8aa7-1bbc9c2d9685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03022c69-7f21-4913-ae8c-93589af9a9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c7b0c7-db7d-432e-8966-590ec9ff99a6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e1319d-eb63-492e-919f-32fc5bca6f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b185fe-2531-4437-85b3-a6a01e463129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe3860f-a908-44b4-a142-c772435d1b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de33fff-c362-478d-88f7-721f7bc24bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fc11e9-cfb2-4428-b397-4fc606f5ace7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcba3de-c410-4b2f-bf50-3f3f2a4dff35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b1bd3b-c6a6-4f73-975e-95896fdb8570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f012e4e-2158-4a34-8c5c-577f0cc1520d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0d6011-5131-4a54-9788-0600d4e5595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452afa68-b9a3-4486-bb8a-152526e60a73",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8fde45-2fa1-4c09-9db3-cd5fb67e6d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc47c43c-99cd-4974-8a17-76c4d9ff97d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af56d6ed-4747-4d04-92bd-6fb3dba6ff85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc411cf-0779-4edb-a9a8-7c3c57c8261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08c0689-6754-487f-b3d6-d983a46d1b00",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7105c0f-1a99-4457-8e23-df2526a7b4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "894c603b-2482-4fc7-bc9d-7127e67cef3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c20c58-dcd2-48dd-8d88-63949b97c363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a78e62a-5738-48d8-a80a-94889f7f864f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8af7386-11d5-4ffb-b0d9-53e21eec6463",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df10ce-3b08-46d2-9712-005bdff6fcc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0528b07f-a5d5-49aa-83a3-7b17c6a997c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197888aa-ae25-4c8f-9d31-8729a8e43824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e67404a-d3e8-42ba-8953-147bd0885b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212d5f43-7d62-4757-8c42-6a0a8d7c4ef5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8db9c5-b17a-4ae3-b9bc-1c58ec7712dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cd3a67-103c-4279-bf51-caa6ea26ee6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f680ef7a-ddd6-4aeb-9d79-cb08ba24a94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1b7043-b32c-496b-a4eb-0646cc242b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b61ca53-9646-4bd9-b6c0-0468588ec951",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f83417-4a30-42b6-ac25-2977e9b8128a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a7454d-a36f-4210-a308-8ccaac3ae7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1f8d6a-d39f-4ef7-8445-449b708a0e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408aebf1-c2a5-43bd-933f-98f4e5ed207e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62691d-b027-4389-a2ab-c34a142aac10",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4357fe6e-b5eb-45f9-8ce0-bf03d46370b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed0f8ec-b4ab-4173-af55-f0a692defeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afa6162-e2c3-4a3c-8e5d-65081d9ffdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550d33d2-c138-4fc6-b60b-e7584588767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d4389-41dc-4be3-8136-7896f522d88a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf98f88-8edf-4ad2-ab4c-e5afcc84540b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8764d0-f019-4f20-8e64-99cfc852ff0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fd8b8f-e967-47cc-bce6-b1643aadf2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11510b23-e1d9-4855-b421-5f4e4bb3990c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac77d71-f3dc-46d7-a13c-39f5fffdf79c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae296f5d-b969-4549-b891-65415e64f222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5adc1ab-154c-4da9-8e58-5dcc94d94de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2deac6-7838-43b8-94aa-0c24fe82a1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3232ca-1fe3-4cf2-bfde-a2a7e0db87ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3852b6bc-7f16-401b-b6fe-1cbe05cadcb7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcb1956-fb2a-402c-ad30-16e212ac5dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "530a5154-726d-440e-acb3-c4058457ef1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ed977b-9c40-4c7c-8412-498c8651d36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b328fa9-1ecd-453f-bc2b-030732c8ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f422431e-e1e5-4e51-b4a0-a105596d80e3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b604d687-6b4e-4d0d-a394-01fa81b0163f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bacfb90-61b8-4662-baa7-ed362e5859f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69777fa8-65ea-483f-aa42-1568ce80d842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870f7dea-2d65-42f2-8abd-3b50a4a1f9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d9d022-5606-4b58-8fa8-042247eb9a35",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8e88a8-e5f1-40d6-ab46-2fac9966270e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7347f65d-3120-4469-adcb-62dd2d739b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894a6c0a-929f-4756-ac66-fef3ed6965b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e62c911-f88e-47d2-a209-aee1732f4fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048adc16-5490-4e7f-98a2-8bf1f94c6baf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69f51c7-698b-4550-a3e5-40b16999f509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6cfd5f1-3dfb-478f-a33b-e0c1fd3c82ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6c8a54-82f5-462f-a9f4-635b80b3f855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de29fd91-cfc6-45f7-bd98-085307039979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4809f1-99b3-4451-b378-ba7fae66b13e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ea1d98-5438-4b3b-afcd-b7a707651012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c7eec4-bcf8-42dc-a228-a067f873436e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3494db63-a467-40a4-ae37-48f53189e26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8eedae-4382-4b36-b5c6-0d6f052d4e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd68e6c-b9a3-4173-b7af-a444a90a4829",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bd18f7-a707-45ac-a1a0-226fdd178d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbbf892-80cf-4355-8a4e-1215d178a506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3f4a24-c993-46c8-86b8-375e3c883d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4294ae-46dc-416d-ac8f-bbd3fe658792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e786cbe-f46f-4c56-98ba-a46f06fb8fe5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331ddca2-a1af-4481-94dd-2bf77f1984c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0657bb6a-4f61-41f6-aa83-945e264becc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58e66a7-7555-421a-ac0c-e94489c2490a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17babe42-ecd9-4cd2-b43b-7d0176730093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b62b8c8-372e-4c22-94ed-2449eecf04c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dbd6f2-6c8f-4d97-8d26-c0b898862a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346178bd-318c-442a-a61f-bd15916f66fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145f42db-e357-4281-bbbb-dcef2d383120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d47a781-dcf4-4efa-8130-dfb876ccccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e08ae3e-6c81-4739-9087-d6bd0d71c343",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee0f6f0-396f-426b-8455-fa13bf746773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73b869d-e9f4-4ea6-9b1c-7425779ee042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807e09a1-8c2f-4bfa-a3c3-30bfc87df02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bc1d1c-e0e3-4fef-9d2e-a52497efa409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea88b4b-c83b-413d-b499-0706505e0181",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ece9cbb-a3e9-44eb-bd98-643a96b17bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080b701d-dd3b-4c99-8b23-94fe9b44bf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3125d9f-8cf3-4c83-bb45-d323e694404f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7752aa43-f43a-4923-8912-929791476022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fd3bf3-6778-4a2a-850d-86e42ee5c82a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13899278-961d-444d-9eec-0e9c1dae671d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da4c956a-55d2-45ca-9b2f-d212c29cc8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f579c5-a393-4b22-a62e-6ba8d571b7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caee74fa-6776-4542-a56d-59f8be4391fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f6655e-78be-434a-a98d-4442da802f84",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744d38f9-7f99-46c7-b4f0-329d257f554e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c9f2cf-7bcd-48f8-99ab-4e6c2d197e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b7a467-648e-468f-81dd-70e480afc6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e56ed6-8bfb-4989-ac41-8b4a69b7c002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49422ba-36ff-4c46-b159-dfb6df23c8c1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84161d36-1492-41e7-996c-5a2c1b8de2b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ac2505-5734-46ff-a22e-68216604043d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d57575-7414-47ce-89b9-a6746c22b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9970dc25-1a16-4c8b-82fa-aea9903dbe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4ccc67-3370-413f-961f-d93ec1b56cd2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cc26dc-44ae-452e-ae9c-bc83e75e9e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef38c34-fd09-48f2-bdf1-e1c1f616d3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482328d1-7eb1-4cd5-af40-60378dc472f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1acafdd-8dad-46f9-aebf-ea638fb73df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58392e9d-7455-4404-97c5-ccbe91eb21ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973a3572-5961-4e8e-9de2-16b76ca7186d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f28c44-3433-47ae-a618-808ce3200603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d74a79-95d6-40d4-9210-f7d41c3649d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eff146-6f21-4bca-98e6-2695baff902f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c65565b-0605-4f72-aef0-277e677c8023",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f49482-e1c8-4fae-a7ac-b552152f0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527d4d29-0b68-4245-bef6-2559e4210a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c389b232-af39-4286-98f7-6863b4334279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c089bb-5c73-4f6d-aba4-5b070e6e7bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b777ff-8771-43f1-8f06-02e37b0ec828",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c85aef-2e13-467a-ae03-7775808a1e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8fcaa5-db03-4919-b555-7777f9a54d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df177a2-f7e6-402b-af30-e1d75c8a9bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fb5bb0-7d75-4946-8ec5-315206062faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad8d22a-649d-458e-b70c-6fc14d3781c2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e332f2-a00e-47df-8018-1f009eff77a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9846468e-095b-4261-aec0-11f0fb96af05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8949f802-0055-40f7-bff8-a9b260c85fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3251024c-95be-4969-b2b2-8b05da31b52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b483d332-dcbe-4b1f-bf1f-4f7ab3cf4b2e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968a58a0-479e-4027-bae3-d1a5f61e3179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6443d82b-1e2f-4334-b281-dd9903367348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad9776b-f718-469e-8874-631d232c5049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8ad029-857f-4b4f-9270-5a383ba0cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc59318-f0a5-47c4-b424-4ff8fbd14802",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43512218-3dc3-49f9-b549-c77422c2239d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fdee55e-3dd3-4386-a800-c9d8ef436459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30e94e8-81e0-442d-b5bf-80129b03ec0e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0303b2-46d2-4554-8e7e-f9e03ac0b8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df45700-d38c-4274-b887-545b789878c9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b915dd-81e6-4170-86dd-4ea674f50b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d51d95-4b2c-49fe-ae17-ac1ee5cbe7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4b3b3-8085-4eb8-b8fe-f1fc27bce45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e5e92d-5bee-463d-9bbb-6267d91936fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cd0a48-5e88-40c2-a2a8-d64cef5c7f55",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ab961b-6abe-4e59-a2b2-fdf8a2754317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fffcbd2e-d7f7-491e-b380-cbd443a9f358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dbb96d-6cb3-4c24-ab81-e5562ee7686c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149c2628-3977-4971-936d-e27ad0fafdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171db161-56a7-4f78-97fa-963863fdc035",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d45f2-8130-4dae-802c-3941dc5cd9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cce898-ed61-4981-9958-127517cd6223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e47736-b543-4ef9-83ed-99e99072d9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cf4e11-dac2-4390-824a-7ad8ae04feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf46fd-26da-41a4-8eb9-f34cb8e95063",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0feac11-2f47-4cbb-a9a8-c49462f2d522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce3cce4-79b5-4449-8a35-9851dd44a7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f106293-4491-4916-a8be-e49dbf5dcf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035c9c2f-7b7e-41bf-ad02-21273e00ecb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2160198-e215-48a6-ad7b-414e9b33e900",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d02d0-2834-4ce5-8666-842ecc03eadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee2ac7b-435b-4bad-ae4c-2f2f12c2e24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48494f86-a5c5-447a-ad5f-6864ca97d379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c1a2a7-6cb6-40ef-ac3a-36148a4c11cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d85ddd9-30eb-4a43-814c-61b196719757",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3276596-1009-4603-a9f1-254b033dc197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93875d65-f3c4-4bed-9d8e-4b4d309b4c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e409a689-8ca6-4ea4-b4e9-f78011da80fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7288285b-4293-432c-9a6d-2139a87c5a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4b672-2266-4599-a8af-72c7af77adb8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af18a2a-c42d-48d4-a1b4-36007799546f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7894ba-7838-4ef7-b660-bf3fea2dc247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479609bb-683e-4071-bb66-9bdc29526660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5612ff07-ad7a-47d8-bfc2-800df85a0665"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94049488-0ad9-4d5e-b492-0efaf440131a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6916d3e8-db92-4168-879e-0546b73010d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32a8530a-8a9b-4254-b5a4-dd01c894f43a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed79974f-8211-4d00-ace9-da7b51317426"
                    }
                  }
                ]
              },
              {
                "id": "afd10aaa-1fbc-4d28-b26d-7141aeb0adc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa9bd8b3-7581-48d4-96ba-fa9c0e8926ae",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ae60e6-9aaf-4fbc-a8ba-138f2e029b5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f4d5cd87-4583-4961-aa14-1e653505ef3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dff6947-1bc1-49c0-b172-603ee73391c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d64c04d9-5184-46ae-ba94-0846968f82f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2818548-6ab1-4150-b65f-44778c4d974d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192f1072-e73b-41cd-8732-f8a902b44543"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e8a4903-55e9-4217-ada2-989686a1fdb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "876f47f5-204b-4003-a8e7-e7a98b7b6349"
                    }
                  }
                ]
              },
              {
                "id": "853a4924-d942-40ba-9f5e-ccf11f0b9392",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "74202040-1a9c-47db-8539-9006d33462cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac370e36-97a6-4bbc-83b2-a7bec452f559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "38541eac-1cce-46e2-b0c4-95934f3b004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99edb0e4-bec1-4759-94a9-ca088a42983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad123a72-8a56-4ad9-96d5-21b029c60d54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "621d4597-222d-4360-856f-6a38cc44f888",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5625e555-f716-459e-9b21-5c1dd14aed7e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c4848c-c961-4cb9-9dd4-d932db0d6d51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5944458-b4b2-4a89-a2ad-5c787489bbba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9686b73b-62a6-4c2d-83ef-29ccd5238003",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70473f0e-cc1b-4ea5-857b-603d3e784eca"
                    }
                  }
                ]
              },
              {
                "id": "841825fb-06fe-4934-9ad8-04134bdc0820",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d77d627-1484-4947-9bb0-3c96e0be9ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "411cd073-5e21-4b8c-9874-8ab554e47bd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9aafba70-fc42-4e7a-8e88-b03001ffa72f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8103c4e1-2cac-4fb5-81da-4715ec267947"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26d7a046-21d7-4ccd-a4ec-87f336adeab7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0858b033-28e5-4453-a608-3ae87074af6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d6f263b-473d-49bc-8d15-9228b249f817",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7626b6f-57fb-4804-ad4c-3b842e964ae4"
            }
          }
        ]
      },
      {
        "id": "4bfeeb2f-75e3-4388-9554-641c4c16eb0c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7aef0540-fe6c-4a6a-84d2-33b7fc2d0d88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "222ef2e8-3900-4f7d-88f6-d17f9d562a55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd179817-e378-42e1-8838-5eb7436320a9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1928e5-dd94-4ef9-8b8a-b85ad9e4018c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "abe812b8-64e9-4354-ba28-37ebf7c4b4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6207e20d-0222-441d-9ab8-d5294145a4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edd7456f-ea6d-4029-a102-f625c42d21ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19cdae52-b88d-41c6-8fa8-6ad168d352a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f0ccf36-2472-4095-a318-f9e9c5e6a02b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0a110d7-be19-4d1b-b05c-29a8b35615cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67775ae2-edc5-45e5-bbb5-bb80cf949a31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34f7a1e1-90e8-4e33-a384-a983cc7a676a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bc9976d8-1b65-4eb3-b405-ee9fed3fe57d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1cdeef0-3e84-4807-b38e-703d1d958412",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38edf385-33c2-4aba-88c8-f09422efdee3"
            }
          }
        ]
      },
      {
        "id": "347566fa-5c67-4bcf-9898-c940a387bbdc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0443d181-f987-4443-8033-c2477108fc3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac20aeb9-081d-4925-8566-9651167224ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb487368-0dc9-4887-8bf2-184e00714c38",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ce931-76c5-459d-bd3d-6034f1a03724",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab12f039-01e1-4e02-b0f3-9c31db55a5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b82bdb1-8842-4594-9310-cf4d75259b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b58e346-ed80-4934-8965-43bab48913bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "802a3f26-d1af-4168-9ed8-711024fa518a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c44f773c-ba8f-428e-a613-8d2d22f07a4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "460f4af9-7b58-423b-b988-b589e45efc6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7e5eab6-8bb7-48a6-a0d4-7cd4c9a2d8a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4874aff4-d75c-4637-b68a-94352efbd377",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5889bd8-f62b-4aa3-aa37-dab0def0ae1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f6b7ee0-f3b1-4ea8-afd6-4adf863ab5a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "918dbe22-d541-46c2-a106-e356efb457c0"
            }
          }
        ]
      },
      {
        "id": "484561ee-3d28-44b3-811b-e43ee1824bde",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b76f427a-5062-4839-a7f5-bb0acf8da236",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d027f6a5-1b33-44bd-93a6-e17ed74c61d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b506d0d-3fa2-4e19-9d9f-71f1abfdd83e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5a188c-4bc9-4376-bf3b-19aa5675f518",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc97d183-7771-4f51-82fa-867d6d952530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14da1f6-00ae-4748-89cb-f3ec4a079649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a32532a-bcf6-4f38-8692-2c3f5483b782"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b58541e0-88c3-4eb2-8f75-99aceaa0b81e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "272905ff-6170-42a1-b02b-b093361159ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f6a9d8b-efd6-44cf-b4ec-fa252b8391dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "073621d7-90e3-44c5-b2c1-14ffb7a26863"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e05aa17d-9c2c-43fd-bd77-c2fd52a089a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8e47bf1-e021-4951-b3f6-4f1774926193"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77a2d6dc-688d-4bbf-aa87-a0df63af5969",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5448f8a2-6f61-413c-a702-26abd44da4da"
            }
          }
        ]
      },
      {
        "id": "c5d1ca22-6f77-4ab6-ae36-2d43ad54c17a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3a1add2-807c-4d59-ad58-d4ddb3240a8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df3277d7-7deb-46e3-b28e-55c35706f906",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ae35682-234f-496b-a538-104e7a9fad2f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a25f0fa-443b-4e61-821e-85d90d6844d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "862a0280-b674-4123-bfee-ded96e3c421e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.69718309859158,
      "responseMin": 9,
      "responseMax": 374,
      "responseSd": 36.12858285495459,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696638787626,
      "completed": 1696638823618
    },
    "executions": [
      {
        "id": "af22be23-dd5f-4cf5-8861-832b00904c62",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4e80ada1-5237-4ebb-8969-e0a15e57a5a2",
          "httpRequestId": "baf64063-d0c9-4969-81b4-fbf12e922973"
        },
        "item": {
          "id": "af22be23-dd5f-4cf5-8861-832b00904c62",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a601407c-098c-4067-b4e3-78dac369d6fb",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "a3ca0790-0a12-4e89-92a4-4a1088160bdc",
        "cursor": {
          "ref": "3b93140d-482f-4114-8240-23f1a6a11083",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9a71f98-6c31-4504-83f6-fc8a7b75ff9b"
        },
        "item": {
          "id": "a3ca0790-0a12-4e89-92a4-4a1088160bdc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0b3f71ac-f9f8-4999-b6a6-f059ce42a6e7",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a1895a88-7f05-42d8-8bd8-4c1b71eff98e",
        "cursor": {
          "ref": "edf84f08-0db4-460a-9650-092ddf9d5d9f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ca3ad9c2-28d2-42c6-b6f4-c1c80e322475"
        },
        "item": {
          "id": "a1895a88-7f05-42d8-8bd8-4c1b71eff98e",
          "name": "did_json"
        },
        "response": {
          "id": "bd2111aa-2519-4992-8389-4dec75a6f2bf",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e832ac4-9bf7-4f2d-a256-d364025e8f61",
        "cursor": {
          "ref": "1af90cc6-a53b-4e83-a8cf-5a75f80befb6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c2ce36d-f1e6-4899-ba93-fb9f7b61667d"
        },
        "item": {
          "id": "0e832ac4-9bf7-4f2d-a256-d364025e8f61",
          "name": "did:invalid"
        },
        "response": {
          "id": "50654607-dd8b-47c5-ba05-a89103c65748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e832ac4-9bf7-4f2d-a256-d364025e8f61",
        "cursor": {
          "ref": "1af90cc6-a53b-4e83-a8cf-5a75f80befb6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c2ce36d-f1e6-4899-ba93-fb9f7b61667d"
        },
        "item": {
          "id": "0e832ac4-9bf7-4f2d-a256-d364025e8f61",
          "name": "did:invalid"
        },
        "response": {
          "id": "50654607-dd8b-47c5-ba05-a89103c65748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f738985a-1c06-42d6-b9f6-c1e1b7c9d409",
        "cursor": {
          "ref": "ad7403fe-53b2-4501-9acc-46034bdddaf7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a377f488-ee25-4124-b742-08e224b3182c"
        },
        "item": {
          "id": "f738985a-1c06-42d6-b9f6-c1e1b7c9d409",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a47508de-c47e-4a24-830d-e03853690499",
          "status": "Not Found",
          "code": 404,
          "responseTime": 370,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbf9f63-6623-4462-9eae-e201e7750e76",
        "cursor": {
          "ref": "d0f182d7-1301-4f2f-ba66-c35c4d13333e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf3689f2-27c7-46bc-a4d6-44c2c3000c60"
        },
        "item": {
          "id": "cbbf9f63-6623-4462-9eae-e201e7750e76",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fac61a79-7f5f-45df-bab7-6260bfed0403",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723a8388-f645-4d1f-9dc5-a8f6ff841b1e",
        "cursor": {
          "ref": "650da58a-77c1-464c-8962-7663797df518",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74e59f3c-fa1e-46eb-9623-bbf530650eaa"
        },
        "item": {
          "id": "723a8388-f645-4d1f-9dc5-a8f6ff841b1e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cde0635c-8ed6-4e9c-9ee7-bf4b52389f60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cbc2e7-4ee1-44a9-bc30-41825b818abe",
        "cursor": {
          "ref": "e897b0a1-2bbc-48fb-8b69-ffd5c5454a59",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d93566ab-44f4-4c9e-9626-6766be4c5587"
        },
        "item": {
          "id": "91cbc2e7-4ee1-44a9-bc30-41825b818abe",
          "name": "identifiers"
        },
        "response": {
          "id": "f03ea16e-e976-4924-ae8b-7a48ffedc625",
          "status": "OK",
          "code": 200,
          "responseTime": 283,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c152fc-c272-4aed-a91e-5524b7b829a2",
        "cursor": {
          "ref": "a88c1c0c-112c-4244-855d-d2e9eab64282",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1b6c4ef4-4c7a-4198-95b7-ee23651a8024"
        },
        "item": {
          "id": "48c152fc-c272-4aed-a91e-5524b7b829a2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1033c23a-7d60-46f5-b0fb-b21d93f16b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee326d7b-ded4-42af-a790-5c69ffa61d88",
        "cursor": {
          "ref": "24b9830e-d07c-479e-a424-e0fe39a6278b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5e4feaf-91a9-4cf9-a0ec-13b8681f24fb"
        },
        "item": {
          "id": "ee326d7b-ded4-42af-a790-5c69ffa61d88",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "57db1519-ee1c-46ca-a6ed-4206bf7de2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231687ff-6246-4939-821e-dd8a63440709",
        "cursor": {
          "ref": "51335792-b8f7-4745-9ed3-b04299c13423",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "14ee84f4-5fba-45f3-9522-6050e3d20b5d"
        },
        "item": {
          "id": "231687ff-6246-4939-821e-dd8a63440709",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "43d7ac8c-6fc1-499f-923f-dbccc7fef29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af371d00-7e10-45d9-a6ec-7d57c6179b1e",
        "cursor": {
          "ref": "4c6f4386-80c6-45c7-8050-fb87f0dcbefb",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "011f2721-e857-4ab6-ba31-be6a0beffd15"
        },
        "item": {
          "id": "af371d00-7e10-45d9-a6ec-7d57c6179b1e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b8a5e10f-0377-4d1e-9271-9726e735cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8db32e-7bc2-4e6c-a9a6-c92cb36d3191",
        "cursor": {
          "ref": "8d754fb7-11c4-4504-aab0-a885d831cbcb",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9377f12d-e136-4edd-b0de-85078cbde554"
        },
        "item": {
          "id": "ac8db32e-7bc2-4e6c-a9a6-c92cb36d3191",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d477dfd2-bb45-4f4b-9340-8f84b9ef0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4848c0dd-42be-4701-9de7-3da90d427096",
        "cursor": {
          "ref": "b84eaeb5-100e-403d-af4f-de1e5e7da512",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6bfcef46-ed63-425a-b57c-c067a7036466"
        },
        "item": {
          "id": "4848c0dd-42be-4701-9de7-3da90d427096",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "542f9355-c9b1-4edd-accd-3dc62bd21cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b232d5-6593-4d9c-8f49-c8300f7b04d3",
        "cursor": {
          "ref": "35cdd2ac-1a3f-48bf-b00a-806362d8b49c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "44826b41-59a2-4a48-86f2-7fe6c6b0cc05"
        },
        "item": {
          "id": "a4b232d5-6593-4d9c-8f49-c8300f7b04d3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8a8a7300-c6e6-4bb6-9108-152aa2a1c581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b551e50-e1fd-4ba3-b2fb-49f8243ba46c",
        "cursor": {
          "ref": "81bf6857-2d38-4a84-a6a5-cb2b40d26b08",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "815a5795-69d5-43cd-b8b7-f39642391497"
        },
        "item": {
          "id": "3b551e50-e1fd-4ba3-b2fb-49f8243ba46c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0670ae49-0a04-4588-8361-37bfd8b225dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9a14b0-088d-4072-97b6-141e5b0b4e26",
        "cursor": {
          "ref": "03f6d6be-2e28-4fcf-a7e5-ad6c094fab17",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7ccf56dd-b795-4223-8136-31b4a4c5674d"
        },
        "item": {
          "id": "7c9a14b0-088d-4072-97b6-141e5b0b4e26",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "831c21cd-7838-4245-9865-a636b8c1ffce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d605740-d76a-4e02-aacd-4f69320ce17c",
        "cursor": {
          "ref": "fdb49da6-9796-4041-a6ce-9bf25dba2350",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1e7ffbce-8738-4364-8ca2-845a87adf1ac"
        },
        "item": {
          "id": "6d605740-d76a-4e02-aacd-4f69320ce17c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "57db718c-85e8-41a1-916c-f02495008eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d03b166-a8cc-4a82-b3fb-0073e91e051b",
        "cursor": {
          "ref": "893f7eba-13a0-4ac9-a3ba-6c5669d9e151",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fade9913-5080-4eae-b14f-adbcdb78a2c6"
        },
        "item": {
          "id": "3d03b166-a8cc-4a82-b3fb-0073e91e051b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "674e24b5-5523-4c24-8ec5-a7e8d4c23932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be488c9f-4204-4872-a6b9-1dcc9f4308e2",
        "cursor": {
          "ref": "1cd8d63e-7a3b-41f4-a001-75f0c0243280",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b4869916-fa28-4725-a365-43a71987aa78"
        },
        "item": {
          "id": "be488c9f-4204-4872-a6b9-1dcc9f4308e2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d83195a4-bbfc-4476-9da1-76f5c8415d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51c011c-3e4d-4229-816b-e0819a25e32a",
        "cursor": {
          "ref": "9cfac11c-e388-4ef0-89cc-5147796179be",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c2ef5d6c-6e25-49b8-bc26-391695962d8e"
        },
        "item": {
          "id": "d51c011c-3e4d-4229-816b-e0819a25e32a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5878e0a9-e425-4a7d-8b82-1f364cc5b22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2967df-5ba6-489f-a0a0-8aabd30dd923",
        "cursor": {
          "ref": "31c4528b-912a-4f69-abcb-b1d2afbca8f3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "971343eb-e4b9-4ede-9b34-a3ec9b43152b"
        },
        "item": {
          "id": "6a2967df-5ba6-489f-a0a0-8aabd30dd923",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "693995d8-e245-41c2-ac24-94092acd3df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c7013-97b3-4e96-98b2-85bd209bae88",
        "cursor": {
          "ref": "7c1e811d-dfc8-4a6b-a3d2-8d5f39207ed6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "81e95dae-9a64-4255-874e-83c94b343508"
        },
        "item": {
          "id": "ba9c7013-97b3-4e96-98b2-85bd209bae88",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4bc31bd5-5aaa-4597-8232-c77dcf00121c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772e9276-aebe-453c-a9c2-49f6e72ae950",
        "cursor": {
          "ref": "61a46d76-5b6e-4793-91df-6c0320e8c2b3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "09232308-48a5-4db7-b1c5-059b3c75c0a8"
        },
        "item": {
          "id": "772e9276-aebe-453c-a9c2-49f6e72ae950",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0c33a5ed-a2fb-4e1f-956c-0647683cfec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1ba116-0498-4bf7-a826-91404c1cc6f5",
        "cursor": {
          "ref": "90add60d-ee26-4665-a5e3-cf0ec5b5560e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "06ca75e1-725d-4a0a-b9e7-1076635753aa"
        },
        "item": {
          "id": "ca1ba116-0498-4bf7-a826-91404c1cc6f5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c269991f-1b8b-4ba9-b604-a8a9febe3521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3eaa0a8-5e1c-41d7-8fc4-067a3c0506dd",
        "cursor": {
          "ref": "1b387b8d-b444-484d-aa2a-4c9f7f44bb44",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "08166d80-b257-487e-b40a-f92f5e11a3e1"
        },
        "item": {
          "id": "e3eaa0a8-5e1c-41d7-8fc4-067a3c0506dd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "21008cd7-94fe-42d7-abd2-a7327b72903d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba5362-bd58-45dc-a9a2-ec052e9efd6d",
        "cursor": {
          "ref": "83a02a06-c496-4f47-8ca3-0a98d3c00c3d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9a265661-3bff-4875-8c24-0f666e1ba252"
        },
        "item": {
          "id": "18ba5362-bd58-45dc-a9a2-ec052e9efd6d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "80be4080-8246-4138-b9e0-84395069e32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7acc32-8fba-4c3a-b6ec-df00fdff1931",
        "cursor": {
          "ref": "efbaa16a-4195-410f-a2d5-7ddd84d93a04",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9b4aabfb-db4f-4e66-b9f2-4f5ae5967fd0"
        },
        "item": {
          "id": "bc7acc32-8fba-4c3a-b6ec-df00fdff1931",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c365c394-f2a7-483e-9d87-0cd32ce9e779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227b392f-79e7-4765-b1c6-527bd16fdd81",
        "cursor": {
          "ref": "0f07a00f-b42a-416d-8f9e-126f7c288c74",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "789452f8-cc10-4405-90fd-44e70adaaf45"
        },
        "item": {
          "id": "227b392f-79e7-4765-b1c6-527bd16fdd81",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "226d7629-a1cc-489e-ab1c-9190735775d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e1c0b3-31e9-4972-8ec0-22058f7a1e82",
        "cursor": {
          "ref": "691653ac-2f28-4ae7-936b-72e3b8aa0a87",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b0af065b-1320-40f3-a1be-54fbab6eca1e"
        },
        "item": {
          "id": "29e1c0b3-31e9-4972-8ec0-22058f7a1e82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e48007df-5ed7-4400-992d-537f1d946d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674f44a3-1454-4ef5-933d-a94ad0b7cf23",
        "cursor": {
          "ref": "bfc4f9c2-90d4-42ea-8acf-0809f9380a6e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "24b682d7-2307-49fa-8d89-956dcaa2df95"
        },
        "item": {
          "id": "674f44a3-1454-4ef5-933d-a94ad0b7cf23",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "14367825-74b2-46d0-bacc-b0936067ed1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1f160a-5b51-48d9-90c9-c85fd274726d",
        "cursor": {
          "ref": "add97bb0-762f-44a8-9c19-02b0ff066322",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "57ab9ebb-79db-49ac-87df-15439752d8bc"
        },
        "item": {
          "id": "fe1f160a-5b51-48d9-90c9-c85fd274726d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "25b0905d-1b27-492a-b1ed-9c30c80f72a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f42272-e3d1-4c3b-b4b0-5abd5b6db96b",
        "cursor": {
          "ref": "b970461f-0341-45cf-abe8-68c4bdf4972b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "951853c9-f162-4aee-9461-d4f60c33ee0c"
        },
        "item": {
          "id": "d7f42272-e3d1-4c3b-b4b0-5abd5b6db96b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e5dbc289-d823-4d5d-b68f-0b6cc74345d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bf9496-6f84-40b3-8d18-eeff9ec8e09a",
        "cursor": {
          "ref": "5ee46fcc-b24e-4b36-b12a-66403333854b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9e4d50b8-7e1e-4978-b071-c3a86b4a5e5a"
        },
        "item": {
          "id": "23bf9496-6f84-40b3-8d18-eeff9ec8e09a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "53543526-665e-48d2-8fca-cf16cfd15c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b6ae84-706a-4786-8eaf-b1cf267d193f",
        "cursor": {
          "ref": "6e23dd21-8751-4d68-8ea6-a338a479ea3d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c33a4e19-3673-4b81-a862-84fc899a5339"
        },
        "item": {
          "id": "17b6ae84-706a-4786-8eaf-b1cf267d193f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b809918e-d47e-4b28-ae9d-740f729c0d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1216d4-49a3-4a78-8052-87ebd639e338",
        "cursor": {
          "ref": "63a57a35-1d5f-4ab3-9e0b-7bf50960228b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ee0762e2-def6-42c6-bf6c-741591870359"
        },
        "item": {
          "id": "5f1216d4-49a3-4a78-8052-87ebd639e338",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "533c40c4-6e1a-4cff-8d61-a386e1291934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544698aa-bde9-495c-ab6d-9d101fbab848",
        "cursor": {
          "ref": "f1883b9a-1d37-46c8-b91b-b03a562632fd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fc4765a3-bff8-425b-b070-6487b8a1bdc2"
        },
        "item": {
          "id": "544698aa-bde9-495c-ab6d-9d101fbab848",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "064ae471-8283-4f60-9b24-63d5ff3b17c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cee61d-ea8d-41e5-ab22-2dc50c69f99f",
        "cursor": {
          "ref": "3ae1bead-397f-4014-aaaf-6629bf96b0bd",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a8c4dcc7-96fd-4be9-a8f9-da7b289b37e6"
        },
        "item": {
          "id": "f4cee61d-ea8d-41e5-ab22-2dc50c69f99f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0cd5d4ac-7abb-456d-827f-5e9befbba2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4d86ba-80a1-4bb8-892e-b76a1f29d7aa",
        "cursor": {
          "ref": "ccf38467-259b-48c7-8fa3-1c5a53ca9687",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a794871b-3dc8-4104-9bde-256e5bbc14e8"
        },
        "item": {
          "id": "bb4d86ba-80a1-4bb8-892e-b76a1f29d7aa",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "89cbf8c2-edf4-4c97-b6a0-98b71d42dfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c7f315-9ae4-4adf-ac52-37c166c3574b",
        "cursor": {
          "ref": "2f9902cf-1aaf-4edc-9e28-771ff3286f55",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "33484887-c800-4777-b2cc-e7d2a122d3a3"
        },
        "item": {
          "id": "19c7f315-9ae4-4adf-ac52-37c166c3574b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "59881989-ec3d-4167-894e-9b642b20d49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01322865-72f8-41f8-b9ae-ea84005be43d",
        "cursor": {
          "ref": "f5fec21e-3f97-4983-9529-21261ae5ce69",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "71cff39c-7da8-4f61-b522-1226a6c1552f"
        },
        "item": {
          "id": "01322865-72f8-41f8-b9ae-ea84005be43d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b2fd1739-32ad-4683-b420-f4e862b4f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f89fa6-640e-46e8-82d9-62b53c6c287e",
        "cursor": {
          "ref": "3cba5341-b8d1-4d8d-88c4-4f10ff234ba7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "76318902-c66c-4ebe-b0d5-f0cd6e45c284"
        },
        "item": {
          "id": "c5f89fa6-640e-46e8-82d9-62b53c6c287e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b85db7f0-5e49-45eb-9961-9662b285acf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a3fadd-6fd1-4fcc-b9d6-bad6d2cc144d",
        "cursor": {
          "ref": "f7baff31-b650-4689-bde2-124e14813662",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17f190b0-085b-4dd1-9cfc-2709b90c47fd"
        },
        "item": {
          "id": "91a3fadd-6fd1-4fcc-b9d6-bad6d2cc144d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bef49c56-a925-494c-a82d-8ff751dc402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d962b0-ff85-48f9-ab40-db288d8300ab",
        "cursor": {
          "ref": "d8efb0f9-cb95-4465-b9fb-a039068aff84",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c34628ea-0f90-4a6a-a39e-4be84125392b"
        },
        "item": {
          "id": "37d962b0-ff85-48f9-ab40-db288d8300ab",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "02e058e1-2284-4cc5-b6b0-b075ddbefd4e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65675837-0a65-48b2-91e2-0d94fccd790b",
        "cursor": {
          "ref": "549453e2-cdb7-4777-90e0-47b0c906ecc9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38f29159-7fab-477b-a460-dae5cdbe95e3"
        },
        "item": {
          "id": "65675837-0a65-48b2-91e2-0d94fccd790b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4e2774d0-e6b9-43a5-867e-69ad9a987f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe50267-e80d-4189-a3db-d1ddb88a4483",
        "cursor": {
          "ref": "a83f3c69-c089-4b49-a4c7-d75e62add53b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ed8489e2-133a-490c-b493-277379a83ba8"
        },
        "item": {
          "id": "fbe50267-e80d-4189-a3db-d1ddb88a4483",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5f2efe69-6da8-4eb0-9b62-02e20ac8da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699a53d7-e43e-4373-b0ce-00260bde4af4",
        "cursor": {
          "ref": "508c525c-858f-441d-b7c6-dff0b76c8d8a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e24fe07-5b45-4dc6-87da-6e60d0f79ee7"
        },
        "item": {
          "id": "699a53d7-e43e-4373-b0ce-00260bde4af4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "45eb9781-181f-4fbb-89d8-7dd4af10af73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640911a-e158-4af0-8506-a8d5ae0b2981",
        "cursor": {
          "ref": "c297c9c2-ed8b-43ad-8104-24b4f35343b5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ad461310-4378-458e-93ce-2a5e29f29c86"
        },
        "item": {
          "id": "6640911a-e158-4af0-8506-a8d5ae0b2981",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b8febaa2-c89b-4394-9b8d-be0b130a6659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a927d1c-fa64-46e8-87ca-2b0311a6d73f",
        "cursor": {
          "ref": "d0e72988-e1e7-44e1-a479-462a5542730f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "637454f9-53eb-4aba-8e8b-062c976f06f3"
        },
        "item": {
          "id": "1a927d1c-fa64-46e8-87ca-2b0311a6d73f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fc93c362-97cb-477f-801f-6ba890eebf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802d3890-6ff8-4747-8335-88c6d3552e22",
        "cursor": {
          "ref": "ba87edcf-e2e0-40bd-afd7-270c1764ab0c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "01c0ddbf-e432-4210-9a81-3ba5866b8782"
        },
        "item": {
          "id": "802d3890-6ff8-4747-8335-88c6d3552e22",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "edd1c1e1-777c-4fd5-af0c-ebd33d1af02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81421aff-236a-4050-8f43-6dca224e77e3",
        "cursor": {
          "ref": "3fa0a9f5-2de2-47df-b5fc-753f5a86335f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "97d8dd00-48ae-4123-9166-1206e85a9e7e"
        },
        "item": {
          "id": "81421aff-236a-4050-8f43-6dca224e77e3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5433544b-c7b3-4533-b47a-b5512be3473f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4754f9-56aa-4b55-b7fe-b8e4564d71f4",
        "cursor": {
          "ref": "6026b98c-bac8-49f0-a602-4307a3d1cc96",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "207cc46a-b193-43cd-96a1-6177ab4b6b10"
        },
        "item": {
          "id": "fc4754f9-56aa-4b55-b7fe-b8e4564d71f4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "32becc4c-13d7-4cdd-8f06-c6e026f3e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433eb289-375f-416d-a0f4-ff9c5ad72e14",
        "cursor": {
          "ref": "031da374-6b5a-4025-a767-d011d7b00808",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "29225b6b-5baa-4902-a643-d31846d6e2e1"
        },
        "item": {
          "id": "433eb289-375f-416d-a0f4-ff9c5ad72e14",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4914e6d6-c392-4b64-9a30-a28b9a81d1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbe3ddd-c556-4166-95b5-c532ba4244d6",
        "cursor": {
          "ref": "26851abe-9475-4dab-83cf-8493e6e2e182",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ce26e6ce-4aa9-4cb3-b433-e80a1e908dc3"
        },
        "item": {
          "id": "ddbe3ddd-c556-4166-95b5-c532ba4244d6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "da78a425-7b05-48ce-b8dc-0640dd725f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9732acb4-95ad-46e5-9e96-02b342851239",
        "cursor": {
          "ref": "cd2e710a-140f-4735-9f31-4e86e8f30897",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d3306596-e469-4f21-ab58-29c5d502dd52"
        },
        "item": {
          "id": "9732acb4-95ad-46e5-9e96-02b342851239",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d0c7ca8a-ab38-405b-8778-5a47a3ade82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b1c274-4990-432f-9c8c-f46d007a3980",
        "cursor": {
          "ref": "967b208f-8242-4eff-a4e1-5c552ce04e20",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "881acf4d-e7af-4af2-b181-543c6dae37d8"
        },
        "item": {
          "id": "32b1c274-4990-432f-9c8c-f46d007a3980",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e496d98d-97c0-42f1-b085-64eae6ecfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42afc4ad-b9ee-4dcf-9465-847d36d14f60",
        "cursor": {
          "ref": "7980dc30-fa98-423b-898a-c961bd00ae35",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ba90f62c-9e69-466e-bdf3-89720bc3ea4b"
        },
        "item": {
          "id": "42afc4ad-b9ee-4dcf-9465-847d36d14f60",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d83dd005-aded-476c-8846-462c359e4dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c324f18-611e-46de-8e05-bf10ce72c3a3",
        "cursor": {
          "ref": "12a12fbc-2754-455c-9562-87aba9ed3497",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "04144fe2-2251-49da-87c6-3c3fa67663b7"
        },
        "item": {
          "id": "4c324f18-611e-46de-8e05-bf10ce72c3a3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d9e3be84-50eb-4e46-bf87-b1248a36da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d2950-a06e-4ad4-9eb2-86234378585b",
        "cursor": {
          "ref": "fb4fd079-c4ff-46ad-8945-b7ac495749a2",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8d59f43-e39e-4923-ae8c-c0c84f8e4b8e"
        },
        "item": {
          "id": "ac3d2950-a06e-4ad4-9eb2-86234378585b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3780abb9-ba29-4dfb-9b9f-f467ef06caac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d6c909-e7d1-4953-8f2c-b39b7a3fc12f",
        "cursor": {
          "ref": "ef88dca8-0285-474d-8215-40d15ccb1fb2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e9c5f93-faf9-43c1-8134-7076ca219308"
        },
        "item": {
          "id": "90d6c909-e7d1-4953-8f2c-b39b7a3fc12f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ccc527e3-9178-4778-8294-e3ad0ca65c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74a511e-5167-461b-a31e-54e6efb56cee",
        "cursor": {
          "ref": "87ed2348-487c-4d3d-a04e-45f1933cd0eb",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "df9e194d-7ff2-4fbc-a881-6ee9cd504dd0"
        },
        "item": {
          "id": "e74a511e-5167-461b-a31e-54e6efb56cee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "30d3b8b6-36db-4ee6-8307-705cb5cf988a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46404ce-f5f0-4e87-a85f-79c1697e3e5a",
        "cursor": {
          "ref": "3357aa77-c5c7-4f05-93be-e90a9ce87d16",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "08e3564f-0922-4bb9-9324-ae511ccd7b3d"
        },
        "item": {
          "id": "b46404ce-f5f0-4e87-a85f-79c1697e3e5a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "066fac60-ce57-4f2a-89ea-a67e25277049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed49319-b4d5-400e-b743-8ea825a59146",
        "cursor": {
          "ref": "1cc1ad84-619a-463f-9519-49295b4baf04",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4351d7fc-c807-4ac7-aa1f-2efab15f8ef1"
        },
        "item": {
          "id": "4ed49319-b4d5-400e-b743-8ea825a59146",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c81470d9-cea8-4a84-8797-c3eb092d7666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2d6d87-2f0d-4d1c-9dbe-c3d0c323a26f",
        "cursor": {
          "ref": "86d915e6-2949-407a-a834-e0e0c1cb1e23",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "20b09189-c228-4d75-bf9f-7fb83d7f4e96"
        },
        "item": {
          "id": "db2d6d87-2f0d-4d1c-9dbe-c3d0c323a26f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b5d28983-6603-45ea-807e-a4879047d035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc10210-a08a-418a-bcc7-8c7eb6dccb16",
        "cursor": {
          "ref": "0b86f10b-9f2d-4526-a483-b6081e9710d5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9971fd08-9327-45f1-8c2d-0291c89559ed"
        },
        "item": {
          "id": "0fc10210-a08a-418a-bcc7-8c7eb6dccb16",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2707c125-8b52-47f7-97a5-f3943ecb17e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374c98c-9208-42a1-828b-5a87c6c245e0",
        "cursor": {
          "ref": "20e97bee-49fa-475e-b33e-9d5f9736e279",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee74e57e-d77e-4f43-99fd-2bb07af1e029"
        },
        "item": {
          "id": "9374c98c-9208-42a1-828b-5a87c6c245e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6bffcfc7-932f-45cd-99b3-2885f322ec2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de0f367-e1ee-4c03-b330-9aa68c936a45",
        "cursor": {
          "ref": "bb81f9d8-c421-4555-a883-f530a6ba59b3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "df001236-8fe6-48e0-a80f-0d6e69eb8b09"
        },
        "item": {
          "id": "9de0f367-e1ee-4c03-b330-9aa68c936a45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "276da917-8ea0-4798-bb35-7a246fc5846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ffd41b-5492-4ebc-baae-f0e835f418e1",
        "cursor": {
          "ref": "7d5b1be4-3c65-495d-9987-78aeffe85758",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "74ba921b-1854-40c4-bc7d-11527b7e58b6"
        },
        "item": {
          "id": "f1ffd41b-5492-4ebc-baae-f0e835f418e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fcc4632c-429c-4c82-a1d5-d3a4920f569b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f4cd2e-f26f-4a3a-ac13-bb82ca819066",
        "cursor": {
          "ref": "63634d63-cdb6-49bd-adae-81455897eda6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3f2b1de9-a5bf-40f5-b150-ce86b0537b32"
        },
        "item": {
          "id": "50f4cd2e-f26f-4a3a-ac13-bb82ca819066",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "78bbcc77-b036-4953-9bc3-5a3f9504a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b643f850-679f-4c6b-a521-f7c761f4b0b1",
        "cursor": {
          "ref": "7f1ede99-8d56-4bdd-ae99-9a924fd84b1f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4ac2d4a9-a451-4ddc-8a0b-3e21b03a06a9"
        },
        "item": {
          "id": "b643f850-679f-4c6b-a521-f7c761f4b0b1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "675aee5e-c2ab-44e6-9fd5-328dca1340ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdf253c-5619-4b06-8f76-887198f94937",
        "cursor": {
          "ref": "c29ae891-2771-4853-8148-67f1682b8f3d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4e45180a-9f7c-4123-98de-1dbf3f167258"
        },
        "item": {
          "id": "1fdf253c-5619-4b06-8f76-887198f94937",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cd76d2cf-8709-449e-a44c-5e0c123f1486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f6afe4-9124-4322-a418-56e9cc471cc3",
        "cursor": {
          "ref": "87377b2f-e505-48f7-9564-d9d9a3ba9136",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e666ff59-5a0d-4353-9e37-d64e05fa5675"
        },
        "item": {
          "id": "97f6afe4-9124-4322-a418-56e9cc471cc3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6d55f454-b415-4b71-acef-90771dfaaefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746cf0e7-cd37-4271-b6d1-b4bb72a9d007",
        "cursor": {
          "ref": "3b13a92e-dd0b-4f21-ab86-3f693e21f5f8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "77255a7a-7400-4ede-b751-938b79f2e88f"
        },
        "item": {
          "id": "746cf0e7-cd37-4271-b6d1-b4bb72a9d007",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e4b659e9-a5b5-43fb-adfb-f858d4060ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ae4fa7-837f-4142-9b46-ada4e334e698",
        "cursor": {
          "ref": "915015a0-d850-4731-8ba2-3e916c578144",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96b48558-bce7-4493-8da0-24934d5974bc"
        },
        "item": {
          "id": "65ae4fa7-837f-4142-9b46-ada4e334e698",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "80cffeac-cda5-482b-a02e-0d4445fc3d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566c3cf8-ac13-4ba8-b88b-9d0345b5d011",
        "cursor": {
          "ref": "17b041d2-052f-4270-ba23-3a762845b44e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aac9dc79-aa51-4aa6-848f-16b113cfd520"
        },
        "item": {
          "id": "566c3cf8-ac13-4ba8-b88b-9d0345b5d011",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "32845be7-8c20-4457-8ad9-0c378df5da7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafa8c89-c903-4f55-bd6e-77c1c44dca66",
        "cursor": {
          "ref": "f3219924-0467-4233-bed2-6e3be623b104",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3ddbc346-cf67-4879-8065-c3d8352285ec"
        },
        "item": {
          "id": "eafa8c89-c903-4f55-bd6e-77c1c44dca66",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2565ba87-52c9-4263-83cb-3976bf954a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51cc7b6-56ef-41c4-8fee-d937ec9b4caa",
        "cursor": {
          "ref": "7c09718c-f003-4577-bf5c-4893eb0832f6",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a116b3f4-4c8c-4a13-9473-36bee9399aec"
        },
        "item": {
          "id": "c51cc7b6-56ef-41c4-8fee-d937ec9b4caa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f3ae50c0-5861-4137-a808-b34b7a8bf924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cef130-1a76-4369-8444-ceb102e58fbd",
        "cursor": {
          "ref": "912746a1-490f-48d4-9424-e30cd2dbe79b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "32901a8b-7f9d-46f6-a5dc-2accb43673d9"
        },
        "item": {
          "id": "72cef130-1a76-4369-8444-ceb102e58fbd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e307760b-3d17-476a-8ea2-149be16520ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b2bd9b-ce98-4203-9a7c-8f28a34155b4",
        "cursor": {
          "ref": "ab97eaa1-0606-47e5-bcd7-f16ce587bb5d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0d488ef5-4bcb-4722-8da5-4beb90c89b26"
        },
        "item": {
          "id": "14b2bd9b-ce98-4203-9a7c-8f28a34155b4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6131aa71-3e95-4377-ac20-aab271e27f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c154e2aa-e5a3-4d89-99bb-5f6e9a704f10",
        "cursor": {
          "ref": "84d313e3-9115-4c60-87f6-c2d4d5d4e9bc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "04e686f3-9f53-40d5-acd1-d5d90462f8e6"
        },
        "item": {
          "id": "c154e2aa-e5a3-4d89-99bb-5f6e9a704f10",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c51ffba4-a671-4900-bbc9-99c262446442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa764b4-1fcc-41bd-92c1-67ccd850aad0",
        "cursor": {
          "ref": "15aea1b6-2580-4fd6-8c76-7db41372cfb0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d04d4345-cbaf-4ef3-829f-b82c1de83dc6"
        },
        "item": {
          "id": "5fa764b4-1fcc-41bd-92c1-67ccd850aad0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ef65392f-ce75-455e-af6f-ba3c1319051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a3df60-03db-4c83-80ff-b0a029583d5c",
        "cursor": {
          "ref": "0dad6bc3-084f-4954-9f04-888a0254d658",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c236e9bb-c728-4ef1-a76d-dbf6585d5b6f"
        },
        "item": {
          "id": "10a3df60-03db-4c83-80ff-b0a029583d5c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a479eb7d-e3b3-4478-a8cb-85c2c080a993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb0221e-f1b6-4af6-835d-e23159c40051",
        "cursor": {
          "ref": "cd7eeefa-4c66-4b5c-95f7-0b8e271c2c2e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0a045820-7009-4cfe-b32b-cf0ce5b7b7ca"
        },
        "item": {
          "id": "fbb0221e-f1b6-4af6-835d-e23159c40051",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2f4af924-a5e2-4a63-8b87-c3b4448f9a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8665512-92a8-4516-a85b-044e678800eb",
        "cursor": {
          "ref": "66f2fb91-df73-446d-81d6-50ebe88febd2",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eafa0479-58d2-414e-bf5e-7bb429381049"
        },
        "item": {
          "id": "d8665512-92a8-4516-a85b-044e678800eb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ac21e3b-2d05-4814-a56b-f7734c97c30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444b1102-02cc-42f2-92a9-b65f4fe63910",
        "cursor": {
          "ref": "8a9bcdfa-4f60-4326-8e25-2f76c0187416",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "827894d6-42ca-42af-809f-6674ee86ec30"
        },
        "item": {
          "id": "444b1102-02cc-42f2-92a9-b65f4fe63910",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3953c782-f443-472f-a308-e5e553254b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e8bd8e-7a0a-4d72-8215-c485dfc497e1",
        "cursor": {
          "ref": "bfca8f2c-1658-49f6-9a3e-454da0351b5e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ddd3871-120e-4f08-b543-1751f45b999f"
        },
        "item": {
          "id": "75e8bd8e-7a0a-4d72-8215-c485dfc497e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9cfe3b5b-4878-4c70-b6a9-7a959b4c40ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e29ca02-9958-40bc-89b9-48f8fbcfb825",
        "cursor": {
          "ref": "a0e73ee4-4dbd-41cd-9e83-700daa9eb404",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b468ac07-10bd-4d96-b384-13fd25557d2e"
        },
        "item": {
          "id": "0e29ca02-9958-40bc-89b9-48f8fbcfb825",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "753af8e2-ad79-43c7-8b89-ee8cacebf11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62518872-c4be-48ea-b892-9b9f107d556c",
        "cursor": {
          "ref": "f84d08fa-21c0-4373-b642-fa645f02059d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "78481c19-17f9-4139-a87e-1fd94060a23f"
        },
        "item": {
          "id": "62518872-c4be-48ea-b892-9b9f107d556c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d78d504b-86e1-4c1d-90b0-878085fef345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a363544-368a-4786-af4a-496fe3fb0236",
        "cursor": {
          "ref": "61ec1d49-4b62-447a-ac25-ee3ad2476a3f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e76870f5-d936-494f-ac5d-6950ff3646b0"
        },
        "item": {
          "id": "8a363544-368a-4786-af4a-496fe3fb0236",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2092d759-21fb-40a3-8364-ce921c4b0607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d4e86-44b5-4af8-aad6-5d6b76a926a2",
        "cursor": {
          "ref": "54e58f36-ea5c-4cbe-aadd-92132ef6b366",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "87af5e98-4cdf-4262-8db4-31fcd0ea4216"
        },
        "item": {
          "id": "fe3d4e86-44b5-4af8-aad6-5d6b76a926a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6b117eac-fe40-45ef-bcec-62e99c272211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbb450f-cbb2-4fda-ab62-c46584f10cdb",
        "cursor": {
          "ref": "b681eca0-fdfc-48f8-8b90-c96ec7b9f01a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e4141df-e2de-4ec8-898f-ebe57de65163"
        },
        "item": {
          "id": "4dbb450f-cbb2-4fda-ab62-c46584f10cdb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "222ac5d5-0011-41ef-a2c0-2a5869a74130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a009b7f-1bf1-4c81-9b0b-2f961478777a",
        "cursor": {
          "ref": "48bcb81c-a25e-4718-a45a-58ad8ee06219",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b061aef9-4c5a-4df8-8947-ff28dd7f6d5b"
        },
        "item": {
          "id": "7a009b7f-1bf1-4c81-9b0b-2f961478777a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cdb9d12b-01fc-4724-a49a-b0d12009a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67c9c51-8418-43ad-87d2-40da944e8e43",
        "cursor": {
          "ref": "79330aca-8402-4d20-9372-2659928d3b32",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "413766a7-85be-435d-8cd7-5f8997868001"
        },
        "item": {
          "id": "a67c9c51-8418-43ad-87d2-40da944e8e43",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8424abb7-9547-4c47-b9c4-ebf43ff11364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5858bd5f-96d2-4585-85b8-7593594ec02e",
        "cursor": {
          "ref": "b4268500-c7b4-4e0e-bd0d-dbb74b4ace10",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "58a3f725-cfbd-48e4-8545-42025f02104f"
        },
        "item": {
          "id": "5858bd5f-96d2-4585-85b8-7593594ec02e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e50ad9ea-5126-4c84-986c-92b1f252f2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c934d00e-2134-44d5-b7f0-56b6658f63e2",
        "cursor": {
          "ref": "2f09ebc9-898d-4c98-98c4-0e5fde853b00",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "def5ab2a-5296-4d86-9fd6-8599a4ddef4c"
        },
        "item": {
          "id": "c934d00e-2134-44d5-b7f0-56b6658f63e2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1df46414-c611-4311-b1e0-5b25353c3214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbdb525-5abc-42af-bd05-e40fba501769",
        "cursor": {
          "ref": "8c35aba1-41c1-4535-a6dc-65ae66ccb7e4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8fbc0bdf-d4c7-433f-b874-06898d18e848"
        },
        "item": {
          "id": "bcbdb525-5abc-42af-bd05-e40fba501769",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ad143ccc-1190-4dac-ab1a-3ba6b071f89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11123f94-28a3-4e65-a9f6-ed9a7a9533ff",
        "cursor": {
          "ref": "0ea65683-dd40-4aa4-bf75-1f5f67aba6b7",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "195a914f-970b-4325-8780-802770f70fe0"
        },
        "item": {
          "id": "11123f94-28a3-4e65-a9f6-ed9a7a9533ff",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c446880b-e737-490d-8be7-c471a469751b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e54f5ee-9fc1-46ec-87bd-6d85adf0b405",
        "cursor": {
          "ref": "5ffc93b6-921c-4b2d-b141-86f5c89a5664",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2157e857-bf16-46f5-b9fe-2f06b3bc38bd"
        },
        "item": {
          "id": "8e54f5ee-9fc1-46ec-87bd-6d85adf0b405",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9f564518-502f-47a8-920d-4293affab8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e82b2b-c2d4-4569-9cf5-50e797132ac3",
        "cursor": {
          "ref": "627a869f-7dd1-413d-9c04-7f7a8cbfbe35",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aa514900-dc26-4828-b2a6-cd73642348a3"
        },
        "item": {
          "id": "67e82b2b-c2d4-4569-9cf5-50e797132ac3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5cd7ad50-204e-4d76-ba1a-4e6daf3a8895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9c8688-2cfb-4bf7-be70-bfa0d485ec47",
        "cursor": {
          "ref": "3edccc8f-20a4-4f42-93a2-bac2fedad581",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a2701ada-9de5-4898-986d-068561bf8071"
        },
        "item": {
          "id": "8e9c8688-2cfb-4bf7-be70-bfa0d485ec47",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bb5c14d7-30bd-429c-a255-f633b7e45a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100dd741-4c8f-4ec8-9bd1-80ef4e813a83",
        "cursor": {
          "ref": "6d94ecff-0548-478f-a749-335eb6fad4ad",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "14bc2f84-017b-4d59-a4bf-c9a3cde896cd"
        },
        "item": {
          "id": "100dd741-4c8f-4ec8-9bd1-80ef4e813a83",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "28c96f16-96b0-4172-ad4d-823c3ed22b59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710786a4-dcf8-4998-9e49-1507e3542ce0",
        "cursor": {
          "ref": "6bd11d78-7d6d-4b54-85b9-34634813d550",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c7386f75-f3ac-49a8-8359-65a066357f2e"
        },
        "item": {
          "id": "710786a4-dcf8-4998-9e49-1507e3542ce0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d63ef7d6-d52e-495f-8dbe-51ee2e7ae398",
          "status": "Created",
          "code": 201,
          "responseTime": 106,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "43878274-93a3-4352-8d7c-6f49f3cd9c04",
        "cursor": {
          "ref": "4f5d5dd0-a945-49cb-bdc1-104f20e68020",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aa7d1d57-8d27-4a37-9c68-3259367772c6"
        },
        "item": {
          "id": "43878274-93a3-4352-8d7c-6f49f3cd9c04",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f7b13e47-c22d-43d9-b8ca-c659ebf8ba71",
          "status": "Created",
          "code": 201,
          "responseTime": 374,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccd1ae2-2295-4021-a472-5f9994f65f19",
        "cursor": {
          "ref": "257ef798-385a-4dd8-b7a7-6c17ee268cf8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "335bd02c-4736-4b51-8f7f-96e9dfe24f05"
        },
        "item": {
          "id": "6ccd1ae2-2295-4021-a472-5f9994f65f19",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cae436d5-ec68-4392-8e2a-0c8f0245dbba",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc28e13c-16fa-4bef-97bb-776db445e1cb",
        "cursor": {
          "ref": "ea023c03-3cc1-4868-8be4-fa88d47e9339",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f8c54e6-40d8-4a87-a995-7d63426a596f"
        },
        "item": {
          "id": "dc28e13c-16fa-4bef-97bb-776db445e1cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d0144d0a-4523-4fa6-8d29-dc310f5068f2",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b78f9ea-e53d-47ed-b3ff-9435f4da280c",
        "cursor": {
          "ref": "3751ac5b-dae9-4103-b4de-3dd8e29f7184",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2fc897f4-4921-4745-b97e-2dd731c1caa4"
        },
        "item": {
          "id": "7b78f9ea-e53d-47ed-b3ff-9435f4da280c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2b0e2672-bf0c-4ea0-b64c-6fc6007ed31f",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5963ede-bc90-48e8-ae18-e0b50291f7a8",
        "cursor": {
          "ref": "13d2d1ce-a393-4a0f-b86e-a73c8957db33",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "05b64bbd-a3cc-4d85-83bb-c173c9e0902b"
        },
        "item": {
          "id": "a5963ede-bc90-48e8-ae18-e0b50291f7a8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4f0e3787-f051-4c04-a997-0cdbd73d3bd5",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad608c92-7595-4883-a5ef-ae335af21c89",
        "cursor": {
          "ref": "16c3c9fc-b235-4e81-b67b-925950a1e9c3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7875e402-a46e-4de8-b4dc-922d6b2a5a4e"
        },
        "item": {
          "id": "ad608c92-7595-4883-a5ef-ae335af21c89",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "13a7a267-664a-41e5-ac23-4fe7561aaac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6232f91-0fe4-49a7-b7a0-c4a559fa8a0f",
        "cursor": {
          "ref": "ff12ebbc-6402-4d93-97a1-5f42773c2d77",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2b12bd46-b882-4f4b-9cf8-e118894821e1"
        },
        "item": {
          "id": "d6232f91-0fe4-49a7-b7a0-c4a559fa8a0f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ef57340-9835-4781-97d1-38a2d0db1237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed60ac1-0f95-47d9-a384-dce66348c48f",
        "cursor": {
          "ref": "ee3a7397-0ef8-4422-a56c-e8bbc4db00ce",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80023f18-06e6-4293-b84e-5bfa1f757c2d"
        },
        "item": {
          "id": "0ed60ac1-0f95-47d9-a384-dce66348c48f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "283b6e93-171c-463a-a379-811789c87fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ee8b03-a3c2-40b3-a880-d205e91fa47d",
        "cursor": {
          "ref": "657e02a3-ed8f-43d4-b85d-2658a057624f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e2342dfa-3649-408c-b52f-356b4126455b"
        },
        "item": {
          "id": "19ee8b03-a3c2-40b3-a880-d205e91fa47d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "36c1f5f3-6baa-43e7-866d-8ebed12966e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e42177-d7de-43e8-8989-00652c0876bf",
        "cursor": {
          "ref": "b818efd3-3b32-427f-9933-94b0d542b1df",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "781330ae-85fa-4abf-8b3b-383ca10d9d4e"
        },
        "item": {
          "id": "42e42177-d7de-43e8-8989-00652c0876bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5556c7bb-945e-4a1a-9076-a59e489f772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a055ee0a-cce9-4f0c-a43a-305684276905",
        "cursor": {
          "ref": "71f71b94-00e3-4bfd-97b2-69cb8dc4e2b1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4b3380d5-18e0-42fd-ab73-de66a58a0ec4"
        },
        "item": {
          "id": "a055ee0a-cce9-4f0c-a43a-305684276905",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3ef9c42c-9ce2-4fb9-b9f4-b8299cefc144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1cb575-bfc1-4cc5-b7c1-062ee10bcf12",
        "cursor": {
          "ref": "49f838db-2310-4435-99f6-ef1c8682db5f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5894a39f-52bc-4150-9e41-4ce392d2331f"
        },
        "item": {
          "id": "4f1cb575-bfc1-4cc5-b7c1-062ee10bcf12",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c26a47bc-5e4f-4984-9994-7e2804dc92cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5203a04-4cc4-4efe-a617-bf1b7aa33d90",
        "cursor": {
          "ref": "f968389a-a991-4d9a-b4f8-2716c30a12b0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "32e5cc38-ac16-4269-b009-87d640270228"
        },
        "item": {
          "id": "c5203a04-4cc4-4efe-a617-bf1b7aa33d90",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "adff132b-bf2f-454f-a775-7b1bb8587553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074c497d-79e4-4680-bab7-63a6d08148d5",
        "cursor": {
          "ref": "417b0856-7cad-42d1-a88c-d45db7ba11a9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "44cee959-5cac-45ef-ac9d-8487c6a02763"
        },
        "item": {
          "id": "074c497d-79e4-4680-bab7-63a6d08148d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f03b5cbe-b209-4aae-962b-76cfa8ce3a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf3d945-7789-4b20-9a88-ee1411705b10",
        "cursor": {
          "ref": "7a6ab372-7e47-484c-9fc8-ef82788c1c48",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5a15b0ee-20cc-4d6d-aa7d-a5cc1e0ec8e9"
        },
        "item": {
          "id": "edf3d945-7789-4b20-9a88-ee1411705b10",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c636dc9e-8e5a-4e9e-9d9e-11a430929440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6e82c-584e-4cac-b9c4-527646428e6a",
        "cursor": {
          "ref": "8fbd7ca9-5147-47d1-9baa-67ea6125907b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3efa7e42-353d-4977-b357-146f80441c0a"
        },
        "item": {
          "id": "06e6e82c-584e-4cac-b9c4-527646428e6a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7568d46d-12d4-4ad9-ab11-304ef48b3e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f1b03-6d2c-4f03-aad2-4641a8513972",
        "cursor": {
          "ref": "4fd07b2d-dcac-466e-ba6a-c55bd60f035e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0008a587-ad23-4c03-a004-7f7a958d8ec4"
        },
        "item": {
          "id": "534f1b03-6d2c-4f03-aad2-4641a8513972",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "39b13817-4359-4cf3-ad4f-66217be60f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da17c57-76ce-47ac-a99b-3eb6ff67f55a",
        "cursor": {
          "ref": "9eb8d926-fe7d-4e28-b120-0ad0e8b02516",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e1119b90-d576-43ad-aa6f-3dc8f5b6dda6"
        },
        "item": {
          "id": "5da17c57-76ce-47ac-a99b-3eb6ff67f55a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ff74a34-7611-4def-a6b8-3e0e6a30aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaccc6d-32ad-4152-a600-0b18005f0269",
        "cursor": {
          "ref": "8c8b2dfc-c4f6-4f18-a307-48fb281763e8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ece7868e-c340-4434-aa2d-83ed3f86065f"
        },
        "item": {
          "id": "aaaccc6d-32ad-4152-a600-0b18005f0269",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6c6ba9d-6599-4ce9-9f9f-18565aecccc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a397815-4670-4178-8b66-075a0ec97b03",
        "cursor": {
          "ref": "e7c0e632-6f19-46c1-b07a-c98ba97baea5",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "96e2ca91-e352-4faa-af33-a9b468252074"
        },
        "item": {
          "id": "8a397815-4670-4178-8b66-075a0ec97b03",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1d052d53-5e2f-4c76-aa0a-ceff34ee77ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace514ef-240f-4139-b3e6-a2a905091eab",
        "cursor": {
          "ref": "4f93910e-fa6a-490a-be39-2db24b40a080",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "09797185-d298-4adf-8069-5f6980621600"
        },
        "item": {
          "id": "ace514ef-240f-4139-b3e6-a2a905091eab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "77fee93d-e8da-4398-8c1d-b17fa975eab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525eae11-be5f-4d24-b94f-4877e65a88f6",
        "cursor": {
          "ref": "5fb69bc4-64ac-4be5-a6ea-eb3a8f02910f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "57ef118b-9252-40d1-8117-7ee4009471fb"
        },
        "item": {
          "id": "525eae11-be5f-4d24-b94f-4877e65a88f6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7d0b7700-8b56-478f-9e27-979024685d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b21c01-a390-4d49-ad2b-8b779dcdb479",
        "cursor": {
          "ref": "699d83bb-ff74-4b45-88cb-7208127f36b4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e316853d-7d3f-4078-9450-3525c4f808cc"
        },
        "item": {
          "id": "19b21c01-a390-4d49-ad2b-8b779dcdb479",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1d0e2834-cdf4-44b8-a900-8176c7003679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a143fd-67f6-49f0-87cd-5005e879909d",
        "cursor": {
          "ref": "adaf5e87-2f1c-4260-8238-d0d0b1b53fd2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1c06f97a-ad65-4eb1-92ff-964c57a1cffe"
        },
        "item": {
          "id": "70a143fd-67f6-49f0-87cd-5005e879909d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d66e3c2f-2334-4c7c-8089-6844d0ff5ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e54b051-b5b5-4399-86e5-0caba2375c57",
        "cursor": {
          "ref": "084d4cee-cc44-44ef-9b29-276f631789dc",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9f64b985-6358-48ec-b76f-f52c81c33139"
        },
        "item": {
          "id": "4e54b051-b5b5-4399-86e5-0caba2375c57",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "29793eb2-9282-44e9-8027-448d85ee2ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab58aa9-4c83-44c7-b8ba-ac4f57b1b34b",
        "cursor": {
          "ref": "87b78c67-5f1f-420d-ac06-949ac5c9baa7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "964ef5b3-e743-4ff7-9b0d-aed58043d1bf"
        },
        "item": {
          "id": "dab58aa9-4c83-44c7-b8ba-ac4f57b1b34b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e9dc0c58-955f-4a00-bd99-def733c325de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343760b2-4708-49f4-87cd-466a46b5a5e9",
        "cursor": {
          "ref": "82f2a3cf-ca93-4b83-9d97-83cd8228e120",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a70ab882-6c83-4d8c-9bce-49fbdd3fc6d6"
        },
        "item": {
          "id": "343760b2-4708-49f4-87cd-466a46b5a5e9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a82f9305-9889-4952-85e9-e109cddb9e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac78ba2-aa95-45bf-8b5a-531ea414afbb",
        "cursor": {
          "ref": "be148002-c7db-4101-b5bd-5fa6ea5f1e80",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "436c65ee-fb43-4182-9cf0-af44bd2eb789"
        },
        "item": {
          "id": "6ac78ba2-aa95-45bf-8b5a-531ea414afbb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "71a14fe2-8e15-4767-926a-ad1d945edf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034f78d4-af83-45ab-b697-101c93f4a68c",
        "cursor": {
          "ref": "9bd33405-6690-4c23-85b0-f996d7bbc852",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "419d9470-4cff-40b4-9a93-51d37949abda"
        },
        "item": {
          "id": "034f78d4-af83-45ab-b697-101c93f4a68c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eb150b66-3194-4f55-9c46-4ecbe068ecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1222ef-f62f-43e5-a07d-ccd6608e6e1f",
        "cursor": {
          "ref": "63e0db8d-167a-4dd9-a495-6dae8fe3cf4e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "45ae3f08-381b-48c3-8b15-21c0d456f3ea"
        },
        "item": {
          "id": "ea1222ef-f62f-43e5-a07d-ccd6608e6e1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "12bc33d6-e709-45f0-9f01-dca675b8048e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39168cd1-1570-4c20-a015-6e2b335c19fd",
        "cursor": {
          "ref": "5e7f58bb-c501-4824-878a-85ff3040d725",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5707c789-27b1-4770-bd29-c3c31cbbf31a"
        },
        "item": {
          "id": "39168cd1-1570-4c20-a015-6e2b335c19fd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4a07708e-ff98-4b15-800e-e2ac8cf8e6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadbc3d3-9314-4131-9111-767741c7b1c4",
        "cursor": {
          "ref": "50f1faf2-3926-4d12-ab1b-640e30eaf2dd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d324264e-46b1-41c9-b592-454be20b3eff"
        },
        "item": {
          "id": "fadbc3d3-9314-4131-9111-767741c7b1c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "671c0e46-881d-475c-8f6a-dc13cc2e108c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4413ede2-7718-4abb-9a7d-bf543016b731",
        "cursor": {
          "ref": "95da92f2-4d4f-443f-bdad-3058f65a7485",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3243c2dd-c9bf-4904-bf6a-75b292ff52ab"
        },
        "item": {
          "id": "4413ede2-7718-4abb-9a7d-bf543016b731",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7907237f-799a-4894-9c88-ba67936484a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dad8710-e5bc-4604-8f2b-79b220000a6d",
        "cursor": {
          "ref": "36bfd1b7-5cb7-44de-b882-aa81ff60428f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ba950b5c-ecc9-4c9b-bdb1-7d5a111ea569"
        },
        "item": {
          "id": "2dad8710-e5bc-4604-8f2b-79b220000a6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ebda2404-ae32-4bc0-9123-ba9701130179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8ec89-6869-4c7a-ade7-c4981148a6f5",
        "cursor": {
          "ref": "97d0845a-e432-4591-927d-134e8f400d01",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c9621b9a-986a-4706-8181-1c9102f8505b"
        },
        "item": {
          "id": "97a8ec89-6869-4c7a-ade7-c4981148a6f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8d93e72-3e98-4db1-9f0d-c02978adadd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3117d3b-ea34-47d8-a817-afabc4044587",
        "cursor": {
          "ref": "22bcd6ed-dbb3-4a35-882a-bcde6e8e6eb3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e29c4693-8882-4ba2-b530-9e14b03a721e"
        },
        "item": {
          "id": "e3117d3b-ea34-47d8-a817-afabc4044587",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e51b432-2dd4-4dec-93c2-2b480dff9837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e688d2-f7ec-4739-9358-3ab0035f8956",
        "cursor": {
          "ref": "be009de0-34c2-4cd7-87e8-631797b5e131",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "36876d83-eb97-4dbf-8625-6eaa587b12e5"
        },
        "item": {
          "id": "29e688d2-f7ec-4739-9358-3ab0035f8956",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a4d63d16-1e19-4fd9-9c7d-4c78be36169e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce2f6cf-d445-4da8-8faf-2dc218c9493e",
        "cursor": {
          "ref": "f1153bb1-fc77-41a8-984c-8c7425b85832",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "60ffa00b-d4bf-4564-815d-fab10a2ae716"
        },
        "item": {
          "id": "6ce2f6cf-d445-4da8-8faf-2dc218c9493e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "768caaed-c9fe-4a94-bafa-d19841f6b427",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1472d2-8574-411b-9b13-939a6c8a7be8",
        "cursor": {
          "ref": "d5bc2578-a7a4-4f10-b3dc-10ac11d15b49",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "147f61a0-e970-453a-8a0c-1cc553de28c7"
        },
        "item": {
          "id": "1b1472d2-8574-411b-9b13-939a6c8a7be8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f139b22c-f30c-49fd-8fce-13fcadb3db33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feff49f9-34a3-4ddd-ba81-34f66a38508a",
        "cursor": {
          "ref": "ef0d6508-f67d-40d4-a08f-e5e95aa59d01",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b22e4829-87aa-4817-974a-b8878fa53920"
        },
        "item": {
          "id": "feff49f9-34a3-4ddd-ba81-34f66a38508a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ae797802-0a88-4e56-a99e-9a66bda3c772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb41a8-0421-4a1a-badb-867d814a1a6c",
        "cursor": {
          "ref": "b162e29a-5d50-46de-a893-68f0dfce4d7b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fa9613b3-8e69-4eda-8b24-edf4f44c90e9"
        },
        "item": {
          "id": "ebcb41a8-0421-4a1a-badb-867d814a1a6c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c746536f-f4f3-437a-9747-bcf4bce9d910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f9a0d-8bf9-44a6-a735-521ee6478e1d",
        "cursor": {
          "ref": "90bb364c-e7f9-4681-abe1-4dc8980e4d70",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02606ec1-1ea6-48e4-b38f-686e1e91481f"
        },
        "item": {
          "id": "439f9a0d-8bf9-44a6-a735-521ee6478e1d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c4657511-6af3-43f7-9985-cc0780381154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a2b2d7-61a6-45db-8af7-40c3ed50793c",
        "cursor": {
          "ref": "049be221-64fa-453d-ae50-24ed0826d123",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ce6e6064-9f3e-487d-90d7-be3ee1246613"
        },
        "item": {
          "id": "c9a2b2d7-61a6-45db-8af7-40c3ed50793c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68e5e59b-9969-4784-8ebc-794644f4d198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c0a18c-20f8-4f96-a3dc-45ed26aea6c8",
        "cursor": {
          "ref": "32306f92-8edd-49f2-880e-b056692e9019",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1545b26b-9fd5-4e92-88f4-1407ae783871"
        },
        "item": {
          "id": "67c0a18c-20f8-4f96-a3dc-45ed26aea6c8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eb6c6b58-f2a2-441e-bf7f-3d95e4614608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca1ef54-3da4-4bb1-8f47-e559c424c8e1",
        "cursor": {
          "ref": "08a5b696-65c4-4b25-9f38-d4c485c0cdc8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c11e2ab0-ec9e-4c86-a46b-f200170b7e64"
        },
        "item": {
          "id": "8ca1ef54-3da4-4bb1-8f47-e559c424c8e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6da1e81c-0371-4415-b961-cdc7063d0fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b59594-53fd-4812-bee3-1f494a873a80",
        "cursor": {
          "ref": "164442e8-f88d-4038-bfff-2d3c63ed4427",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8fe3f4c5-af86-4c34-b4fe-feb9190bfc5b"
        },
        "item": {
          "id": "b0b59594-53fd-4812-bee3-1f494a873a80",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aebe8c71-f9db-406b-b994-4a9e1701a79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8c4db5-920e-49e7-87b0-fbbc890fa40a",
        "cursor": {
          "ref": "88537e71-1b2d-49d0-b0df-c26cb8242912",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e5186e7-e305-4cdc-9a41-83fa897b99e6"
        },
        "item": {
          "id": "cb8c4db5-920e-49e7-87b0-fbbc890fa40a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0cdefd27-ba1c-4327-a0a2-8c18124be5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead4eea6-3ac7-4082-8ac3-c870a8bb8522",
        "cursor": {
          "ref": "2e633645-c5c7-4852-8318-7aef5db51adc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f9c1a4bd-fa8a-4b40-b20f-99ad6753c7a0"
        },
        "item": {
          "id": "ead4eea6-3ac7-4082-8ac3-c870a8bb8522",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f406d1e7-a3cd-4045-9df1-af457f70a04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7f3913-2b82-4118-b935-e8af219f5816",
        "cursor": {
          "ref": "4cff4998-7fb7-4e62-bb93-b927dbe38798",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f868fcb6-5eb7-42d1-830d-84cf94b1d7b3"
        },
        "item": {
          "id": "cc7f3913-2b82-4118-b935-e8af219f5816",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7218d6f7-056a-47ef-8983-d96fb18522c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162882e6-a7c5-4065-81a6-340f3a71931d",
        "cursor": {
          "ref": "1aeffbda-ea41-4b38-b643-f51541529cc7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bbba9c8d-781e-4cdf-8ac6-8ea3194e5f58"
        },
        "item": {
          "id": "162882e6-a7c5-4065-81a6-340f3a71931d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9ef2f2e5-1c11-4003-841f-7a95914394fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c637a2c0-0a45-461d-926c-4a4e3ee31c6d",
        "cursor": {
          "ref": "3361aa21-4d04-4733-bfdc-d59bc10d3341",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ddf14aa6-d25c-4c87-bbfc-2045e3787111"
        },
        "item": {
          "id": "c637a2c0-0a45-461d-926c-4a4e3ee31c6d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0c0bd51-a62c-4ee2-bbc1-138eb9c9a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6070cdd9-3586-42d1-9214-c055400cba40",
        "cursor": {
          "ref": "2d9b754b-47a7-4f55-b1f2-80950310c916",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bef8d568-fb21-498f-92de-fb7de20b74dc"
        },
        "item": {
          "id": "6070cdd9-3586-42d1-9214-c055400cba40",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e2f15fd6-8c04-443e-b4e7-0e469ffa5bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5802d8-f756-48aa-9032-4459569a1c71",
        "cursor": {
          "ref": "f0533307-3375-49ca-b8cb-04d10e6dbf0a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cf137e39-296e-46ef-9ebe-54047d89d70c"
        },
        "item": {
          "id": "9e5802d8-f756-48aa-9032-4459569a1c71",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cbdccc6a-baf5-4ab1-8da2-d099cb74ffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d9fc00-02bb-42e5-aaef-1ee44a468156",
        "cursor": {
          "ref": "18378e0f-6c0a-43d1-b533-3eec5a7ac379",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f24f4e4-b278-4d96-9fcc-3c39f6933c80"
        },
        "item": {
          "id": "b3d9fc00-02bb-42e5-aaef-1ee44a468156",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab7bf7a9-e54f-4e8e-8989-f158acea90ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550d5b29-ecdf-4cde-8c15-6d6740722f6f",
        "cursor": {
          "ref": "ef45b9ab-427f-4e0c-942a-85602006a346",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4485bdf5-d6ca-4bd5-9501-7e4711f092cf"
        },
        "item": {
          "id": "550d5b29-ecdf-4cde-8c15-6d6740722f6f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b38c13f6-bf1f-4c35-8c44-762f9536fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effb3587-f934-498f-a995-3e8ec9dc1014",
        "cursor": {
          "ref": "110a5a01-80bd-4ba0-8cd3-67dac921e68e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f20c2621-f205-4761-861c-10d0120c1b38"
        },
        "item": {
          "id": "effb3587-f934-498f-a995-3e8ec9dc1014",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d996b6f8-8e02-435c-ba62-40203870797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c5dec5-19e9-48cd-891a-7e1e4fa8fc99",
        "cursor": {
          "ref": "c5885d9c-4db2-41c5-97ad-ac9a093224bc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ed318434-e9e3-46a0-9eef-12153aa7802d"
        },
        "item": {
          "id": "77c5dec5-19e9-48cd-891a-7e1e4fa8fc99",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bf9dd4b1-633a-49e6-b599-4a305074a462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99212a21-c4fb-45c9-92bd-3abb88e669f3",
        "cursor": {
          "ref": "ea6d1223-88f7-4b2c-962c-65fe5d8c58b4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bad33500-61f5-4984-90bd-33eeea859b99"
        },
        "item": {
          "id": "99212a21-c4fb-45c9-92bd-3abb88e669f3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e75b6878-4d91-41e0-9897-26182dfc875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531c62f8-0cf7-4d3f-aade-6ba47404a4b9",
        "cursor": {
          "ref": "c5714e88-38a2-4962-aa80-9f1eb59804fe",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4f447368-3d15-4820-adb1-40a0132882a4"
        },
        "item": {
          "id": "531c62f8-0cf7-4d3f-aade-6ba47404a4b9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1993d22f-5d72-4267-a0a4-a0ff76ea21d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25587990-bea4-4cd8-957b-c609c3a4b346",
        "cursor": {
          "ref": "6613fcc7-5bc5-4578-b7eb-59b915bd4f42",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9381ac49-a7d4-45e7-995d-22d41eb1242e"
        },
        "item": {
          "id": "25587990-bea4-4cd8-957b-c609c3a4b346",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad39e552-11d3-4532-9a39-9c543514332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e3b501-d8f6-42f7-af1c-77053f133979",
        "cursor": {
          "ref": "dfad7511-5e58-429b-9a0c-4eaecad0945a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ff244de8-40a7-477c-8f59-db7a221ac775"
        },
        "item": {
          "id": "e1e3b501-d8f6-42f7-af1c-77053f133979",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6159a1a7-2498-4970-98e0-3db4392586c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bb8d49-8069-4ada-9a3b-e7bfbb312c79",
        "cursor": {
          "ref": "db0891e4-a6ba-4b06-ae5b-36c8117802e9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "49d5d5c2-1145-49c3-92b2-3724a670ce8d"
        },
        "item": {
          "id": "c9bb8d49-8069-4ada-9a3b-e7bfbb312c79",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9842d943-1ba2-4b57-bc3e-26e7d12763a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d39a13-5383-4909-bbc3-7487bea10ec6",
        "cursor": {
          "ref": "6d2e7e35-99c7-421b-aec1-cb11cfa3ae97",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7c4a8adf-10b7-45cc-8fb2-fe95a12c885f"
        },
        "item": {
          "id": "b8d39a13-5383-4909-bbc3-7487bea10ec6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ab25442-0038-40ad-a2d1-46f1e60b5c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34287804-3a0a-495d-bb80-04a9306b4c97",
        "cursor": {
          "ref": "2f57d289-d833-438b-89a3-04f5090cb9e1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c364b795-318d-4b7f-b5d4-233b3b937cc8"
        },
        "item": {
          "id": "34287804-3a0a-495d-bb80-04a9306b4c97",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "af4fecff-a0a2-42b9-aed2-4697e228d8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded7784d-1991-41c3-90fd-2f72685a0dce",
        "cursor": {
          "ref": "e9049208-c3a7-477a-81be-57228ec5f32c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "57a0fdcc-858d-4a21-82a8-2101593bcdcf"
        },
        "item": {
          "id": "ded7784d-1991-41c3-90fd-2f72685a0dce",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e757a9e8-7cd8-4d81-9b3e-d06a361e5ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d506e44b-19f9-4530-b277-8dda5aeef450",
        "cursor": {
          "ref": "44069c1c-9fd4-49e2-b440-338665b54595",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1976d50-cdd3-4365-a398-5174bfa0e7fd"
        },
        "item": {
          "id": "d506e44b-19f9-4530-b277-8dda5aeef450",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "408e05f3-8fcb-461a-83c7-e50ec7e97697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6f7534-6cc2-40f5-aa6c-04c760184bed",
        "cursor": {
          "ref": "626b96d3-610a-4764-81ef-fde526164ac7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "84c53e48-5941-42ea-9d18-abb3072d8067"
        },
        "item": {
          "id": "9f6f7534-6cc2-40f5-aa6c-04c760184bed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "94a295bc-f686-448f-b104-c5f30e762db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3236e498-020c-49c9-bfbd-e9fea54b39f6",
        "cursor": {
          "ref": "dc36722b-4afb-484d-b62c-9a81d6b04d44",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "db7330d3-884c-49d4-8418-f3631a6ea5e2"
        },
        "item": {
          "id": "3236e498-020c-49c9-bfbd-e9fea54b39f6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "73d2a26b-1d2d-490a-bf20-b74cf7907b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174c05c7-8fa3-48d7-a74c-f4de8c8b1d15",
        "cursor": {
          "ref": "b9490bbd-46b1-4157-9b85-a8fa194f619e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0e18c06d-7e79-4f7f-898c-062bcb261c3a"
        },
        "item": {
          "id": "174c05c7-8fa3-48d7-a74c-f4de8c8b1d15",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "403e0411-e6ab-42bc-b35a-51a945497684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7049c2dc-e1e5-4b0a-9aa1-a64b396648ac",
        "cursor": {
          "ref": "a9bff5e1-0cd1-4dd7-bbdf-ee2ffd15776d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b0a0550d-09c8-41f2-9525-67b18be7d8d7"
        },
        "item": {
          "id": "7049c2dc-e1e5-4b0a-9aa1-a64b396648ac",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d96f2bd6-885e-4ddc-8e41-a74d77da0701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cefeb8-15ab-49d0-9b4e-b327c4510644",
        "cursor": {
          "ref": "43cef2c6-180f-4d82-9da3-27bd5d90bb09",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2f20d521-1a63-45c8-9d19-6def2c29fe83"
        },
        "item": {
          "id": "43cefeb8-15ab-49d0-9b4e-b327c4510644",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a2084570-fe03-437b-9035-fd5b4a434f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da08ee9a-3620-42a2-abbc-4fdb01e55c29",
        "cursor": {
          "ref": "c6bd8ecc-bc1b-4409-8c49-e25255629585",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2dcb77d2-7b6a-4561-9b40-c4a9e62f3cf3"
        },
        "item": {
          "id": "da08ee9a-3620-42a2-abbc-4fdb01e55c29",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c1ccc604-e4c4-476a-afc2-3ccfe6162795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b3f8a0-a901-4e89-aca3-eec67011c0dd",
        "cursor": {
          "ref": "ea15837d-cd24-4f08-910b-962e64988056",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5d841d95-2890-4727-9023-5ed4bc3d5d87"
        },
        "item": {
          "id": "e6b3f8a0-a901-4e89-aca3-eec67011c0dd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7b411e9f-1957-4edb-97f0-85a8feeae70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925bcb31-68b1-4d29-9d49-6b12e1edd9ac",
        "cursor": {
          "ref": "e584d6b2-8ac5-40b3-a269-bd7a91142b18",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4e5285c4-052a-4879-bc00-b6fd1966fa38"
        },
        "item": {
          "id": "925bcb31-68b1-4d29-9d49-6b12e1edd9ac",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8a464242-8c47-4a8e-a559-a79313ec0d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77f4f29-7abf-4a1a-bfae-0576419f16b2",
        "cursor": {
          "ref": "deb96d10-062b-400b-86a6-f6af089c7bb7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a305a75c-7f59-4e3b-8f44-d4c3aeaf2dec"
        },
        "item": {
          "id": "f77f4f29-7abf-4a1a-bfae-0576419f16b2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5365eac7-bd6e-4616-bdf9-a23dc51c34a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14737be-775a-4651-a1de-a68780b5be6a",
        "cursor": {
          "ref": "a6be464b-a096-4925-bbe0-2238c39c8719",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d73cd22c-eaa1-4936-89ab-bfe2010fe7c7"
        },
        "item": {
          "id": "a14737be-775a-4651-a1de-a68780b5be6a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b56fd38-5be1-45ab-befa-69304f871f9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497ea053-4888-4a32-9e6b-cd1ee8cac5bd",
        "cursor": {
          "ref": "0c56e091-e532-4321-9f7d-7011e39d3a88",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ef78546-7c85-47f0-843a-7c059b12ba5a"
        },
        "item": {
          "id": "497ea053-4888-4a32-9e6b-cd1ee8cac5bd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8e73338-2d61-421d-8b31-8b5929686fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce728bef-d18d-4cc6-a8b7-834247635462",
        "cursor": {
          "ref": "3fa7bf25-70e7-47dc-9e0a-fb1dca3e5d85",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9f9146fd-4afa-4302-bd09-a828d38ef29b"
        },
        "item": {
          "id": "ce728bef-d18d-4cc6-a8b7-834247635462",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e506a20c-5d65-43c8-bae9-e8d51297b8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3e9a53-45a3-4054-af31-66eaa33f1663",
        "cursor": {
          "ref": "0ed25d68-86ad-4901-82d9-8d72605cc099",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6057204f-0633-44ae-9654-a9cf1ee3951b"
        },
        "item": {
          "id": "2a3e9a53-45a3-4054-af31-66eaa33f1663",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c9683ea5-cc9f-4978-aa42-f74f59256907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b178f5d-2878-4b97-8943-fe95e3e22195",
        "cursor": {
          "ref": "68498acf-fe3b-459d-a8b5-f6d5d4ba3f2e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f14d14d4-fbb3-4967-b1a3-4dc067b2a9a1"
        },
        "item": {
          "id": "5b178f5d-2878-4b97-8943-fe95e3e22195",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "573d124c-5fa5-4cc3-90cb-8ec3ba99bc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058f9495-9a69-46c9-a7eb-aa43348bda77",
        "cursor": {
          "ref": "241be0a2-3c90-4e41-94b0-57105e38f2a0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5832b4bf-b4e3-4c92-ac17-e4eee42812dd"
        },
        "item": {
          "id": "058f9495-9a69-46c9-a7eb-aa43348bda77",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6ff90cf2-e6c3-4414-97ed-5c3b6d8f48b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefad2b8-09ae-425a-9d53-038b7b5d9395",
        "cursor": {
          "ref": "33023e66-2288-41c5-a2f3-c650484eac21",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0547d191-89a9-4e34-92b6-1276e4ccd07a"
        },
        "item": {
          "id": "aefad2b8-09ae-425a-9d53-038b7b5d9395",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b25f011f-f59f-4a7f-ad9c-3d8dab51f900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cc0ac9-fc68-4b6d-9367-797046bca1a0",
        "cursor": {
          "ref": "b4b15e63-ef78-4e58-a72f-3e3c49829226",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5ff3ae77-d5a7-4915-8df7-dadc6a0ac805"
        },
        "item": {
          "id": "f5cc0ac9-fc68-4b6d-9367-797046bca1a0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e7f46279-6a4d-47fa-8610-b7a4054b424c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853c83f2-8e44-4bbb-8bc8-81cf070f977c",
        "cursor": {
          "ref": "df26884f-4720-4b31-ac6b-10cce7d4e4b5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "28945870-cd96-4055-bf12-97b568b32ca8"
        },
        "item": {
          "id": "853c83f2-8e44-4bbb-8bc8-81cf070f977c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "060ac428-73b8-419f-876e-bd0b5355314c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cb5d50-6321-4395-acc8-c1e12106823f",
        "cursor": {
          "ref": "6ef49b98-6016-4a34-a590-67f914b304b0",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "beea19a1-20f7-40a1-9ab4-1a18b875b5fe"
        },
        "item": {
          "id": "96cb5d50-6321-4395-acc8-c1e12106823f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e29288e9-8161-4550-8a2d-7d75695dc91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965eb0b2-1bcb-44d9-a7a4-2219f558b9ba",
        "cursor": {
          "ref": "ab0aaa53-075d-4a57-8955-b29938992be0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cd8ea9fd-5da0-4a38-944b-4a86876d248f"
        },
        "item": {
          "id": "965eb0b2-1bcb-44d9-a7a4-2219f558b9ba",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1ff96e27-b44a-435e-a8b1-c22fee1fa03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8a693d-94e3-4a1c-a36a-11af246b40e3",
        "cursor": {
          "ref": "f6f043c1-03de-47ed-84b5-4f311f896486",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "68b3f1f2-bb7d-49c0-a8b8-b4d6470f449d"
        },
        "item": {
          "id": "8f8a693d-94e3-4a1c-a36a-11af246b40e3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1231d1fc-9949-4f4b-bbba-f79d7a26adb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1295ad5-5ba2-4e09-93eb-6843a13611de",
        "cursor": {
          "ref": "bbb0155e-03ac-4f64-ab02-ed612278451a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "db871db3-1b50-447b-8031-9988f750b305"
        },
        "item": {
          "id": "c1295ad5-5ba2-4e09-93eb-6843a13611de",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cc9838ce-bb10-4441-b739-1223fd104cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8160ca84-ffff-4e16-9be2-5f091fb41b84",
        "cursor": {
          "ref": "e1e7d2a8-7691-4686-ad16-3de8b78f8be3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c54f1d0-9ffc-4d65-9ed6-22b5ea94ee4f"
        },
        "item": {
          "id": "8160ca84-ffff-4e16-9be2-5f091fb41b84",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ec8b2d62-b240-4b4a-a978-b72fb9522f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a8b6e-7f1c-4c7b-bb59-97560327c22f",
        "cursor": {
          "ref": "9445088d-59a7-4f70-ba98-b5d0a99d77b2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e6e66dfa-6f02-493f-90bb-d5f0c934445e"
        },
        "item": {
          "id": "036a8b6e-7f1c-4c7b-bb59-97560327c22f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5d2c9e0b-c60f-4c2b-8e2a-4f6161fab609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d50ccfc-a7d7-4e23-b351-c88fef3d98f8",
        "cursor": {
          "ref": "da3c49ed-c3cc-4614-b141-80c326912eaa",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "05d933dc-3795-4fca-9d69-1fc0c47f1677"
        },
        "item": {
          "id": "8d50ccfc-a7d7-4e23-b351-c88fef3d98f8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d1d4075b-22f1-4c53-8572-41ff199cbf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7578c-5fb8-401a-8386-863ad86506ed",
        "cursor": {
          "ref": "fd7cfb50-489f-4113-995e-2e8484617c44",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "afcef19d-86e0-4117-9108-b26348a9e5fe"
        },
        "item": {
          "id": "b9e7578c-5fb8-401a-8386-863ad86506ed",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "16b36c0d-3fe7-4830-b6d2-70ec7daa3bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02da6bdd-da6b-4a32-add9-ad4e1ef5c03c",
        "cursor": {
          "ref": "c431f84c-d63b-4a47-98e0-550c8975f525",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1b844a08-186d-401f-8524-4e7c26ae5822"
        },
        "item": {
          "id": "02da6bdd-da6b-4a32-add9-ad4e1ef5c03c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0c8cc739-77ee-47f4-8bc7-cb901d6657bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829d88b8-0797-4c04-8fe0-0b423dbb9fbe",
        "cursor": {
          "ref": "52aff877-6965-4a73-a8b7-e45864debf0a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e1eab37b-0851-41c4-b1db-a52da7c60e97"
        },
        "item": {
          "id": "829d88b8-0797-4c04-8fe0-0b423dbb9fbe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9acd649b-1a44-4609-adb2-88713b79c315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923a1d86-9c21-4eed-af33-6e2b18abb249",
        "cursor": {
          "ref": "972f3313-9601-4acd-9262-c081d5e9d5c0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb76d0e0-ca13-4255-a822-24710875970c"
        },
        "item": {
          "id": "923a1d86-9c21-4eed-af33-6e2b18abb249",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "50e47ee2-988d-4fb1-8b7c-2538b5fd72a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c96138-cb06-44af-b10e-e9eb2db24b64",
        "cursor": {
          "ref": "c051dd5d-b409-49c8-9350-6246ade0d94b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3da5b5dc-5183-4f78-b4e2-ca64386c9f91"
        },
        "item": {
          "id": "73c96138-cb06-44af-b10e-e9eb2db24b64",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0889fa0d-f67b-4c18-92df-dfdbb81177a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5217f1-1a04-467a-94f9-9b779d6f49e9",
        "cursor": {
          "ref": "009fe371-1509-4e69-8637-09aab40f1cb5",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e964c954-a062-4a1a-bbf3-36f82be1a0fa"
        },
        "item": {
          "id": "5d5217f1-1a04-467a-94f9-9b779d6f49e9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "286e8d45-3ba8-4ef6-a951-b86dcdb25ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2c647f-4af5-4a71-9160-296c0842e83b",
        "cursor": {
          "ref": "54532056-cd7e-4790-8be0-a0ec3e17709e",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "477973a6-58ae-4b9e-a1e6-8187df67d94a"
        },
        "item": {
          "id": "4f2c647f-4af5-4a71-9160-296c0842e83b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "416fd7cc-003c-4054-9802-65e61c12c2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a372df4d-f4b4-4cf1-b1b3-ffbf9ca9fd3a",
        "cursor": {
          "ref": "25da3267-793c-4e9d-80c3-fbb91a0388d2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "241bf1ff-152b-44b8-a3ce-44b7dfdc68ee"
        },
        "item": {
          "id": "a372df4d-f4b4-4cf1-b1b3-ffbf9ca9fd3a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "99861fa3-990c-4d01-a8a5-ddf355e3372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0989d-2049-45e8-b648-d21c9749008f",
        "cursor": {
          "ref": "d979d9b4-d26f-4333-b7e7-b2f1c079b9fd",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1fd4b9be-4326-4282-8d30-1723cb653629"
        },
        "item": {
          "id": "3de0989d-2049-45e8-b648-d21c9749008f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22314a7d-13df-48b8-944f-e30b75a12731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b232225b-d864-444c-98d4-6b53d2d42d0d",
        "cursor": {
          "ref": "82dfc39a-7780-4648-a224-f5eb79c16ff9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ac9655f9-1825-4bcb-83da-b2b907f3dfcf"
        },
        "item": {
          "id": "b232225b-d864-444c-98d4-6b53d2d42d0d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "27ecdb85-542f-41f5-8c3e-2285494afb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d71f770-8998-4f20-b7c6-d6696af1bc53",
        "cursor": {
          "ref": "5d21bcfa-f113-42e0-9afa-0f70959a61c7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d40fc151-3a01-4307-aed1-fdf4bff22c4f"
        },
        "item": {
          "id": "5d71f770-8998-4f20-b7c6-d6696af1bc53",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "256b4ae5-3729-4dcb-8702-4df392ff3e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4626838-202c-428c-852a-0631f9c773e4",
        "cursor": {
          "ref": "74ff01a1-2d4b-4048-bd76-d10a11efc065",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f6f52f5e-0ef0-42f7-a89e-0d6509c3da26"
        },
        "item": {
          "id": "e4626838-202c-428c-852a-0631f9c773e4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "404bb9bd-b493-4639-a754-f1518fbdd88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7c8257-cfc2-4a4d-9b81-ff490146ba71",
        "cursor": {
          "ref": "840df117-23fe-4f7c-ad6f-db77250696a7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "894d5eb0-1e94-4a33-8942-418c24326424"
        },
        "item": {
          "id": "9a7c8257-cfc2-4a4d-9b81-ff490146ba71",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b99edd49-d3e7-4f60-a516-2e35dfdcb22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e5678e-e0f4-4b89-9523-d6533d451a76",
        "cursor": {
          "ref": "a044d245-2e53-48e6-bd81-f1bc28f4f5c1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aabd3569-b793-4f54-b8f4-bc87e255edf9"
        },
        "item": {
          "id": "c3e5678e-e0f4-4b89-9523-d6533d451a76",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "064ca4c2-2749-48f5-b8b4-e629e460186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b28978f-fa6e-4617-85c7-4972d3884a1d",
        "cursor": {
          "ref": "8766eaec-5b00-425f-9c00-7b413538d171",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4fc8773a-160a-4bdf-b7d6-8d729387d4fd"
        },
        "item": {
          "id": "8b28978f-fa6e-4617-85c7-4972d3884a1d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4c0de12b-8634-428b-b8d5-309677730977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8431c990-22d0-4a22-8848-d550dc35fbf3",
        "cursor": {
          "ref": "21f1b893-5666-4e10-9add-cab2fe38a2f5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d342fea6-f7f4-49d4-9440-41148b994910"
        },
        "item": {
          "id": "8431c990-22d0-4a22-8848-d550dc35fbf3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2bfbcbc4-36af-40e7-9ebd-169f9b90ac23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2514595-f13c-4bd4-98aa-898cdb4cf066",
        "cursor": {
          "ref": "ef9bfa91-89eb-44e7-ac4b-e07796bcce20",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d88ed87c-0058-4531-a6f4-81e1a8224ce1"
        },
        "item": {
          "id": "d2514595-f13c-4bd4-98aa-898cdb4cf066",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6612e232-f05e-438d-ad4d-931030335237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0397a9f6-c842-46e3-bd74-952e93528589",
        "cursor": {
          "ref": "0a846a0f-4f9c-4d8f-8627-9473b3cd5558",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e8afa8ea-0b98-41a5-bd11-6049e3de7365"
        },
        "item": {
          "id": "0397a9f6-c842-46e3-bd74-952e93528589",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "91fc2685-0c6a-4255-a23c-d40c07757003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55083eb9-3559-4ecb-b3b6-8fec808d02b8",
        "cursor": {
          "ref": "2d457caa-0cc6-4e8b-bac3-cdc83d555d14",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7ef866c3-11b8-4a5a-8569-19769ae4c9ea"
        },
        "item": {
          "id": "55083eb9-3559-4ecb-b3b6-8fec808d02b8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5aa17ca1-a709-497b-9a25-9c90ff32894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8110110-a7a4-4f98-909d-ac346d0b99fe",
        "cursor": {
          "ref": "f6382efd-89ea-47e6-9842-47b0aaeaaf5d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c0054d17-061f-4c90-8a5f-bc6e2051ebf8"
        },
        "item": {
          "id": "d8110110-a7a4-4f98-909d-ac346d0b99fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cf2cdeba-69d5-4ac3-9cc7-054455817e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc948500-2bbd-493c-a251-db6a1b7e2b8d",
        "cursor": {
          "ref": "7b3e950a-a032-4f00-9e49-a8b6656b54f1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "beca8121-6fc9-408b-97bc-f63a38b12a9b"
        },
        "item": {
          "id": "fc948500-2bbd-493c-a251-db6a1b7e2b8d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "78150399-e820-452e-ba3b-ae44ac8aadcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a24163-6434-419a-bd80-d11e4ed87363",
        "cursor": {
          "ref": "1246fab5-a24c-401e-9284-18174d8dcde6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "936b4558-0c0c-45e8-bc37-cfcfa1919adc"
        },
        "item": {
          "id": "86a24163-6434-419a-bd80-d11e4ed87363",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c9ba6a69-2ed9-4849-813d-5c69e1899b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2b022f-9518-4423-ac53-abce843fc006",
        "cursor": {
          "ref": "fdad7cd6-1e60-4ef6-94eb-14aeb143e5ad",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2aa020f3-0501-46e6-9974-64d39934879c"
        },
        "item": {
          "id": "4a2b022f-9518-4423-ac53-abce843fc006",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "294ac52b-bb3b-4c25-9563-eb8e7ae5bea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a70669-1300-4518-b42d-4439e0beb9ce",
        "cursor": {
          "ref": "5cd1917a-b9a5-4ce5-b776-5d5cd16c9816",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "daea93d8-cc1f-4a1d-93c6-d1b6694325a8"
        },
        "item": {
          "id": "e4a70669-1300-4518-b42d-4439e0beb9ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cceed6d1-cbf8-43b2-ae3f-6e94245934a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f878fa3-afb5-418c-bac5-25363b7d3f9e",
        "cursor": {
          "ref": "084ca1a3-00cc-4b25-8efc-830cc1f63741",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1deb0c6c-6bf6-4225-85cc-c0f42ff76612"
        },
        "item": {
          "id": "5f878fa3-afb5-418c-bac5-25363b7d3f9e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71980f03-c380-4f34-97ed-7155bb89a8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf580f99-d7bb-4b91-a519-cf0aa3b2a4ed",
        "cursor": {
          "ref": "625845c6-1efe-4644-9239-3cf596261410",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3a6bffcd-d87a-45f8-9edc-ed5d923c373d"
        },
        "item": {
          "id": "cf580f99-d7bb-4b91-a519-cf0aa3b2a4ed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8f418b67-6b13-44ec-9815-13e59d858a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3853db-e384-4cd3-949a-e15b2228387d",
        "cursor": {
          "ref": "0bb5b78b-d295-4451-bce5-ded58a484d56",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f7f94e85-4356-4363-b4c7-b4f77682711c"
        },
        "item": {
          "id": "4a3853db-e384-4cd3-949a-e15b2228387d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "abeb6abf-616c-4ccd-a055-71fce2eabdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52063753-7320-4385-918d-7ec7b7cd1b4d",
        "cursor": {
          "ref": "78d288bd-3f16-4a03-a356-54b8084a78b0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4bdc7e00-a24f-4463-9c0f-6e2d950d614d"
        },
        "item": {
          "id": "52063753-7320-4385-918d-7ec7b7cd1b4d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fe95224f-dbbb-482b-b0fa-6b321b34dd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69c09eb-e152-472f-b936-47836b59f0cc",
        "cursor": {
          "ref": "aeeb6901-523d-47b6-b4d9-0b88050694d3",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "57a4eecd-6044-493c-91eb-01de5ae7a4da"
        },
        "item": {
          "id": "f69c09eb-e152-472f-b936-47836b59f0cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5eabffae-1d7b-4160-9f2f-4508758959b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b69c9dc-1c9a-4d38-9232-f92c7a79d99d",
        "cursor": {
          "ref": "bf81e4c0-bffc-4ee8-be60-d97eca5f1ac2",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "380ac06d-9f0b-4adb-9ff0-660ae74b436a"
        },
        "item": {
          "id": "3b69c9dc-1c9a-4d38-9232-f92c7a79d99d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e20efa52-c7fd-4c94-87a7-0804665be3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e468d6-a917-4162-bb50-7c17fdc0f506",
        "cursor": {
          "ref": "50a2a39e-b85e-4f6d-93ac-28c4a6f1680f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9eb37144-f1bd-449d-98d7-83b16918daed"
        },
        "item": {
          "id": "08e468d6-a917-4162-bb50-7c17fdc0f506",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dd32e345-a307-46d7-bfdc-5274b8d3d952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aaa9f5-b008-4de9-b4c9-df8020cc7634",
        "cursor": {
          "ref": "c33a8b00-7aa0-4c43-ac02-61478dea7bcc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1bf1af57-bc30-4de1-a35e-c07d271e7040"
        },
        "item": {
          "id": "b1aaa9f5-b008-4de9-b4c9-df8020cc7634",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c677a5dc-34d9-41d6-972d-932bd112e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf59a5-a7bc-4646-9462-d1304da69f37",
        "cursor": {
          "ref": "7a58165a-86f9-4b19-aef0-edda64df871a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e5b6dbc-ce8a-4ca3-84a5-f85b190bb7e3"
        },
        "item": {
          "id": "0dcf59a5-a7bc-4646-9462-d1304da69f37",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "448de296-c84e-4ca3-a0f1-7c74e4cfdd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa4a120-885f-463c-85c3-507fdcbeadb8",
        "cursor": {
          "ref": "4e795d03-c6e8-4b1e-9f83-a015d84bbd7f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6d87f4c-525d-40f1-b5d5-648f7e287df0"
        },
        "item": {
          "id": "9aa4a120-885f-463c-85c3-507fdcbeadb8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "79c16712-762a-4bdb-8545-96393909ff21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c00eb1a-44d7-4e3f-99ab-8fe0e7eda885",
        "cursor": {
          "ref": "26b0e795-28cb-46c7-917d-e4239477bc80",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d1062a05-c14f-4a41-9353-ff26ce263b93"
        },
        "item": {
          "id": "1c00eb1a-44d7-4e3f-99ab-8fe0e7eda885",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ef166d2e-37b5-4f01-889c-afa7de3fd39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ff774b-d2bf-4c27-8168-6e4210fb53b5",
        "cursor": {
          "ref": "acb9ada8-a38e-4981-977a-0a04294fb9df",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "06e64922-2684-4db5-ac75-cf3c67b2e4db"
        },
        "item": {
          "id": "99ff774b-d2bf-4c27-8168-6e4210fb53b5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8aea42db-7c22-48fb-bd76-ef8842234deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a47150-0370-4edf-9712-ad2cbca96c2f",
        "cursor": {
          "ref": "42905c9f-cda0-4664-aef7-77e274e1cf81",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e4e430e7-3128-4893-b8f1-5f9481a4d60e"
        },
        "item": {
          "id": "c8a47150-0370-4edf-9712-ad2cbca96c2f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4fc6d280-f293-437b-80fa-b8ab0df2cd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cb447c-e3ac-4f14-95d1-b609b418498a",
        "cursor": {
          "ref": "f9d792a3-26c8-4987-86e3-8233b977418e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7fdcde9e-c3b2-4b71-a29f-2e0c0130adb4"
        },
        "item": {
          "id": "63cb447c-e3ac-4f14-95d1-b609b418498a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "76ab402a-0b09-4381-8ab7-72ad2a9b475b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baff843-5574-4d96-8958-96258e28298a",
        "cursor": {
          "ref": "13cde862-397b-4721-b8f8-67cb81a02112",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9dfd3286-a0ea-4555-85ca-0706819be718"
        },
        "item": {
          "id": "5baff843-5574-4d96-8958-96258e28298a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bd1b27de-3754-4926-b997-9c04dd62f2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7244d35e-3f1a-4c30-a32b-e0a1158c6525",
        "cursor": {
          "ref": "b5cf005f-909e-4922-94f7-c42295154bc4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "55d1ed73-9a95-4f05-9b4f-707d7dc7e12a"
        },
        "item": {
          "id": "7244d35e-3f1a-4c30-a32b-e0a1158c6525",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "df6fa457-d712-43e1-ae23-6785dd34394b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb1dc8-cf7e-48b9-9000-1f4ce48c9cb5",
        "cursor": {
          "ref": "52eaae94-5e52-4dd9-bbf4-6e89a097da1e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8db03d07-ec6a-48f6-a5bb-54184a312d36"
        },
        "item": {
          "id": "b0bb1dc8-cf7e-48b9-9000-1f4ce48c9cb5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eadf9f24-26b1-4819-b520-32585a295caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19db087-00a5-4be6-8f83-6d81b3d87c58",
        "cursor": {
          "ref": "29173bd0-2339-4c9d-b610-0c98587c95f6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "70aaf68c-d430-4294-b2a0-3aa3213170c7"
        },
        "item": {
          "id": "e19db087-00a5-4be6-8f83-6d81b3d87c58",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a0fc97c9-e8d9-4291-b73f-bdf9a0cf0b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eb4c5a-92d4-4acd-a743-f33dfdd2903a",
        "cursor": {
          "ref": "a4e40a4b-2551-4b91-ac9c-99ee0165c943",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "46f7d3a0-3488-4346-bee2-b1ca29844d69"
        },
        "item": {
          "id": "08eb4c5a-92d4-4acd-a743-f33dfdd2903a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a9b124f2-de9e-42d8-884a-5d2c30d7d098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a3f411-db3f-4c32-b81c-2632a4a1cd91",
        "cursor": {
          "ref": "de888e50-eaaa-465e-9e6c-ab7f1a6fbc69",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6c4b1be7-0658-4d0d-9b9f-a9b729ac4378"
        },
        "item": {
          "id": "28a3f411-db3f-4c32-b81c-2632a4a1cd91",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "08095a5e-ee4a-4ffc-8423-5894a48eeee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b095473-7fce-4408-a0a2-1da20036939b",
        "cursor": {
          "ref": "9b5ce926-8082-4f7f-86a7-b181d4b728cd",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b76c3f69-6cc7-4186-a812-3ef32811076e"
        },
        "item": {
          "id": "3b095473-7fce-4408-a0a2-1da20036939b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "073aff01-c66b-40b6-9186-778a0c6ba839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c7b0c7-db7d-432e-8966-590ec9ff99a6",
        "cursor": {
          "ref": "3ee5c6ed-0a71-4e4d-9817-613fde3d80fc",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f994f98d-9cae-42b9-800b-2aed3834c360"
        },
        "item": {
          "id": "34c7b0c7-db7d-432e-8966-590ec9ff99a6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "801e3e11-0172-44e7-8001-21d340c4f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fc11e9-cfb2-4428-b397-4fc606f5ace7",
        "cursor": {
          "ref": "f202415a-2634-409a-881a-8ca5d36e4ed4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8cfc6844-3843-4754-a393-b1265293e036"
        },
        "item": {
          "id": "e5fc11e9-cfb2-4428-b397-4fc606f5ace7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94f14253-9173-4f46-94d6-974f5089581d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452afa68-b9a3-4486-bb8a-152526e60a73",
        "cursor": {
          "ref": "f5fee928-22c4-4dd0-a2c9-5cb7d1335ea3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8c4eb3d5-5e28-4a9d-9327-00fdefe924df"
        },
        "item": {
          "id": "452afa68-b9a3-4486-bb8a-152526e60a73",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ec0ee76b-02a7-4af4-b03f-36d1905a9c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08c0689-6754-487f-b3d6-d983a46d1b00",
        "cursor": {
          "ref": "40857120-94b6-4df7-bbe5-280b035da634",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73629557-ab87-40b8-bd13-7e64055ad094"
        },
        "item": {
          "id": "e08c0689-6754-487f-b3d6-d983a46d1b00",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "60ebc1cc-51ef-4794-af61-e1ad2476187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8af7386-11d5-4ffb-b0d9-53e21eec6463",
        "cursor": {
          "ref": "556438f2-6390-4888-9880-d7e65a625bf9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a8bfea7f-528a-4c0d-a2e0-4d305cbfb348"
        },
        "item": {
          "id": "f8af7386-11d5-4ffb-b0d9-53e21eec6463",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "860b8a31-4322-4d8c-aac1-23c05616e8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212d5f43-7d62-4757-8c42-6a0a8d7c4ef5",
        "cursor": {
          "ref": "770511ae-bb7a-48e1-8321-7bcc9338ff2d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5839bf21-9697-4a16-88d2-af23ad372f83"
        },
        "item": {
          "id": "212d5f43-7d62-4757-8c42-6a0a8d7c4ef5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a3124be0-eaaf-4b58-8a31-a6668d139f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b61ca53-9646-4bd9-b6c0-0468588ec951",
        "cursor": {
          "ref": "bc3aae43-97d6-49e6-9b8a-314854f1ab5e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4f3da722-c3de-4591-959c-c9b3dffe635b"
        },
        "item": {
          "id": "0b61ca53-9646-4bd9-b6c0-0468588ec951",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "255447ad-a7c1-4c70-8690-1091e63c931f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62691d-b027-4389-a2ab-c34a142aac10",
        "cursor": {
          "ref": "dc23828f-42d7-4592-8ed6-e2200c60b228",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ceb056f9-e20e-44e1-b1d3-84cb2809a9d3"
        },
        "item": {
          "id": "ea62691d-b027-4389-a2ab-c34a142aac10",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a52228e9-cc26-48cc-8e73-2366837337d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d4389-41dc-4be3-8136-7896f522d88a",
        "cursor": {
          "ref": "d37e5063-3317-4d6b-8fe7-464fe1fb1102",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5764d891-9382-493f-99e4-94933fae6527"
        },
        "item": {
          "id": "f24d4389-41dc-4be3-8136-7896f522d88a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d3501ac5-c0bd-4c9c-beb4-86d72a4fc007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac77d71-f3dc-46d7-a13c-39f5fffdf79c",
        "cursor": {
          "ref": "a43dda44-7e9c-4e3f-affc-f285c721e4f9",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "afa600f5-aed5-4c44-ab3e-bc8faaac5615"
        },
        "item": {
          "id": "eac77d71-f3dc-46d7-a13c-39f5fffdf79c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "29e9f061-c180-425d-9ec5-5dc633496dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3852b6bc-7f16-401b-b6fe-1cbe05cadcb7",
        "cursor": {
          "ref": "c927dd49-ee31-49a3-938f-1e3dde01cda9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86c41c37-46f1-4dea-a5b9-f11fdce3ca16"
        },
        "item": {
          "id": "3852b6bc-7f16-401b-b6fe-1cbe05cadcb7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e793e5c-e523-42c6-ae01-133b4a0ecdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f422431e-e1e5-4e51-b4a0-a105596d80e3",
        "cursor": {
          "ref": "47ba9d2d-2b2a-4e4a-9411-8bdaf18d2799",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7757929d-2609-432e-8825-d7eb2cb765c7"
        },
        "item": {
          "id": "f422431e-e1e5-4e51-b4a0-a105596d80e3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5cd2b9e5-7e9f-4a8a-8f66-e28408008d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d9d022-5606-4b58-8fa8-042247eb9a35",
        "cursor": {
          "ref": "d7cec3ef-d3e8-408f-9c6a-a3e3785f5c5f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "80ba22dd-ab31-4b77-9bc3-1532967c0e00"
        },
        "item": {
          "id": "71d9d022-5606-4b58-8fa8-042247eb9a35",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6e2ea939-7a66-489a-b35f-df3ea1dece22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048adc16-5490-4e7f-98a2-8bf1f94c6baf",
        "cursor": {
          "ref": "15108c0e-41d7-481e-9446-8495f67fed1e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6fe0688f-5614-44be-989b-a2bc46d48cd8"
        },
        "item": {
          "id": "048adc16-5490-4e7f-98a2-8bf1f94c6baf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "95549f9d-0d8f-4a0c-b853-e345bd72eff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4809f1-99b3-4451-b378-ba7fae66b13e",
        "cursor": {
          "ref": "1e463934-fa3f-432c-bd6d-c5938c8a6ade",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c45d5bc8-2059-4c01-a0ff-ff585e6144b7"
        },
        "item": {
          "id": "4f4809f1-99b3-4451-b378-ba7fae66b13e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7815233f-2123-4fc3-88de-93ca885a54cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd68e6c-b9a3-4173-b7af-a444a90a4829",
        "cursor": {
          "ref": "77165616-a24f-4f3f-b76a-51257c2eb305",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "09b45eb5-5418-446b-961c-7b9d1037c99e"
        },
        "item": {
          "id": "3bd68e6c-b9a3-4173-b7af-a444a90a4829",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d32f1bc4-0336-44a8-9a71-756613d6c5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e786cbe-f46f-4c56-98ba-a46f06fb8fe5",
        "cursor": {
          "ref": "0c113fbe-383c-489e-a002-1a34d5e45ab4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "98d25048-1e1c-4e78-aacb-db3947d28f84"
        },
        "item": {
          "id": "4e786cbe-f46f-4c56-98ba-a46f06fb8fe5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ab0b97b-0318-4d3b-aacd-539f933b21ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b62b8c8-372e-4c22-94ed-2449eecf04c0",
        "cursor": {
          "ref": "fc7fc503-39b4-431e-8afd-b1a794978ee2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d9ded81e-0251-4120-9ec0-f474ac9f7405"
        },
        "item": {
          "id": "9b62b8c8-372e-4c22-94ed-2449eecf04c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7b876028-e469-4b5e-8fcd-b5484a1fcb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e08ae3e-6c81-4739-9087-d6bd0d71c343",
        "cursor": {
          "ref": "ddb92147-571b-415b-a63f-ceba33e84129",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "33e6f906-9f61-4cc9-967d-9787871408f0"
        },
        "item": {
          "id": "1e08ae3e-6c81-4739-9087-d6bd0d71c343",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "efb25ac7-9e3e-4b92-88fa-0252bce04273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea88b4b-c83b-413d-b499-0706505e0181",
        "cursor": {
          "ref": "97fc5e4a-8c1a-440f-8411-2a2c75722331",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4410920a-9e59-4761-a0ca-58beb9ee5f11"
        },
        "item": {
          "id": "6ea88b4b-c83b-413d-b499-0706505e0181",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2722f047-ff64-4852-ab68-08cf1069ab89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fd3bf3-6778-4a2a-850d-86e42ee5c82a",
        "cursor": {
          "ref": "3a37a0a2-b0df-4158-bedf-35f9bfc87258",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "814a8a79-c9f9-4143-93f5-75e03589b153"
        },
        "item": {
          "id": "c9fd3bf3-6778-4a2a-850d-86e42ee5c82a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f2508cee-c610-450f-86c0-e6c8237031ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f6655e-78be-434a-a98d-4442da802f84",
        "cursor": {
          "ref": "9997f295-8aec-4f50-bbbe-c64feba96d8e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f3c2757c-09fa-483d-9462-509d6103db6f"
        },
        "item": {
          "id": "b7f6655e-78be-434a-a98d-4442da802f84",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dd32ed62-94aa-487a-951e-a3d111db6004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49422ba-36ff-4c46-b159-dfb6df23c8c1",
        "cursor": {
          "ref": "1207eb43-1be0-4346-ad08-e694288f3e7e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "620f62f7-6207-4445-b53d-43f33251698f"
        },
        "item": {
          "id": "b49422ba-36ff-4c46-b159-dfb6df23c8c1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "de6b670e-bdd0-4684-b5c5-2382839a7892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4ccc67-3370-413f-961f-d93ec1b56cd2",
        "cursor": {
          "ref": "2df7c844-1b95-46ca-89c8-851849e578d7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "85d63ee8-f3db-40b7-8190-99a02c68e038"
        },
        "item": {
          "id": "cd4ccc67-3370-413f-961f-d93ec1b56cd2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7a3d016-b7e6-4976-810b-a722f34e19d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58392e9d-7455-4404-97c5-ccbe91eb21ff",
        "cursor": {
          "ref": "aca5a9b7-ef40-49d0-b68d-5dfcd0f90434",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3fef662c-4996-439e-be8b-e83615885ab0"
        },
        "item": {
          "id": "58392e9d-7455-4404-97c5-ccbe91eb21ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b44bf910-c640-47e4-b51c-e7039e114ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c65565b-0605-4f72-aef0-277e677c8023",
        "cursor": {
          "ref": "c4ae692c-e7c5-4fec-868d-cf0462d38655",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "600c07c9-ed49-4cb9-bd54-ab91814da8bf"
        },
        "item": {
          "id": "4c65565b-0605-4f72-aef0-277e677c8023",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8a75e2e3-14ea-4591-a75d-2c07dd1da926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b777ff-8771-43f1-8f06-02e37b0ec828",
        "cursor": {
          "ref": "c11aa85d-8ffe-47c3-b910-d4987bcf5e81",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a41a1596-858e-4ef0-a03d-07de0fafae22"
        },
        "item": {
          "id": "c7b777ff-8771-43f1-8f06-02e37b0ec828",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fef22590-01a7-4d11-b5de-ae09da393d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad8d22a-649d-458e-b70c-6fc14d3781c2",
        "cursor": {
          "ref": "a8bb9bc0-5b15-426d-b1f1-e001fedb9f4f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3ca33cbc-9186-4f1e-b48d-8aed2a2c1a17"
        },
        "item": {
          "id": "4ad8d22a-649d-458e-b70c-6fc14d3781c2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "73f4bd75-948f-4d32-ba5c-86a20005d771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b483d332-dcbe-4b1f-bf1f-4f7ab3cf4b2e",
        "cursor": {
          "ref": "e92c3df5-a7a7-4653-934c-3af33016e3ea",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0ea1ddcb-8f6c-4207-a13c-4f19794cb3b1"
        },
        "item": {
          "id": "b483d332-dcbe-4b1f-bf1f-4f7ab3cf4b2e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec74aea3-980e-405d-96fc-0e620565f604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc59318-f0a5-47c4-b424-4ff8fbd14802",
        "cursor": {
          "ref": "ea89e853-69db-48a7-a97f-d2117bc51023",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5866bd17-ac50-4358-a903-a3588f639a39"
        },
        "item": {
          "id": "ffc59318-f0a5-47c4-b424-4ff8fbd14802",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "655ad58e-42b2-4e33-acb4-dcc4afda8ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df45700-d38c-4274-b887-545b789878c9",
        "cursor": {
          "ref": "c941ffa2-7685-4846-8f6c-91ced615a47b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e96fa828-75aa-4027-8388-211c9337b1c3"
        },
        "item": {
          "id": "1df45700-d38c-4274-b887-545b789878c9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eeb02218-5544-4e35-a13f-6c7bf0a290a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd0a48-5e88-40c2-a2a8-d64cef5c7f55",
        "cursor": {
          "ref": "e5e5139e-1145-4e42-a168-b7fc713026a2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c9c3e57d-4e27-4a65-9dbe-fd9c1c1efe07"
        },
        "item": {
          "id": "b9cd0a48-5e88-40c2-a2a8-d64cef5c7f55",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96192a73-9102-4080-808a-bfd509275e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171db161-56a7-4f78-97fa-963863fdc035",
        "cursor": {
          "ref": "513bf052-3fca-40b8-9978-fa5547ca8232",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "665162e0-cba0-424e-8176-c86bb3a7c790"
        },
        "item": {
          "id": "171db161-56a7-4f78-97fa-963863fdc035",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ed2d98d-3052-4f47-bee2-c3194fb6415a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf46fd-26da-41a4-8eb9-f34cb8e95063",
        "cursor": {
          "ref": "c625fcd2-00ab-4afb-b80b-09b24b92fe0f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a12b1fbb-9175-443d-a31e-d6865ba200fc"
        },
        "item": {
          "id": "5cbf46fd-26da-41a4-8eb9-f34cb8e95063",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "33598632-1518-411c-bcae-dbd470bb206e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2160198-e215-48a6-ad7b-414e9b33e900",
        "cursor": {
          "ref": "ba187248-84ee-4ea8-94e2-614a143f1dae",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "744d4370-28c6-4ef4-8c3e-d3588eb75930"
        },
        "item": {
          "id": "f2160198-e215-48a6-ad7b-414e9b33e900",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "29f32657-842e-47ef-a495-1ba4e2707d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d85ddd9-30eb-4a43-814c-61b196719757",
        "cursor": {
          "ref": "691c2f78-65be-4d0a-8cfa-1367fb193c16",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bd1f02e8-1b9a-475d-a653-7866c36da357"
        },
        "item": {
          "id": "8d85ddd9-30eb-4a43-814c-61b196719757",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58f0b295-6448-4fc3-aaaf-d8fc5bb7354d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4b672-2266-4599-a8af-72c7af77adb8",
        "cursor": {
          "ref": "9a5f73ef-bab5-437a-a9d0-fc9573f49d30",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7d536e6c-9c6a-4c22-b69a-7cd043c55b7a"
        },
        "item": {
          "id": "eed4b672-2266-4599-a8af-72c7af77adb8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "735fa9bd-40d2-4f58-8284-46b03288acd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9bd8b3-7581-48d4-96ba-fa9c0e8926ae",
        "cursor": {
          "ref": "da1f5078-4f06-457e-ab71-065eaeafa3b5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "38d102f6-4acb-48cc-add9-078474cf6034"
        },
        "item": {
          "id": "aa9bd8b3-7581-48d4-96ba-fa9c0e8926ae",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8e9ec190-1d0d-4c7c-9580-7b8bd3419234",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74202040-1a9c-47db-8539-9006d33462cb",
        "cursor": {
          "ref": "f4a6af52-2dd1-4c6d-9b23-254cc3089fe4",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "44d8e193-c601-4abf-89cc-b84cdbbdb307"
        },
        "item": {
          "id": "74202040-1a9c-47db-8539-9006d33462cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7b700015-73da-49a1-a5cf-225fcb873d15",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5625e555-f716-459e-9b21-5c1dd14aed7e",
        "cursor": {
          "ref": "34441783-71fc-49f1-bba9-58e27832af5f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e642f7cd-81f9-4969-8972-859b51de2c2b"
        },
        "item": {
          "id": "5625e555-f716-459e-9b21-5c1dd14aed7e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b83d0a62-d67d-4539-84dd-15f7502fefed",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "841825fb-06fe-4934-9ad8-04134bdc0820",
        "cursor": {
          "ref": "a1a15283-8767-4159-bf34-3a3bc4a3a707",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "11ef3fdc-fe75-44db-9899-a3a3115a2bca"
        },
        "item": {
          "id": "841825fb-06fe-4934-9ad8-04134bdc0820",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "66223639-8ca0-4d51-95e3-520f25d796b3",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd179817-e378-42e1-8838-5eb7436320a9",
        "cursor": {
          "ref": "c2f84cf5-b38e-4bc5-9cbb-cc8079d06e67",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e7a20c1e-3ef9-4ca1-9926-5ab38774cbb5"
        },
        "item": {
          "id": "dd179817-e378-42e1-8838-5eb7436320a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecbc4af4-c04d-4f1d-8015-053ec689a82c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd179817-e378-42e1-8838-5eb7436320a9",
        "cursor": {
          "ref": "c2f84cf5-b38e-4bc5-9cbb-cc8079d06e67",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e7a20c1e-3ef9-4ca1-9926-5ab38774cbb5"
        },
        "item": {
          "id": "dd179817-e378-42e1-8838-5eb7436320a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecbc4af4-c04d-4f1d-8015-053ec689a82c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb487368-0dc9-4887-8bf2-184e00714c38",
        "cursor": {
          "ref": "45d7c8eb-1c23-4c9f-8e8d-5590329c48c4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "99119fd4-e8be-4f82-8a7a-666ef960935a"
        },
        "item": {
          "id": "bb487368-0dc9-4887-8bf2-184e00714c38",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "24705128-26a0-443e-b902-d21361260d39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b506d0d-3fa2-4e19-9d9f-71f1abfdd83e",
        "cursor": {
          "ref": "19c21eaf-d29c-4b66-a84d-48d5ca0c7a69",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e8f37f8c-3100-4be3-92a5-6a70aebc0309"
        },
        "item": {
          "id": "1b506d0d-3fa2-4e19-9d9f-71f1abfdd83e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9a7b226f-367a-49ab-969c-b1fa1c8a8001",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}