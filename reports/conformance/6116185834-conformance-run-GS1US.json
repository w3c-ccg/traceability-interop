{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c97af13f-9b47-42de-bf14-5d2857468e17",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4245e600-6dd6-4d34-aeee-c1621432cd43",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "641fdebb-5fe5-4149-89cf-d9cbc5b3bc8d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fcdfcfcf-fbe3-4df3-a4e0-9e03c80b86a3"
                }
              }
            ]
          },
          {
            "id": "760474eb-7756-4094-92c2-8d62ce724b47",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "935b3428-a25a-4eaf-9e07-cc27987aad15",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e628563a-5e6f-4ece-8071-8839c175ca9c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0ec3e4b7-b700-49d9-b6a9-25343c359594",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c37d5925-de8d-4d3a-b033-8c6c2d30e4bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9527362d-9972-4bc7-9658-6a1625a20939",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f48f748-6454-4556-9705-7670aef78732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91c875c6-6449-4a58-8f0d-86b8caa23ab0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bda2799e-6ea4-4c8d-b977-acac94ac28b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9da30dc9-2a6f-4969-ac6f-db98898b7ee4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a55ec806-5a77-4992-af26-b64245d89ea1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c61b5666-7f12-4595-8c45-f037ab9c5a88"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d522d2c3-7d99-4eef-8ae3-024b500dee0a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "aed033f1-57b7-4fde-af19-545d2156be64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac3467cd-efa1-42a0-a289-019bb2a648d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2393674b-9244-4c16-9a65-eb669bf4f1ed"
            }
          }
        ]
      },
      {
        "id": "94cc132c-7a60-4335-ac52-32f254955f08",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3edc5ea9-98ab-45e0-8e95-8aaefb231de8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e8a5773-9390-411a-8b26-3a54b0894c02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cd8f69a-143d-43a3-94ac-8154941f4e6d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6472dd-1a22-4b87-be8c-d4bc0d3863d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77764096-506b-4aaf-8d12-5f6acdcb4a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92fbfa1-bc03-42b1-b01a-430972dd7ebd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984e11a5-a41e-436c-8857-b690284ba528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd147a81-92eb-4f2d-8223-f9427e8ee988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413d46d3-547f-4506-8a78-b122105e23e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672fe1a3-3e3f-42a1-b639-60290e89f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fe130fc-7c30-4cd8-8fe2-8f5d7f742d84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73019657-2ab3-4ecb-bf05-2de7591e8fe6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88cc36e6-de88-4107-a26b-9f0e3a3ef525",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7962d15e-386e-4878-a013-4440c0e63c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b291ee5-3215-441c-819f-5016212aab16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2100cb52-56d8-4c65-b8c8-a1ecc60b7692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400b6fbb-31ff-49e6-8365-bba1a2abef9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4ab91c98-e2ca-44bc-b0e4-7c56f727b95b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8854106-8179-46a2-934d-3c846d77284d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92ea72d0-7625-4ac5-9458-0f2210c8805e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "45eb8e9b-80d2-4fb8-bdb0-94149fd1774b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7ff77f6-c755-4d4a-9e0b-c62c9e47439f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "54ce7220-d51e-45f8-8b02-d94df1bfe40c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0111aeca-c66b-4e1a-b2bb-de79106d768c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0c7ec4c-bfde-4e94-89f6-ec682e69cc5e"
            }
          }
        ]
      },
      {
        "id": "f7b9d3cb-2d9b-4d99-9098-40a263728c3d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "37636076-cebd-455e-9903-cac9a43b411f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c040948d-39ac-495a-98ef-c03897f36d79",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0171793c-7fa0-498e-b323-4d2ee6bce759",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c88e09-2692-4524-86d9-a7b524122754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3362de5-ad75-4b84-89a9-06934983b889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eab03f8-a9dd-4f15-8e59-a94f9b63803e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30bb0e27-3337-448d-bedf-0d8c7b85f7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19080969-05cc-4acd-b158-88d7f748da13",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c590602-ec7b-49f6-be5f-3412c23f8f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a93015b-ead2-440a-b10e-13eeb669d3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debefc70-fbee-4142-a6ec-4e130240b62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbdaa55e-189d-439c-828e-8a25f8cfb40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc539be3-f8e0-4e73-aba4-546d688155f9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ad6136-5311-4eee-9e2c-49207c1579f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f883d0c-44f2-4906-bea1-b000e06b4551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc020c1-0d84-4526-8b52-2d5ed6f80a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87baecf4-c10f-402c-849b-589a34006c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eea6d6-c5d9-4284-b320-3ab91f05ca3d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c108ca-ed54-4ee6-80f6-22cfde6bc3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f95e46-6988-4846-8f09-90acf3588c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6b2a7-9911-478c-ade3-be39e687a952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da2a2c81-12d8-4b6c-b3e8-235e65e2fd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adee756-91f4-416e-a690-e10cf76eb6ce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2df0355-af63-43d6-a69e-383d5aaf6429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b67368c-09e0-4b54-9707-6038c20bf673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14b66e5-96d1-4bb5-9e20-046e59e74bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4aa049a-72c3-41fb-b03c-b0f3592547e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e203c35-edc0-4de2-87a8-8374c49ab107",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5bcc5f-2da8-4462-a7df-1ee681a938e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1c4109-0216-4d86-a330-5b6adde675c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bdb172-2fd2-497d-a9a3-6be171b891e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2bff2d5-db69-453e-8f43-7f4e32bcc52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c601fd-fbe0-4801-8a47-bcb1a434195d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0eab01-57a1-4422-a1a9-ad0b838a6b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96220cf-528e-4bea-8687-791ec65ec961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0e4ed4-3d73-49d4-a266-eb5c9be762f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dbf6ac1-65c6-44c1-9442-a104fd211fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b72600-8a3e-4433-857e-9e3012a8787a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8a5b00-1a4f-4c65-81e0-ed2761a297aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ece0d6-8651-4d3c-8e69-be17e9f55f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f980b6c-7f01-4213-83b5-0f9e4126a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "280847f1-5742-4ef9-a420-e9f1a9f57b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4c55d7-151f-4194-bfdc-18d26a605116",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05879c8e-55e0-4f16-95eb-46e10f649e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edb116d-277c-4506-a801-65839f18252a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffbdbc8-677c-4b8a-89f7-e2623ad0615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40315a11-0d47-4f18-80bb-e82dbf6e3acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6b35fd-c75d-448d-8e10-aba9ac963919",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700dd7ea-ff3e-4d47-8390-63b7154c2dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2895379d-2a83-4369-b7bc-a60f38d5d70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b985e-1bfb-485a-a0bd-ad62a2246064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eefeb708-7f36-422c-a98a-8514b8326a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a51b64c-2a64-4092-9087-59842a06dd33",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7fbcda-e6ff-4cd1-b64e-c5d56ad451fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c32918e-cf05-40fb-812c-0b226d6c9cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b563e14-fe9a-4d16-a315-020737d9291c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd9d7924-2d55-4f3d-a756-203f35e1b9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb86ceb0-4210-427d-b213-1b3131aae770",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561de38e-6a0a-4a43-9e94-5f128c1e6ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d18b23b-41e4-428a-a3f7-e5c0ef04a542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9b04cb-f664-4c07-b0d8-520840f04125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e89fb30-52d9-40de-a906-b2085f64de9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7aad01-9573-43d0-9625-bfb517205281",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78d2db3-100a-438c-b255-e072004acfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc296c44-a143-4c06-a79e-50f4f9137f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5702045b-234f-4701-a74c-587fbc87e1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e97e9865-cb53-4491-89f8-b6a8dfdbd805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d979e914-a836-4301-84e4-22053d380ee7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd70ccc-e564-4e77-a7b4-5c47b2d4cd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b94ecce-7af0-4058-b70c-8eeb0befb393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9490599c-6eff-44ff-bb9d-ed509efd374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75487ab0-840c-4ab3-892d-6441eb558c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23188b2-7e1d-42ec-8e67-4b823172e9b3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf327df-968a-44a9-9933-10ad43cbe376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75818a7e-2e17-4d8e-80e5-6d6c0ec19b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ed25b-12cc-439e-b8ed-829bf32ce1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6fc7ac6-c210-4e77-a78e-473ddc3cad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eb417a-3754-452c-8f83-c8692964bdf6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f74410-204c-46d4-a1d1-1e4210353de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c27f792-b2d4-47fb-bf09-4c466ac7c85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aed7e1-f957-4f21-a1fa-2a7575d9b53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9debf88-5cec-4e0a-8661-b31a4796d47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff57f6cb-5656-47f2-9646-f4a03131983a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc56fc4-90b3-4265-a611-c4bb9e6a6637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9051b30b-2427-4d95-b60f-1ee8c17dfe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5cab9a-c165-413b-a1f2-871cfe33f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bc8d11a-fa4e-4b65-b0eb-ccb99988e8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78c561f-7edc-47c7-b102-c43dadb35ca1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01696bea-2ba5-496f-b17a-a185f301f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9417c31e-d3d0-40bf-8a42-10232226b66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa6339f-3401-4638-ba49-7135f7888aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e64c499-6f5b-408c-b47f-6e4c0c23c96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b4df0a-63ce-489c-895e-206c2d174be9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef4f886-085f-412c-b651-5f88b784e243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4831a25c-64b1-42fd-9eac-711e0e972da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123ff5a5-0b31-4112-86d1-dd518cba6f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6510a3d9-4234-4253-8169-f13bd4160d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba3d9f-1509-4a0f-bad8-fbedc6abed7d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338e7756-b9a5-4063-8375-79fe97217da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec5c779-b3b7-405c-9b29-26ecbae12d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99832828-56e9-47c4-af90-40b6eef18f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73fb88e3-6f27-42fc-a808-9e8be211fc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726eef11-2697-480c-a4ea-050fc558e1c0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634af75f-d340-4770-9d22-d44b1d34ae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca31aac-14e9-40f9-a068-fad59f129986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889fd57d-b94c-4692-9e18-e5bb2929526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f89ccd1-6ecf-4b77-92d9-dbfb3174448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2fee85-6f4c-46a4-a558-cb378bcd6486",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e2b00-62c6-4de7-8da7-e145839f7093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f2275b-7270-4e92-8909-c32f2698e315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b12999-ac03-4f92-b6ba-e393604a89dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78f73df9-f238-4ec0-a3c8-ac9940c2e91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd90f90-ec28-4547-a0ed-70ed34cddd06",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440be14b-2b38-4e6a-82ab-b8fdfc838cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e63bed8-591c-45e4-a1df-c21c369c36de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b61401a-96ed-4802-9252-f871a6c977e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23e48c15-e7a3-4d72-95e5-7f92b7a17dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb77aa94-3492-4fca-9144-044b3df77363",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1337ee-8ab9-4b16-bffe-b422b773e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efdb2b3-2c48-418c-aa6e-09797c1461e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcebcfb-5b7b-4eb5-89d1-489c69b446f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "469bbae2-dbef-47a3-86c6-bb183e298bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d534af9d-c083-427d-be94-e03f48a9fe16",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2869796d-ace4-4c33-ae8f-c270b1254768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3193f3e1-ebdb-4ba4-b1cf-4c372ca182c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a98c2f2-aa5c-49b3-aa5f-dcebe45ad463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1efea9c7-fc16-4b60-9b19-d259d833124b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb11ec5d-8959-4cb6-a14e-cb39a5f152cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5f26eb-b8cb-4f74-a122-d51f20fde452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246963cb-50c8-4305-be8f-3a928655260f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e80605-b237-4eab-a314-b48dba0fdb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "410e5d45-9890-4d05-a22c-535c831a8d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48ca199-ab3d-4249-8117-9d900308e7c8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a50eb4c-a188-4a19-9673-db43be4b0034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e27346-98ec-45f7-965d-55ffd8ec65ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a70c64-c2be-4957-9621-4abfaf158ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f24a40-1a52-4a8c-91d7-db7bb5d6c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4ea9a6-c923-41d7-8a87-e5757d370142",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8ff125-0a47-41d5-98ed-94177b3bf9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fa9ee7-c4be-48f3-8b6d-0c7738f9f048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7381ae89-301f-478d-8e9e-fcc0949bdd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ba4886-b361-4868-8d47-eaf2dcd6cd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05b5171-1912-48bd-b6ef-4a646b639e8e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80f559e-127b-468f-8667-1216e0e4dccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f9ba12-ae63-4afc-91a8-825661b7ac68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76bfc77-c626-4ede-bf51-4491492ed754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5613473b-263c-4484-b90e-1f6548abfbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b1591c-25fe-49ab-a310-aaef0142100f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919c2ad2-8c47-4017-9e48-25d2f7eb0aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c565d98e-d85f-43c3-82b0-6aaacf0f2a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95072110-04a3-4c17-964e-4a394d5a7099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a752a54-df3e-4d0e-9597-81cf6b9ad79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc38a1e-9f40-4fb1-844a-1666dc824ab0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48ac1a5-1741-46ad-9c29-96408819c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e284b6a4-5d91-4ae1-94ca-a419cee01249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd58388-9368-41d0-bdf0-5db66da539c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dc9830-d299-496e-8f7b-0f115b527f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbea30a0-e735-48c5-84e2-527b90993068",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a311cf-53e5-4d0c-98e7-2a504dad9adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5a3029-695d-44c8-950b-fd8ad0780c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081fab9f-826c-4621-bfdd-a42b6ac7f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd09702-8146-47d1-bf2a-c92919b7a7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90d4261-791e-4a7f-aa9a-a19aa89cfaf6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d592d7bd-66c2-4239-b3cb-e7b13dd17b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc965153-0ef4-4540-85a3-78a22d966914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b07b3f-7895-4408-b97d-7314424337f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d868b6-f07b-4d8e-931a-9a9ca2d4d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4325973a-fcb1-41f3-ba6e-64a7b51a12fc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0c0fb8-cced-49f7-afec-0ea919448bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a261a84c-4e3c-4339-91d5-9cf9a5a1052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc192f6-5f34-4acd-b93d-be3fc312a3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ce6db5-66da-4784-9275-23430209038f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41264cff-3f88-42bf-b6f8-883510c17baf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac17bc7a-1612-4f3b-811c-9599a4b523a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c8f6cd-d18b-407a-942b-a7d6db7a4396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f89b7b6-7b12-43e6-a3cd-24a65ef856c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaa10a6-f06b-4f07-9958-f0af693d71a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae28913-561d-4f72-90a6-0390f025a209",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c65ee28-c9f4-4c78-ba98-63083eca35e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4b1709d-8cb4-4044-878b-2d2cbeab0a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fa75ef-4c5a-4a71-be3d-be4a803508a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e17ef38e-cba8-4881-93da-a13e6ed4906c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e096310d-b13d-4467-96d8-ee2d3179ef4b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb1bb1d-2623-47df-941d-566318e6d0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee7285b-d249-4b19-a3e9-90b8202780ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b596f3-9fb5-4e50-80a3-2765d8a5a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84b08580-397d-47d6-ba23-5561fa68d757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dd4a5a-eef5-4f21-8b0a-8d03dba2b63c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b552ed7-f32b-43b3-a76f-c469334f62e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eef12e7-b249-4b2f-82ee-0525143ca7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ea24c-10ae-4d70-89b0-10d7b58765c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f99388e-1a33-4c8b-93c4-bfeda0e22b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3cc538-372b-41cd-98c9-57497ef026ca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1854845-9c7f-4a76-bfdc-b012d5307c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a854873-5d11-45f8-9e40-e61c342ae486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24084cae-b1b8-474a-8182-0545ea086436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34b73a88-337f-4ee5-a2e8-30325bc1f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befd936d-c4a7-4683-9f3c-a2c2354c7490",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665ea3da-3c16-487e-94fe-d2610858ec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce9b9ae-eed5-4065-a625-d28962a26620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d6bca-4e42-4b90-b010-c1be08e8d4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ff4e86-39e2-4342-9da4-059ee3299f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26eca98-af2a-4756-a56a-35e56c67e4af",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd1169f-3a8e-436c-a5e3-56b6deae1c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c148fd-5847-4384-9131-5d0bb92ef9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850d9176-76a6-423e-8556-2c24e347a0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49c0df9a-2798-4d51-ab4c-3cce113835f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40780c8-52c0-4753-982b-f635cf962ce3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3543f33b-c0f1-4348-9204-ae707ac37897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aea967-d0ac-42b0-9830-409403fa2edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5406646-ac31-4adb-87a3-25e4e30c59bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2b564a32-58af-43bd-a909-d05a7e798b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840172a4-fdbd-4d7f-9d46-389a81a30e35",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c172d3b-0d2e-4c9f-b176-1f8b8acce346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eccefb-96a9-4881-848a-eb64ad71ccfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32327d59-653c-4ab7-be76-456e8bedca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac374e66-7ebf-4dce-84cc-cc7a47451f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a8b3fc-aa12-4668-a433-f13c5be22a73",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c92826-4435-4e28-85e5-4a134fae7c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6493f7b4-3731-49c7-b313-b11c0dd7c1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379457ef-d41c-4217-b7bd-8d749036f007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "785a0c0b-a438-4523-9940-4ba88dec4862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a059f669-5081-4b46-af22-6db88a36acbf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0e032-5f28-4475-b504-d8c97908f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ae6648-a830-460c-99bc-182c1f58beab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b918ee24-da3c-4f76-8e09-584ce5c53a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de1eee4c-086c-499e-8dbe-c9266206446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54741672-7cd7-4741-a65f-a3105b47da8d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dba338-9c4b-4833-828e-0853dc85554c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02800f7-9fd1-458e-a1db-b5257537468c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94935c4-0cc7-4cf6-bc03-efd4643adac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46be7422-a020-469f-b321-91a16c4f38f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4219bf-a7c3-4daa-bfac-1a8de7e26eb9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93c349e-2812-4b69-bc2e-abcb7a64a858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea86933-609c-4dfc-bdcf-25400cee6b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e9afe8-4a67-460a-92eb-a227c85a44d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ece96cc-d949-4b3e-ae4c-cb149ff19f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aec6c2-6b73-409c-8931-faa56a286f85",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033e4bd7-23d5-426c-b4e4-6ffcf7e7c2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7ad2ae-27d0-4686-acb9-2f38c9a6fa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a6b09d-21a9-4b6f-8eee-73bdec049ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3ff88b-ace2-49d1-8753-4fa8297b4fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f317df-3531-42d8-afec-1e0b28ecc9c8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c43b4e-e810-4c59-b665-1a6f23f701f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c537f28c-0601-4990-b5e9-ec5d1739aa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14071a6f-f922-474e-ae10-b4f0fdc0b569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c31aded4-8a0e-4adf-8411-eaa5c795b4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c0861e-f181-4759-8260-4b45640a38bf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931410cd-27bd-4c31-86e4-76c462acd79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bb8b90-213e-4121-9e2c-a283938f3e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76339e2b-c852-4218-ac24-c0260815555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d57c4197-ac7d-4012-bea3-88cb91e14b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0a90fa-a5d1-4280-83c4-57377d9c9c7b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca3bae3-dc2c-4a3e-9c6d-5914355870d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34949e1-2439-4679-b212-eaba13f12a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227c225c-daf9-4855-93ef-c2e7d9a5f9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ad639b-6693-4117-adff-e8219fc4e2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf92ae5-7572-4f07-97a9-8117fb45232c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ec8b5c-2fbd-4e76-a4b1-0d6f48f0d923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed19464c-276f-47a2-8ae2-1a98e4f2ad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a303c20-fd30-4288-b165-4b02222c7923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdcfc46-f05c-47fc-8501-20ab3898cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7369c57a-6742-4b7b-a861-b882e16c63ec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29074f-511d-465e-9d57-ac53cb3f5d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4844704b-c95a-41f4-80ce-e26434cf7957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95cacdd-75de-4948-a54e-eacfc6b8cf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cd40ac-e7fa-4281-9322-a2e743b53063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f3a6b2-c5a2-4ebc-88f6-1ec6faf92d32",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf16b9f-b5d9-41fd-998c-7f4a5fee3f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ceffc5b-70ac-4720-a25a-dd9b90bdc440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a078eb86-d5c3-4174-ba07-3048115f99bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebcbf90-151c-4824-a767-e255cd940c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd75c2c-dc72-4a87-ab9a-f54d03f2c84e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adacd800-289c-4c74-b687-b1170341bf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c145f8-14c0-40ad-87f7-2644567b4e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876504bf-6e5f-4af7-9b0d-f20ea58dd4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb0c37f-3145-4fb3-919d-a802dc161db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dc4eac-8088-4771-a550-187c3da98ea2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e963dc6-518f-488d-b3e4-7155bfb45bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb5eacb-ed2d-4d4c-8582-770da62f2b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64027cd2-4f71-4596-8239-dc62362280a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "38f73e5a-331c-4765-a4e7-08572ffa94b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b0cab7-c296-4f5e-8706-72678548b374",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e016f78-4907-4bd6-a70d-d5d67ae9bd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78beaa1-78be-4fa4-9c47-bf9c02ec0866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c659c8cc-d97c-4cb1-9436-c144c7c4b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "978f236c-7ecc-4b12-9e0c-d0e4b155a21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eccb0f-bac6-4fed-8c06-1489f9db315a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfaa360-9b6f-4fd6-b1ed-36ce395f8b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc55ee9-98c1-4e42-8695-30248c0844df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f27b6-f8c9-4702-9317-3199036529c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44873d24-2309-4b00-bb17-5fbee4ff49e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d40f48c-0e52-463d-8d55-885c3032350e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd197b6-8672-4bcd-abd0-a43f3236d141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51bc33d-7542-466c-b402-aff1d33c91aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8dfe0b-3c18-4e4a-9c1c-8eef4a1ff745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b440a852-1813-4a4a-a75a-64d4579a72e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22327b02-dddc-4a10-8b79-e8cda281f8ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0a8d88-ec0c-4226-8c85-255eeb0a77f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3870d882-d3c2-46df-a2f8-380e2b3345fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c1016a-56b3-48a8-b53d-1d40d4ab2dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b228d2d5-dddd-4ab2-8832-5c91864e9449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4db92cc-6460-4731-ac9e-d406610373fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3706f059-2c55-4cfe-9d1b-f7b3da9b77bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b9a044-e010-41a6-aa15-26198269951a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2bf084-87f8-40d9-b3dc-0a09cb896893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cb01cf-f174-432c-8f5c-d4b0b1e51f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dadaa18-c9f5-452f-83b3-976ddd05075a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6885eebb-4552-4e61-8a60-55357189a280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ce9a16-d577-4b5c-a3cf-a13adc80042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b42072f-448e-49ca-bded-8ac84b98a86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34d986c-5b1e-439e-9827-f5f252750713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3839731f-aa7e-4b7c-9c40-9a9341bb926b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc8dd4f-637e-4573-a56e-ca5b1ef0e628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d643132-1dcd-4465-8be5-20bb2c251277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f50cb2c-1ebb-40dd-814f-3ad0fad3fc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd488272-0553-4618-978b-e0ac37be49dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d706eaf6-7117-4c11-be83-4d80e687ef43",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e80d07-27b5-4698-99ea-785bba55dd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e688859-260b-49a0-b5b8-1d60f56f495e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedeac18-4bee-4411-b641-65c29483d9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51f9d59-1226-4bf7-bc52-e42c7fff53a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d911a68e-84b9-42dd-852d-5f642723850d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804d995-f88a-4e84-bbbb-44979ba38f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2a617c-4dcf-4e39-a402-c534f30b3d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb7fc97-b934-4b8e-bdfb-f71dbeaf9e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db9070d0-b1d4-4e66-9bff-a51f9333d037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e592f02-063e-4592-b6e8-da18699feca0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdabcab-1411-4db6-bee2-5c83321f89e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bbd753-e8c5-4de3-87a1-e4645e6cb8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410d890-f35a-492f-9343-2fa6c62b5d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b82a8b1a-ce23-46d1-a744-75b336ac5dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdab3fd6-5f86-4dfa-80a3-049e2e9354ed",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6866168b-b442-49c3-a6be-c09264b4ec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72e820e-9a6c-4972-8740-27c7cbd34cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cfc010-1021-4482-b991-69807a266d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37adf26f-9725-44d1-8bfc-0d8e36d5efb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03de8e5-fbb3-4d8b-a6ff-03e096172b72",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1701d31b-45c3-4c4b-8da0-df2f284d30d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37158bf8-c2aa-457e-a351-dc3429f4cbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8330b64e-7968-40bd-b78c-c36ffc74b072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e5869c-5ad8-42ad-a0f7-293d08f1c1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2721fe-a955-4efc-80ba-1edada275714",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be2dd95-9b0a-4da0-af45-fb1b7a2c753c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7404f698-1810-4117-b8b0-01f1b5b0e5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e1ad51-8613-4e3f-9d48-adba4379b6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95046312-b2f7-4af4-8add-c282dcdac1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858d4bb0-5af7-4720-800c-ff0f2cd98aa3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b9633-d7b9-466e-879b-b92e17209855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188de425-371f-4651-b4e2-34545fea3c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1aed06-aa30-46c6-94b8-21908255128d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55f50420-61b8-442a-8108-5698f01184e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96755c8b-c04a-47b6-9d23-78ef419b5586",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bebbff0-4bc8-4a28-89ba-02abbf72a349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0d0fee-6225-467e-86de-a0f4007adbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cb6685-6fa2-43e2-9cad-b8702d8d0466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bbcf8e-7265-4380-a683-507ece3f7946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530fe113-15cc-4ad6-9180-3aceb46aee78",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90574742-bd2f-4f23-a31d-249c08b4bbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39cb428-dd5b-448f-93c1-9a9e6c54a954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc24c677-94dd-4b64-8c90-7e2cf3808776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8be79c-54cc-4226-b45d-79a3c8aa94ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d965216c-91d5-455b-8f9b-7e8f885b191c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259dde27-75ad-4e32-b311-b0fac839ea46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f171fb6-8566-4114-a741-2c58977c2fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946fdc38-2c8c-43b8-ac98-d1cfae067e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8616d8-61af-4871-99c4-56a39bf52667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7030ee2-48e3-4a4e-9a7f-98747bd720e6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac50594-8d06-46ad-98e0-830aad883711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d317189-41f9-4818-9887-7f5677f370f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf091325-aa8d-4fde-a0bc-fcc5bed6c1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34178679-b751-4a28-9659-e2c7cface2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb95a9-0457-4db2-8b6a-0faa35700750",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b56d5a-3656-4d82-b53b-ac56330dfc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9401937d-fa43-416c-8693-333946bc6af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dd7319-49fa-47ed-9d39-97bfd5573472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d62181-f597-4988-b6e2-58a0ae09bea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa9d889-96df-4be6-a5b9-d4539a61f2f2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927631a-12e3-4cc3-986a-15d2c48450c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d8f7b0-e3d6-46cc-a929-87278ecf86cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0768214-f123-4f98-b276-d6843a52cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c999bac-d1b4-403d-84ae-cfc28bd4730f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eba5521-cc5b-4d6b-b2be-4a3e9588bcaa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7943743f-5445-48b5-9ab6-fc689f953b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf99727-69cf-49e0-a79c-37c39c44e9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac73822-a07a-4273-acfa-ead3e02a5845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d508b2-2771-48e6-8ba1-927057cfa776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472089e0-181a-4420-a79e-898bb48aca2a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e21ed94-5a4c-4de0-bc9b-62323eeb71a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7530973-0bda-44ff-b148-a5fd4f9941e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b3e9c-a797-4129-8b25-8f765b267482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b362f5f-1b83-4c67-ac6a-3badfbad6d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1d426c-45f1-4c39-b453-a7f1eafe9932",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dabd073-7caa-4888-91f6-8f39353ff927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81dab484-adcc-453c-8c30-a570b6de5eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9decba5-f573-47a9-b85f-0ddc9faf5730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b13f37-1f37-4801-9107-67f5565960e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ea4d48-7805-4d3e-9b8a-78ab4143724e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010b9c0b-6f7b-4201-9e20-1824eecd3bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7330a88f-de60-4f6c-8b49-f793971b27a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2f5a70-b3d3-4eec-bb4d-3b3eb64808e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56d7bca0-fb3c-441f-8e1b-4026d88dbb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dece4f01-f56e-40e6-a049-e6881c2bdeb0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02595688-d05f-4a2a-89eb-ba4c9ab10a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5e56b5-6de6-4e97-8dcb-57d1bcc1348a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957077fe-fd85-4763-88c0-9082c7c13b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "add0df19-5aad-4c50-b603-6008aeec7689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088c16a1-299b-4080-9f9b-4dae4e598be4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8793e8d-4e9a-4408-9dd9-377caac99d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1538e870-41c3-472e-bce8-74464529ef1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca398850-2887-43df-b0f2-934592cc9812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ca75ad-dd88-461d-9968-2ba0b455f649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecd117d-d326-4702-a50c-f7193d034be5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4f7b12-2fce-470c-818a-46c4ec636c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e87c4dc-aacd-4fa8-b221-21b28fe929d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6fabc-de86-47b3-8444-3ede07736fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b622b7bd-37ff-417f-800d-566de68e3580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af48f9b-dd6a-4ee4-97fd-c70f56f8f797",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4bda68-2b8a-474e-8712-aabdd0debc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8711047-1859-4811-8688-4811c365676d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a59e23-c514-409f-a9d1-eaad538d0d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "636d1e92-fd49-4b19-8879-7ac67648f62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58718f4-9ec5-40be-bf3f-c83573b36336",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de9c2a8-28b7-4591-9b8e-ac82d9a51b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86bd864-9ff6-4e7e-886f-5ac9fd5e387d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fed5aa-74bc-4519-9d51-c40dd8d3978f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d90edc1d-ea0b-41e4-8f34-6686e1d0cc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfa24bc-c546-47a6-8952-2e5c62455860",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4145539b-cee5-4897-ba92-e436804c3c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e488b29-9b50-4b84-9852-ae1bf8bb160f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6602dc-aead-4f2d-af60-ce833b052624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a72aea-c0bd-4534-a99c-73d01418508f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4895ec54-5219-4b7e-a7eb-51306fd8faf7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e7b9d6-337c-4be7-ad1f-b55f375fb924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b6c736-3c22-4866-baa5-2164b3c0f86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9db664-12df-4c7b-8526-1b7bfdaea8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "888d17a5-490f-4569-be89-57b9fbf3e904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eeac70-8d2a-4f95-9293-0cac074ed263",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23d43bc-d134-4ee4-b15a-4b626ee02144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb507cc-04c5-4a7e-9f53-6e9f1b00575f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fef6cd2-4c34-4f6f-9085-ac778d25ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4317f9cb-2700-4ad5-b356-b9002446b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8e43b3-b571-4a19-942e-b35b0d4bab6e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4430ba8-7188-4011-9cab-0ce121204a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b43419-1777-4cc3-aa5c-f5ebb1841184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae97b95-8d55-43f6-9ec0-81ab47fba39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ae6ba7-4a57-4501-8567-df3954915353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57dddfb7-38b0-4d00-8776-ba735ee7c367",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93671c3d-ad99-4aba-b525-01bd24301a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87ba138-68ab-41ee-b5f0-41d00426ccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d2d759-0259-439e-a58e-a5e29cd95321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b172dea9-6aec-43c1-8ac3-3420d4c002b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5e4071-abc9-45c6-8d53-fa11844f35df",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261678cf-fa85-449d-9875-87881d8a1f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3f9c2f-0bcc-4618-bffc-08ad4ac62071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af4a113-5828-4342-9d2f-ba57f8c2c34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "224b7604-f9e3-41c8-8bfe-c5a8d6fc4dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f35812-255e-4b8e-bedd-ca498f57a2a5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1745d3d2-fe2e-4f31-91c1-b1bbc16452c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "28086f0e-900a-4284-8ccb-44728046ce72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0b5f0b-c11e-4603-b3a2-7d856cabef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c998df50-2278-4c44-9938-9f213fadd70b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7891e139-d608-438b-b7c3-440053a8ebbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59546081-7d8a-4543-b5e5-26abd58be448",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43020a-b1c3-46cd-b324-faf804523014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81ab03f7-d2e2-4349-a086-25537bf36e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c8dabf-3d99-48a8-ada1-a8ca5efe3c61",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e0b522e-5c37-4dcf-bb95-4263c9db4e59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36aa3c5c-a15c-4000-b009-3a5c33f4d968",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "640b5772-c612-4b43-83e8-649c67f7bdac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1941f2c-146d-411a-be19-47a559e7f423",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27163329-125d-49fc-bb7a-12f6b4a15b1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fcb1bd0-6789-4f63-9595-b3405c654a75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bf4ebd1-6f91-4fd8-9f16-11975f758427"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98f3062e-203d-40c9-a1c8-a7d1ca715210",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bafd632e-8004-4a5d-9017-bcf14c5aebb5"
                }
              }
            ]
          },
          {
            "id": "c7d73dc8-ba47-460e-a34f-5355c8aa095a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afc0e6df-2ca6-400b-a1ed-c89a2af90808",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9757232-06b6-4fea-998f-17ad27d7fc6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b52485d-4fbb-40ba-888e-4e951cf6eb71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f5d6770-c9a1-4f56-9918-872e09480868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1e5113d-3bc5-4840-996a-c481bd590398"
                    }
                  }
                ]
              },
              {
                "id": "65e5448a-137f-410b-ac8b-9a050ca4368e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70727bb3-af76-45f5-b47c-6b8989e03d81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5560e171-96ec-4990-8848-fd94571e161d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5af06f-f12c-4782-ab01-af62b4f85f93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed89e5af-b74a-4318-8579-3037f782e26e"
                    }
                  }
                ]
              },
              {
                "id": "5114156f-531b-4758-883a-de79625f7232",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53f2e8f9-2450-4d96-a2f0-5bcd1e728567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80455af3-b1a2-4d6b-9500-a831218d299f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c24265b0-c355-4daa-bcbf-366f33978fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f248e26-b560-4a70-80ad-76598f287355"
                    }
                  }
                ]
              },
              {
                "id": "dca2c857-3c31-4b61-a6fe-7ec8c532e7f5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02295e06-0ae3-4926-8ada-43e402216130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5535e88-aee2-4eca-abab-94c62aef0604"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a0732f7-fc8b-43ce-8123-ee70f3c2ae52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8838ed4d-abcc-49bb-9a51-bb6b4158d852"
                    }
                  }
                ]
              },
              {
                "id": "b5c44758-168d-485c-a874-3df6a35c0de8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "088f5205-05aa-48f8-a7c4-ee1705d5b53b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e614f0cc-a131-4584-a8c8-65086eb26feb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4c07d2-41d8-465f-a766-f330328db218",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "412902c6-1bb0-4697-aea7-7ff67a0e0904"
                    }
                  }
                ]
              },
              {
                "id": "039fc4a9-bcd5-4000-ad88-72d784c08aee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "338820f8-63f8-4e05-a5e5-4b018ca0236f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dd2c9cc-3408-4b0c-be6c-815ad7ed6434"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42f9cb2d-68c6-41a6-b5db-ea65bab1cab9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9d2c082-d002-4469-b59e-095dd8e7e768"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12bf5433-09a3-496c-93b2-e2dfa6f8e02b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b00b453-3a92-47dc-9116-c535705fd8d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd8d5977-ab9a-4b58-ba1d-af53e6fb2219",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c479053-5c89-4152-8ea2-b05114694205"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbe23524-750c-4d94-9e89-575e0259965e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d0fd3a4d-2231-45c7-8e6b-280622ab0d92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5e84c2e-9477-4ec3-9773-80323f3ddd70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "704c65c5-da16-4cde-90a5-950621e43f7d"
            }
          }
        ]
      },
      {
        "id": "1771da3a-e7bb-48e5-9fdb-f63e1fca35b7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8dc050cf-2acb-4782-ae1e-9f84adfb8778",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81b7fdb5-424f-4742-874b-34371e3a5ea0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3b2089c-fd9b-4112-afa0-0895087d216d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5fa985-2469-40a3-96fb-8bf0ff0bd761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e297b6f-2143-4416-9c4b-cfeb71be26f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f78ca48-ec73-4c38-8300-1229e7f9377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "61dd7bb8-3aee-4a1f-ac8e-3d835378bdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d974d566-2231-497e-9e2e-1541934feed3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6698e237-3423-4745-9b74-3a80f9b520c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fc0e40-5fb6-4d47-aa8e-aed6a8689977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cb9ebd-c581-4fe8-92fc-e756d90838c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7a8013-90dd-4076-815e-17772bceffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a83a6f-bdf9-4515-8e51-6b943143a2cb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705983fc-de08-4a36-ad6a-cf025b6e1e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178e796f-a4c5-418b-ae73-e38cfaf2e4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8c500a-bfae-4f8b-bc22-30e7ec671836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d086af5-4307-4af8-942a-d5ca84f1306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e608d0-6a58-498a-ac24-6e831703514f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d033242c-a4b9-4cf9-bb9c-5e2cbf86caa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d966e4-12ee-421e-8382-2f5c4e81581f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b632ccd-f84a-4054-9875-b14fb80e53ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf1501c-b938-4922-9d77-a250fa6a97c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563fd17e-4e9d-4d48-971f-de415df1731e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1d77a-d4a1-48af-a122-9663622961d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75720c0e-48c5-4225-98d0-08dce6fce71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ca2760-cb30-4067-8d8f-7adbc9b3754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffea5e9d-4960-47fc-ac07-34827e863b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a0008b-846e-478c-bd2b-31f77de5c894",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c916d0a4-5ca1-42b7-a236-8185d08134bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078ca627-9260-4548-801f-3d4171d4b0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327101f8-ba62-45f5-aab0-3f9b3e0d9ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35b1df4e-20e2-41cc-a13f-4a92f49a84bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f016e6ba-10c6-42d3-8708-82bd1c0be27b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63615150-0b3c-4de3-8333-94744829fcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fadf9d-d90b-4237-83f3-85978760bab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e97979-a83d-4463-ad7e-e67a364b8f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2883fbe4-6070-4f18-a0f2-24aef9cfb014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d004d894-22e1-42ba-a3c3-c5f6082a03f3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1275c84-58e1-4b71-a30f-1f5de34b88a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11692c5-fed1-4922-9d86-5e6670b21bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82387d1-97af-43aa-a50e-c71d0d7f3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8875ca-efbc-4c4e-ac25-5a8ffdf57aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730967cf-c2df-4e56-ba4e-02ac602192e3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de61f60-290c-4c0b-9caf-d7c9965f9e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcacf0b1-0101-4cc2-a688-8e34e5eecefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d18db87-9895-40b3-b442-4852e9ea571d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8ad831-3d64-4c5a-9516-262af05d170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c193419-3717-424b-87cb-25ecae883c80",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a739e288-95a3-4425-a42a-823ed660f5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ddbb46-af7f-44f5-a9cd-a219e117819b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ebfad6-0b0b-43aa-aa1f-984255bddeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1be0f61-57e1-424d-a3f1-95ddd001ab20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e411d-54dc-4a9b-990b-6ba11385add6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d0b23c-097a-4391-bb1c-0a0b56b87a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a7aa4d-d7ef-46e2-a185-82909f36c202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5151436a-91ef-4456-b96e-3e45c8596e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3cc48e-7b81-450d-a4f4-eb46e5dbd748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10242605-b8da-4081-ab84-8668ca79483e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becff5ac-902d-4d7c-ae65-fc3d2debd6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1919279b-87de-4e29-b8f8-b51c76d6a2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6ca12e-9cb6-4f5b-8284-e6fb63cbd639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "979ef1c0-1563-42a6-98c6-2e5501babb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ad51d4-a05f-4d22-a082-741c0674a4a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43138cfa-cfb7-41f5-841a-06ec185b1143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dea14a-4d1b-4f90-96a2-bb1d205fe5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a738a9fc-b07a-404b-9c32-16640bd7746b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a697b375-afb6-49bb-af1f-5f6d10bf57c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fae645-f678-4d97-b4aa-07da2e315e03",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188d0543-a5c9-47e8-8762-0d2bb3fdd9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ed6dd0-d279-4c8f-988c-ac62d8ae4c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98427b0-a25f-4685-b073-9f6dfa33d76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afe0422-f3e3-45af-85a3-475eae8b5b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f90a90-c4c8-4a42-830c-286bbd35f661",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5bde6a-dce2-49a2-9076-51d7705af3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5f4459-86c4-4e38-b3d3-fe5ef5d87e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba72e4a7-fbdb-45ef-9428-a5c99e32dfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c828b7-bbef-42bb-a883-2c90e5d986c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7b08ac-e8b8-4586-a25f-ed7bc1b1f118",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13516ac1-bf32-431f-b497-2187e9b37ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e78b7-3744-4b4f-8a3d-ed394a51ffe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4e4ab-d923-442b-a1cf-2b40b388cf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e236d59b-4031-4d2d-9bf3-257deb60d557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabf2a03-3abe-45c6-9139-1971d6f4594c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c86509-5efc-4e08-a125-9b8f6be72594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f5613d-014a-49f7-9718-c659fb77b9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8641abe-8ef6-4f91-9420-b00201347e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "414a4fe8-b1a0-4aff-8277-7bc12e213fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a212cc-ef53-4365-94a6-4974624c6d73",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3a1fd-e5b4-476f-8966-e07c021d56f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4e6638-b8af-4415-854d-ef1296f4f8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b638f7-d4fe-4b75-8331-1eccfcc2fe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4158ac0b-b4a0-41d3-86c0-b2b070298c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bfd549-22cc-43bb-8916-5a38b4249172",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507cf023-d62a-4b43-84b1-9b4f4f76d12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3833128a-e40e-4814-809b-a003d7be87f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7234bf71-a94f-4472-82e5-3d911ac48e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e005fe-00a0-4b55-998d-6c3278782343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652a1c41-8b3e-4d97-ae47-e5b0381bb837",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507b6d32-0b2c-4b79-9c2a-bc2f1e13ddb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e8f4e2-4635-464b-9a56-1fa5554cc54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2251645-c8a9-47db-97b4-0880d0cc4546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f44de15-c2f1-4abf-81d0-ca36f10a9466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01438a85-127d-40fe-977b-4ed7ed01df23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82577738-83ed-4533-823f-9e09889156b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf442d1d-d86d-4b44-ae78-3326ceb43dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ee1d65-acc5-47ad-8abf-56b4781ad7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "397d5e19-c807-4771-81e9-6e38af4936e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276589a5-dc54-41be-afcd-fd8b81cdf000",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e179c4-cd2b-4228-830c-0f6f923290a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cd78a3-c74b-408f-ae38-5ffcb2da407d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96292f7c-c805-4fe0-86b7-b6e954bdd634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02151b7f-d91e-46b2-b503-147d3e248077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdce599-a9e6-494a-b4c7-b0a6836e2ce1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e419754-e61e-485b-9f19-5dc894cf91da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b076d264-7a15-4145-a2b5-9384f9905cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9a47e6-57fe-4dc8-91dc-c06a8d1aa37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76013d25-64c5-4e08-b606-c4c6e6d6434f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f805827-e3fc-46b2-b8aa-d370053b5338",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be861a0-850c-467a-add3-0b019c03c538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29baa03-f377-44e3-aee2-584cb632ae45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df714576-b48a-4c5f-a046-77dd3be2abf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15860b3-17e0-4136-97fe-fbdf5da4f6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0b6756-bb53-4457-9333-d2337c942e88",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23390116-73a2-4b26-ba77-4c52a2abc0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bf139e-fcb5-49d5-8cf3-adaf2aa0e263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01aff37-6d80-4161-8fc6-6423765fe29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40369bef-1fa1-4b08-a688-ad1e189b8717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4472bb-8cb9-4750-87d1-ac0b4db330cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbcb68a-66c6-4a61-99fe-1d06cdb206e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8193e76a-a659-4b9f-b173-673634d2503d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54a46f3-1ae9-47f9-bb4d-be71e4dbe4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "524017b3-f8f9-4451-8f94-6394d8b8afc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9093a4-dda0-4336-8db4-86101e190abf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88c243a-fb21-4485-bba2-70cb89246e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814f23d9-5309-4013-a38d-d2d083a746e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a04a7f3-e6d4-464c-be5a-771dd2f2d931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f331c82-e4ff-438c-b115-af840b80958e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612b731c-8a26-4315-a58d-58392c8b03e9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549d2d10-1d01-41cd-ba92-f2c3e396b640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60d5b83-f100-493d-a3a8-75f280702f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98923dda-d882-4f94-b3dd-3399ccd58f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeefea2-7c8e-4c2d-899a-ea9c71b4caac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab9ad7b-0c14-4623-97c9-4584ab03abc2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1c8d40-c0c6-4cac-84e9-9a075809f4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f0c78b-668c-4e25-a70d-39c3df610652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244db196-bc59-4af9-9e98-658e5e81f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f46264-47da-4b59-9e76-90605fcb75e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d55741d-03cd-4f09-8c5f-28627350082b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5821738-eb93-408e-a7c5-f9e2e7a31fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31c785c-fd24-412e-a451-71d82a3f6b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46fab6b-8efd-4ee4-aa13-161150feddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da02bb5b-cc7e-4cdd-84f6-f801f3d5773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8344ffa0-8aed-498c-b207-61e1e4773299",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d558ce-81cf-4b5b-ab01-cbab19789463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd56fc8-9d3d-4844-ac83-9e7ba817a8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980c2eda-8993-4783-8812-8e4dc7f58955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288d8bfc-1f34-4669-b540-da4917b39489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2dec9a-c929-4219-a82e-526b8a506a3e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49e4068-e0e6-47b0-9860-5961eb99dddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fac0db3-7f2f-4513-8ec5-6c84c1e6b4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fdc953-f2b4-4de8-a1f0-d17fda38d8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "307be4c5-9c7a-4ab1-9673-cf7a9adde132"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a21b391f-1b92-4663-ad57-93c3d422be15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9b40b45-6604-43cb-a64b-80aa084b88be",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dadcae0-72de-4166-bff2-d91265095d49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "65120654-70d1-4fe4-b80a-990e9da16f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73156e47-ebf1-4b4c-849e-13c745e4db6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75797bca-c2fd-4d0d-a972-356721e94b45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaab48fa-253f-40d6-aeef-66bc3fe9ff81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35acfdf3-a9d9-4275-a185-22ccd6695729"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2619686a-c7c8-4041-bffc-54e2e7c0a46b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "162a8b47-3522-4031-8446-8446fbcfe195"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3c6f03b-5c62-425d-87b7-0af2d692aa33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "268f131f-40d1-4799-b93d-cd1900bd88b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61d15ff2-c9ed-4578-9688-ed295ef66ad7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd6646d2-35f2-458f-956c-0df0feebe5fc"
            }
          }
        ]
      },
      {
        "id": "a0e9a6b5-e0ec-42a5-90c1-01a8e2544d5b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "dd571162-fa0f-40a9-96e9-dac0c696cf69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2346d37b-aea9-4baf-be79-c9bcfb11a6f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78652956-5018-4d61-b3d2-15e769bbea1e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144f4854-20a3-4a49-b57e-97200a077edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06120cda-0f8f-4016-a304-739f2693dff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e410eff1-5179-4682-8ff2-fe77cf252992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6514ae-20c2-42bb-b068-3341a8ff3be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db5892d-b086-4d33-8b1e-fb28e66f3263",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089e4eb5-57ba-4404-a18e-02b81c3511b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a37346-6c0b-499b-b1ce-efb08a737b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f70eb-2430-40dc-a9fe-84f8fb62fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "354c40d2-438d-4553-9695-fbee7dca402a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e589c6-bf25-466e-8f56-2ce9b73734aa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d306579-7272-498b-9636-2bc082db0538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e782e9-c87f-4c8d-9a7e-9ce7c8e460c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d666fc29-8626-411f-82df-92df67b32493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3ce145-adf2-4f8a-82a7-cdeca28ed3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f45c19-d9d4-4c0b-bbcd-6317a0ba011e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21951b1a-3163-4e7b-9792-423c07c623c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c26719-676f-4cb0-a089-5d3aeaef595d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f553e89b-164b-49ec-9eb5-49ebe1db2926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcac2640-9e9d-4794-9aa5-adefe0d2dd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fecf52d-7903-4215-8ed6-b30f066bb5c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf87218-516a-4790-b497-2420fd4b81df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeb2356-c534-441f-b326-0a558cec00b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb73675-1e12-42d2-a891-e4d1aa8e8ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0051c900-e74e-487c-aa4d-939613f3965f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a655eb-6b90-441f-a6f4-3948f256eb97",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16c565d-5728-43ac-a530-cf73791531dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8747fa04-a034-4060-bdd4-087b7c7f3a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dc71cf-ec08-4658-bf90-bb9923d54667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a70d390-e097-4c0b-87fa-9f41ffe1654f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeddee7-ac2a-4c74-b9ee-83eaa6bc71a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab9037a-9266-4607-9569-fd3ebcdd300a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4620167e-108d-4b3a-9efd-74c89cc5be3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ece642c-e6b2-4afa-85a8-b12e1bbfa86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9f85cd-1d8b-49b4-a521-feb18d87ca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5730acf1-5d13-413d-84ca-879a0b24b1fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dfa234-fea9-4f5f-84d5-e02f73b99e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27c8002-d7c1-4324-b245-73acb56a53e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bddebe-33f3-4043-9da9-b5fd42926dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fc8e9e-1385-47f0-b2a1-af53b6dbc477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1a7d89-5136-42e5-a5f9-4cbbab3084c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397c02d5-72a9-410e-a6de-275623872a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fc7fa0-970e-45f3-9273-8409608b97f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2bd93b-27bf-4b03-8b2a-8068315d0bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5666be05-bc68-45dc-9eee-52a9fa0c5f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6704dbb2-5a47-48f7-af15-4350b6157922",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dba5a4-e541-4d00-b656-53266f94f07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ac7ecb-c153-4c4f-bf62-d70013c204f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09862281-87ad-4b97-b28e-d03af1c5a5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3effe6f8-1f4a-41e4-9014-2d13eaed72a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa061dc-d4e2-4562-a52d-53d08424f750",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a847c5f-87dd-43f5-88b6-abab41610b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7db38c5-302e-4ee9-a31f-2ce2712925a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973dfdcf-c352-4849-890a-536cd7756de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10688383-9215-4410-86c4-de45e29d6bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee58f1d-d931-4ab0-8f36-ce55fb83dd3f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2399ff44-4f1c-443f-8bfc-c3d7ea67b6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfda3ca6-99d8-4384-8dd7-967143baaa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf39b80-e116-4f78-95c8-0ee760a3d019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fcd0a8-1a18-4722-b9aa-1bc348b77916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f022da51-cfa0-48aa-b396-59dbd308a303",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8bc9b0-5c74-4b16-ac1d-5450b4080d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcd564c-6573-4df6-95a7-eaca997fc23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9ebf53-12a2-40c2-96b0-ed01c7ed031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78b6520-f12a-49da-8b6e-3193de74baed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322af011-983f-40d4-a03f-2bb310bdf881",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365497dc-12db-4034-a952-7f9a22f8c2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57c4f31-6a66-44f8-b562-1dee0be21caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf1a8e2-f033-4ba1-8040-980eed3c905b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2b7e1f-b0f0-4940-8856-37de51ac0b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583d0015-ecaf-484a-ad92-947b63afdd88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f336a-30d4-457c-86ad-9d98edebb003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98155664-3328-4409-8487-c9cc1adf74c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9315c245-769a-4007-b4e4-59d10b27e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5af2e65-92c9-4c77-b08f-02fb1e5eefc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1ca242-823d-40d7-a3cc-54007a2391ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56a22dc-e4be-4b40-af82-05dcda2b0e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489d88d2-5fb5-4065-8bf6-21199736b6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e457dd-3337-4d40-8eb2-8f935f6560ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da6a7e4f-10a6-4dc3-b208-a39e6c638981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600964ab-acee-443d-8f9c-38bffcd1fe99",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbe94a0-26cd-4136-b02b-d3345852111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cace4497-37a7-4413-b879-403b4e9ada3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6fd894-d901-4482-aaa9-7cb6f0e5ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0ee15a-d2dd-47fa-b037-1fb225f18b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76725e82-6bce-4416-a372-ed23c3ee29e8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf1cc2d-0614-4cdd-94ff-da16338d0d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d791bfa2-a8d9-4a4c-9123-cde0cba32235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08eb460-3a8c-4b4c-b46c-c3d8d15f2233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b87ce53-7749-404e-bbf3-bfd606b293b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011fed0c-6a33-4eaa-9d50-8a443de88ab5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7254cc40-ddc6-4194-9038-468bc6d78684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f02de3-5030-44e5-9fc7-7e349f0de629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a539e798-faed-4f8f-b62c-c1c7142c6857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fdb79b-90ec-4a67-953a-fd0b10385eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58e3709-96d7-40ad-9532-6e0e59d93d40",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94455765-5fe2-4302-9e0d-be5c6bbca9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68079969-0aa9-49b0-badb-7194e56fa079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e92b32-6b38-4a75-8349-a13ac6c5540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043ca090-46c4-4669-98d7-3c6bb079c06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4880b4c9-da64-4d9d-84fd-a906954e4a7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a2924b-e465-408e-8a71-68941f9b2f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ebaa15-843a-424a-98c6-3231631c4ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9cabe6-f162-4d20-879a-969cfc176781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe60e44-a65e-40e5-b003-178d922a0dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112a6185-c5f2-4bf6-8d90-6b0d9cd5258e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43021f8a-3353-4d2a-b247-84856d4c330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf402092-5076-4988-9264-3eaef7b131d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e170d315-3d08-4ad2-9d5b-3c161ff48722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb78f42-6bbd-49ca-b787-12fd7ba59ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f91915-6270-4fb7-bc5f-6dcde7ac8375",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cb7f8d-0072-4d12-a756-807861645640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662f7f08-9109-4310-b6bf-01cfd2e8c9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb661f5-9f0e-47e0-9edd-52e997d280b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053868f1-324d-4006-b43b-e1be87a8c75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8d8bbf-739d-46b7-8880-36b1ac0f32d6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43747ed3-d2c1-4bf4-8b06-3a3391febc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557e2bd5-51a3-4dbd-b0f0-60dcb4f243bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad37068f-3654-4efb-b0c6-6c14f234a649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5abaa4-5657-4294-b76d-5ab1ebdfbe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664ec400-d32f-42ec-a923-9dd4e4ec8932",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04c3daf-8621-44bc-b7ff-102d319b651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecae48f-dd96-4146-b316-5d97a00366d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2cf7a1-84d2-449b-a700-58bee5458cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3024f903-4b8c-4a82-9fc7-7b038df27c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6879c00f-536f-4337-8046-efc018fb2fb7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8748bcf8-2a06-475e-a786-391c5edd4694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5de32f-46fd-4a23-9cfc-7f234e8d2cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dcf5c3-a475-40a9-b0c9-5fbae02a0ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30a0ab3-ebd9-43a5-8580-87be747b1a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5908606-e337-4842-ac2c-784ed9a65ab4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12876cb3-fd44-446d-997e-22927056ad8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1460c0c1-8653-47a2-bf26-e054260166b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0481cba9-c34a-42e5-9d89-9257bdc6c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d762c3b7-c70f-47b5-824f-9053ac6a8b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72d25a0-7a4b-49df-9c44-86c9721c29a9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d90eb5-ed26-4d8c-8949-c5e8451015ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89917464-13be-4b26-9246-f6747d5ed9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7499b376-ba9e-4364-8438-d9df2aca3044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873dfbea-9054-45c8-adc1-ba2f623e23dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c439339f-1c6c-4dd0-8f81-482e7ff41c42",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de870652-2d6e-4a2c-a650-01347d14c1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e4c6b2-2cca-4cd2-a457-aa8f92cdda29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702d693f-3620-4633-a73c-200f715c7db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f62dc4d-efa1-4e63-a9ca-f0efd4089c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a77b1f-dd85-43c2-8898-14306bc80096",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4500d10e-953e-45ff-a957-12626ce40a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d427d2-d02c-4735-8091-d3ea2df4f163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b00cb86-329f-46df-874b-a4ea19ff2ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "225c5bae-6a10-426c-bcf8-bc536715964d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b1210a-9819-429b-a2ee-b867dc33229b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac27b11f-3db7-4656-990b-b3a8c436fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fae234d-ab9f-42e9-b39f-45d39e2e1d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986b36f7-95a3-4559-8e20-28ed5dc8ce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "975abb66-2048-4e66-b953-0f290d255b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8969bec-6f0e-47ac-8f95-02ba3878bdff",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204dcea3-8dc8-443b-a51b-a6786cf2f382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96e5f0a-3d08-473d-a144-db5fd51c420f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b299828f-dd49-4c3d-8964-3634b81e8c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af4556e6-a2df-42dc-8a6c-0f121dd567c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8509b6ac-1418-4462-9fad-99b5ee5ffcd8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae625241-6b70-4c8c-94ae-56f6bf779814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cc94a4-9553-4fcf-8563-ed865a44ad13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddc44bb-a16c-4eca-bca8-e9ef82859bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd29056-56db-43de-acf1-34e355343623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0591d242-34cb-4481-8a6f-c64af3997986",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51e81fc-c6c6-4d44-a756-6db927ddd94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f695ad-37db-45df-b61f-7ece82b0001a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3f34ca-6656-4b49-ab8b-8a044aa14f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f34698-6e9f-4b09-acc9-9d5028e333a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627f8ea3-29b8-4b1c-976c-4bcef9eaa9a6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71c395e-3691-4b1f-b47f-95598930fdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc3d4e0-b6e1-4f8a-a442-34418611a691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace0bed-3243-4030-a17a-99cd5307f999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d286fc5-d35b-4d5c-bce4-aa9e8157164d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862c1773-fa3a-4ff9-bb1a-443931c11cec",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b107dcce-ac06-4a19-84d8-3c123c245419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb3722b-73b8-4009-bfc7-d84e0ba41574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c889680f-7f8f-46dd-a813-3ff440c5c2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1255625-3dfc-45eb-affc-1cae8f504de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce2e560-c4a3-463b-91f1-a4f4974b8224",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c1c274-454c-487d-b386-99d4eef36d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2491bc-372d-4190-b52c-c323a50213a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43acbd5c-c207-47f5-a412-6f58b2bba913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "409d2399-8ccb-40af-9b44-e58acd67bdaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0ddd431-9d4c-4319-babe-e52f7a1d4769",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6df7f0dc-367a-45d0-ab66-4425abec31af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4fa7b0-344c-433e-b584-860f99f6f0c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38babf44-270c-48fc-a40e-9e80944ae94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471ac95f-4d55-4ded-b6a2-92e9e91286f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "129a7219-4b5f-487e-ba57-fb4bd6d14c8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2baf04b-1ac8-410e-b18e-dd171abe8967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9c1568c-fcc0-4c3a-9d64-1ae2f32d4714"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "431303d3-9fe8-41af-99a1-dc47e98358b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21460d2b-2da3-43ac-96f3-bcefc17ce6a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c17b7857-51e2-4c7c-b72a-f680005b21ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b97f8ecf-5111-4bb6-821f-dad1869a9aff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf5d8995-6a3f-4aa1-8a43-5212adc6debf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adbe123c-a79c-4d03-a73f-84bac5f25397"
            }
          }
        ]
      },
      {
        "id": "d47b89ca-67cc-4bd1-8ce3-12127cc44da0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a93ccbef-f983-4731-a485-e027aa9e8f4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13044130-5cf7-4956-a6c0-291ed275ee99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2cb39a1-456c-45dd-ae55-01f202a49494",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9bbeba-0ad8-4856-b7b7-f9d325569b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ca690f-79dc-4d05-beff-6b44fbb30d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8e6ffa-1d46-4fc6-b66a-dd4f483e1c23",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822c4f9-1359-4ef6-a95a-f4c7bd957602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb7632d-5669-4462-aa50-c88f5191531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f38a70-9600-4dcf-918c-bd84666bb889",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28b5ed7-f917-4c09-961c-077114abbc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950fc3d9-4bb8-4fd2-8f0f-c477eec126bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f168314f-9db3-4fe6-869e-e8f4a78f0f06",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3608f249-47d1-42e9-8714-6dc7311413f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d76aa45-da02-4e2b-b6dc-7a2b2da01b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03297fe3-2216-4af8-be7a-d86cb9897eb4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0287809-8b37-4fc5-bd2a-55e9764f9678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4a1cd8-0eda-40d1-80f3-0f225e714179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00695979-0607-4b7b-aa1f-cec4d5c76650",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79475f5-2d2a-4101-8b41-608525d1a0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd5cd66-17f3-4a4b-8070-416dd3d3b41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b339e56a-804d-4e35-9413-7e613e43b73e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ecc411-c84e-4888-837f-56384a3a67fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b434b18-151b-4565-b543-ba157ca9f5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a6a62-091d-4d97-a692-a0f9abce6089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2f8d33-76fb-4795-992b-f8d87da8d907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6066a15e-9d1c-4e60-ba62-edecb6810131",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f4cae5-b9d0-490e-afd7-8b32bbf70bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a26244f-5eee-4c86-8d02-6d451441daff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eeac4c-5cb1-4199-a6c0-01d353a232c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f4921a-b448-47ca-94f6-9a8d8916d809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e837e13-4091-4a2e-93b7-d6bcc9987dd4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4917fbf-00e5-42b7-a2bb-a3a55d3b7248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31eeeebd-e965-4d0e-aba5-e0cff98082af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57f8e5f-bc90-4000-8c2f-8d2e2aed13b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfde42ba-7f39-4986-b4a9-eef1d9755d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbdaf34-3ceb-4cf7-b95e-9122ce49b73d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3960a54f-6344-40ce-a59e-81acf9fdd6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0aafd8-39f6-440d-a1ff-974b75bcdb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f3d492-383f-4f20-afba-631bca12be4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbac1ca-e1eb-492e-8f88-5cd67b0d098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ba2ce5-1c28-4016-82c4-0ead19710ce7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03938e6c-4ca7-42af-b352-786470841a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c3bd65-e0d3-4bcf-82ae-1eb8e8a19b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16af753-b784-4d5e-9fd0-2a949c961800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e26fdd4-1c6e-4b32-954f-333e9e3c0698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d994dc9-3eb2-45c0-be90-af598b26d48a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dfa28f-a18d-41d3-b924-3889b1b97761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36391b70-b81f-41ee-a6ca-20d4e66c34c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7394a7-1dbc-44f5-87ac-bda41f39889e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7af31b9-ea34-40d8-b25d-18c508c2cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f8364f-e84b-436b-91e4-c47bc3116342",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4089f8d-0282-457d-a00d-9336f3f7afaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3d6881-2ec7-4592-9ac6-687d1261dc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7626125-a04a-4eab-be91-31e2265d55bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9540959e-2313-49bb-85e3-9e98a38f37a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106b4c3b-615e-4dff-b0d2-b5249529ef57",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76e0289-5226-47e1-a7c6-4ddb5896fc6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e17a4b34-765c-44c0-a324-1865dbe54ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f2cbe7-dfe9-49ff-a7e7-f0833a30e69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06608376-bec1-4b3e-bb94-8950d2734a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88122fb-fc6e-4dc3-bfcd-67ee63cd649f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e18bbda-73b1-4091-8390-2d5b6f1dc983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff66b80-af48-47c2-97d5-13de74e47a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f33ef1-4cb8-4861-9a0a-28af18a02880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f145b18-2b6f-413b-922c-3ff67aae7c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9774d97f-8390-4b72-bda3-646791f4fd3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3a3501-7a90-4a20-8a85-1f6fedb2ca6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24eb3137-13b9-46b2-b181-9d2cbc4e8b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c200d7-4e18-4282-939f-5455b76c6971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1d1dec-5927-48a5-8f17-800da17b1ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f692bbe-f5ed-405a-888d-c4ecb1959e94",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7dfd29-221c-4656-b442-5dae3081de09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c869acd0-a241-4156-bbe5-688a5d9161ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b4d90b-ecf6-44c8-bfa7-0e9a87265914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad86898-3c78-4806-af07-45ba030ce301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf16fba-01cb-4764-873c-3d5bc2ab9fcd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6166051-d910-4b72-b4b8-65c108e1c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9baf01d-d0bb-494c-b591-92e07daea30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f74944-13b2-4f3f-8ce3-563f1a538e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2e69c0-0169-4e39-ac99-dd63915de1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71faaa09-a8c6-464d-8fff-6ea1e659f7fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbd72e8-97bd-44ae-bb8f-d78cce994f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d31d5c0-6dc2-4624-801f-968cc5918112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c18f3-8e09-4448-aa49-9404ac717517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd88c65-6506-4724-a559-e5256fda7ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d68a85-f1da-457a-9552-03d03034af12",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06e3082-a24d-460f-a1be-d61696a86fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfd2e7f-0a3c-4c2b-a3c0-ee834c94a618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd4ed28-008c-4655-9247-6c46843707a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acbde62-87ac-4cc2-bd58-9d0e53cf18c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0f911d-c1f4-4466-b647-80b6027d11be",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74174b33-7b6c-4543-b79d-e7abf37eb976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0ee7ea-3c5a-4d61-a4fa-edfbd1094bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cf972f-fcbf-40e1-a426-564c7d2429bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b048c6-7728-47a7-8983-137d97a3293c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25d3bd1-09c7-4108-9145-ca79a9085255",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcbb655-fe59-433c-9b1b-d03152e87f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ded644c-f78f-4eda-a2d2-a1ebd85aa6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed28a20-9486-4842-9fc5-fdeb9736cbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c45be83-3531-4b6a-b656-46fff14baab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f158a4-8b8d-43bd-9d32-4833763c1048",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df652b56-a972-46af-b5d9-b7246339fa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e467d60c-4b14-4b07-8ad6-a4a8f930e6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c93da7-1994-47bc-a2fc-2443936b89c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ba4054-b00c-46e8-a333-26ab7adf2bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3990dd19-92e2-4f0c-b1dd-731cf6ab63ed",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c68b765-d270-42c0-a027-a20f53d9b079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db2adae2-52ba-41ca-b87a-fa8d9be7a1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d46cbd-abf9-4f6c-a45b-1f42ea6b84b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308ccb13-21ab-4ed1-8048-1a79a31ab88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52fef24-a362-4f1f-b391-860f55e243c0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7272a1-2364-4eea-844e-812007b9cc97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6a7233-8662-4613-969a-36cf878c68f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cd389f-1487-44d3-ad47-e42c797dec55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc1569f-ce82-41bd-994c-ca77442b6802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f38b2e2-ee43-4dba-b716-e18c61b7746a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cde46d-66c4-4497-8fd1-0dc2737f713e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a4f92c-b32f-40bc-8bf2-3cf36b7cbc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299e0d60-df4d-42d4-9066-0f1b5b1e5986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1696b021-9f8f-468a-80fd-697397ac318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc52d6a-898a-4dbe-9a2b-a0b30390e2c7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080d1037-bec6-4170-a35b-3653005c78f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9cc6107-a283-4883-9258-dd5277270dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498a354f-c5fa-469a-86e3-03595df67c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a3cb3b-1d05-4d2f-9f2d-fb95c89ec27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78886ce-6b35-4676-beb1-12a071a2f5fe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de95f0c-1be1-4110-a8f1-98b0381d375b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2ff09a-0b22-41cb-9886-b9d5af329996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540e8cd7-1704-4584-bfe6-c25a6469c643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bfdb7b-8830-4b40-80d2-2bd2b828ff31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05fe4c6-f0ad-44d9-a129-77b2f8c76af6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8562e-3461-457d-920b-191ce86d7320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b8cc2c-3397-41d2-a9d8-d8e64e600c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eb3832-5318-436a-8467-0a934a24deeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf22571-3c82-4f1e-aaa8-befb291b2cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25535ce2-af2a-44c3-a9c8-de0876f4ca0b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa0f1e7-283d-4430-9b72-0559baf02aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09811405-b400-421f-b92a-d0f5038fa631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8098a9d1-72ff-48bd-8043-7ae6eeee3883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75430421-fff4-46d9-858e-0640afc53e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd6ed7c-3bfe-4c3a-af98-6f65613e3777",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d2ed12-dd06-4828-92a5-4c0e7418b71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a09dd8-c2a1-4b95-862f-67d31e5d314e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79453a8-8e07-4b2f-846e-a96a6b313f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af880ab-7cc5-4dce-908c-ede26dbe46bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8c6854-5df1-446a-b985-86051c8b38e5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824ec726-5c7f-4f28-aee9-ed13a60c7f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9bb8727-1230-4893-bca3-a71d1697eddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca358e-ab4f-4387-8501-57772d108d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b448685d-1e36-4dc2-9d35-75bd0760d42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75cd69e-9140-4c96-adad-1755e12cd485",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50341f8-745c-4dda-be12-4d5fc007c932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46be681-ce68-4ab2-81b3-13b5d3f7ffe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fb5456-2d15-4ffd-b631-27ca62a52691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b205090c-eb48-4a6b-9cdc-f7f2350a43aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c015143-169b-42ff-9b76-f3ec2120315a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff7906d-e80f-4b0d-9c65-9923cbe14057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50739d5-1b4b-4406-8dd6-db3daacbede4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d784d62c-0b18-4bbe-b7ef-bda390322b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf2f76e-2b64-4428-aa8a-2cd20557256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b031c28-8890-449c-a8e9-526b863236a4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e1b24c-04b9-4626-ba2c-1b725d7ce8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fa6f33-1141-411f-9225-170202631452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b136f4d1-4224-4636-a79a-7d92631bf2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931be96d-93f6-4eab-b1b7-f8de59f5d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f160d8a6-2dda-43f2-858c-2fd643032389",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3af84d4-8612-4f84-a60c-9a95fbce0e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03197a29-ca23-4afa-942b-39cace0aa337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f30412b-d540-4cda-9ad2-9b0adbec2858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf517fd-48da-4f4d-9528-fcc250330c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03849c8b-cc9f-47b6-86bd-f3fe0722d906",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273727c5-2b1d-498a-a3ff-ae2864c152af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa55992-b1a1-4438-9fce-04cb571fda62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a3f9c-c890-4973-8241-051557bcfdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27eefd5-2dd6-41a4-a2ac-acc4eb9e2b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb16a98-c6a7-47e7-8980-1887565c0493",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5da71a-ddfd-4f49-bd25-be421bd8e5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac55798a-b099-414e-97c1-d01b701910d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef19a91-ca61-4c0b-ab22-4ff2005fc22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432b196d-e484-4059-88b6-8bb8f2b89cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096dba1f-7cc9-439d-b944-36ffadfd9969",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f7505a-b226-4e5b-a299-a499c0d6df4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcbdf28-8ee0-4465-8782-2b7e79da78dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50cb449-ddfe-4377-9278-d25eaa5278de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb4ff7e-acea-48d5-a32c-62952ddb575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1fdacf-412d-4403-bfaa-9e837360519d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4016be5e-ced7-47b9-93a3-5139aef4d46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a909452-67fd-470b-b65b-54b3ebd4d1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e239fe7-b34e-4bd2-b5aa-7edfb8d5ce3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fc7d89-4bf9-487d-898b-036f8b585fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d3ae6-bc9c-4f53-9c7d-ca2ac71d0eb5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a5be7d-c823-477a-ae0e-76a9e8139f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc63c5d-a74e-4233-9718-17fdf7b7ef83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e4334e-af4a-4df4-a88f-4c47a0c4040f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a500344-22b1-4049-a9ce-f88d2e0bb43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497dba14-6b10-428a-b1b7-e24c2707ff62",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9620d072-40a0-485e-8546-eaad5f0db7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20829f3-53c6-4e1f-9bef-0776f1847dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef42365-df62-49fe-9d68-f7248674f393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d665ab-baa2-4b8e-9ef4-3c0fefbae97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e8cd07-29d2-4448-af50-4c3d0dd0a059",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0446fd7c-c91f-4496-8f14-21d1cc62f97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7706a9-470a-4b2a-86f7-0b83226ecf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e1bd5b-1ce4-48cb-8c18-2ff2eee894b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14be515-4dbb-49ab-9126-b536e13abd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a09f54-d6b7-4aca-80cb-2f122c4d50a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea481ce-878e-4bca-b039-373dcfde05a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11528dee-010a-4d92-98cf-5ebc867256fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb78810-926d-462f-963e-f95a743e7d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93252ad-5ca7-4506-bacc-46aac6ddf8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e70aee7-b292-4974-add2-28d81f80697d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b7d994-e342-432d-b720-84f0d924cbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b34ba9-bfec-43a4-95b7-c6d24b270025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c074532a-4f34-461e-8a12-d8602896a512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b156932-4705-43b0-ae60-821f7675fa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a32ad7-c5e0-4365-b083-b90884dbec24",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f15d39-d0d2-476a-8d84-e857e1a0b6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5313b6-714e-48ab-89ce-838d807b50ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0081a0b-d7d9-4f92-b128-1cfefc0e347d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f1c274-0b6f-41c8-a965-c8f190dce61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8613af8-dc1c-4895-ab91-56dbab9b1147",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a995b7e-e3e9-4353-9b7c-3ed948a9e3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab2ab14-4436-48c7-b88b-672e1be194c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8b813f-4b39-4f19-989e-0b36c0046ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2ba0f0-dd5e-43ff-b6ee-43c4df7ae161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af13aa0-ea29-45c2-889d-48fa8b5edabf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a0a2d2-c171-4d96-a8f9-5e51421ef2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f083ac8f-47ec-48cc-a680-347a000accf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423485f-3aba-4322-80f2-02f7b60c20e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a354f6d5-83df-4406-b1a8-4f89052076ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3a9bfa-f20b-44c5-ab9a-cea2fe329abe",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbc746a-11a4-4ac3-83b8-a1e25f5996ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0319c8cd-e762-442a-8be6-f747da83e1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b54ae-aafb-48dc-9a1c-a8da54dd6102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506076a0-727a-4607-bac6-c2509f34cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02995ba7-3c73-4d25-8585-c40b77630a25",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edb52a0-299a-44da-8cf1-9e5d35abdcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8926f444-0c65-4e51-8bbf-2608a5efb391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f94a02-2975-4a65-9b14-126b2d2574c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bbce0a-7bd9-4106-874f-92aa10f1b3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374f2603-9d74-4876-b78c-8132c65d3cf2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71defb75-802d-44a0-a7f4-ec0e936ea1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f3e3a9-2258-4544-9a1e-d88f8de2c86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca048ab-b771-402f-89f1-edc6abb798b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36ceab7-8599-4c8f-aece-8a02028f3f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db3b9d9-6a53-4c69-bc3c-1d641813ec78",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3c9064-7610-492f-babe-1872e5820eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b0eabe-b819-46df-9eb0-4f688ce96bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ec5302-e760-421f-b700-e70c5712fd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c674206-0e7b-4cbb-abd5-058ee9da606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ef3a33-005d-40fe-9069-46137870a2e4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51c68bf-e535-4277-ab61-8e95c34d1f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420807b2-9516-48b9-8171-5e4914b0a959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11320fa0-1181-4779-95e4-c5d98d27023e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3101824-40c1-4afd-9573-f5e1d1f53dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5f68d2-0019-4ccd-80ee-8bd435911903",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17881e56-0d56-47cc-a7a3-1a963292e699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a3049c-8473-4e05-bc5b-e2828f336bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2befe0d9-7e02-4b91-aa19-9e6c30c66032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e73e5c-ce43-4880-bfcc-9962a7468234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690cdec-1fb5-4e0e-879d-a8354d846b67",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e357fa7-fb65-4beb-9dae-f3121b118bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6a5373-6515-4154-95a2-1e7a1e882aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862cab5b-bab5-457a-91e5-e79cb34c0034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1cb7f6-22bf-453e-8aa0-70a7bca2993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c12e9-ade2-4f17-af6d-f1d432c63c00",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9939b642-5e18-4649-b9d3-87be26554bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39ceab7-c422-4e75-bfe1-fbd87209d2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ebb6bf-1e07-4698-a68e-cef96b1cfdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7689c64-a2ed-4d6b-ba9c-8de0cc21bd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a01c32-d392-4f6f-b09d-f931cf6f85f8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c8709-d984-4d62-bd9c-f286f7f2a539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be98724-1533-4d05-b650-40806b0649c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6bb508-0a39-4e17-b5c2-c4c6c0181384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f910ecf0-52c0-4279-9710-84c883a1501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7732c5-d507-4114-8397-eb0c27b74605",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67050928-d32e-4a46-a6c5-fa25d9e94a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81be548-3759-4327-b83b-9855c9a1258c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98b7e48-35b2-4caf-9b5d-88839eeeb165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6065059f-963e-40f8-8fcc-70d4db5ac09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d7ecd3-36eb-4b0f-a179-510b880750e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94914067-b4b7-4f7a-9707-849ac7c8ddcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c731122c-0403-4632-8d10-4c51895581e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb937e6-6fbc-4dec-8bd1-925d03d03985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04b9e85-ef37-4364-8626-8f7651ee9eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1631715f-2699-43a8-90f3-75952f04bca1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d939100-da2b-4ad1-9b2f-49103480e65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44cb6bca-f80a-43d5-b9b7-c27ce314903d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e09b5a-213c-4a5f-bc9a-14c781f25322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbf36fc-4a85-4d76-9f22-afba21bba3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a784110-3ea1-40f9-b1ae-dddcef2f5fe9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deaea81-1970-422f-b9fa-fdc408820688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc68a08-e54c-46cc-a2a6-fff1f17575d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395492d9-95f0-40a6-bebe-c1fc97c9298d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de0a87d-e4d7-4ad3-92b7-e4490b28a859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae0091-36f9-4dbd-9b23-664b53550f62",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a6312b-48a3-4eb3-87dc-19814db06cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2627840-1580-46cc-a2ab-b18f317ce403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0fac62-cc7e-43d4-97be-b3076c86e575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4972a231-cfbe-480a-aac1-6218cd807332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412820aa-5d47-428e-8ae1-027830cc405b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4d948d-00ab-44e6-b620-047cd80dd15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7662d4ea-37f8-416e-b0c2-58c26e96b8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb7a32e-8708-46bb-b022-5b6b7b755cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510a5a6a-96f3-4e63-9c8b-7dba25f935ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21684a7-cecf-40de-b86e-53f0a83d91d2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a505f6-2120-47df-9583-1c2bdcfcff51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f92e8a3a-35df-4fd4-bbae-44ffe8202692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b89b697-2e5a-4b90-8661-9e4dbb5b535c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873bbcc2-84be-47d4-b3bf-63e3c115650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248edee5-f0e7-45c4-b997-639b9876a6a7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dabb4d9-bfcd-4428-b48e-b46731ed1dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8d98ad-205e-4325-9312-7f3c0a7aec72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc57a41-306f-4beb-8546-be195efd933f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46fd923-7bf6-460e-8348-e670f6dcb2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f834388e-d965-49a7-a63a-fd58515bccf0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec161d13-fe9c-45fd-bf7f-2913776dd181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae958cd9-d5ae-4add-93de-1d74b237d06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575e96a-cbc9-491e-a6b8-6271233fa805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a664a821-9452-4805-b5a0-411406051cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03ace32-d1de-485a-8b4e-222d0302dfbc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771eb16e-347b-485e-b68a-b0e2f6621cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf03edc-8713-4cda-ade3-74d95ecd48cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef572cb-f9bd-4fc4-b58c-65c91d3cb2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25bd8bb-69c2-4e5c-8b41-94792715638f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0923996b-f0b8-429e-ab07-aae4a7001da4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cade9f-7e66-4759-9770-28d13b1065b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d406090-6d65-4c1a-9eed-eedd53a842c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2748188-24a9-445a-9928-9709cdc43cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d132724d-e1f3-497d-adc1-94b5cffc7679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d39ba4e-e814-4174-8328-ccd19a8362cc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce58cec-fad8-4c60-a0ee-99674b21fc8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b52b8a-c72e-4bdd-aa84-84f66c90efa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cedd791-6340-4e6b-b956-27f88b358456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482576e4-bf65-46ea-b655-28faa7784d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b652877-1557-4a66-b839-b60d2a038861",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5e66ea-6183-4675-9901-15f61d4bef5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13723d8d-1873-4e35-bca0-6b2251106a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08e1fa5-bebb-418a-bd7b-41acf06550d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f4f023-3881-4dcf-a9db-22fe95e944f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3461f8a9-fc72-469a-95e8-f73876199f21",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8501a4-f1b1-49fd-92df-f74d1e7cc9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48cd817-96b7-4533-a8e9-0613545aab4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9cece5-cbd2-4607-85f3-172a7982f551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c05c588-c3d0-4f39-a0c3-0e50e58f9121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff7fef8-735d-4d45-aa58-e55f7949ea53",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4581b3c3-6194-4b46-891b-f2ac42325d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806e8777-cd2b-40c6-88fe-d45b90825d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42979455-d0f4-4d5d-afb0-2e033d3dcea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69a2af5-e973-43c4-a43f-590cdd1dfede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657daf4d-b90e-4109-8865-38ebb092fab4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cfaccc-81a4-4006-9249-895ebe55be84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67a21e2-ee82-4396-8cce-ddd652ef7afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe280f4-45d8-40c5-beb4-0390d120469a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6023cfc6-6b2b-47d1-bfd6-36dabde53824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0fa3e6-9d28-4343-9b80-d0e5aa3dbd28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b15e19-6f97-4e92-8265-506761abe73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070baa1b-0e1b-4cfa-a970-25ac93572951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004526bb-ff69-431f-9a9e-8aa77e21c8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db79bdd-861d-465e-b510-7321a37295dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0e3408-4250-412a-aae0-4695866ae276",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b97ac68-876f-49cf-912a-d4462cea08f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0969b3-7587-4349-aad4-13442b00c7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8de84c-bb8c-40ba-9e2b-39359edfbd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603573c3-7020-446b-a121-3ae646fb0bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a2c8aa-888b-40b7-8748-939f91e4244f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a232b5d5-a559-4e6e-b979-2401f363b279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a887009-6887-48af-8222-6fcefe1c7480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc6d177-1b1d-4338-9062-375c05f346ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77561a3-aa44-4fea-8a56-8bfe37ce0370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2ec8f3-46b8-4fb8-9ffe-41ab45311348",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5069312-6e88-499c-81ab-b0a6eb3d7bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5adcce-1348-4cf6-9f75-d86707a3eea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43fe2d3-fab6-40a9-acd5-10a654ff2daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e1188b-5720-4526-9efc-6a8d17ba86b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa347df-36a2-47d0-8cb7-91680e045391",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695c96a2-136b-4517-bce4-ed17853b6afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64c54e1-36d3-4612-8aea-4ca7b49ea565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fddbc7-5722-400e-aa77-63327b78c8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d20c19f-171b-4167-9170-e5d56ff08466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797ddce9-b15b-4764-a848-a25967c9ac89",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b605b6-b8cd-444c-ba79-dfec7c9a60de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71ba8a6-1d8e-4cb7-9b7a-36de24c8b872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893c44d6-782d-4c5e-ae93-e49f8917fe2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6911a4-81d2-4849-a5e9-6c85543712de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e09d9f3-0602-4a7c-9f3a-16581222e678",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1071f4a-d766-49e6-a57d-5b5876e7f3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52e2925-6e8a-45a1-855a-5ddbcec000aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8aadeb-8d68-4e8c-8124-37665015c599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a79c78-17e7-4c83-9764-1958fadfabb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ff1c6b-b873-4d73-ac6e-d1159d62e1d8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2e122e-6f88-4592-a6be-d1e15d479d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012a8593-8649-4216-b572-bb4f20e5c009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fb4bee-bedd-4a92-bce7-217e2a4653d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf6e76a-4ef5-49a8-9e0b-4414bc3ff8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b73469-0e69-4865-aeb6-3e3e98b36d8b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d050a4-2f75-4b96-b6d5-7a4578b84579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e73478a5-d065-40e3-ab95-70ef8d2427ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68392fb-36ed-4116-ba0f-8136eee8c16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883271e0-056d-40cf-9dff-2d40265e46f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9f88bf-6c08-46aa-b62e-463138424183",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37082f2f-7b11-4548-bd50-b06640c92093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c0cc89-e5e7-41b5-bd08-6953d4623b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920750c-6e40-4039-ade0-d3b8e3ff3dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbb8bc2-e6ce-40be-a655-db61a3b88711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928904d9-08fa-4026-8847-ff3a1cc6e4b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2ddefe-e486-4097-a280-81547b40166f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d483bd6-1b34-42c4-870b-f991aee74594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f50d5f2-22c7-4b8d-8a23-985588464638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b868a0-60d7-41c9-8e50-8c94ae0a43e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e08aba-e165-47d4-b83d-0914f36e78db",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0072104-5c8a-4021-b414-765f2c58b039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f81280-35db-4e98-bf95-cd2203062f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769529cf-10d5-4aa3-aa46-985e6920712d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e60bd9-4b13-473b-884c-f8dbf59fc98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917b47de-1f2f-4b8e-8493-ce6c74aa89d0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195d49aa-0ae2-4445-92a8-f692f56cf215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e42b1d-f89f-4c1d-885b-3d260fa72f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e5b1cc-2861-445b-8cc9-f772c7d9a65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5569bf9-cffa-495a-a4b9-2f2578be0dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e9c01d-833a-43a4-b692-bfcde069e629",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1faeabc-ec78-4ab1-b1ad-422356849c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b18b7b2d-ca4f-4984-8f36-9c5dc41804ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae93e63-27d9-45a3-b282-a3799aba7c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10d4958-6bd0-439f-9303-2768238c3174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c527db6-6711-4c94-b4c5-1b639fc7caa0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce42b6df-5893-44cb-80af-ddd2eac57153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae82ece-ab45-45ad-b67a-e8b484ed2d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090de3c4-5191-4004-8145-50503caa659a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c40993-5192-47ac-9d30-9006784956e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcde2e7-58c2-4e5c-84b6-667dad8acfb6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6102465-091b-4a90-bb54-22a4c766ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00eadcc-ea82-49f9-b0c5-a9953f4c20e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbbf21e-4c0f-4435-bb3d-23a91ea31364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201e2bbf-bcf9-425a-835d-3bfb7e2acae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea872ba-2eec-4f41-9dcc-2ad56a13c2b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290232f0-41dc-4625-a2aa-ce0edc4062e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d24eb6-40c7-44f9-8ad6-9af708031c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9d7b98-9ca3-433b-bbe6-45f75c8944e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cef6f5b-6bf0-45c0-9939-c66b995126c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999d8d55-e42b-403c-a28f-68541fe40a91",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8a1c5f-fe2b-4711-8ce4-022d8d21396a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa4ccca-d7fb-47c6-a921-91c0f72c251e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe32bb09-a5e4-42bc-9759-fcb5f954f70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa7e020-3127-404e-8b8a-4a7782dd2e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22cb720-ba24-486e-92e6-909037306ac7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb64581-a5d9-4967-aea1-95adb04cdb14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef04cebc-74cf-4116-8179-58b53128090c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c14405-f222-48ad-a5f0-37de99df083a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4390ebc5-bf3e-4e9b-bb5d-8b2c50361be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff215cb-b2ba-43ab-9b6a-e4fde1ca5ecd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f9af5e-29dc-44c2-81b9-26e4d64e20d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb26701f-03cf-43a7-914d-4c85a1359aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123be139-8527-48ca-bc2d-c6c282c1a1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387da564-96aa-4b6a-b358-fc66c8c80745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ef7f67-1eac-4792-87a8-0bda84c23704",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71a538c-ae3c-4954-a1f7-2640fefb3b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c81573f-137a-4f2f-b1e9-65a108f1a359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a458440-4368-45f5-9a3e-bd351ec40439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171da4bc-b541-4a02-9480-e9911eff90a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff959b-7338-4e72-8884-52ae011b109d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d39a31-2ab6-4338-bb3a-69f1308e44fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2412f4c0-03eb-4214-af7d-af571ecfc74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa035a5-95d2-4410-a6c1-271397e531b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d1db40-17c8-4bc0-9726-65ae72e82ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc117aa5-ebd9-41dd-bdfb-becadae08e29",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4511f3-d23c-44d1-b456-3e6d8ab703bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3011b9f3-c4b5-405e-af6d-749e057d20d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46aa8823-ad66-485a-86e5-0de97afb54af",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319b2ba1-bbc0-4228-bd4f-4fad9cf70488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6098ce1a-40df-44d9-9409-d014cd66f2bc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39ba75f-5ecc-495c-afaf-510c3a60844a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82907931-28ee-474b-8081-d691a750e15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904aba53-9dd5-4fcf-adae-13f621efae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1152a351-f59f-4961-88ac-c80e8fa36ff7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0112098f-562f-4fe7-a40f-d00f62a9cef7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bb500c6-09c5-4151-8ac9-e43f96ecf2b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "202064bf-9dbb-4ce6-8d1d-9baac71194c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56e049a4-2e69-4a29-961a-354a94cc70cb"
                    }
                  }
                ]
              },
              {
                "id": "73c8b297-6e1f-4ceb-bf71-712eebf68ccb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81f7ec94-d66f-450e-ab90-a15694c47078",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9de9043-0500-4625-89ba-af395c52853f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e1dbed75-cf39-4e88-97ed-04a6ede64645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9e529b-2e5f-4d6e-91da-9d9efb1bc546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a9c410f-879e-4e8b-8dd3-c27932d593b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ef2f409-4509-4b28-90cc-1f33779aff23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18045940-8fa7-4093-aea1-ef9ea34d771b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b716e979-0e51-4ee3-b53a-0f254c415937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48fa0131-5875-4b3e-8e66-923f6e7b30c8"
                    }
                  }
                ]
              },
              {
                "id": "e3efff74-1041-4174-9d5a-0825e4bb2d13",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e08c4568-cc2e-4f2c-9078-3d3efbf48b2f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477697aa-fbb0-4f6d-acb4-bc87166fd6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8c53b52c-e226-47cd-9f5a-c4186de5f24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bbc31b-e911-474b-a0c4-deb7108a3092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f26e9d-b60c-4fd7-b736-62038f5b92c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b91a3dd8-37af-4298-9aeb-c1af655353d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05b0d376-bd59-466e-a0bc-5484fa382e20",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e40d1c2d-d05f-4ccd-a8b4-f05bd74ed30d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a58cbe37-863d-4466-8220-f86a49353a54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb139e97-0ed0-41b7-a59c-05506f42b804",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "befa88b3-0bf3-48e5-9212-4c1f91ddba6a"
                    }
                  }
                ]
              },
              {
                "id": "88c6306d-b5a5-4f1e-8979-702e2ac44a94",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1969e8ec-4bc3-4258-baed-9e40ef42d525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f4c053b-ed42-48c9-9a2f-e0505e7f70f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71493461-c30e-4cb8-b8e5-616aaa53e31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46cd28ea-2b33-44e9-840b-fc6e7df7a5df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "002f4e73-72cd-4d71-9e1f-4730590039c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "792b807f-1f40-4368-a5b9-1049b0b4ea0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fe57248-3f19-4e8e-b867-1c09d5f75179",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9c03713-b0a8-476b-9e4c-dfd87befd840"
            }
          }
        ]
      },
      {
        "id": "85d760b7-7d3e-4190-9b30-58a4fbb7eb81",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "73c1d7cb-b93b-48ae-9d33-1170e046c6e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c2a3140-1c52-4c32-beb1-0bf61e2ca356",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34b12d0b-d78b-4120-8e88-e358f98b52a8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02393cc3-a965-4e9c-be70-45bb5cd4305e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "734ade40-7b41-4d54-b8fd-7a5d3e0a0ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d30b1-1d9b-43d2-9843-0da8f8af69a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "917bb8e8-168d-41fc-90ac-9130199e7ccb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cc57489-ccb8-4568-a816-8f5ac0bbff29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa8b3a24-0306-4014-81c0-b4b73805ed12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffe29d4c-f019-491f-b126-b965e47c0b67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4403021d-62b6-4821-bcaf-6dca77ad4623"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94eef69e-4622-4899-9adf-39bd38fbf784",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ece13331-7276-41a7-81cd-467fdca718f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e664e66-ee39-4038-acc3-04fb23179ea3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95dc0d38-acd8-41f2-ba51-d7f6760b9c0c"
            }
          }
        ]
      },
      {
        "id": "9d83e6df-d38f-42f7-9660-eae33b1ac2cc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "71210e96-fa6b-4429-abb6-81dd660f07e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1987286a-4c6c-4a3f-a603-1890d357fa63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d47d5a1b-7ff8-4343-88bf-d7e34bb8b278",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23e282a-c54a-4217-8e74-6e1e041e1491",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64641842-b8e6-473a-99b8-077c1b70e86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609cd2ca-5340-4c29-8e87-ef87effe5204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "935bab62-7540-47ab-96bd-c2cf54909f51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13dde19f-7e94-4a0d-8802-e8e6ad97e5a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a74959a3-153f-43df-b760-b76ed2b5c79e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eab6109f-2293-4bba-93a0-1df91d69692a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6411395-cc44-4e1b-a0cf-c0c4fcbbd5d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc0cfabc-dfbb-4025-ae6b-cc6b0e61210d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fddaf724-7afd-479a-b212-92d891c2ad83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9652b5f-e9f2-4880-bb78-ccd9334a6f05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fddbced0-4824-4e58-9a6b-1563968feef8"
            }
          }
        ]
      },
      {
        "id": "ce38e9a7-d1f0-4081-b7d5-468d004b4514",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "95a05fad-c33d-4866-81e6-aaf30087f657",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b5d2598-d8cb-4f48-ad0c-02c1735a6047",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0f5fe44-827a-4dfb-8ce7-e57e03aae0f0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f08b12-77df-45b3-843c-63d0d5d59297",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4005a71-e4a2-4893-8286-1324f74e6cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a987c6-f1b7-4259-8756-2542998729a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50df6b89-5c55-4a13-ad9c-12955b6e768b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6453e4b3-8ee2-48b6-bf94-5bc43d4ac1db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad12ee10-fed0-491b-8a4d-9487dac053fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec5eb6a0-d72c-433e-bbae-afcfd64e6d93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b9e7d7c-2d42-446a-bfb8-ffbec19b8a63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1949d21a-7509-43d7-abfd-2fc2d5832092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08bfe214-826e-43d2-9fb1-0d7d853d930d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab872429-6a47-4a3e-9e27-fa5f7b9d065b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43c39970-bf31-4054-9040-74c56adca647"
            }
          }
        ]
      },
      {
        "id": "44590caf-f157-4644-aa59-ed6f1e12346e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f26f2d2-12cd-45bd-8ddc-0317ce6ad301",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da7e2fcb-1f99-4533-8945-9c3413d00ecf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63d2ec84-d98c-41fb-a226-917145d7f4d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61fe69b5-b9a4-42bc-9d8f-6fe8e09432b1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb62eb80-055f-4c55-87e4-667d4eda2111",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 75.41549295774645,
      "responseMin": 12,
      "responseMax": 4746,
      "responseSd": 383.98624063813116,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694133137990,
      "completed": 1694133171382
    },
    "executions": [
      {
        "id": "4245e600-6dd6-4d34-aeee-c1621432cd43",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6992ed2c-8eba-4afe-b6c3-0d04feccb2f1",
          "httpRequestId": "337f0d88-e864-40b9-9108-7399deeab34c"
        },
        "item": {
          "id": "4245e600-6dd6-4d34-aeee-c1621432cd43",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bbd84339-ea95-4557-a211-68918c840afc",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "760474eb-7756-4094-92c2-8d62ce724b47",
        "cursor": {
          "ref": "9aeb8921-a1a0-4699-8405-0ee80dad2502",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "71a80208-fef0-46e8-a7b3-f7fcba894f3e"
        },
        "item": {
          "id": "760474eb-7756-4094-92c2-8d62ce724b47",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "edb799c1-9dcd-4b67-97af-cbc8cf0475a7",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "9527362d-9972-4bc7-9658-6a1625a20939",
        "cursor": {
          "ref": "5d788655-9bcd-4665-8f97-d51dcb8d8c6a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "29bc49d7-a03f-402a-92b1-537651fbd970"
        },
        "item": {
          "id": "9527362d-9972-4bc7-9658-6a1625a20939",
          "name": "did_json"
        },
        "response": {
          "id": "83b25e21-1089-4bb5-a14f-97c171b17e23",
          "status": "OK",
          "code": 200,
          "responseTime": 262,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd8f69a-143d-43a3-94ac-8154941f4e6d",
        "cursor": {
          "ref": "d0a4d3c3-0dae-46eb-bab8-72915026d408",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92611c92-780c-484e-9cf9-1fd27b569986"
        },
        "item": {
          "id": "5cd8f69a-143d-43a3-94ac-8154941f4e6d",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd905e30-f9ac-440f-a372-85aea76b559a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 965,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd8f69a-143d-43a3-94ac-8154941f4e6d",
        "cursor": {
          "ref": "d0a4d3c3-0dae-46eb-bab8-72915026d408",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92611c92-780c-484e-9cf9-1fd27b569986"
        },
        "item": {
          "id": "5cd8f69a-143d-43a3-94ac-8154941f4e6d",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd905e30-f9ac-440f-a372-85aea76b559a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 965,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92fbfa1-bc03-42b1-b01a-430972dd7ebd",
        "cursor": {
          "ref": "3e64d795-3501-4d21-9c37-2f13d940523b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "444ac57e-7db6-4847-a92e-0eadd570c244"
        },
        "item": {
          "id": "f92fbfa1-bc03-42b1-b01a-430972dd7ebd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8992bbef-4c2f-4955-9191-025ef52d4037",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413d46d3-547f-4506-8a78-b122105e23e0",
        "cursor": {
          "ref": "0ccbf0b4-22ec-49b0-95bf-7599b5c105b4",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "97f9e54a-cb03-49b1-9074-bfaccfd156b2"
        },
        "item": {
          "id": "413d46d3-547f-4506-8a78-b122105e23e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "97492116-d957-4b09-a7bb-74519560178f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cc36e6-de88-4107-a26b-9f0e3a3ef525",
        "cursor": {
          "ref": "be009fc5-4e3c-4716-a471-4622beac15bc",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8af04295-9f15-4491-a83a-145d90a7bd99"
        },
        "item": {
          "id": "88cc36e6-de88-4107-a26b-9f0e3a3ef525",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "68d903b2-374c-408d-ab1e-92ce0e201e47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 117,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8854106-8179-46a2-934d-3c846d77284d",
        "cursor": {
          "ref": "fd38abf5-3448-43ac-91f5-89b6f07a7e3b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "74693a07-db81-4050-9ccb-78478cf2df92"
        },
        "item": {
          "id": "f8854106-8179-46a2-934d-3c846d77284d",
          "name": "identifiers"
        },
        "response": {
          "id": "0ca17ef7-12f2-4905-ba0e-3eb6ae8ad307",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0171793c-7fa0-498e-b323-4d2ee6bce759",
        "cursor": {
          "ref": "c47c22f4-c39b-48b5-a2cf-6c24e8a05b93",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ea7216fb-f606-4df8-a99a-64a4253c77f9"
        },
        "item": {
          "id": "0171793c-7fa0-498e-b323-4d2ee6bce759",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3aee6359-b297-4d00-ac05-175de8c2fd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19080969-05cc-4acd-b158-88d7f748da13",
        "cursor": {
          "ref": "ee0cc191-146b-487d-9c3c-ac88f9e0ca2f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "af70cb7d-e56b-4ddf-8fc1-5d8cf2cc2103"
        },
        "item": {
          "id": "19080969-05cc-4acd-b158-88d7f748da13",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4129837c-5daf-4a78-94d1-51d1a647f0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc539be3-f8e0-4e73-aba4-546d688155f9",
        "cursor": {
          "ref": "0205e9d3-1548-4401-a54d-a3f380df20a3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e5be1f7b-20d2-4d7b-962f-72dec8033fde"
        },
        "item": {
          "id": "fc539be3-f8e0-4e73-aba4-546d688155f9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fe3577f6-7dbb-475c-87a9-0d682a83c339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eea6d6-c5d9-4284-b320-3ab91f05ca3d",
        "cursor": {
          "ref": "a2f4f728-cba0-48e4-ac29-7e0c853976fd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4eb35760-3f42-4101-a1ec-4f14e5534f6d"
        },
        "item": {
          "id": "05eea6d6-c5d9-4284-b320-3ab91f05ca3d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "89f0bfb7-59d8-49f4-8604-66ccaa6142da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adee756-91f4-416e-a690-e10cf76eb6ce",
        "cursor": {
          "ref": "8a327207-8740-4e1a-9485-88bbf99b6712",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "13b95f54-f720-49f9-bd2c-38c71864fa74"
        },
        "item": {
          "id": "3adee756-91f4-416e-a690-e10cf76eb6ce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "41ad9027-4468-4b2f-ac37-22b789b8c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e203c35-edc0-4de2-87a8-8374c49ab107",
        "cursor": {
          "ref": "0bab930b-6fc0-47fa-9177-75b4864d0e76",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4debe02a-825e-4b15-bd0b-81cb42e78eaf"
        },
        "item": {
          "id": "9e203c35-edc0-4de2-87a8-8374c49ab107",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8755a6fd-e488-4eaa-ba71-5327e0f01226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c601fd-fbe0-4801-8a47-bcb1a434195d",
        "cursor": {
          "ref": "160889ab-7bd6-44d7-8683-d77ab9e8951e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e1041288-0337-463a-a01d-ab390a2f24a3"
        },
        "item": {
          "id": "e8c601fd-fbe0-4801-8a47-bcb1a434195d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75949e87-f0fd-4d23-aeaa-7bac885f0938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b72600-8a3e-4433-857e-9e3012a8787a",
        "cursor": {
          "ref": "1611be2b-ca6f-466c-ac83-992b06ba70e3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "30a74f35-a203-44fe-8b9c-ef8e57f6a9e4"
        },
        "item": {
          "id": "03b72600-8a3e-4433-857e-9e3012a8787a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "de3674d4-c3f0-4201-8dd1-40a7e481fcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4c55d7-151f-4194-bfdc-18d26a605116",
        "cursor": {
          "ref": "a2c6e5aa-79b2-4126-b0a5-5fa7e5716698",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c8bf7035-1c19-4954-b168-97743de3eec0"
        },
        "item": {
          "id": "7e4c55d7-151f-4194-bfdc-18d26a605116",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "75e55079-fd2b-4ed8-b3c1-91bbe13af1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6b35fd-c75d-448d-8e10-aba9ac963919",
        "cursor": {
          "ref": "902b582d-7da1-4cf9-b42c-9ae48568b164",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2567edb0-b374-4751-b0e4-6c6a5c639b9b"
        },
        "item": {
          "id": "0e6b35fd-c75d-448d-8e10-aba9ac963919",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f4b2fbbd-4ae9-4c0c-8660-6c9f3d802c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a51b64c-2a64-4092-9087-59842a06dd33",
        "cursor": {
          "ref": "30e2e607-05fb-4a99-a848-8adcbb9f37c6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a583b3a8-9f29-47bd-a9d3-f24b2dab44ee"
        },
        "item": {
          "id": "0a51b64c-2a64-4092-9087-59842a06dd33",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fc6d3c13-863c-4554-a497-a44b2bac7813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb86ceb0-4210-427d-b213-1b3131aae770",
        "cursor": {
          "ref": "a1f2a33c-1627-4dee-9a79-42e70e769304",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a665079-a0bf-43dd-a64b-3a37f0a32c79"
        },
        "item": {
          "id": "eb86ceb0-4210-427d-b213-1b3131aae770",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1d7040dc-0e64-4331-9d3d-56b5799b648a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7aad01-9573-43d0-9625-bfb517205281",
        "cursor": {
          "ref": "dc4d2c0f-f4a2-43ba-a647-01df7831b6f7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c5cf3bb4-8680-4f9d-a5d0-7178d19d620b"
        },
        "item": {
          "id": "6a7aad01-9573-43d0-9625-bfb517205281",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0e03721b-8340-478f-90e5-6c724d238a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d979e914-a836-4301-84e4-22053d380ee7",
        "cursor": {
          "ref": "83549c94-7fe4-45cf-8b52-e1045e9a6339",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae03b800-3cf9-41be-b6ac-ec39ba99fe6a"
        },
        "item": {
          "id": "d979e914-a836-4301-84e4-22053d380ee7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ca4e8ad-ff26-4abe-9f9e-aaf05b9f3930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23188b2-7e1d-42ec-8e67-4b823172e9b3",
        "cursor": {
          "ref": "f75379b7-1827-42ce-b771-6674d9a7114f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "301e3f4a-7350-4e6c-8c11-933da4771606"
        },
        "item": {
          "id": "e23188b2-7e1d-42ec-8e67-4b823172e9b3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dc95b17c-b28d-43ed-92ec-449f3e9db96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eb417a-3754-452c-8f83-c8692964bdf6",
        "cursor": {
          "ref": "f98325da-f65a-45de-90fd-87ebabfec5c8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "af79a558-7542-41c5-8aa6-6b644deac365"
        },
        "item": {
          "id": "58eb417a-3754-452c-8f83-c8692964bdf6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2d16c276-7387-4029-bcf4-ae2c29b4bb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff57f6cb-5656-47f2-9646-f4a03131983a",
        "cursor": {
          "ref": "7ff5eb3b-d436-45b8-bf83-1c64760da9ab",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5907dd5e-1c3e-4932-9576-fcf4a8e3420e"
        },
        "item": {
          "id": "ff57f6cb-5656-47f2-9646-f4a03131983a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4671d64a-3648-46af-afb3-56edcdb8eff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78c561f-7edc-47c7-b102-c43dadb35ca1",
        "cursor": {
          "ref": "7523b424-02c6-47e0-93a9-7c1470667a71",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5431278b-0786-4d25-ad33-fbec61ea3937"
        },
        "item": {
          "id": "b78c561f-7edc-47c7-b102-c43dadb35ca1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "52f2f6c5-5b1e-4033-b87b-b4c2976714a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b4df0a-63ce-489c-895e-206c2d174be9",
        "cursor": {
          "ref": "46dd4443-1cbc-49f7-ba8a-71e9c39a54de",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6c741171-3387-4196-b04c-6c09d9dce396"
        },
        "item": {
          "id": "99b4df0a-63ce-489c-895e-206c2d174be9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "29334beb-56f0-4678-85c5-d7a0ccfb9a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba3d9f-1509-4a0f-bad8-fbedc6abed7d",
        "cursor": {
          "ref": "cd54dcf7-e965-4ae8-bef3-7e7babbc440d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66bf7b5a-485c-461c-9181-26b27eae989b"
        },
        "item": {
          "id": "8eba3d9f-1509-4a0f-bad8-fbedc6abed7d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0d76e5fd-6c7b-4e7e-a766-a83b1819a2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726eef11-2697-480c-a4ea-050fc558e1c0",
        "cursor": {
          "ref": "5b533ab9-0091-452e-b5d1-4f94d3ae603e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "348dfce2-a404-4509-ae3c-8206a3b41bb2"
        },
        "item": {
          "id": "726eef11-2697-480c-a4ea-050fc558e1c0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "06f755b6-8b73-425f-8539-8a7cffebf996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2fee85-6f4c-46a4-a558-cb378bcd6486",
        "cursor": {
          "ref": "52fafd98-db20-4395-9e20-17fd1d99c292",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ff4229b0-c1e2-460a-9cb5-898dece2daf2"
        },
        "item": {
          "id": "7a2fee85-6f4c-46a4-a558-cb378bcd6486",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65e04191-87f8-4782-9f0b-2a0e832a5ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd90f90-ec28-4547-a0ed-70ed34cddd06",
        "cursor": {
          "ref": "624148cf-5169-44df-8368-da70583851be",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "31a512ea-d022-45fa-95b3-5740fe6c0504"
        },
        "item": {
          "id": "bfd90f90-ec28-4547-a0ed-70ed34cddd06",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5296d800-dc6a-41b1-8f30-5657d6bc2fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb77aa94-3492-4fca-9144-044b3df77363",
        "cursor": {
          "ref": "1a2ec1ad-18bb-4304-8394-152489959376",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "018ab03d-5e07-4e0b-9d43-9af358c75879"
        },
        "item": {
          "id": "eb77aa94-3492-4fca-9144-044b3df77363",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "00535f63-5e33-4604-a1e7-f93772092b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d534af9d-c083-427d-be94-e03f48a9fe16",
        "cursor": {
          "ref": "0ea074e6-afb5-4fc7-9e1a-da588bbe059c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb786b20-cf91-40ce-8283-fd7d593f8c84"
        },
        "item": {
          "id": "d534af9d-c083-427d-be94-e03f48a9fe16",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eecb857b-46bc-4c04-8d92-8ec50416a44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb11ec5d-8959-4cb6-a14e-cb39a5f152cb",
        "cursor": {
          "ref": "acd24edc-99d7-41d5-8e7e-19ae189c4d12",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f7a1ad06-a727-4f22-853f-ed54d63dfa1f"
        },
        "item": {
          "id": "cb11ec5d-8959-4cb6-a14e-cb39a5f152cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fd8d8891-fdef-4613-b847-6ba6bf18d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48ca199-ab3d-4249-8117-9d900308e7c8",
        "cursor": {
          "ref": "4fa04d12-8085-407b-9e4e-ee3f0b1d55f9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2d16a246-9eae-4799-92ec-4ee1cbbef0b9"
        },
        "item": {
          "id": "f48ca199-ab3d-4249-8117-9d900308e7c8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7218387a-78a6-4a37-9fcb-fa460e83953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4ea9a6-c923-41d7-8a87-e5757d370142",
        "cursor": {
          "ref": "1c1ce132-d012-4108-8145-3c3434ce66bd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "53d15166-b069-4a3d-858e-a28b02c9a0f8"
        },
        "item": {
          "id": "5f4ea9a6-c923-41d7-8a87-e5757d370142",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3089ae45-dbe3-49e5-ac82-793bdbd94fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05b5171-1912-48bd-b6ef-4a646b639e8e",
        "cursor": {
          "ref": "c5a6b7da-0761-4ef3-bbf5-eb2a270e7695",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "10a37fac-c01c-4538-9550-459d30702a45"
        },
        "item": {
          "id": "c05b5171-1912-48bd-b6ef-4a646b639e8e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "697b6290-0fe8-4b6d-b2be-48c9a11d5b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b1591c-25fe-49ab-a310-aaef0142100f",
        "cursor": {
          "ref": "3200bfc5-d546-477e-8f3b-18eb0f04d77e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1e94cbdd-cb9f-4b24-8cb8-aebfeeade163"
        },
        "item": {
          "id": "a3b1591c-25fe-49ab-a310-aaef0142100f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "595634dd-96f1-45d1-8018-be50bfa6297e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc38a1e-9f40-4fb1-844a-1666dc824ab0",
        "cursor": {
          "ref": "bd37b353-84f6-4b64-aae0-ae80d8c79644",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2288075-687f-4044-8548-af676379f7a0"
        },
        "item": {
          "id": "dcc38a1e-9f40-4fb1-844a-1666dc824ab0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58b4c4ad-8ef4-4002-86f1-456e2ce46fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbea30a0-e735-48c5-84e2-527b90993068",
        "cursor": {
          "ref": "23bce30f-9d13-4f12-a2a4-5d0b267d6d56",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "305e709f-2f7f-49b0-aadb-07df4ba7cf8d"
        },
        "item": {
          "id": "dbea30a0-e735-48c5-84e2-527b90993068",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e5d9d27e-40ab-42f6-a7a9-5c3c1ba612b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90d4261-791e-4a7f-aa9a-a19aa89cfaf6",
        "cursor": {
          "ref": "2567b702-ee1e-4fed-b5ee-ae9e0e2cb5cb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0576b9bc-5850-402d-aee0-ef95760063c0"
        },
        "item": {
          "id": "b90d4261-791e-4a7f-aa9a-a19aa89cfaf6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9fd9f7b-27a8-4097-8cb1-d16f24e77bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4325973a-fcb1-41f3-ba6e-64a7b51a12fc",
        "cursor": {
          "ref": "4b722ac2-7dfb-4f22-8273-bef1803b12e5",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fda372aa-ec58-4c0c-b41d-7fa5c687a587"
        },
        "item": {
          "id": "4325973a-fcb1-41f3-ba6e-64a7b51a12fc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b245991b-8791-496f-9565-fdef27e0758b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41264cff-3f88-42bf-b6f8-883510c17baf",
        "cursor": {
          "ref": "6890c590-fed0-470f-861c-237192e2df64",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b25bbaa0-210e-4449-96f7-29795d0053be"
        },
        "item": {
          "id": "41264cff-3f88-42bf-b6f8-883510c17baf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5c033dd3-cd15-4eb1-b7b5-36c7904b6b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae28913-561d-4f72-90a6-0390f025a209",
        "cursor": {
          "ref": "26e8eff2-4ec0-4d10-9b6c-399aafeea4a8",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4c13bc24-61c8-49fd-bb93-0a69157a5a5b"
        },
        "item": {
          "id": "0ae28913-561d-4f72-90a6-0390f025a209",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "20554752-4f87-4f05-8947-b332f7346275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e096310d-b13d-4467-96d8-ee2d3179ef4b",
        "cursor": {
          "ref": "0da9e08b-adc4-4dd8-8784-0a79b5171b98",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b188f79f-2830-458b-a3ce-1ca665c21c66"
        },
        "item": {
          "id": "e096310d-b13d-4467-96d8-ee2d3179ef4b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5f6e42d7-a5f8-4423-866e-067c7af13821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dd4a5a-eef5-4f21-8b0a-8d03dba2b63c",
        "cursor": {
          "ref": "b0802198-0729-4daf-ba1f-083964412cee",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "614b6266-1894-4dd3-91b2-835c2a056b6c"
        },
        "item": {
          "id": "e5dd4a5a-eef5-4f21-8b0a-8d03dba2b63c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "59efbaab-1849-42cc-a444-217305bd649c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3cc538-372b-41cd-98c9-57497ef026ca",
        "cursor": {
          "ref": "b7cd2da6-d41b-4bac-9616-6535ed43946c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7a5bfbd0-361d-4b3a-a9ba-c760d7fb23a7"
        },
        "item": {
          "id": "fe3cc538-372b-41cd-98c9-57497ef026ca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6baaecb6-f357-4719-bf1a-77738588742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd936d-c4a7-4683-9f3c-a2c2354c7490",
        "cursor": {
          "ref": "69b0fdce-da84-417b-b45b-4fcea91df4c2",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0933b3d4-1803-4d71-9630-b1a7517eeac0"
        },
        "item": {
          "id": "befd936d-c4a7-4683-9f3c-a2c2354c7490",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3ca1e070-8437-400d-aaa0-ecf4803b0549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26eca98-af2a-4756-a56a-35e56c67e4af",
        "cursor": {
          "ref": "507549b1-16c8-4784-975a-dd7cc3d03337",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "41dea2c7-8166-417b-8a29-a686ad20c224"
        },
        "item": {
          "id": "f26eca98-af2a-4756-a56a-35e56c67e4af",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c9578b5d-ec0d-412c-9a6b-6f9385c70182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40780c8-52c0-4753-982b-f635cf962ce3",
        "cursor": {
          "ref": "fcaf7e43-bd04-4819-8754-10a24294a10b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6e3b70ce-cc5b-472e-9f14-06649ea6efa9"
        },
        "item": {
          "id": "f40780c8-52c0-4753-982b-f635cf962ce3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8746c190-67b7-4bff-8493-a3c9f3956c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840172a4-fdbd-4d7f-9d46-389a81a30e35",
        "cursor": {
          "ref": "f8fb0ff2-67b6-46d1-9ddb-636a856f6747",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bdfae8a6-8c2b-44e0-a2b7-31d82e541752"
        },
        "item": {
          "id": "840172a4-fdbd-4d7f-9d46-389a81a30e35",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4b864dcd-030a-43e0-95d2-ccca28c9863f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a8b3fc-aa12-4668-a433-f13c5be22a73",
        "cursor": {
          "ref": "7ea5848b-ad2e-4b93-8bad-27ce8fb296d2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d45044e7-4433-4086-972e-0d61b5923a3b"
        },
        "item": {
          "id": "a8a8b3fc-aa12-4668-a433-f13c5be22a73",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "01a2d97c-6469-46d1-a59d-94acf91a1380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059f669-5081-4b46-af22-6db88a36acbf",
        "cursor": {
          "ref": "cab0e504-ee8c-46ee-a698-1294d5dde86d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bd65cc70-7c0f-48e8-bdab-a8dc91ed5377"
        },
        "item": {
          "id": "a059f669-5081-4b46-af22-6db88a36acbf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a4fd5bff-fa25-49af-9c20-56c0f4ba9ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54741672-7cd7-4741-a65f-a3105b47da8d",
        "cursor": {
          "ref": "3cac9807-905a-40e9-8baa-a998b8faf241",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7474bb61-9573-473e-8b76-0dd46bba0a2d"
        },
        "item": {
          "id": "54741672-7cd7-4741-a65f-a3105b47da8d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dbbbb970-d53a-4627-a52f-0c3d805b461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4219bf-a7c3-4daa-bfac-1a8de7e26eb9",
        "cursor": {
          "ref": "476f3591-ad58-4441-9016-9c5186c4117c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "05913b02-926b-4cca-a656-01903e2a20ff"
        },
        "item": {
          "id": "0e4219bf-a7c3-4daa-bfac-1a8de7e26eb9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "da2374c6-7de0-4c2d-b809-ae2f784fa1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aec6c2-6b73-409c-8931-faa56a286f85",
        "cursor": {
          "ref": "e68e47b7-2115-4d95-8b52-469d595d39f4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "27fe5361-f2f9-410a-bcbc-9aee4e5cfd06"
        },
        "item": {
          "id": "44aec6c2-6b73-409c-8931-faa56a286f85",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c61f48cc-9585-4484-a0ed-84cb7c6c71fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f317df-3531-42d8-afec-1e0b28ecc9c8",
        "cursor": {
          "ref": "fe57a363-11d9-4769-ac23-dc708d785d19",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e50b3b81-be5a-4427-a451-478434058603"
        },
        "item": {
          "id": "50f317df-3531-42d8-afec-1e0b28ecc9c8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2469912d-ffa1-4104-8272-22d28192f925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c0861e-f181-4759-8260-4b45640a38bf",
        "cursor": {
          "ref": "8aa3da0a-ccd0-4618-b35e-06a79b29d9ff",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "16d75787-24d3-4a39-9f1f-11e806d8a1a4"
        },
        "item": {
          "id": "f0c0861e-f181-4759-8260-4b45640a38bf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "98d83be3-3c40-4210-b581-e2186a2384d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0a90fa-a5d1-4280-83c4-57377d9c9c7b",
        "cursor": {
          "ref": "992fa48e-d722-46a6-a39a-791e8bb135c0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "21836f53-ae24-4b12-8421-c38357552d91"
        },
        "item": {
          "id": "dc0a90fa-a5d1-4280-83c4-57377d9c9c7b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9dbb146d-7b58-4895-b493-a323b2814ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf92ae5-7572-4f07-97a9-8117fb45232c",
        "cursor": {
          "ref": "0f3c6240-906c-4464-b08a-60d691bd5b25",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "392ec534-73bb-46f3-a3bc-d26757eb193f"
        },
        "item": {
          "id": "0cf92ae5-7572-4f07-97a9-8117fb45232c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75b598f1-4c46-423e-95ee-667498c58d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7369c57a-6742-4b7b-a861-b882e16c63ec",
        "cursor": {
          "ref": "20a6b48a-d911-4771-a076-435cad703f24",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0f67f36e-fc47-4e9b-804e-74ad92bf37b5"
        },
        "item": {
          "id": "7369c57a-6742-4b7b-a861-b882e16c63ec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e99578ce-539c-4b0f-b9d8-f57609861482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f3a6b2-c5a2-4ebc-88f6-1ec6faf92d32",
        "cursor": {
          "ref": "9a2ad22a-556f-4ad0-be76-e28c61f94b37",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b88924f-88ae-4075-a42b-3251a03de142"
        },
        "item": {
          "id": "21f3a6b2-c5a2-4ebc-88f6-1ec6faf92d32",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "303f8689-9cab-4121-a27a-e32e7ea9bd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd75c2c-dc72-4a87-ab9a-f54d03f2c84e",
        "cursor": {
          "ref": "d1ece1a4-7691-428d-a7f2-5f7f7aec8722",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3a571b45-5348-4938-824b-524c06f88ac4"
        },
        "item": {
          "id": "1cd75c2c-dc72-4a87-ab9a-f54d03f2c84e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ebb5773d-9f1e-462e-b7fe-b91cff2692ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dc4eac-8088-4771-a550-187c3da98ea2",
        "cursor": {
          "ref": "5811cdab-9906-46f6-be99-0152305db674",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "edf2cc7a-71fd-4d91-bd83-b5b3da292f35"
        },
        "item": {
          "id": "76dc4eac-8088-4771-a550-187c3da98ea2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9c446032-e82d-46cb-bf43-af5754d1f765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b0cab7-c296-4f5e-8706-72678548b374",
        "cursor": {
          "ref": "b169f2c7-639e-42cf-a7d9-432cf298de79",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fedfd4d7-fd2b-46be-ba00-fc8c2a112c21"
        },
        "item": {
          "id": "97b0cab7-c296-4f5e-8706-72678548b374",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0007cec7-7200-40f9-8560-ceb96484e1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eccb0f-bac6-4fed-8c06-1489f9db315a",
        "cursor": {
          "ref": "acc775fe-652f-496a-8d05-c9be98691b85",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aae6384b-624e-4163-b4d9-261a8a0627c3"
        },
        "item": {
          "id": "65eccb0f-bac6-4fed-8c06-1489f9db315a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "93597dc1-086c-46b6-86e2-fee772dfc7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d40f48c-0e52-463d-8d55-885c3032350e",
        "cursor": {
          "ref": "cf8bfa19-8dfe-4c80-a7c3-abcdb31821be",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "853779f8-970b-45dd-b5b4-5bbfcf937e4e"
        },
        "item": {
          "id": "9d40f48c-0e52-463d-8d55-885c3032350e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e9dc4fe3-4672-4178-b63c-8f137b75c4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22327b02-dddc-4a10-8b79-e8cda281f8ec",
        "cursor": {
          "ref": "44c1d20d-910c-4624-929b-f3a42d44d954",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "da1dd500-a01a-45cf-aadb-346ea598805c"
        },
        "item": {
          "id": "22327b02-dddc-4a10-8b79-e8cda281f8ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a211e0da-ba7c-4f68-a663-09e5792317e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4db92cc-6460-4731-ac9e-d406610373fc",
        "cursor": {
          "ref": "4164b42e-5e65-493e-b20e-d7e60401518e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ae5a162e-8e0f-48e1-a0a4-29b4558f3f79"
        },
        "item": {
          "id": "a4db92cc-6460-4731-ac9e-d406610373fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "36c0c0e6-7ba8-44eb-a658-ff2449f0cf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dadaa18-c9f5-452f-83b3-976ddd05075a",
        "cursor": {
          "ref": "3a5e353d-30fb-4aa3-9adc-b5cf5abe529c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "17ab8c9f-dd55-49c7-aa9f-9008a044e91c"
        },
        "item": {
          "id": "7dadaa18-c9f5-452f-83b3-976ddd05075a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c3f8d698-bf03-4104-9db7-dbcaddb891fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3839731f-aa7e-4b7c-9c40-9a9341bb926b",
        "cursor": {
          "ref": "72ad9ba7-3b2d-4d56-8d27-0088d047d945",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "48d99452-1ca6-4d17-8027-df1a66351571"
        },
        "item": {
          "id": "3839731f-aa7e-4b7c-9c40-9a9341bb926b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6845c888-995b-4ce8-9dc1-373b2194e321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d706eaf6-7117-4c11-be83-4d80e687ef43",
        "cursor": {
          "ref": "64e5b3f6-a150-4211-9b33-68ac36d697aa",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "573617e1-1336-4468-ab82-4b82215bfdd6"
        },
        "item": {
          "id": "d706eaf6-7117-4c11-be83-4d80e687ef43",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "101c6a10-067e-4a81-890d-ee5da24bf91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d911a68e-84b9-42dd-852d-5f642723850d",
        "cursor": {
          "ref": "66b0717a-0001-4983-a874-dc9016af9f7b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bf46eb6d-a7e1-46db-9233-aeb9e0f090fe"
        },
        "item": {
          "id": "d911a68e-84b9-42dd-852d-5f642723850d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c2759ef5-882c-4b04-93b1-1d2a12c4910d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e592f02-063e-4592-b6e8-da18699feca0",
        "cursor": {
          "ref": "229b5936-4d81-472c-9a36-f740ab050532",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "26d4c2e1-e088-4ee4-85a5-10cf17fba744"
        },
        "item": {
          "id": "5e592f02-063e-4592-b6e8-da18699feca0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f378278-48d6-48ff-aedf-b6d09e4d8fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdab3fd6-5f86-4dfa-80a3-049e2e9354ed",
        "cursor": {
          "ref": "54da945d-5cd7-422a-903b-eac2e49eb1bd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79c43376-d628-477c-9318-b1296f677ffd"
        },
        "item": {
          "id": "cdab3fd6-5f86-4dfa-80a3-049e2e9354ed",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "731900cf-1730-4728-93e8-e6a623bc4d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03de8e5-fbb3-4d8b-a6ff-03e096172b72",
        "cursor": {
          "ref": "be4b2a5e-ba1a-41a5-b69b-881de4300e80",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "406b61a1-63ca-4728-aba4-3b695a0164b0"
        },
        "item": {
          "id": "b03de8e5-fbb3-4d8b-a6ff-03e096172b72",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "833d9bcd-d19d-41a8-bdff-8c82b6f72627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2721fe-a955-4efc-80ba-1edada275714",
        "cursor": {
          "ref": "e3694442-a2e1-4f13-b456-f185f70fe798",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d63515c3-4e6a-4a7b-a0ca-f747f5fe9d90"
        },
        "item": {
          "id": "8a2721fe-a955-4efc-80ba-1edada275714",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f835ce47-edb9-4bb7-9919-4f6e84f9c25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858d4bb0-5af7-4720-800c-ff0f2cd98aa3",
        "cursor": {
          "ref": "36678706-0d56-4319-85bb-469b2ffc3a7f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dd84dd60-6447-42df-9cf1-61fb83458916"
        },
        "item": {
          "id": "858d4bb0-5af7-4720-800c-ff0f2cd98aa3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e992e891-8cba-4699-9f0b-f3ae69cf9324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96755c8b-c04a-47b6-9d23-78ef419b5586",
        "cursor": {
          "ref": "4bdb2901-976a-4227-b152-038332f6537c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "69a42114-c36a-4826-870a-e5f8136407a9"
        },
        "item": {
          "id": "96755c8b-c04a-47b6-9d23-78ef419b5586",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e8939702-97da-4daf-b511-21d69522b874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530fe113-15cc-4ad6-9180-3aceb46aee78",
        "cursor": {
          "ref": "530d9c9e-68ff-471f-97c8-e658cb710f52",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49828844-151b-49e4-9e76-f24fd6fcd959"
        },
        "item": {
          "id": "530fe113-15cc-4ad6-9180-3aceb46aee78",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b4997399-428d-4389-b1fc-de4e12782ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965216c-91d5-455b-8f9b-7e8f885b191c",
        "cursor": {
          "ref": "7b03814b-e54d-4dac-baf6-0cf4f7f0f6b5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cec1aad8-d08f-4c81-b50d-63ee1adb3782"
        },
        "item": {
          "id": "d965216c-91d5-455b-8f9b-7e8f885b191c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5c0b4029-1ef2-4c2f-86d4-50e499413cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7030ee2-48e3-4a4e-9a7f-98747bd720e6",
        "cursor": {
          "ref": "ba9c58ea-807f-4f9b-868d-92aee942deb0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "68cc47ee-5c8e-4a04-a10e-0811b6ceb78e"
        },
        "item": {
          "id": "e7030ee2-48e3-4a4e-9a7f-98747bd720e6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7481b479-ab13-4cbb-9c9c-4272403cabf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb95a9-0457-4db2-8b6a-0faa35700750",
        "cursor": {
          "ref": "9eccdadf-3bb1-4b2c-a152-25b0cd2c6007",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c90e66d3-1932-4aa0-b84c-7fb2bc50fe49"
        },
        "item": {
          "id": "55cb95a9-0457-4db2-8b6a-0faa35700750",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8926a3b7-ca1c-412a-8bba-5a1bdc2d93fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa9d889-96df-4be6-a5b9-d4539a61f2f2",
        "cursor": {
          "ref": "948fd9bd-9835-488e-a6d9-e10f0d5d76d2",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "82e01304-1eda-4712-bcc4-3efd45ca6e56"
        },
        "item": {
          "id": "bfa9d889-96df-4be6-a5b9-d4539a61f2f2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c33c4d6f-8561-4429-a21d-a30ba1e942b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eba5521-cc5b-4d6b-b2be-4a3e9588bcaa",
        "cursor": {
          "ref": "a5fe7357-303d-4ccf-ac67-62e65b89b208",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "055bd60f-25da-47a2-b492-dbb6de123dde"
        },
        "item": {
          "id": "0eba5521-cc5b-4d6b-b2be-4a3e9588bcaa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f34dede4-ff90-4bc4-a67e-697d49bc64b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472089e0-181a-4420-a79e-898bb48aca2a",
        "cursor": {
          "ref": "b85ab335-8e6d-493d-80a7-aec4eeb6a142",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ff47e98f-79c2-4bf9-ac2e-1bd9985287b1"
        },
        "item": {
          "id": "472089e0-181a-4420-a79e-898bb48aca2a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "83ffc902-3661-4086-8af2-4c3caa3011b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1d426c-45f1-4c39-b453-a7f1eafe9932",
        "cursor": {
          "ref": "c1aee81a-987c-4cb1-9a60-c463ae5fd0ca",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d29d4e8-d1f2-452b-9d29-e78adebe42e7"
        },
        "item": {
          "id": "fb1d426c-45f1-4c39-b453-a7f1eafe9932",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6603913e-d3a3-43ba-8027-51055e2d73b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ea4d48-7805-4d3e-9b8a-78ab4143724e",
        "cursor": {
          "ref": "4976560f-d058-4e9c-867c-dfe9e5f18615",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "539c3fd0-e115-4ed0-a8f5-0de0eafff916"
        },
        "item": {
          "id": "e6ea4d48-7805-4d3e-9b8a-78ab4143724e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "94249dee-bf86-437c-a16d-f807e6fafed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dece4f01-f56e-40e6-a049-e6881c2bdeb0",
        "cursor": {
          "ref": "c9dc5b54-9c25-4d3b-b440-1b47c5997f20",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "be660554-bfb2-4367-8526-40770d47504f"
        },
        "item": {
          "id": "dece4f01-f56e-40e6-a049-e6881c2bdeb0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "300aa498-f703-44f9-9663-422f55ae724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088c16a1-299b-4080-9f9b-4dae4e598be4",
        "cursor": {
          "ref": "93c6614c-9d5b-4929-a5a3-d46792bebc0b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "84080c59-0b2e-4961-b1d1-37b3a8d67f6c"
        },
        "item": {
          "id": "088c16a1-299b-4080-9f9b-4dae4e598be4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3eae1766-5f88-4bec-a9a2-47f2f1886745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecd117d-d326-4702-a50c-f7193d034be5",
        "cursor": {
          "ref": "92d2584f-f0c7-4cb5-b52d-415c0c478c62",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1c94920f-93b4-42de-9d89-bd2f83988d50"
        },
        "item": {
          "id": "fecd117d-d326-4702-a50c-f7193d034be5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f796ed8a-29be-4c09-badd-4bc40c65935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af48f9b-dd6a-4ee4-97fd-c70f56f8f797",
        "cursor": {
          "ref": "b2b70b24-bbcb-4b92-8ec3-8499fabd788d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "87aeac18-1ef8-40d5-93d6-b8bfdc494d92"
        },
        "item": {
          "id": "2af48f9b-dd6a-4ee4-97fd-c70f56f8f797",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c3018fba-591d-4b25-9198-062f397d7f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58718f4-9ec5-40be-bf3f-c83573b36336",
        "cursor": {
          "ref": "8f4157ca-d9ec-4409-b073-db44cef03128",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c731c59-e41a-4c20-8036-07c842601e78"
        },
        "item": {
          "id": "b58718f4-9ec5-40be-bf3f-c83573b36336",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a9445156-8dd7-4fd9-90fb-c5d72d1ebb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfa24bc-c546-47a6-8952-2e5c62455860",
        "cursor": {
          "ref": "0f7db578-5daf-48a6-be2e-35cc615bdb27",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "20b0d369-56e7-468b-9ee2-0c1aaf7d05aa"
        },
        "item": {
          "id": "abfa24bc-c546-47a6-8952-2e5c62455860",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "76b9d3da-3fb0-47b6-983c-1fced554af92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4895ec54-5219-4b7e-a7eb-51306fd8faf7",
        "cursor": {
          "ref": "47dc59b4-0b26-4184-89e3-4e6aef5c2821",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0953175d-cd90-4f38-bbc0-a163faa3ae03"
        },
        "item": {
          "id": "4895ec54-5219-4b7e-a7eb-51306fd8faf7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7d222e6c-92c6-4f3b-98fb-d8c9bf25876a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eeac70-8d2a-4f95-9293-0cac074ed263",
        "cursor": {
          "ref": "df670f94-866e-44eb-a831-64477f024daa",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "86885a1f-a758-4349-9658-9541e61d58e9"
        },
        "item": {
          "id": "50eeac70-8d2a-4f95-9293-0cac074ed263",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "703e1877-86c3-4c0c-a993-696c05297297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8e43b3-b571-4a19-942e-b35b0d4bab6e",
        "cursor": {
          "ref": "c24ef101-2210-4c41-b181-2bd33490a89e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8bbbdbbe-8e9b-4725-bdd9-cebb9e4dfdfe"
        },
        "item": {
          "id": "bf8e43b3-b571-4a19-942e-b35b0d4bab6e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a66d6efc-fc51-42ed-a020-f77531fc3cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dddfb7-38b0-4d00-8776-ba735ee7c367",
        "cursor": {
          "ref": "82db68b0-bf55-42f1-8af0-39c24646da9d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "99c08cbd-b829-4c98-b58c-79b417b6bcc9"
        },
        "item": {
          "id": "57dddfb7-38b0-4d00-8776-ba735ee7c367",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7699de09-bd83-499b-9bbd-48a647da2896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5e4071-abc9-45c6-8d53-fa11844f35df",
        "cursor": {
          "ref": "f7e32b53-fb07-4a16-88ba-5809948a4079",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a405af47-26fd-433f-9654-b25e99b3d9b1"
        },
        "item": {
          "id": "2e5e4071-abc9-45c6-8d53-fa11844f35df",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "418fb81b-e72b-443c-9f2e-9dfc21fe7f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f35812-255e-4b8e-bedd-ca498f57a2a5",
        "cursor": {
          "ref": "90757028-e8b6-4190-b63e-89f0a71d0bb0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5b9232ed-f2c6-490f-a95c-96b9863d2976"
        },
        "item": {
          "id": "29f35812-255e-4b8e-bedd-ca498f57a2a5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0127f9eb-803d-4e4a-8c12-cfa14520be74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59546081-7d8a-4543-b5e5-26abd58be448",
        "cursor": {
          "ref": "a96c3246-188e-450f-aa8c-787bcbd62c6a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2e078d85-858c-44cc-9bf7-8106e31c52fc"
        },
        "item": {
          "id": "59546081-7d8a-4543-b5e5-26abd58be448",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "273e829a-8bbc-4331-94d2-4bd51b2aa87b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc0e6df-2ca6-400b-a1ed-c89a2af90808",
        "cursor": {
          "ref": "5a924ce5-d592-4a54-8936-194d6876e482",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "258a55f3-2e56-408a-8bc1-6ec367379fb7"
        },
        "item": {
          "id": "afc0e6df-2ca6-400b-a1ed-c89a2af90808",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5f230be5-3a7a-4046-9363-39b14fde2a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "65e5448a-137f-410b-ac8b-9a050ca4368e",
        "cursor": {
          "ref": "98f49007-1e05-468d-b551-5c2678a80a25",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c38cd692-94b3-42f7-bcff-3b88d4e19221"
        },
        "item": {
          "id": "65e5448a-137f-410b-ac8b-9a050ca4368e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0b9d672f-ca83-43a0-ab19-9cf1857a882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "5114156f-531b-4758-883a-de79625f7232",
        "cursor": {
          "ref": "38df78cb-d360-49ab-bfa8-04be98acee16",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "663496ba-e22b-4d8f-8f20-e13e4b3553f5"
        },
        "item": {
          "id": "5114156f-531b-4758-883a-de79625f7232",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b8d1773d-552e-41dc-bab2-ac808f4791f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dca2c857-3c31-4b61-a6fe-7ec8c532e7f5",
        "cursor": {
          "ref": "78602dc1-0ea0-4426-8171-3b54d47abafa",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f031e4a6-57f4-450c-bd1d-4b3ea145a6c7"
        },
        "item": {
          "id": "dca2c857-3c31-4b61-a6fe-7ec8c532e7f5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f8e0375f-9917-4456-a04d-c37f7df72ba6",
          "status": "Created",
          "code": 201,
          "responseTime": 4746,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c44758-168d-485c-a874-3df6a35c0de8",
        "cursor": {
          "ref": "fbd3ec4b-ad9d-4d70-9b62-b2b7256cd099",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b58bad15-9323-4b11-91b2-f2255219d125"
        },
        "item": {
          "id": "b5c44758-168d-485c-a874-3df6a35c0de8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee04bcb4-72d2-44d1-81e4-2ee9a435993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "039fc4a9-bcd5-4000-ad88-72d784c08aee",
        "cursor": {
          "ref": "deaca8f5-acfa-46f1-8d8a-a2f0b172f8f7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "80cd27ae-1f56-4a90-8c69-1c8cd6c98b95"
        },
        "item": {
          "id": "039fc4a9-bcd5-4000-ad88-72d784c08aee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3a07c61-3f2c-4185-887b-3c767564d278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b3b2089c-fd9b-4112-afa0-0895087d216d",
        "cursor": {
          "ref": "ff7195d4-5cde-4ab1-830d-e2146d305d11",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b6579044-946a-42c2-936e-02fc97ee1ba2"
        },
        "item": {
          "id": "b3b2089c-fd9b-4112-afa0-0895087d216d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "70922d2c-e402-491c-b365-7524105cb95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d974d566-2231-497e-9e2e-1541934feed3",
        "cursor": {
          "ref": "abde8f64-edf4-411f-aa6d-c37593bfc830",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7988b71d-6a0b-4561-a8ae-3e304bd3ecf7"
        },
        "item": {
          "id": "d974d566-2231-497e-9e2e-1541934feed3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80bd03d9-ef47-4036-bb09-8e3b71ab60c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a83a6f-bdf9-4515-8e51-6b943143a2cb",
        "cursor": {
          "ref": "d67d68c3-2a36-4a91-a784-671296db7493",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b850047-3d27-4950-bf08-b970217d0299"
        },
        "item": {
          "id": "f9a83a6f-bdf9-4515-8e51-6b943143a2cb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5a76b5dc-f123-4370-85ce-e2c9740d5168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e608d0-6a58-498a-ac24-6e831703514f",
        "cursor": {
          "ref": "43aff911-a3bc-4885-bf81-2491d8fee5f0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b441400-ac98-40b7-990d-2826d83d4ec4"
        },
        "item": {
          "id": "b0e608d0-6a58-498a-ac24-6e831703514f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "30c00b2a-ab37-4ff3-ab4e-0262e48986ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563fd17e-4e9d-4d48-971f-de415df1731e",
        "cursor": {
          "ref": "e3f530cc-bde5-4fdc-9a9a-c21cc07afdf6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cca33d66-6ed5-4f1d-aba9-fcef321be271"
        },
        "item": {
          "id": "563fd17e-4e9d-4d48-971f-de415df1731e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "492edb5f-db14-43c9-a6bf-cd69f064e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a0008b-846e-478c-bd2b-31f77de5c894",
        "cursor": {
          "ref": "1e459552-0bcf-4496-94fc-245cc944f350",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c0f8ccdc-f5ca-4da5-bab8-896d6061a92a"
        },
        "item": {
          "id": "89a0008b-846e-478c-bd2b-31f77de5c894",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f9a5c297-783b-4d5b-a504-469b0d345a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f016e6ba-10c6-42d3-8708-82bd1c0be27b",
        "cursor": {
          "ref": "d7bfbd3d-e2a7-433d-b77b-510a5d911014",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "88918dcf-c544-44e9-beb4-b9a4a2df7d93"
        },
        "item": {
          "id": "f016e6ba-10c6-42d3-8708-82bd1c0be27b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "793afa5a-19c4-43e1-9bdc-371879f869c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d004d894-22e1-42ba-a3c3-c5f6082a03f3",
        "cursor": {
          "ref": "70e7c644-e0a3-4efe-84bd-3b36854c1c11",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cf71362d-7ec2-42dc-a01b-0613f1fa36ba"
        },
        "item": {
          "id": "d004d894-22e1-42ba-a3c3-c5f6082a03f3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1febd861-4a3c-4ea1-b9ba-2b2b73cea3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730967cf-c2df-4e56-ba4e-02ac602192e3",
        "cursor": {
          "ref": "3971a05e-6df0-4a73-be1b-189eaf36d4c9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e5a1de27-d337-428b-bbb9-546c1a6e795b"
        },
        "item": {
          "id": "730967cf-c2df-4e56-ba4e-02ac602192e3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c6a9d5f-0265-4524-83e4-9798b722028a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c193419-3717-424b-87cb-25ecae883c80",
        "cursor": {
          "ref": "c61607c6-9641-414c-8f9d-634f768b8a00",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "143d1c3a-0055-42a3-a732-4bea00218ec1"
        },
        "item": {
          "id": "9c193419-3717-424b-87cb-25ecae883c80",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2c36d2f7-8676-4770-952f-64175fea2d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e411d-54dc-4a9b-990b-6ba11385add6",
        "cursor": {
          "ref": "1746b1c6-8300-4007-bff5-ede017e3066f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e73065bb-598c-449e-9dba-185dab85fc2f"
        },
        "item": {
          "id": "6b5e411d-54dc-4a9b-990b-6ba11385add6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d8ab57a4-36a3-4c6b-a863-c17dea7f1c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10242605-b8da-4081-ab84-8668ca79483e",
        "cursor": {
          "ref": "dff8a127-6970-4a20-b4fd-624080950776",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8921b4de-3b56-41b3-8b90-34802453e877"
        },
        "item": {
          "id": "10242605-b8da-4081-ab84-8668ca79483e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "210c5587-aeb3-47b5-8790-fe20c5902e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ad51d4-a05f-4d22-a082-741c0674a4a6",
        "cursor": {
          "ref": "94ca873b-2968-4813-b952-998a4f240df9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2c94e610-ec29-45f9-bfb0-efd8e5a43198"
        },
        "item": {
          "id": "36ad51d4-a05f-4d22-a082-741c0674a4a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e2bc65e-70cf-46ba-9a63-7be39a13a54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fae645-f678-4d97-b4aa-07da2e315e03",
        "cursor": {
          "ref": "e19f3dd3-2b62-4320-9d03-c8cded96ee6b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42478f30-4b12-4064-af40-92e215c46a0a"
        },
        "item": {
          "id": "c7fae645-f678-4d97-b4aa-07da2e315e03",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "41d3044c-8d23-4262-bbac-77f0da0ef0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f90a90-c4c8-4a42-830c-286bbd35f661",
        "cursor": {
          "ref": "9e1fff53-42ad-46ca-9b52-4ae0ed106f06",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a5ad8c71-7f8e-4097-b71e-3b9f44c28fe2"
        },
        "item": {
          "id": "45f90a90-c4c8-4a42-830c-286bbd35f661",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "59ef4455-b446-4a9c-8e77-16c0eb8a1213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7b08ac-e8b8-4586-a25f-ed7bc1b1f118",
        "cursor": {
          "ref": "f55bba7f-193f-4fde-b6f2-3e5fc131f33b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6efec9e2-2ea3-4a58-8bb8-75c47935177b"
        },
        "item": {
          "id": "dd7b08ac-e8b8-4586-a25f-ed7bc1b1f118",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99e74adc-ab5a-445c-abd0-6898c1dc76c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabf2a03-3abe-45c6-9139-1971d6f4594c",
        "cursor": {
          "ref": "d8e87453-b654-44a5-b415-d43aa87d64e4",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d11b7597-39fd-4925-b891-2f80a8029eab"
        },
        "item": {
          "id": "aabf2a03-3abe-45c6-9139-1971d6f4594c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18204c72-934b-4908-a87e-e7c3a8b22d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a212cc-ef53-4365-94a6-4974624c6d73",
        "cursor": {
          "ref": "b35c5255-6320-49f8-b583-2ef74df48739",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1677df0e-5cc8-4997-b9f3-88be27c57f44"
        },
        "item": {
          "id": "93a212cc-ef53-4365-94a6-4974624c6d73",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2008c276-68c1-42c3-b3c3-ca9dcafb0e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bfd549-22cc-43bb-8916-5a38b4249172",
        "cursor": {
          "ref": "a231ec42-a6b2-4d90-aa86-724a628d692d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bbb6eda7-404a-4eef-99dc-5e1b7264e4e7"
        },
        "item": {
          "id": "32bfd549-22cc-43bb-8916-5a38b4249172",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a67922b9-1794-4803-9c52-2d92acd1f417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652a1c41-8b3e-4d97-ae47-e5b0381bb837",
        "cursor": {
          "ref": "56ff267d-d445-4bb1-89f6-3b2ddd16a637",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bf77dae3-4741-4a95-8e44-75d55713a705"
        },
        "item": {
          "id": "652a1c41-8b3e-4d97-ae47-e5b0381bb837",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "477da860-1e4f-4691-9853-e9670ffdd8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01438a85-127d-40fe-977b-4ed7ed01df23",
        "cursor": {
          "ref": "4a1ca6e3-fba3-46e8-8c1f-7c133b8e1d86",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0517000c-25e5-4a1b-86d2-ae8a0fd20114"
        },
        "item": {
          "id": "01438a85-127d-40fe-977b-4ed7ed01df23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "15148926-cf46-42cb-ae37-72b03e28da20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276589a5-dc54-41be-afcd-fd8b81cdf000",
        "cursor": {
          "ref": "1466b61e-ac93-437a-8132-26f71c1f2a92",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5247deff-c99c-420d-bc6f-e1e060ac8d1b"
        },
        "item": {
          "id": "276589a5-dc54-41be-afcd-fd8b81cdf000",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4e23e16-a8bf-45f1-b873-e450b73bf0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdce599-a9e6-494a-b4c7-b0a6836e2ce1",
        "cursor": {
          "ref": "96be9d6f-5d57-43e5-ae27-2d531b429ea7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5cad8d5d-e336-43a0-8ee9-375703c35c49"
        },
        "item": {
          "id": "cbdce599-a9e6-494a-b4c7-b0a6836e2ce1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3a457e45-169c-4d92-9d83-81be00a420b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f805827-e3fc-46b2-b8aa-d370053b5338",
        "cursor": {
          "ref": "2c05a4c4-59b7-4339-a2c4-4da56f01d064",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d73dfcb0-667d-4e82-a59e-154b14b99d41"
        },
        "item": {
          "id": "2f805827-e3fc-46b2-b8aa-d370053b5338",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "59f7d1a5-af82-4035-8717-d504208bf749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0b6756-bb53-4457-9333-d2337c942e88",
        "cursor": {
          "ref": "ef9172b7-b3ef-48c2-9ef9-f722c5585c70",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f5cbec8c-81af-4c65-9e86-9325e5a90c00"
        },
        "item": {
          "id": "fa0b6756-bb53-4457-9333-d2337c942e88",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fbe19517-71bc-491a-9e4d-496bb8ff7624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4472bb-8cb9-4750-87d1-ac0b4db330cd",
        "cursor": {
          "ref": "23f455df-97e0-4aa9-8e19-89d5b130045b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9fd331f9-1c74-409b-ac79-119bcb34768f"
        },
        "item": {
          "id": "cd4472bb-8cb9-4750-87d1-ac0b4db330cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "da12afb2-7884-48c7-9509-e333d2c3f787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9093a4-dda0-4336-8db4-86101e190abf",
        "cursor": {
          "ref": "c791316e-6f25-49be-951c-0eac17574dca",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8f48441e-98f1-4480-be71-803cf2f79c6d"
        },
        "item": {
          "id": "8f9093a4-dda0-4336-8db4-86101e190abf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a6fd3e5e-9577-4121-919a-e9668d15710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612b731c-8a26-4315-a58d-58392c8b03e9",
        "cursor": {
          "ref": "0d609093-5db0-43f0-aeed-96cbea838f36",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "50f73987-9d72-4dcd-a7a2-71a2bf5f77f8"
        },
        "item": {
          "id": "612b731c-8a26-4315-a58d-58392c8b03e9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a41bf9d-8858-4bd5-b015-92ba45391929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab9ad7b-0c14-4623-97c9-4584ab03abc2",
        "cursor": {
          "ref": "f44815f8-3aea-47d5-a43b-683b2fc237eb",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "42f0baea-2ee6-4b96-b154-19058fa9a4db"
        },
        "item": {
          "id": "7ab9ad7b-0c14-4623-97c9-4584ab03abc2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5cf84b31-fca4-4a9a-86ec-15765b03faf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d55741d-03cd-4f09-8c5f-28627350082b",
        "cursor": {
          "ref": "68828004-aa7e-4889-9618-08f3fa7b49c8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0090e36a-a5ca-443d-a0aa-3551cf00a259"
        },
        "item": {
          "id": "4d55741d-03cd-4f09-8c5f-28627350082b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b8fe1b8-82da-4625-b7e6-ae22041e0c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8344ffa0-8aed-498c-b207-61e1e4773299",
        "cursor": {
          "ref": "eb76b03a-32e6-40d4-a7aa-a2d640d181ca",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "75f702f7-7bd5-482e-8635-1330675bfc02"
        },
        "item": {
          "id": "8344ffa0-8aed-498c-b207-61e1e4773299",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ab217503-cb48-422a-9da5-46b84bb08e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2dec9a-c929-4219-a82e-526b8a506a3e",
        "cursor": {
          "ref": "396dd7c8-927e-428b-a5da-6478c8521665",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "21d243bc-3c68-4e21-9d0c-62450070c39f"
        },
        "item": {
          "id": "0b2dec9a-c929-4219-a82e-526b8a506a3e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3b14d599-c679-4d30-a692-fb6d5b40508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b40b45-6604-43cb-a64b-80aa084b88be",
        "cursor": {
          "ref": "ac9d349e-b35e-4a31-b21a-c623d981749d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92121032-c529-4356-9d94-3607c8aa0028"
        },
        "item": {
          "id": "c9b40b45-6604-43cb-a64b-80aa084b88be",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4c985b02-6560-41c5-90aa-74c19d6c46a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78652956-5018-4d61-b3d2-15e769bbea1e",
        "cursor": {
          "ref": "916678c5-88d6-413a-813d-013d8fb8079a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "334ee5ed-f5bd-404f-bbfc-d946a55464ae"
        },
        "item": {
          "id": "78652956-5018-4d61-b3d2-15e769bbea1e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7be996f2-aa55-442e-aed6-24df30de6e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db5892d-b086-4d33-8b1e-fb28e66f3263",
        "cursor": {
          "ref": "2461dc7c-7b79-4a0f-9c15-cb3684bfafe0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d7613de6-5f69-4ec2-a7ce-7f6ce3b2ebbe"
        },
        "item": {
          "id": "7db5892d-b086-4d33-8b1e-fb28e66f3263",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ed81c2dc-be56-4a8b-b65d-bd7e517b73ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e589c6-bf25-466e-8f56-2ce9b73734aa",
        "cursor": {
          "ref": "a7be014a-2840-439c-b950-141053ab5e7c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "027b1f46-50c2-403f-a896-09e75a4f8495"
        },
        "item": {
          "id": "a4e589c6-bf25-466e-8f56-2ce9b73734aa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "51c11649-79b6-45d6-afad-ad188a726337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f45c19-d9d4-4c0b-bbcd-6317a0ba011e",
        "cursor": {
          "ref": "de9bfaff-e768-4040-872d-ac2ff59a7fba",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "af04f741-3dd8-4f83-9915-3303c5e9fe89"
        },
        "item": {
          "id": "61f45c19-d9d4-4c0b-bbcd-6317a0ba011e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a561d385-bb7f-4eef-b882-ec450fb25adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fecf52d-7903-4215-8ed6-b30f066bb5c9",
        "cursor": {
          "ref": "176c69bf-15db-435a-8270-5e06f72ece01",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ce6aa7e9-8850-4472-a8d6-863ed6f0bac2"
        },
        "item": {
          "id": "5fecf52d-7903-4215-8ed6-b30f066bb5c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a32af7d9-b193-4f0c-8217-b73ba953b284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a655eb-6b90-441f-a6f4-3948f256eb97",
        "cursor": {
          "ref": "9c95f4ec-bff5-47a3-8935-a0add22eae96",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "492ddd14-0eb5-4852-a8d4-12283813d4a8"
        },
        "item": {
          "id": "31a655eb-6b90-441f-a6f4-3948f256eb97",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f8b0e99d-e531-4cc5-a463-776331ee5eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeddee7-ac2a-4c74-b9ee-83eaa6bc71a0",
        "cursor": {
          "ref": "1a6866db-c546-40bc-9133-80036b3d4b93",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "96fafe3e-25b7-4b3e-8273-17921cef003b"
        },
        "item": {
          "id": "feeddee7-ac2a-4c74-b9ee-83eaa6bc71a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "572bd770-512d-4624-91e3-c853755a7959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730acf1-5d13-413d-84ca-879a0b24b1fa",
        "cursor": {
          "ref": "4ce764ea-6d32-48ba-9f7f-4cd14a1fb287",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8c009dc6-01d2-424b-92d6-0fd4ee731ec2"
        },
        "item": {
          "id": "5730acf1-5d13-413d-84ca-879a0b24b1fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "496a198b-f31f-4adb-af0f-bfd7c98703ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1a7d89-5136-42e5-a5f9-4cbbab3084c4",
        "cursor": {
          "ref": "9693658b-76ba-4e8f-861c-4b9d2c461f48",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "38e64f48-45e8-4fbe-834e-cca34734f9ce"
        },
        "item": {
          "id": "8c1a7d89-5136-42e5-a5f9-4cbbab3084c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69f868e8-7415-4bb3-95d2-13268e6a5bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6704dbb2-5a47-48f7-af15-4350b6157922",
        "cursor": {
          "ref": "b46352fb-24f8-4fb7-8403-bc1bbfeed75a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d7df2448-8639-4617-b406-643b881d812a"
        },
        "item": {
          "id": "6704dbb2-5a47-48f7-af15-4350b6157922",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ea118507-071f-48b2-8a29-f6760a220291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa061dc-d4e2-4562-a52d-53d08424f750",
        "cursor": {
          "ref": "3a57bd4b-8406-4392-997e-61e2ce76db8c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "603903c7-2ab3-41f1-a167-a419a7a9c18a"
        },
        "item": {
          "id": "3aa061dc-d4e2-4562-a52d-53d08424f750",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d86a3ca4-75a3-4d93-b44a-71392ef0f828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee58f1d-d931-4ab0-8f36-ce55fb83dd3f",
        "cursor": {
          "ref": "c110aa34-db81-4751-a6f4-735b65e26fc0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "736fae96-19f8-4cb5-b101-ef9f13f538cf"
        },
        "item": {
          "id": "2ee58f1d-d931-4ab0-8f36-ce55fb83dd3f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c005c8a-88b4-4fbd-85aa-166e24fa22bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f022da51-cfa0-48aa-b396-59dbd308a303",
        "cursor": {
          "ref": "f72c6ae1-1e8b-41f7-b95b-f21cb95570ec",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "44dd4589-4404-47bf-9995-dff8d0af5f92"
        },
        "item": {
          "id": "f022da51-cfa0-48aa-b396-59dbd308a303",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "683ce506-5f13-493d-8a6c-e69bacf5dcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322af011-983f-40d4-a03f-2bb310bdf881",
        "cursor": {
          "ref": "8c4ec9a4-0015-48cc-a2a9-27a4e7e8aefa",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "79cc9ae7-7b7f-4462-b33b-8679bcc7fd58"
        },
        "item": {
          "id": "322af011-983f-40d4-a03f-2bb310bdf881",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c1b016a2-b86b-4f2a-9f39-d6e74987b71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583d0015-ecaf-484a-ad92-947b63afdd88",
        "cursor": {
          "ref": "2f4122af-898d-4342-ac3e-e9a284fd40e6",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31055632-0a2e-407c-86a8-26a3f7fe2214"
        },
        "item": {
          "id": "583d0015-ecaf-484a-ad92-947b63afdd88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9ccb50de-7dfc-448f-9308-b26ae8c57a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1ca242-823d-40d7-a3cc-54007a2391ef",
        "cursor": {
          "ref": "e0112b82-af01-436a-a16f-00010883a8f2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4ce5524e-0c81-4128-9d64-8a7290780b28"
        },
        "item": {
          "id": "9e1ca242-823d-40d7-a3cc-54007a2391ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b248ee49-e3e3-496a-867d-a196ce347248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600964ab-acee-443d-8f9c-38bffcd1fe99",
        "cursor": {
          "ref": "bf0597bd-445e-4b05-a7a3-9770a941e52e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54e835ee-b0e1-4138-9872-9b3e445b5850"
        },
        "item": {
          "id": "600964ab-acee-443d-8f9c-38bffcd1fe99",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3cf80c89-d85b-42ff-b36a-cd2b4f18c0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76725e82-6bce-4416-a372-ed23c3ee29e8",
        "cursor": {
          "ref": "1311f1f9-2d7f-4056-b172-13f11a7ab853",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8db8b7e9-6159-4c16-a5e9-abbc4dce2a9f"
        },
        "item": {
          "id": "76725e82-6bce-4416-a372-ed23c3ee29e8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "49ed4851-0b69-492c-b049-5fbcbddf97d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011fed0c-6a33-4eaa-9d50-8a443de88ab5",
        "cursor": {
          "ref": "0974510c-4e62-4671-a8ea-d20a68481e9e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8a73fb5-47d8-4123-908e-7037fcb5d444"
        },
        "item": {
          "id": "011fed0c-6a33-4eaa-9d50-8a443de88ab5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f1153044-5d59-4878-9776-b7753c70115b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58e3709-96d7-40ad-9532-6e0e59d93d40",
        "cursor": {
          "ref": "1511efbb-fb5e-47f7-9f7f-21b46fed3462",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "56033141-d5ce-4c10-8902-b3fd5b48f157"
        },
        "item": {
          "id": "e58e3709-96d7-40ad-9532-6e0e59d93d40",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1a0fa8b-b666-487c-97b0-ef0b53bd4d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4880b4c9-da64-4d9d-84fd-a906954e4a7b",
        "cursor": {
          "ref": "4eb60ba2-7772-472f-bc64-121e876ac082",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5d52aaa0-8650-491d-a0bd-9a421e640909"
        },
        "item": {
          "id": "4880b4c9-da64-4d9d-84fd-a906954e4a7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7cbfb730-38f9-4de8-b765-c17f3e8e2ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112a6185-c5f2-4bf6-8d90-6b0d9cd5258e",
        "cursor": {
          "ref": "4a266175-f71e-4fc2-b357-9fee02b77c6a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ecbdf1e1-f6f1-402e-b492-25ff3598a9d2"
        },
        "item": {
          "id": "112a6185-c5f2-4bf6-8d90-6b0d9cd5258e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f5c209e0-67d2-4854-9e9b-f146c1ca64e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f91915-6270-4fb7-bc5f-6dcde7ac8375",
        "cursor": {
          "ref": "d1c65d24-26aa-4c30-b147-ad885b7943ab",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "300cb2b7-a580-42cd-88d9-944839130b70"
        },
        "item": {
          "id": "22f91915-6270-4fb7-bc5f-6dcde7ac8375",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3242fe31-16f0-4361-954a-0500fd1229b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8d8bbf-739d-46b7-8880-36b1ac0f32d6",
        "cursor": {
          "ref": "c8eb1acd-18a2-4601-91b1-7a6d681b7c1b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "47ff1992-b67e-4323-bee8-aa5bca249453"
        },
        "item": {
          "id": "4b8d8bbf-739d-46b7-8880-36b1ac0f32d6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b266c82-c531-441d-960d-e65545fc6f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664ec400-d32f-42ec-a923-9dd4e4ec8932",
        "cursor": {
          "ref": "7fad4f67-5cdd-4ead-a692-fcc5e5e35c7b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "51abb6ca-37e9-4cf9-825d-79dec3a4d58b"
        },
        "item": {
          "id": "664ec400-d32f-42ec-a923-9dd4e4ec8932",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d7b2e478-434c-4d8e-9c3f-ab8a5995edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6879c00f-536f-4337-8046-efc018fb2fb7",
        "cursor": {
          "ref": "a673194a-1712-4c94-b5aa-162aa1949ba5",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dccfbb62-d207-49ca-8781-929095eafcb0"
        },
        "item": {
          "id": "6879c00f-536f-4337-8046-efc018fb2fb7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f70e918d-8d4a-418f-8664-b092923a600f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5908606-e337-4842-ac2c-784ed9a65ab4",
        "cursor": {
          "ref": "736aebb8-6604-4d40-938d-73ca63131af3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "15dfd062-a73b-47f3-835e-c88fa47af00c"
        },
        "item": {
          "id": "b5908606-e337-4842-ac2c-784ed9a65ab4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b9f43cc0-79b0-4729-b1c9-9a66a02eebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72d25a0-7a4b-49df-9c44-86c9721c29a9",
        "cursor": {
          "ref": "bf11cc10-3c9d-499a-9eb2-ee52bd94ef0d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5d897f43-aa1a-4a01-a5bf-95318b651b52"
        },
        "item": {
          "id": "b72d25a0-7a4b-49df-9c44-86c9721c29a9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "60876e3d-cb13-4835-88ef-4259c50e281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c439339f-1c6c-4dd0-8f81-482e7ff41c42",
        "cursor": {
          "ref": "f342187e-5261-42ec-ba40-bad4a4806ad5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "71554fd5-bbb3-412d-857a-a1f0d4f6d939"
        },
        "item": {
          "id": "c439339f-1c6c-4dd0-8f81-482e7ff41c42",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "401e43be-e541-4f2a-9bd6-20550e69f502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a77b1f-dd85-43c2-8898-14306bc80096",
        "cursor": {
          "ref": "664a51d6-fc62-4561-9f57-d58d1f7c0f4f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8bc78a09-342d-4731-bbb7-816072167766"
        },
        "item": {
          "id": "51a77b1f-dd85-43c2-8898-14306bc80096",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3819a042-f58d-4b6b-9dd9-1de492d328e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b1210a-9819-429b-a2ee-b867dc33229b",
        "cursor": {
          "ref": "cd34bf25-d725-4237-a5ec-35a97f4ac58d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "992fb10b-689d-4d08-bd33-7541c9d7cd05"
        },
        "item": {
          "id": "77b1210a-9819-429b-a2ee-b867dc33229b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "12e07560-0f65-4e0c-a7d9-84a663d8089c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8969bec-6f0e-47ac-8f95-02ba3878bdff",
        "cursor": {
          "ref": "a667e84d-14aa-4046-978a-131388bc8683",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fc098509-407b-473f-9c13-a9440550d24b"
        },
        "item": {
          "id": "a8969bec-6f0e-47ac-8f95-02ba3878bdff",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2241f9fc-655b-4891-8242-ab3bb506df17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8509b6ac-1418-4462-9fad-99b5ee5ffcd8",
        "cursor": {
          "ref": "6692983f-6c17-41df-b565-309fdc6bb317",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d5a5ef46-baa5-4eb2-9073-0a6ca884149d"
        },
        "item": {
          "id": "8509b6ac-1418-4462-9fad-99b5ee5ffcd8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "673a6713-3bea-4771-96ec-a84404947fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0591d242-34cb-4481-8a6f-c64af3997986",
        "cursor": {
          "ref": "89b1461c-3055-427e-8904-ec3ddf6c2488",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b02082b6-a921-4f6a-8025-bf7639ccd2c9"
        },
        "item": {
          "id": "0591d242-34cb-4481-8a6f-c64af3997986",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fd50e992-d694-4d14-9c79-cfc5b7ec2abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627f8ea3-29b8-4b1c-976c-4bcef9eaa9a6",
        "cursor": {
          "ref": "c3630c88-3667-46c8-9c99-7154af0fb66d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f0a46044-0732-4ab5-8f0b-fe1703a7b183"
        },
        "item": {
          "id": "627f8ea3-29b8-4b1c-976c-4bcef9eaa9a6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0b8a8ecd-533a-4f14-b1c1-ab4924b802d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862c1773-fa3a-4ff9-bb1a-443931c11cec",
        "cursor": {
          "ref": "09076bd5-d3a0-4aa9-b2e5-0b37132419b1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4c0a06da-acae-41a3-ae19-006a3e496a16"
        },
        "item": {
          "id": "862c1773-fa3a-4ff9-bb1a-443931c11cec",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "01b59a77-42d6-4976-9bf4-3ad2eab5faf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce2e560-c4a3-463b-91f1-a4f4974b8224",
        "cursor": {
          "ref": "2d3b5e55-9e6b-473c-adf4-b3a7555b6d0a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c7154093-de63-447a-8f31-dc8ee292a862"
        },
        "item": {
          "id": "5ce2e560-c4a3-463b-91f1-a4f4974b8224",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "258ca4e7-d11b-4ea0-894d-1a531942f9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df7f0dc-367a-45d0-ab66-4425abec31af",
        "cursor": {
          "ref": "b8a59b9d-8a06-4220-82c4-a51584ff42f7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6c656600-4492-4786-83af-dfe6ddc77a4e"
        },
        "item": {
          "id": "6df7f0dc-367a-45d0-ab66-4425abec31af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "99ef4284-a2fc-438a-ba9d-37bc277f59ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cb39a1-456c-45dd-ae55-01f202a49494",
        "cursor": {
          "ref": "72bc160e-45bb-44fb-835b-2cbf7583f2d5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f8086069-1b97-4eda-a0cd-4f5c6843ae19"
        },
        "item": {
          "id": "e2cb39a1-456c-45dd-ae55-01f202a49494",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dc37a3d3-7eeb-4f22-8fb7-d3febaf955a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8e6ffa-1d46-4fc6-b66a-dd4f483e1c23",
        "cursor": {
          "ref": "ff3d6573-bb98-42d6-a12f-7f55a64e52e1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "26f63752-b023-4d97-b6a2-64b23c67e12c"
        },
        "item": {
          "id": "ab8e6ffa-1d46-4fc6-b66a-dd4f483e1c23",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e0e1613a-1689-4b49-92e0-07d6a8973677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f38a70-9600-4dcf-918c-bd84666bb889",
        "cursor": {
          "ref": "5c9cecc0-a365-4c84-9fb0-fcf4f2e08247",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0e88b3cb-23ef-4ba7-bfc7-66d299a6bd94"
        },
        "item": {
          "id": "d6f38a70-9600-4dcf-918c-bd84666bb889",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c99d190d-6009-4397-aaa8-b50cd444448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f168314f-9db3-4fe6-869e-e8f4a78f0f06",
        "cursor": {
          "ref": "8dd64baf-81db-4c2b-b549-0d130569b919",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "33bd8e00-2b70-4bb2-bd6c-15ee24d21d77"
        },
        "item": {
          "id": "f168314f-9db3-4fe6-869e-e8f4a78f0f06",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "75758a0d-7013-4fe5-a34d-9407da4e2541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03297fe3-2216-4af8-be7a-d86cb9897eb4",
        "cursor": {
          "ref": "0d0a7d83-f4d7-4328-ba6d-3bc85e1f53b6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e6f42542-bade-4192-b682-84680b156271"
        },
        "item": {
          "id": "03297fe3-2216-4af8-be7a-d86cb9897eb4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ac9cf2c8-5bf7-4720-9ee7-966397d2c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00695979-0607-4b7b-aa1f-cec4d5c76650",
        "cursor": {
          "ref": "ea341f6d-9a88-47e2-b2fd-5696e6dcca47",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9ca771e1-1067-4343-8f78-f8672514706f"
        },
        "item": {
          "id": "00695979-0607-4b7b-aa1f-cec4d5c76650",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "93e85b37-949c-4462-870d-ee1af6bd2c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b339e56a-804d-4e35-9413-7e613e43b73e",
        "cursor": {
          "ref": "5f8f9b05-8c84-482f-bf31-36f5581f61e1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f2e6b0f8-ddb9-4837-b721-639c9910a268"
        },
        "item": {
          "id": "b339e56a-804d-4e35-9413-7e613e43b73e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ea90c6cf-046d-4ee9-8513-46ea00745c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6066a15e-9d1c-4e60-ba62-edecb6810131",
        "cursor": {
          "ref": "63539eeb-263d-4c6f-b5f1-068d645f1bd8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0c12ee25-9422-4626-8788-4eb70db33741"
        },
        "item": {
          "id": "6066a15e-9d1c-4e60-ba62-edecb6810131",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "90d035eb-f965-48ff-8986-9870bb4eac08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e837e13-4091-4a2e-93b7-d6bcc9987dd4",
        "cursor": {
          "ref": "f2948eb3-7e2d-4d5d-8018-f199029939e2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "621510ec-ab8a-4b3e-81c9-d9a4977219a2"
        },
        "item": {
          "id": "3e837e13-4091-4a2e-93b7-d6bcc9987dd4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3df58402-e01c-4c39-a190-ba392da3264f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbdaf34-3ceb-4cf7-b95e-9122ce49b73d",
        "cursor": {
          "ref": "e41c8cc9-283c-48c7-b91e-024c23a9495d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4af0a70b-d4bf-48c7-a12f-33eccedda8ad"
        },
        "item": {
          "id": "3dbdaf34-3ceb-4cf7-b95e-9122ce49b73d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c7624928-4ad9-4db8-9438-15d5a39e5064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ba2ce5-1c28-4016-82c4-0ead19710ce7",
        "cursor": {
          "ref": "19fcfe21-6a04-432c-8a7e-746517281f22",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d6d7416e-7853-4245-93db-7d2df50f6ad5"
        },
        "item": {
          "id": "42ba2ce5-1c28-4016-82c4-0ead19710ce7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "07c671a1-75dc-4102-a643-a3cb3a34801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d994dc9-3eb2-45c0-be90-af598b26d48a",
        "cursor": {
          "ref": "37f9f6a8-1cab-47af-a5fd-e1c4b18bcca4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3c90493a-bd6f-4e1f-b53f-dfb3e95f5ac6"
        },
        "item": {
          "id": "8d994dc9-3eb2-45c0-be90-af598b26d48a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4bc19d71-68ae-4b24-983a-85a8d7e988ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f8364f-e84b-436b-91e4-c47bc3116342",
        "cursor": {
          "ref": "f44d5762-f2df-429e-a1fc-24521b7a34ec",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1e943439-207d-4a63-b5c9-a44ee3bd5fd5"
        },
        "item": {
          "id": "58f8364f-e84b-436b-91e4-c47bc3116342",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eef71004-6ae6-4244-b022-44aed8a7f49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106b4c3b-615e-4dff-b0d2-b5249529ef57",
        "cursor": {
          "ref": "d42d74be-7b5a-4f62-b01a-3729b87b8e3e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7bfa744e-4def-4869-ab94-fcac3df90499"
        },
        "item": {
          "id": "106b4c3b-615e-4dff-b0d2-b5249529ef57",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a6f948b-3467-4dfa-9d4b-bbb098f9b3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88122fb-fc6e-4dc3-bfcd-67ee63cd649f",
        "cursor": {
          "ref": "5c5f39ae-d85c-4956-b4a4-1ce5ed65ae92",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70f72262-d9bc-453e-8814-05625ffbc23c"
        },
        "item": {
          "id": "f88122fb-fc6e-4dc3-bfcd-67ee63cd649f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "df0029ad-cadc-4eba-bbd5-59c6a25a1eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9774d97f-8390-4b72-bda3-646791f4fd3c",
        "cursor": {
          "ref": "675398b8-e6fb-470a-871c-5d6c954bb5c1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7cffb357-00dc-408a-abcd-678db08cfd10"
        },
        "item": {
          "id": "9774d97f-8390-4b72-bda3-646791f4fd3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "60cae847-8240-493f-8d20-f86ffbc30d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f692bbe-f5ed-405a-888d-c4ecb1959e94",
        "cursor": {
          "ref": "04025d07-db8b-4987-b240-8812b34bc065",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd4eb142-21ec-4822-9877-a00901bed801"
        },
        "item": {
          "id": "6f692bbe-f5ed-405a-888d-c4ecb1959e94",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "82022c5b-b49b-44ba-a1a8-8b52efc3331c",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "4bf16fba-01cb-4764-873c-3d5bc2ab9fcd",
        "cursor": {
          "ref": "54d625c7-0386-49ee-ac27-43cb9d6e3918",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0503a49a-0a3e-42b7-b78b-42bb3600d78d"
        },
        "item": {
          "id": "4bf16fba-01cb-4764-873c-3d5bc2ab9fcd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "92f62a50-c10c-4659-b520-d26b36a15877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71faaa09-a8c6-464d-8fff-6ea1e659f7fe",
        "cursor": {
          "ref": "1eea7848-f0d3-4c28-b0d1-352ec7ed7327",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba300cb9-f1c6-4705-b2af-167fcc127190"
        },
        "item": {
          "id": "71faaa09-a8c6-464d-8fff-6ea1e659f7fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "75a1f08b-4730-428d-9249-905d97217d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d68a85-f1da-457a-9552-03d03034af12",
        "cursor": {
          "ref": "c30f3bb5-ef35-4cf5-9a46-17353502c2c0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dc8a4f6c-53f7-4f25-99a4-6fdfb50be6d7"
        },
        "item": {
          "id": "e0d68a85-f1da-457a-9552-03d03034af12",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d01d04f1-8373-4cd3-abdb-817bc878f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0f911d-c1f4-4466-b647-80b6027d11be",
        "cursor": {
          "ref": "fac9b1a7-2c95-4503-b6ad-ae43da0df2e1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "354f0156-a99a-4891-9cc4-4feca12ee01c"
        },
        "item": {
          "id": "8e0f911d-c1f4-4466-b647-80b6027d11be",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "20879435-7fbd-4299-9e82-db913e6819b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25d3bd1-09c7-4108-9145-ca79a9085255",
        "cursor": {
          "ref": "96804b73-a514-43a3-9feb-41b0235a529d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "41c7bc12-6f1b-47dd-a6a5-869334f7dc38"
        },
        "item": {
          "id": "d25d3bd1-09c7-4108-9145-ca79a9085255",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "883f397a-dc9f-4e32-8707-25cd5620df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f158a4-8b8d-43bd-9d32-4833763c1048",
        "cursor": {
          "ref": "f7c334bb-ba92-4935-a829-ac40f47e4919",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb266ca2-f321-4115-92b9-8bf63a79ee74"
        },
        "item": {
          "id": "77f158a4-8b8d-43bd-9d32-4833763c1048",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cdf639c3-5aab-4f73-b9c1-906e066d56e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3990dd19-92e2-4f0c-b1dd-731cf6ab63ed",
        "cursor": {
          "ref": "f3415da7-c528-4747-8b01-f0c935f6cb31",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0cf697d4-42f7-43c2-86f7-4217e67db559"
        },
        "item": {
          "id": "3990dd19-92e2-4f0c-b1dd-731cf6ab63ed",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5697596c-8904-461e-bfa5-26bdb9c741e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52fef24-a362-4f1f-b391-860f55e243c0",
        "cursor": {
          "ref": "10d2c9b7-7292-42f4-8678-b521003857ec",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3916e066-a28d-4b48-8bb4-5357b1f1442b"
        },
        "item": {
          "id": "e52fef24-a362-4f1f-b391-860f55e243c0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ec65ee19-a553-431c-aeeb-4dc0582f0c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f38b2e2-ee43-4dba-b716-e18c61b7746a",
        "cursor": {
          "ref": "722bbc27-733a-41e8-bfd1-d2aa33dd1646",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5c7555a8-b40d-4a31-bf99-3c8cffeea22f"
        },
        "item": {
          "id": "6f38b2e2-ee43-4dba-b716-e18c61b7746a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "065d64a0-e784-43e4-a6fb-ccd2eec6a876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc52d6a-898a-4dbe-9a2b-a0b30390e2c7",
        "cursor": {
          "ref": "d7b6ad28-8571-4a5f-bbe7-0333ab636022",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1c44ee7-6ab7-4630-be1f-58d7fac07e48"
        },
        "item": {
          "id": "efc52d6a-898a-4dbe-9a2b-a0b30390e2c7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3fd26585-041c-4221-babe-152f0073e319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78886ce-6b35-4676-beb1-12a071a2f5fe",
        "cursor": {
          "ref": "2a6d1212-b32f-4d1a-be5a-26a325f3b342",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bb603e15-4249-437b-ac6a-80a70c27cc1c"
        },
        "item": {
          "id": "e78886ce-6b35-4676-beb1-12a071a2f5fe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f5c3a383-2907-4e20-97b9-85a2ab6654dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05fe4c6-f0ad-44d9-a129-77b2f8c76af6",
        "cursor": {
          "ref": "ffa18422-7fe1-488c-9dc4-788f79bef997",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ea850a1-df1e-43b9-85b2-bfd09427a216"
        },
        "item": {
          "id": "c05fe4c6-f0ad-44d9-a129-77b2f8c76af6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8cb6f64a-23e4-4e5d-a958-7724f7f38f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25535ce2-af2a-44c3-a9c8-de0876f4ca0b",
        "cursor": {
          "ref": "072960b8-b5ae-4dc0-be07-a763781d4244",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d28ccad4-2a1d-4438-888b-30863ecc60c9"
        },
        "item": {
          "id": "25535ce2-af2a-44c3-a9c8-de0876f4ca0b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac1dc4f0-4497-4ef9-aca6-28e551b98e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd6ed7c-3bfe-4c3a-af98-6f65613e3777",
        "cursor": {
          "ref": "04f1bf97-99c7-4a18-b439-078b3c43866d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b902a227-dc89-4fc0-8042-0d5d3d9233b3"
        },
        "item": {
          "id": "8fd6ed7c-3bfe-4c3a-af98-6f65613e3777",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "af81dd37-85ac-4773-9edd-f3518db04807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8c6854-5df1-446a-b985-86051c8b38e5",
        "cursor": {
          "ref": "8f4a99e1-4838-405e-9e28-5db702505b42",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3a2feb06-962e-499f-8be3-bdcb980b281d"
        },
        "item": {
          "id": "0f8c6854-5df1-446a-b985-86051c8b38e5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a5fb5e8e-0347-4c99-9165-17f40037c7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75cd69e-9140-4c96-adad-1755e12cd485",
        "cursor": {
          "ref": "933ca3ad-03b8-46f6-9868-52295bfffcd3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1cf5912-3fe6-4129-b92d-95eeff2cbc49"
        },
        "item": {
          "id": "f75cd69e-9140-4c96-adad-1755e12cd485",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "57c5207f-88a8-4d70-86bd-088fe371a665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c015143-169b-42ff-9b76-f3ec2120315a",
        "cursor": {
          "ref": "9ecf78aa-0ca0-471c-90b6-7f5531e1bfda",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "60dc5eb6-bd8f-4be7-9dc6-6c175f74e556"
        },
        "item": {
          "id": "6c015143-169b-42ff-9b76-f3ec2120315a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6927213f-a44b-4988-b436-fe083c7aa203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b031c28-8890-449c-a8e9-526b863236a4",
        "cursor": {
          "ref": "c700b53f-930c-4e03-8068-3ea5bf4d51be",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c977a62f-c115-45bb-9ecb-b1af2114cbba"
        },
        "item": {
          "id": "3b031c28-8890-449c-a8e9-526b863236a4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "062d60e7-6e20-4fd9-9e7e-59516ac4a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f160d8a6-2dda-43f2-858c-2fd643032389",
        "cursor": {
          "ref": "10923ed4-2a4b-474f-a7cc-88dd607af150",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "299c476e-82d8-4162-b82d-f1c3aac01b6b"
        },
        "item": {
          "id": "f160d8a6-2dda-43f2-858c-2fd643032389",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "99ef99b8-6169-48c8-a910-aa127cc76c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03849c8b-cc9f-47b6-86bd-f3fe0722d906",
        "cursor": {
          "ref": "454719da-875e-44e1-b2fe-410d9c2cdfc0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aedf7aba-f2c2-41ad-abd5-5f6c41356b6d"
        },
        "item": {
          "id": "03849c8b-cc9f-47b6-86bd-f3fe0722d906",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f704723c-323d-48b9-b777-837ff1d194c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb16a98-c6a7-47e7-8980-1887565c0493",
        "cursor": {
          "ref": "41011dbc-6f94-4999-be98-a9672044e178",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1beb418f-223c-4f99-a4fa-70aabc84f0db"
        },
        "item": {
          "id": "bdb16a98-c6a7-47e7-8980-1887565c0493",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e636b1e-032e-4327-b8b1-ef661e9e0a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096dba1f-7cc9-439d-b944-36ffadfd9969",
        "cursor": {
          "ref": "a6d5cc7d-b8b5-4075-9607-19ca84a07bdb",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5180e65c-b70b-4f91-825c-eb5113ba91eb"
        },
        "item": {
          "id": "096dba1f-7cc9-439d-b944-36ffadfd9969",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b0323a7-fbda-4144-912a-b920883db8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1fdacf-412d-4403-bfaa-9e837360519d",
        "cursor": {
          "ref": "b7c41ed3-adfd-4ef2-a592-928b9893292b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e0aebc16-e62e-485d-8c70-456377e21bda"
        },
        "item": {
          "id": "de1fdacf-412d-4403-bfaa-9e837360519d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ddd5e145-1724-454f-bf46-c9534e3c1183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d3ae6-bc9c-4f53-9c7d-ca2ac71d0eb5",
        "cursor": {
          "ref": "009d1c83-6bc2-4a77-a2b8-a16ae9c4d01a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9a88d3e1-4d23-4b18-99f3-bb92eb9cebd6"
        },
        "item": {
          "id": "358d3ae6-bc9c-4f53-9c7d-ca2ac71d0eb5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "46c8d28b-8f72-41bd-b22f-01437e3d571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497dba14-6b10-428a-b1b7-e24c2707ff62",
        "cursor": {
          "ref": "5689fc51-115c-4a23-8d2f-8e70482eb2e5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e00d3ed9-b706-499e-8668-4ca0d7c13625"
        },
        "item": {
          "id": "497dba14-6b10-428a-b1b7-e24c2707ff62",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "777083f8-3f36-48fc-b6a3-9652528d8849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e8cd07-29d2-4448-af50-4c3d0dd0a059",
        "cursor": {
          "ref": "c854b239-50fa-4268-adde-3a401a75479b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a412623f-8a93-4054-bb04-dc246b2a5187"
        },
        "item": {
          "id": "79e8cd07-29d2-4448-af50-4c3d0dd0a059",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "756a7bee-ab15-4c64-86d0-e6aa317f149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a09f54-d6b7-4aca-80cb-2f122c4d50a1",
        "cursor": {
          "ref": "1199d8d4-73a3-473f-b604-63249bf79f46",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "55e379ab-b677-4e69-93ee-26f6c63046f0"
        },
        "item": {
          "id": "86a09f54-d6b7-4aca-80cb-2f122c4d50a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db08f582-05a6-4f98-9694-3fed8b8a2af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e70aee7-b292-4974-add2-28d81f80697d",
        "cursor": {
          "ref": "d9fb8ec6-f24d-4bb3-8bff-c4ccdcc39f4a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8c4f8cea-51fc-413c-a2eb-9b36125e3e0c"
        },
        "item": {
          "id": "1e70aee7-b292-4974-add2-28d81f80697d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cae021bc-656f-42c4-a685-0c5cfc5d1ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a32ad7-c5e0-4365-b083-b90884dbec24",
        "cursor": {
          "ref": "06dbbbf7-2895-4bd1-861a-c8271dba8588",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7539f9b-8f37-4cbb-bd06-deacdf62832a"
        },
        "item": {
          "id": "27a32ad7-c5e0-4365-b083-b90884dbec24",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "065c845e-b30d-4c45-a06d-a29952595836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8613af8-dc1c-4895-ab91-56dbab9b1147",
        "cursor": {
          "ref": "f2e45a4b-796e-40a7-93dc-d1b83146fecd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9854e154-8897-418e-84ce-80fde6610d94"
        },
        "item": {
          "id": "c8613af8-dc1c-4895-ab91-56dbab9b1147",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d40f5c2b-e6d2-47af-85ee-37296f3e4457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af13aa0-ea29-45c2-889d-48fa8b5edabf",
        "cursor": {
          "ref": "922f1247-034b-44e9-a450-273d5729dbb7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de191005-89fc-4757-997c-cfe75608c820"
        },
        "item": {
          "id": "5af13aa0-ea29-45c2-889d-48fa8b5edabf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "661a00dc-18a3-474a-b64d-64fb415ab210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3a9bfa-f20b-44c5-ab9a-cea2fe329abe",
        "cursor": {
          "ref": "2d1ebe90-b12e-453d-a2f0-aae06c5b88b2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4e2636d0-556f-46d6-8e8d-eeffe7d2d9e3"
        },
        "item": {
          "id": "eb3a9bfa-f20b-44c5-ab9a-cea2fe329abe",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f6b091a0-9dec-4079-a43e-30abf04f596e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02995ba7-3c73-4d25-8585-c40b77630a25",
        "cursor": {
          "ref": "54fff3bb-2999-4503-82af-e9e7c494d666",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "61231bce-1645-4757-bc62-1b0543532415"
        },
        "item": {
          "id": "02995ba7-3c73-4d25-8585-c40b77630a25",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "927b1048-90a7-40b9-b64c-b3f3fe31ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374f2603-9d74-4876-b78c-8132c65d3cf2",
        "cursor": {
          "ref": "c81e0e62-1b4b-4b2a-8e65-2949b143f7b8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "42012aa7-007d-4dc1-8013-c40b70f35c10"
        },
        "item": {
          "id": "374f2603-9d74-4876-b78c-8132c65d3cf2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "66780f05-2c97-498a-bf1a-fdb3b73a7bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db3b9d9-6a53-4c69-bc3c-1d641813ec78",
        "cursor": {
          "ref": "8d67e537-8dbb-482c-9c3c-412ef43a0287",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ea2e1fe4-2e7b-4e7a-af1a-565acde819e9"
        },
        "item": {
          "id": "6db3b9d9-6a53-4c69-bc3c-1d641813ec78",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "959cb5df-26cd-4fa9-a010-bb9550b3326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ef3a33-005d-40fe-9069-46137870a2e4",
        "cursor": {
          "ref": "c402e863-c5a7-47f4-9ab5-c469c60b566f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c9af883b-7a7b-4b53-8c81-a87427b3a2b7"
        },
        "item": {
          "id": "08ef3a33-005d-40fe-9069-46137870a2e4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2fc76d65-ec06-440d-a3db-1050ded4e3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5f68d2-0019-4ccd-80ee-8bd435911903",
        "cursor": {
          "ref": "096f3b82-9c96-44e8-afe1-e86ada682f36",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c29e8615-f47e-4c14-ab2e-d601d2d8444f"
        },
        "item": {
          "id": "ab5f68d2-0019-4ccd-80ee-8bd435911903",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6cecaea7-3369-44a7-8d0a-0b02e2ede937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690cdec-1fb5-4e0e-879d-a8354d846b67",
        "cursor": {
          "ref": "fea0f98f-ed2c-4096-be20-cfb03d06d2f8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3e0044e1-3f6b-4c97-90cc-b42ad7cad78a"
        },
        "item": {
          "id": "c690cdec-1fb5-4e0e-879d-a8354d846b67",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d3265635-f4f5-4ca6-8341-070964a4cbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c12e9-ade2-4f17-af6d-f1d432c63c00",
        "cursor": {
          "ref": "f1b85734-28ab-43c2-978c-016f68198572",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "553a0430-7258-4be8-ab12-7a5a98494c6f"
        },
        "item": {
          "id": "e66c12e9-ade2-4f17-af6d-f1d432c63c00",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "88da34ff-acb0-4b43-a500-cf80496df5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a01c32-d392-4f6f-b09d-f931cf6f85f8",
        "cursor": {
          "ref": "62dfd48c-8f0f-4ba9-ae4a-e3fcc59b50cc",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "021d3a48-02db-46d4-91e0-8eb625158c67"
        },
        "item": {
          "id": "79a01c32-d392-4f6f-b09d-f931cf6f85f8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d98fe78-be44-4bd9-8e72-8fa4e870bc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7732c5-d507-4114-8397-eb0c27b74605",
        "cursor": {
          "ref": "1fbfeb13-a2b2-44c3-8433-e68e21902b0f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6cc61156-0380-4240-a042-744eae580214"
        },
        "item": {
          "id": "8d7732c5-d507-4114-8397-eb0c27b74605",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f58bfc2b-8179-4761-99da-fd99511a7d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d7ecd3-36eb-4b0f-a179-510b880750e3",
        "cursor": {
          "ref": "1dde1590-bfcd-4bdd-94eb-986d1e72349a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fa92c028-52cc-4a8c-be68-aa33748ff21a"
        },
        "item": {
          "id": "54d7ecd3-36eb-4b0f-a179-510b880750e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "64499e92-032f-43f3-9db9-affe1c392d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1631715f-2699-43a8-90f3-75952f04bca1",
        "cursor": {
          "ref": "d8a206dc-bdc0-4c1d-bc20-b68d0d4098e5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "625c5850-5e12-45e5-94b7-7f46a42f695b"
        },
        "item": {
          "id": "1631715f-2699-43a8-90f3-75952f04bca1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c0382cf-0e45-492f-a3ad-d59109478947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a784110-3ea1-40f9-b1ae-dddcef2f5fe9",
        "cursor": {
          "ref": "d30fc6e2-1621-4cac-a566-8c42c4b7b1d4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eda91580-e4bc-4020-ad30-d82e8f41d4da"
        },
        "item": {
          "id": "3a784110-3ea1-40f9-b1ae-dddcef2f5fe9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1ce4583e-384e-4daf-9455-76f70e810e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae0091-36f9-4dbd-9b23-664b53550f62",
        "cursor": {
          "ref": "7a1b7548-6726-4027-af16-1ca6ae22c4cf",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b3184331-0889-4153-8537-63dbdb860dc6"
        },
        "item": {
          "id": "13ae0091-36f9-4dbd-9b23-664b53550f62",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9d9c16c2-de2a-4d7e-9bcf-7ed3ce45e328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412820aa-5d47-428e-8ae1-027830cc405b",
        "cursor": {
          "ref": "e16f5886-8e8b-452e-bef1-b4c0b5f149b6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cb3f9d34-8ae3-48ff-b733-0ad5e0728b9a"
        },
        "item": {
          "id": "412820aa-5d47-428e-8ae1-027830cc405b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "92aa4280-3f16-4b3d-8b02-82acc2c28d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21684a7-cecf-40de-b86e-53f0a83d91d2",
        "cursor": {
          "ref": "caeb1f08-ef0c-4859-a658-229974843457",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e9b5eae0-af21-4e8c-82a8-97f235403b53"
        },
        "item": {
          "id": "c21684a7-cecf-40de-b86e-53f0a83d91d2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4c5cc781-bf10-4806-809a-6ccfce902929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248edee5-f0e7-45c4-b997-639b9876a6a7",
        "cursor": {
          "ref": "fbe5749d-c849-4e2c-8db6-898276a87024",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "33e3a7a1-fc92-42c1-a843-4fef3391bd3d"
        },
        "item": {
          "id": "248edee5-f0e7-45c4-b997-639b9876a6a7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "35408480-7b44-475e-b6e3-54a66d0e3a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f834388e-d965-49a7-a63a-fd58515bccf0",
        "cursor": {
          "ref": "c5df7f86-2c84-4883-b9ca-5650279a83dd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dba99f9f-c882-4c8f-b325-0ce1689620e0"
        },
        "item": {
          "id": "f834388e-d965-49a7-a63a-fd58515bccf0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "31d97ce5-2fef-4331-9c28-fb5fc73f738b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03ace32-d1de-485a-8b4e-222d0302dfbc",
        "cursor": {
          "ref": "3990e1bc-83df-4754-b7b5-b247ae8a0d8b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53dc72cc-7974-40f6-93ba-5f4678acd71f"
        },
        "item": {
          "id": "b03ace32-d1de-485a-8b4e-222d0302dfbc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42beef79-798d-48c1-a44f-9cce083632f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0923996b-f0b8-429e-ab07-aae4a7001da4",
        "cursor": {
          "ref": "47f01b71-d8cf-4ee2-9333-a96c21d5228e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a632b8ac-2ced-4d6b-b3da-1902c44a6cd2"
        },
        "item": {
          "id": "0923996b-f0b8-429e-ab07-aae4a7001da4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "931ff624-fc1e-4c35-a643-727665a21159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d39ba4e-e814-4174-8328-ccd19a8362cc",
        "cursor": {
          "ref": "8f5f2df1-897c-4a9c-9a53-ec9138b63b4f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ee41e48e-1126-4bf8-9fb4-e882f7122d20"
        },
        "item": {
          "id": "5d39ba4e-e814-4174-8328-ccd19a8362cc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6bc521b9-480f-42a8-9a74-a807f8bb4c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b652877-1557-4a66-b839-b60d2a038861",
        "cursor": {
          "ref": "3bc203c4-8307-4c44-8ada-2127d6b9de95",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32c16118-5be7-4e83-a9a4-633ffcdba2ba"
        },
        "item": {
          "id": "8b652877-1557-4a66-b839-b60d2a038861",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5adbbb15-73a1-46c8-b039-d823b43fc14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3461f8a9-fc72-469a-95e8-f73876199f21",
        "cursor": {
          "ref": "d79f581f-3038-49a3-bc1e-f9fe0bbc041c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "595237c4-8f72-47d1-a9e5-be1e57c04b0d"
        },
        "item": {
          "id": "3461f8a9-fc72-469a-95e8-f73876199f21",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f5972bc5-dddd-4f75-bc44-1147ad726090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff7fef8-735d-4d45-aa58-e55f7949ea53",
        "cursor": {
          "ref": "621a8763-b969-4cfa-8d6a-24ef42fb63e5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "676ee496-fd57-4b1f-bf7b-8e705960ec42"
        },
        "item": {
          "id": "3ff7fef8-735d-4d45-aa58-e55f7949ea53",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "108e105d-74ae-4999-980a-78123d44bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657daf4d-b90e-4109-8865-38ebb092fab4",
        "cursor": {
          "ref": "10396df9-b3b7-45aa-bd0f-87ffa531c741",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4c8f1b34-8a65-4e91-b127-4775bc562975"
        },
        "item": {
          "id": "657daf4d-b90e-4109-8865-38ebb092fab4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3eda786c-d693-4ea4-8b62-4b61ad70af19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0fa3e6-9d28-4343-9b80-d0e5aa3dbd28",
        "cursor": {
          "ref": "1713de35-e092-4954-b75d-5692b1b683cb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8478573f-b4d4-407f-b925-3b1b8c0838da"
        },
        "item": {
          "id": "0b0fa3e6-9d28-4343-9b80-d0e5aa3dbd28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d868185-b43e-452e-81a0-528fbab67b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0e3408-4250-412a-aae0-4695866ae276",
        "cursor": {
          "ref": "a82c95b7-757d-4345-a9fc-0d0425fbc1c0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "44486f1d-7240-43b5-98a3-2543c317a1bd"
        },
        "item": {
          "id": "6f0e3408-4250-412a-aae0-4695866ae276",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4a338b81-9743-4a42-890b-8f52857213bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a2c8aa-888b-40b7-8748-939f91e4244f",
        "cursor": {
          "ref": "4463b73f-da3b-48e7-b30f-1f6e39bc4499",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "130ac190-71b9-4d7e-b272-010d2d915136"
        },
        "item": {
          "id": "c3a2c8aa-888b-40b7-8748-939f91e4244f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e41223b-75eb-4835-88b5-aeef4f824acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2ec8f3-46b8-4fb8-9ffe-41ab45311348",
        "cursor": {
          "ref": "ab3827fd-4823-482f-a8e4-5a63280d9c37",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "89033b15-819b-4bc2-ac67-fb7a58ab734f"
        },
        "item": {
          "id": "0c2ec8f3-46b8-4fb8-9ffe-41ab45311348",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1da31c38-36ae-4c3a-8098-80b0b55bb715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa347df-36a2-47d0-8cb7-91680e045391",
        "cursor": {
          "ref": "819c94f7-0f8d-4a3f-9f7b-80c95ca1e854",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "710cdd2c-76e4-4679-877f-40502a75b0b9"
        },
        "item": {
          "id": "8aa347df-36a2-47d0-8cb7-91680e045391",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "81861069-5a81-4728-b82d-30102b940bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797ddce9-b15b-4764-a848-a25967c9ac89",
        "cursor": {
          "ref": "a40c8afe-092c-425f-8d16-f0eedd5db538",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "59c77847-1024-491e-9f4c-43afe1898fda"
        },
        "item": {
          "id": "797ddce9-b15b-4764-a848-a25967c9ac89",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "45062936-7b93-4fde-8f15-e47150c81ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e09d9f3-0602-4a7c-9f3a-16581222e678",
        "cursor": {
          "ref": "4b775aff-c6ff-42e9-9049-aa7508f76ae5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8ac9210b-7198-41f7-abac-875ae082b699"
        },
        "item": {
          "id": "0e09d9f3-0602-4a7c-9f3a-16581222e678",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fea1bd05-1b23-4566-9557-bb996bf32bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ff1c6b-b873-4d73-ac6e-d1159d62e1d8",
        "cursor": {
          "ref": "1d0ed2f6-167a-4802-995c-79b175bf4e5b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b1ecfa4b-fd67-4a5e-adcf-2d6ce974645a"
        },
        "item": {
          "id": "f3ff1c6b-b873-4d73-ac6e-d1159d62e1d8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7224b13c-72e6-4c32-8b61-7fae6fa134ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b73469-0e69-4865-aeb6-3e3e98b36d8b",
        "cursor": {
          "ref": "bd69c9da-dc05-47dc-b833-87a5bba37cd6",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cbbdb7c9-c232-4cec-9b73-b92908531812"
        },
        "item": {
          "id": "54b73469-0e69-4865-aeb6-3e3e98b36d8b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2469d184-36a2-4754-819e-834e78e482f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9f88bf-6c08-46aa-b62e-463138424183",
        "cursor": {
          "ref": "b2447aff-afad-425b-b57c-530a7ec568d7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0ee6af4f-95e4-489e-96f0-c6ed23c21842"
        },
        "item": {
          "id": "cd9f88bf-6c08-46aa-b62e-463138424183",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6b0daa21-3cf6-4281-bbbc-bca41cea25f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928904d9-08fa-4026-8847-ff3a1cc6e4b7",
        "cursor": {
          "ref": "87211456-b8de-4d19-aa1d-f2308f7b222f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4e3c875e-de83-432e-ba57-abe88984aa78"
        },
        "item": {
          "id": "928904d9-08fa-4026-8847-ff3a1cc6e4b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29d1a847-2334-4206-b37f-618955141466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e08aba-e165-47d4-b83d-0914f36e78db",
        "cursor": {
          "ref": "516f3d37-1c1b-4e39-85b9-6db8673a48d7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2adf6473-4df1-464a-b3d4-d0ec037efd4b"
        },
        "item": {
          "id": "69e08aba-e165-47d4-b83d-0914f36e78db",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "db26f92e-191f-4480-8be6-c5ad8669ec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917b47de-1f2f-4b8e-8493-ce6c74aa89d0",
        "cursor": {
          "ref": "106780c6-0e52-4aef-887a-481f66931dea",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "83a0d3d4-428e-4496-970b-89df6eae61ee"
        },
        "item": {
          "id": "917b47de-1f2f-4b8e-8493-ce6c74aa89d0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "822f0ba3-6833-45b1-8637-3a774c3cd86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e9c01d-833a-43a4-b692-bfcde069e629",
        "cursor": {
          "ref": "e65f96b7-82b4-4c1e-84b9-07883f534fe6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "329835b4-e72b-4ac5-a6f7-6dfc9dc5fd04"
        },
        "item": {
          "id": "55e9c01d-833a-43a4-b692-bfcde069e629",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3e9be961-1c4b-49a0-ace7-48754b64da13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c527db6-6711-4c94-b4c5-1b639fc7caa0",
        "cursor": {
          "ref": "100fe7d1-37ea-4518-a30c-ca74522ba39e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1dc137cc-9da1-4230-8ff8-54030bed0433"
        },
        "item": {
          "id": "0c527db6-6711-4c94-b4c5-1b639fc7caa0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "166aa158-8c96-48ae-aa80-b5b02fe636a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcde2e7-58c2-4e5c-84b6-667dad8acfb6",
        "cursor": {
          "ref": "45cf6baf-9ab3-46db-888b-0160088a02c3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "31398d7a-4dc6-4e15-adc3-2c262a3a2906"
        },
        "item": {
          "id": "8fcde2e7-58c2-4e5c-84b6-667dad8acfb6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d4d061d-80c8-41dc-b77c-299de12308ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea872ba-2eec-4f41-9dcc-2ad56a13c2b1",
        "cursor": {
          "ref": "2b2c9681-0874-4cb3-80f4-cc33d04337b5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c2978ca5-5221-4515-8a93-7bd517b507f5"
        },
        "item": {
          "id": "7ea872ba-2eec-4f41-9dcc-2ad56a13c2b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "497ae2a3-06c5-495b-a5ef-23a5dbedd38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999d8d55-e42b-403c-a28f-68541fe40a91",
        "cursor": {
          "ref": "d76c8b9d-0742-4629-83e9-49786ed32887",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ed821883-44ce-4bb2-abdf-4330d8b4fce2"
        },
        "item": {
          "id": "999d8d55-e42b-403c-a28f-68541fe40a91",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "91daaef7-1cde-4c5e-9c50-f4c0b478ed92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22cb720-ba24-486e-92e6-909037306ac7",
        "cursor": {
          "ref": "f4fe2aba-60c9-46ef-b265-1114dc29cb94",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e7b665ce-7bc9-4c30-b1df-51504fb781e1"
        },
        "item": {
          "id": "d22cb720-ba24-486e-92e6-909037306ac7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bc074e3c-f85c-4afa-8c7d-ca69325faf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff215cb-b2ba-43ab-9b6a-e4fde1ca5ecd",
        "cursor": {
          "ref": "3e267d55-326d-4c36-844a-a7ac69add2f8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "639b1036-13c6-48ff-8e33-998702f68761"
        },
        "item": {
          "id": "7ff215cb-b2ba-43ab-9b6a-e4fde1ca5ecd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a69b60c5-f775-4bdb-9078-2cc342aa0934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ef7f67-1eac-4792-87a8-0bda84c23704",
        "cursor": {
          "ref": "150567d7-8baf-4080-a66a-014c8669336a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4586bc37-4881-4234-ae5f-c750a78c88ca"
        },
        "item": {
          "id": "30ef7f67-1eac-4792-87a8-0bda84c23704",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4741f7ec-e216-4d6b-9900-bf866c248096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff959b-7338-4e72-8884-52ae011b109d",
        "cursor": {
          "ref": "d98d787f-9d3e-4d59-9a32-e64d2b0142b7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "09952988-4ecb-4eb6-9f3e-8162477de7ec"
        },
        "item": {
          "id": "3dff959b-7338-4e72-8884-52ae011b109d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3901a342-8eaf-475c-980b-5e28d80716ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc117aa5-ebd9-41dd-bdfb-becadae08e29",
        "cursor": {
          "ref": "3a35ff57-d5c0-45f3-b150-cc31c5baced4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "574706c9-9d60-49de-ae5f-86c77faaa4b0"
        },
        "item": {
          "id": "fc117aa5-ebd9-41dd-bdfb-becadae08e29",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1cc116e7-75ee-4cef-b4b0-ea23e5154fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6098ce1a-40df-44d9-9409-d014cd66f2bc",
        "cursor": {
          "ref": "d11f083a-f275-4f34-b464-132302762753",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b942b85d-e0be-48c2-9185-dd18f1884cb9"
        },
        "item": {
          "id": "6098ce1a-40df-44d9-9409-d014cd66f2bc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6120a17c-b70a-4f7f-a322-9651ea447d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f7ec94-d66f-450e-ab90-a15694c47078",
        "cursor": {
          "ref": "8983c4f1-87d8-4440-9284-a8411fbb584b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "75058501-cafa-4218-a1f1-819a3eef176a"
        },
        "item": {
          "id": "81f7ec94-d66f-450e-ab90-a15694c47078",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2bd9c59f-fb6b-4760-871f-cee653f9d14d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08c4568-cc2e-4f2c-9078-3d3efbf48b2f",
        "cursor": {
          "ref": "9edb7fb4-b2b6-4508-ad62-2884098dcaa8",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dc39175e-3ce8-4946-9876-ed4c160526bc"
        },
        "item": {
          "id": "e08c4568-cc2e-4f2c-9078-3d3efbf48b2f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "60b1209b-dd26-4a4d-baad-5136d500781c",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b0d376-bd59-466e-a0bc-5484fa382e20",
        "cursor": {
          "ref": "25433645-6797-491a-8ee2-9d7494b103b0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6a2402fd-7b41-42a7-9eee-97fb30f1639b"
        },
        "item": {
          "id": "05b0d376-bd59-466e-a0bc-5484fa382e20",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ec7dd8a4-75e3-4b95-9a5f-37ac9891e20a",
          "status": "OK",
          "code": 200,
          "responseTime": 2845,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c6306d-b5a5-4f1e-8979-702e2ac44a94",
        "cursor": {
          "ref": "6c7740de-e9d5-4da6-a77a-e179261f73d3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "21d86785-cfa2-4a65-a25f-75947a39bbeb"
        },
        "item": {
          "id": "88c6306d-b5a5-4f1e-8979-702e2ac44a94",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fc6d1156-ca1f-4e39-b574-88a9a5608346",
          "status": "OK",
          "code": 200,
          "responseTime": 2868,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b12d0b-d78b-4120-8e88-e358f98b52a8",
        "cursor": {
          "ref": "11cc4fe4-cb3f-4ab4-8b18-23de57465396",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9bc45918-f03a-460c-89d8-c8499aefe483"
        },
        "item": {
          "id": "34b12d0b-d78b-4120-8e88-e358f98b52a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76ebcaa1-e95b-423b-a0a4-653df4cbc75d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b12d0b-d78b-4120-8e88-e358f98b52a8",
        "cursor": {
          "ref": "11cc4fe4-cb3f-4ab4-8b18-23de57465396",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9bc45918-f03a-460c-89d8-c8499aefe483"
        },
        "item": {
          "id": "34b12d0b-d78b-4120-8e88-e358f98b52a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76ebcaa1-e95b-423b-a0a4-653df4cbc75d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47d5a1b-7ff8-4343-88bf-d7e34bb8b278",
        "cursor": {
          "ref": "adbc5f45-1f08-4646-a4ba-583b520aeacd",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ff0fb6d3-b990-409b-9950-ec9b08124974"
        },
        "item": {
          "id": "d47d5a1b-7ff8-4343-88bf-d7e34bb8b278",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4c8f5b11-bea0-4e14-a416-6ee9306d1882",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f5fe44-827a-4dfb-8ce7-e57e03aae0f0",
        "cursor": {
          "ref": "8e9f6e25-a4a5-406e-8c6b-e11d5c6e0968",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b351b0b0-50c1-4764-9080-9190e993bc2e"
        },
        "item": {
          "id": "e0f5fe44-827a-4dfb-8ce7-e57e03aae0f0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "14d522e2-ad37-43a1-bbda-777d192ddf5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 125,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}