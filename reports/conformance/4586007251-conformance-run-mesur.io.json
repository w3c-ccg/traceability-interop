{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "291f2319-3887-4c4a-b4da-079862b06c49",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c710260b-73ed-42a4-b6ef-c1cd3e633a6b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6b3af49-b0a6-4a35-a9f7-4b7d3fa51ccc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95dc71a8-27ac-4f23-a589-f09313462a4f"
                }
              }
            ]
          },
          {
            "id": "d86ec9f6-a1a4-4157-ac1c-6deeb902e6f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f50863a1-a082-442f-91b4-ad80715576ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f21f76fd-e1aa-4efe-af8e-2210e30f9c11"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dcb6e43c-71ff-4a95-a4af-50b573397362",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9fc44343-fb70-4948-9f10-f4a0bcffb94c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27f61897-3039-4fea-8852-2f6455075bf7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f75a4b06-e79c-475f-86da-ce18ae33d14e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c55e503-ecc8-405b-b926-8b0fde2d593e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "001f73e9-70f8-4d22-8b11-31e0d692c22c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcb6a847-ec63-4fa3-b884-c839e0df3954"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1337b623-ddcb-43a7-814a-776520077470",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb06b103-60d4-4f16-8967-2e15b28d83d1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41c389a7-b0fd-4133-96cb-71af20cd3090",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a1521522-b95a-45b0-83dc-1892d3414fdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40a106bb-d6ab-4826-a508-a404fa78a2bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a03ad90-5837-4b2b-b5f4-c6fe2a3a2acf"
            }
          }
        ]
      },
      {
        "id": "244521b4-f5d0-48ac-934d-d2188d641e72",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "039cae29-f706-4c4e-a95e-6b95ce341e8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1acf468c-93cb-4706-87fd-0be8d326c0a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c1a3358-fb0a-447c-b788-5050741379cc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aef9fb-0618-40ec-b177-997cbc30e696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faa0c70e-4339-49b0-990b-091992109591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540d549d-fc60-488c-9247-0afea571e313",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5282c54c-7d5a-4ef4-a535-d4a3459c332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39302086-e30b-4049-a645-03545ab6066c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd536e0-3d6c-4542-b01c-4f156d3a0338",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa24513c-eb51-42ef-8515-d660766bae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2abcb4b9-1247-414c-bc42-47f31c7eee5d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2aedc72d-bae7-454e-9054-8f2cdb541424",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de7bfffb-5bda-40a6-8d54-ac5adcc56beb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec3c6ec-26c0-416f-9ced-8d1e3b18b3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7afc0ba0-de68-4dc0-9db1-cc6026fb7a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87672616-b46d-4b04-9ae3-5da1ed614e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c781a7-7540-4061-9aca-fe699f944752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a005e-6e40-4a47-8ff4-759cfe8e7fee",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ceadbb-646d-48ec-bc90-4d360f10e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9a8db54-b26c-4fe4-904c-7450ab3c306d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b902c165-0362-47bc-b51b-8036f47369ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b8273093-3412-41e9-b797-4c6d64eef000"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8414cab9-0def-4bb2-a9df-1610dd2b1aeb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac455920-ad0d-49aa-bf80-280b4f862a1a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c9b076d-cd3f-45a5-95cd-8a64b47557cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "56c6a493-581a-45e9-a9d1-45770c20e28a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99b86c4c-c3be-4755-a218-7834e14eb5d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1d9b270d-2de4-4aa2-982f-b62c7e79bee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66e36b31-7e9f-4e69-8869-bbe4da046e90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "743fa44c-b95b-435c-a1e5-32854086967b"
            }
          }
        ]
      },
      {
        "id": "b3962985-3972-4389-b424-544d9c834dca",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d41e7c3d-aff5-4d3b-9ab6-d6ab802568cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df9b1438-4b2e-4470-b366-5c18d3175dce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4b800b6a-e483-467f-8f3c-37049846e595",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d064797d-53c6-447d-9fca-1a61c16ed153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c039e1d-1a10-4e51-b2ea-fa6831e9ea99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ee6262-b9f2-4538-b974-8a609611892e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e479b0e-79e8-4741-8579-d4bc78545108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c412b72-20e5-44a0-8f73-b57f654aff89",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb003cd7-ca54-4440-a93e-24ebaa10e4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38a1444-b977-42e4-bd2f-ee84b38dba15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bec2cf-9fbc-49c1-97ef-cf95671baaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59af5df4-56ad-4b5e-b986-e5127a804035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d6e36d-0b20-416f-a059-24095e425f71",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b48a5aa-1cd5-47e1-8d4f-4194bce8d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eead2833-b7bc-4b38-b605-33499525501d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3d1ab0-09c4-40d5-b9d7-976b5aa6698f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a2a7c14-e1a3-4cf0-8ff9-7d3bbd4bff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb6d8fd-53d6-48e1-83f8-a0a995088747",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a31d8d-ed9f-440f-8bc7-b43feac0c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f56ff9-2293-4fab-84e0-916d6b7e25ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44abb6cf-949c-435a-a712-15f08347bafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f1e56fd-798f-409b-8c87-f6b18fc5e58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7ee11f-81f4-49b2-8394-fefb02b0fe22",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353424f9-5af2-4de4-9b82-401c1409113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22b13cb-b060-438a-a836-50b856cc6ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b01ee-006c-47d4-ba12-005bb886d104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92ec77a-fb02-414f-aa4e-70e2db3adcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f47b58b-9186-4a55-9e40-ae804d6f664e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54b8ade-b234-48f8-b0b6-bde1c44538b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7facb1-67d1-400e-812a-4e7c83a217cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57dcac4-0034-4127-896a-9971b435318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ff8bee1-a45c-4448-9eb9-c8126cc850c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf10408-f63f-491c-b7c6-5daf26228d3f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fb759c-5d24-4d36-b339-e12e087d1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389620d1-2341-4bce-9346-0af3497d3810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd13e3-067e-4591-9d38-317bf4b15ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b616b1b-9ce0-471f-81c1-0a43839f63dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f603f963-3395-4925-a4c8-086081b48ed4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85241cb9-1ec4-4186-922b-eb493dfbc7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1996875-0f67-4f32-8559-fe311db8144e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11afba0-ce61-41a8-9067-5938deeb7035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12deb636-560d-4329-9b17-f20088bc4acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c296dbc2-0295-462b-9b88-adacb0ab5a93",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939a3a01-0ccc-45be-ab85-8e83a91036cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dca975c-1dbe-47e5-a473-efd0e0ca0ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641a785d-60ae-404d-88a0-e941094e6769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3b364c-6200-4e96-8c22-42a3664113a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a664f4-ca2a-422a-9e2d-352ea1e07602",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64465d12-344c-4966-88e5-e4536693e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfedc09-23ed-4aed-9e45-127977714d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0c2846-81f1-4752-94e9-4255ad8c8aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c93e625f-0413-459d-941c-3d94d62e0397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45333a14-b1e2-4402-b8a5-f79069f7ed9e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0eccbd-b871-438b-910c-5131f75d867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e032b2b1-4407-4752-8a21-f0179ffcf4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f094e5b-5872-4f5b-8207-4f7a0997979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c55a0427-987f-4fb5-90ee-108cff2cfbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2399669-aeaa-4526-b6c7-96761e19d209",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a88d19c-3650-44d2-a79c-60e31d83d1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e8ae12-36fa-4587-aa9d-c3108bacc559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28f7162-dfa0-482b-8a7d-903296e44772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9e19628-220f-4368-8b4a-cbfef22e793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc9d030-76b4-4d68-bb3d-db8ff607cad2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1dfca9-ea2b-4d13-a8c5-c18a479190ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394236a-0d51-4227-bd0d-70368597f074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1516cf72-2a28-4e05-abbc-03d47caade40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39016cd0-4c20-4d07-9743-6868a6a16439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c0a57c-f8a1-4610-b246-374e21cb6486",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e828ae21-ec52-4ef1-bfad-52d3a862347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd58d512-5c19-4def-9c73-3c28231f7a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e47a63-2024-4377-b898-cbbfe591486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f97f379-96bc-4bbc-aaa2-655dc278d116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7790acf4-c5f6-4bc3-ba28-edcaaa5f009b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcadf8a-9fa7-4cc6-8a48-6b3dc45674a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57623282-7068-4d00-af7c-403f0b716272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc5dfee-2aac-4ddb-9f9f-44457a995b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "332899c9-598c-4101-86fd-de5de428067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e50cec0-1470-4108-88bc-ca68e1dfd56f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8526da09-08db-4469-a332-3fa29a88ef2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9a7dd1-572a-46bb-813a-3c940c376fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60122a3-e44b-4f3a-b86d-b48307ed4b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52991f2c-9079-450d-a387-81bbf263ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60090080-b97a-4e57-913d-82d17a9c451b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d676ba41-a6a1-4dc1-8cd0-0edcb91f6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6888cb2-b709-40a2-9d39-8da1e7275235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebc5581-6346-4b43-8b49-e992058844d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "781a879d-74e9-4a9b-b642-17239e6de170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b72487-9428-45ac-947a-0b8b25235f68",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badcd76f-eb13-438c-8bbc-d442384ddb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f83243-0b9c-4abf-a751-0c38d8df325e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271fb7cf-0d05-482e-97a8-025da88e23db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "005da98c-5326-452e-a7d7-345260305ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca5569a-2faf-411e-8ca2-d274bb2346c4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42046b6-b4de-4cd0-8ad6-13f04c8cc110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0a228d-bd5e-4a46-bd46-9c42e4341872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a7ad2a-6743-4cae-90ff-42bffa9d5925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2ae20b-31ce-493e-a91c-179332edff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a542330-891c-4672-8050-b2445114e0ac",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ee2e3a-edab-4558-8fdb-fef0992567b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83634cd-66a9-4fa2-8082-d42af6a01f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d747f685-d628-4f13-b40a-4db02a09e765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b50f0e4c-161e-4b56-9033-58508c0940e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aef6e67-2136-4b92-8368-e33802dd7829",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c83457-73b9-4e11-a35d-7567a6afd32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f93557-56db-4c3a-84a4-83e66cbfbe76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56890b1-d913-44b3-9b71-5708fc81b20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a5b1f0-20e1-4062-8778-dff1ff7e1f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37001cea-9963-43ac-9f0b-a593efc0cac1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241abe5b-15f1-4071-8ffc-0d1f5ccfe394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edddd978-d828-4561-b784-a9d40974a388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249bdae1-5df6-4bd6-9fa7-402c8d475965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "708fa43a-746a-4f12-a47c-a0162ceadece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b32610-d13c-44aa-b503-6b45721ec358",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df5e1b1-20f5-4c63-ad63-e7f7ae58eb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa7b6f6-b58d-45e3-8eda-0f3d16253174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7409892c-fffb-4739-a76e-03ba5c053655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f89c1d-48f8-47a0-8a05-5a8ca4be31c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb582b6-6de6-4c13-bcac-922c14c37448",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b804ca6-d022-4b91-bdf4-f6e4e4785093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a86239d-003a-4060-a002-89debf434ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3bdf81-03ae-4522-8714-1548e36d3fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28cce0be-fc6e-458e-972e-1d42f6c8ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae74a2e-5d3c-402b-9461-e0a7c64e0b7d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fe48f1-837e-452e-8d6b-a440a77d9007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984f4f89-a858-43e6-a628-77ac84c5964a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3517ecde-c63d-4cdb-a1c6-c78c454ca6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e343f48d-66fa-4c17-8ec1-4c24ab0a4ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a986f1a-3008-4319-82b9-e561020ffaaa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255b06e-1890-472a-848e-223993da2201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0ee656-bc14-4f99-afb8-f44e54adc909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c70850-c7b2-4410-bacb-34141a6b65fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55fe8980-dc45-48f7-b117-ed573d0b057e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0a6118-1290-4b0f-b460-aca7287b5edb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e23d7f-0674-4c00-8556-05f2c99cbdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bcb8a1-16af-4703-8696-d521e8ec0ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1dbf0e-baf3-4703-9714-d9860212295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a2dadb-169a-4748-ad59-304caba80238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f153c372-5116-4c2a-8632-9a27306bf650",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76af2844-fb0e-4898-856f-000158263fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17546f09-f510-4310-8b97-420090c5d86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ef775f-9541-41f9-a68f-86666beaa395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b8769a-de6a-4f68-8c05-9a4352374981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebbd482-11c8-49a7-bd82-e56d84efd2be",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f304eb9-5d30-4fae-8b95-cbc56dbbf506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d3f8a9-49cf-4082-8d6b-e0fae66ac46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1118b2-4664-408c-90c0-7cc721ae5a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "393d20aa-6f99-4a44-b61c-4be7e7b79f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc75e202-8329-4340-b620-a50bd58ec034",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc082e41-5961-427e-bd29-48cd4237d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16eda6c4-8f27-4fbc-afe6-9db9786059b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8154701-b1c8-4644-b280-e206a2ca2f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6537f3f7-9859-40d1-9366-1932897c261a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8a36d2-c5d3-4b50-a04e-1341e208437c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76797978-ec0a-458a-a705-4d2d72cd57bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fc8eb6-0075-468a-a690-936cf12ea747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90809027-f956-40cc-84eb-166e2c758435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7aaece-1d89-47bc-96e4-6b0f8c2215bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be8080e-8ec7-4d83-8b2f-5b474c818ea4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24a2ed-4b81-4312-af31-e607882dd84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76153390-1de4-47b8-980b-9f7f65cc902e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2007cd2c-b939-4d71-b5d1-f93914ed22b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9647ebb5-877f-457e-9018-e660fff8a409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1f3d94-4e87-4320-9327-22e831a42e5f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6b85ac-a0f4-4705-af8e-e5e1912adcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdd4f02-b105-4737-be33-315d2e88e968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8940c24f-bf85-4b8c-9981-ea8c19de0753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f5f2a6-c25a-4bb9-893e-4497f48da73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2b9a85-f44e-4a9d-b8ef-17c35e05d82e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00a7705-746e-48cc-8075-7c1a08083278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2380861-c17e-411a-b564-555f6f0128e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b604de-56a2-49a4-add9-8ff242265c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a1b9ee-c5ad-4e3f-abd2-76822e2ff243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91e313d-da2b-4d85-a607-842e604463da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e8d46b-3db3-4921-a14b-74f172222222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9b5dd8-5a14-400b-897c-573bf4ce7661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c128905-23d6-4926-9310-b18761f47284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c46acf-49b2-4638-be89-8c4fd9dbf2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccba805-a061-408e-ab0e-1353943c4327",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3070fe51-68eb-4c6c-a217-7ecb4e9bb166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8da489a9-a395-4208-a461-1dbd1d16823a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceb453d-6a9d-429d-bebd-b08de2908e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf8cbbd-036c-4386-8d0b-152b73e51a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1973793-bf65-41cb-9e7b-0b9429408736",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb85072-627d-41b4-a98d-116df1796dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324c8ca8-6f0f-4f7a-8879-c13a5f56927a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069ec990-49ae-4069-a6b5-1dab7203d20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa92f030-0ca1-4886-bfa5-47128cc0acea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75192fb-9a19-4880-ac14-d3ef27ef0e22",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b251159d-f1d2-4bba-8f18-a8a811d21fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e460d44f-b4cf-491f-83fd-eded4a508de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bb9fb8-6a97-4865-bad6-8eff696bf3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5c943d-fb3e-4a4b-a803-cd61f782af42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a878dee-65c9-4188-9b33-04e88bf89a8e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c01cbb-17b6-4987-bc4a-b7bff1bc024b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2554ae2d-8567-4364-b878-58a5ad35c650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba7b999-4696-4d85-8e60-8068a6e2c838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2832cb9e-f2e4-4973-961a-54c1f2437312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e99e6b-1fe4-4a59-bd95-2a7033799e9f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e855d0af-db7e-434c-9b4c-ce6c69301d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbf7598-12c9-4210-832f-01e8c984ff60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb3491c-c74a-458e-b291-d84e3aa2d031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d72395-39ea-4ea5-bdc6-6d0b7c5090f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ec161-e887-4fea-9a22-acd4777ec277",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6465b1e-5990-4818-b362-d44ed483e691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4e6eef-2400-4a8d-a69f-8ed85f44ab75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299bc326-7ca0-4d09-9c63-a123f97a6036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1271aea-2c60-406f-b307-cf288f81ea16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f4ba71-b624-4f70-867a-99a490349f15",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b31128c-75e8-4bf6-ad5c-4c50b6037e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c18f05-821f-4a92-9a51-20ed09ea2d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6daebb-8b4f-4c72-a47c-2846d205d79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3de2b3-08c0-49dc-b540-4bec9da4dbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aed08ec-035d-4d4c-bb81-e3d089f9351b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ae544-dbf1-4a74-9cf9-1fdc39278efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4142780a-896e-477a-bcbb-b39c331e66c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5883d7-a857-481b-9430-36c2f9f25813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "605975b1-c6cd-4cbe-8676-1e8733583553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ea72f-210b-4d51-9e05-e9aa9506d02b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eab99ff-2169-4e52-be55-e36d1d9c555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b701726-e21b-4031-94de-a5beccfeabcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68063479-0d83-4104-9119-128cfbc622cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8f3798-0f32-491a-9fc9-43877ca02a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e1cc18-edd6-41b7-823c-02528afd214e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7ce943-d917-4434-bd87-c1203fb71dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ca571c-ebaf-4ef2-a72c-f59878cc459e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f1c802-f094-4f7f-948a-ec0c52bf57ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1882a994-0675-47c4-804c-e2db23856357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2ae1a6-476b-41af-9bb9-d0081f8e74ff",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbb0b37-e5e6-47aa-b2d4-60d690743c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cacd96-2328-4b11-86be-22ca29a46519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ca594c-0691-435c-aa8a-319ccf699d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "121350f6-999c-43c1-8529-fe97cb816b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a307ee38-04e9-413d-831b-c76acda41222",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3c8ff1-c2e6-4a20-93d3-72d2e8d7529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397dc5e4-7556-4540-bb56-d17951a40ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd52ede0-0956-4db9-8eaf-cb281a5e183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53096d1d-a468-41f7-9934-2e247987c8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a74e82-fa04-4dee-b851-fa2012b268c1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2a283f-3014-4758-8778-4246db87a930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f27d13e-28a4-42a5-9200-862210607952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda108b2-3d02-4d05-8b21-567594beb42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cf1d40-2651-478a-9301-fcc3a7a25a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa46fe88-4d71-4423-9471-6756a98f3702",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6e8373-2d11-4422-92a4-3c9f32070460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecee578-4963-4336-b598-a077f91c559f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bab13af-4713-4329-b9f3-d00cecc6327e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67aa0ddf-e7d5-4dcb-945b-75c7b03d441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd878cb8-555b-4b05-a34f-49f976540564",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84388c9-0a0e-48e5-8ddb-2c93007696da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402f7d04-df69-4f42-acf0-e7d49e6a0eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33f23f9-20ad-4b8a-bcdc-c849600d027e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff5bf0e-4563-4947-b4b4-2040fb35ad2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9739e1c5-e1aa-4fb7-8757-0a44f3b4d9ed",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a00467-5447-4356-93c1-969487e04280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c622b36f-81a2-4eae-85fa-cedee632b878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22862e7-d1c0-4dfb-8f54-06049a0d874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf241ba-8446-46a4-9ecf-0c763178ef14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18987bc-0625-46cf-a1c6-68d79fa774e5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb897a6a-0cc4-4656-8f87-2f2399d498f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07691463-1db1-4f5e-bc4d-8a4035c5bb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b83d8d8-1827-4907-a431-2d0640569d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c5779a-e4af-4f9e-ab90-81cdce67bda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7ed53e-dca1-489f-ae19-84882bde408e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5f0e7a-0768-487f-ae6e-c24826ed82df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebbb67e-0baa-4809-8c0a-864a5cc774b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3739f8-3942-4b2e-a3f4-70f68a645509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fafc129d-9eea-4745-8379-ca84834e6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206227b2-ddef-4734-8951-3f7e5a356f7a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eb3a85-6ea0-4ed3-a7e0-ef57bc857708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6f9a99-bf88-4951-b446-f701417df5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4404aa-9ca2-4a47-b75d-516c2cdc38a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a92510-3315-43b7-8405-eea69d1f9678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca06cdff-a471-40b6-ab3e-df76a6a39813",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff838b14-0b30-46bc-9f26-8d19a024869a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54fe5dd-f036-49b6-896c-e34ee171af6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a62375c-91ac-4648-9ccf-1486f5c918fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d888f56-3112-4d9d-8045-664fd63d6f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e802f782-ed0e-4da0-a36a-fce430f3a1df",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0eae8d-0098-45b5-a026-5b79683540b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd1e0f2-5813-4783-b518-6c61523e5dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3743d-1165-4b92-ab70-91a2cc2aeec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "15ed7e83-89d6-476c-875a-6310f1946d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107d85da-bbe9-4f00-b321-3a1d4fb51d2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23120d-6655-44a8-9ef3-8dc1e940e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325127b8-a994-4779-b8a6-a3f05108252d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efee252c-7ce2-407c-aa3e-4db6b0eef24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40cf0ffe-62bc-4721-9883-bfc32eb91959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316f5960-9126-475c-9181-438c92e4f7fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b445f6ce-faa6-4d0d-bfe2-2c6e9f88a8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928905b0-d5b3-4aef-9ff2-27f1d3b361a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57c9d1d-597c-4dac-8d34-c3bb1a0e88cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4dc3a6-bfce-411c-b456-1278b13108b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86623cc6-ce24-4eeb-a8a1-90ba073211b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7e88fe-09c7-4139-9312-ddafcb6fc495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a5f15e-9c1b-4f9b-b311-1c1a3688c202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e679fe-8e43-47f3-a69b-caadfc615d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b524bd7f-b9e6-4f10-b3a2-4e7e39ab4d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde7ea9f-aeda-45aa-9315-dfb86275caad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312ff497-ea10-4b93-8cd4-9753de5d10a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303779bf-83f9-4a21-b5df-195d6364d872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aba202d-4937-4811-971e-e146912e5f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7787f4f-d8a4-4aea-806d-add27444e197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed51ea5d-61a1-4026-ab4c-85ada03df482",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bf91e4-fdb7-4d27-b618-bb5335720c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a16e39c-691c-4ea2-989b-26525ec2b728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8449f21-455b-43dd-b212-439fd14a8eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af858e02-5aa5-47ec-b073-763d201ea0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7d3b1a-2d4c-4ba8-ac87-9b2406bc9aa2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb553c9-25d5-4174-9824-17514dc643cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0b66d7-6bee-43cd-82e9-fc243f1562df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58925c3d-e834-450c-a9f0-6558308af1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fccf836a-a0b1-47c6-b684-5b3a8e08c526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4028b64a-b91e-4dc7-a122-26bdb9d23be3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b1c2e-f0dd-4ce6-8a93-e0979244cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3ec072-098d-42cf-905a-3b378e98ae39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5afc24-676c-4d97-8aad-cb6d15f7f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e572ae-cc2d-4dce-b4cf-6dbde3ace3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159fc2a-54f3-45f1-b996-96d62508e276",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8313c74f-f38a-488e-8f8f-0a98b675a07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed06c5f5-e0f4-4310-b92f-952669a8266b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d7583f-e99d-4895-9b77-c249a0cb03a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be7a0be-a25f-4fc1-86fa-09fac07b3ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e5dc49-c041-40f5-879e-93d237c0c9ce",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47928f1-9837-421f-8280-6890291d3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77ae154-e123-444b-9273-7ac6b81e529c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8794bdbb-81ab-4757-9864-06ae677f9dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd151583-758e-44dd-b6e9-bc9a50d413fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907da437-2577-4298-a7a9-8067e6a2c860",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044da437-9b80-46d5-9001-c21b0af1b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c0db34-5459-48f8-a8eb-92ca98ab1cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0dead6-9dcf-4725-9b08-150f47ef461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "780c43d8-c881-4c97-a76d-0c3ffd30e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e40604-f937-4741-9abe-d35bda7bff5b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081c19ce-395d-40fc-beda-da6544b5d5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4b6348-c56f-44ab-a9b5-59c8a383e52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2708d3a1-7140-40d3-b7a7-bfbdb953912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d17d7cd-0bc4-47d6-beb7-19c98f62f9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc6d2a3-0a48-4bdd-96aa-b5335a90bf0e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49dc30b-be51-47d3-a15c-18c5cd320cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca9f1ed-ae18-4b10-ae35-86b2f08694f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb9476c-41ad-4970-86d3-de915902b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f3b8c9-288d-44c5-8dc3-5861a38dc870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b0883-db1f-4e89-95d9-2777c865ee3a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b485d5-0370-4130-9fed-c63911de6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd0eac3-028b-4d3b-acf4-99998d7500ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b3caea-fd38-4722-ac76-ab2acac24a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9c1020-8205-4bc8-8300-8498e19d9862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2974fb-408b-471e-b482-47c48014c549",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a1f0d-b9e3-416b-bfae-d2a881142ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21680ff7-58dd-4a09-81cf-0c7615e63784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b993ce-b586-4c1b-873c-b50efe7392f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50128e3d-72e6-4320-8a2d-fdec3b09e6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6f2970-cb4d-48f8-93a1-b0b8cc8da780",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345095f8-1c6b-4540-a1b8-784879735178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48abab7-c6bf-4224-82d6-498cd8b97119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442705af-5e31-411b-969e-4e5a12f12944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23e68aa-30fd-4d30-9728-5f07c8903972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce5d50d-30ff-49cf-a7ed-842bdc216b19",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3cf426-da15-4956-b645-7c930fc79ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aeaf19-7fe2-4f23-ace9-f7c3234855ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01cfc6f-3898-40ee-b378-5ce87ecf7061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8431286e-b61c-48cc-aab7-8ac07da2f34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e98b98b-83d5-49bd-99f1-4d5fde50aa2a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4139f1-f78e-4b97-81b3-59465bf3052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2901ae95-0d44-4b71-b341-0679ea2b3977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff81a71-00da-47c6-81b4-5d6ed919c538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b00f9e2-c263-4b2c-975d-96e8aa590127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a6bb3c-e1f3-4519-a4ad-3964c7ce57d3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4695b433-38e8-4d79-8574-4719f0a4c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28422ea8-5988-4ebf-9c6b-a8b565af3667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1220ceb-6a22-4e8b-930d-9707aa848b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1cdc70-78b7-42a4-8062-22e682fada9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384d6db8-23b7-417a-b452-4bab2d48c9d3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb22ff-d39f-4dcb-87f6-78fa923e8ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3dbc19-e11a-477b-937e-aa3e5166e0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591c7fc1-309e-4bd7-a0a2-3fb8a160a4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "739a515d-6238-40e5-858b-a99b0d2f4cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296bcd9e-2a8d-4522-b208-4e7954615a09",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc614258-d921-4da0-8830-967e1c644b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d9b784-9c36-4fa8-8ee9-6e84df926c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43c610f-9e95-4f42-b8df-5cea65d0cc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e659f9c-46d0-4a61-8ae0-477654fa0f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc63dd2-4107-4193-aa76-89e339056125",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5581ae99-5041-44fc-aa42-8dfe202892e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d82df5-3aac-4e62-91ef-e25ea45e27dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073edf7c-e13d-4458-a14c-e000366de971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7bb18d-fc02-4061-accc-4ec57e131404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d49c146-35f6-4b87-b506-a86aaf86ebdd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99f771f-1bd2-4157-9a0a-e803c5b82fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c087404-c28d-4f0d-a5a6-4c9a3440931e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354c884e-475b-49c3-b8ef-34f174c6a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "850ce53c-4e2d-40be-a6b0-1b29380ce384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04f845c-2e8c-47a4-a0f6-05c2ac60c98d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18051244-23f6-46a1-875e-380a49ff1bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1552c9a-d60a-4a6a-862b-999105ab25ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697063d8-2049-4dfd-a395-f454710981d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33ac1003-a649-4893-8017-6bd5c6f63fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab9112f-07d0-42fc-b362-b476bfa65f9a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0a3a6a-5347-41bd-816a-703a64a06d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45b026f-9df2-48f3-bfb8-1f42121705b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932e25f2-83a5-4080-bfda-9cda61b4a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03ec9a6b-4180-407c-8054-5d1d8d36fa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f73d5b8-0780-4be9-8e74-e9be5c2ac431",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f86cd2-13fa-48a5-ba00-af0b41f91126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537362e0-0b79-4904-9f8f-a457ba2664e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369941db-9a21-40f3-9986-66dbca684790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c2b1b6-913b-4e66-9a38-4cf5f5659486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfa9d70-d289-402f-916c-d796d51e3499",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65fbc50-8b37-444e-81fd-f889235eaa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de7e27e-c296-4dca-bb43-1eb018c77c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7775948d-0c56-43b5-95da-a380543c8dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e039efec-9313-4e87-9d95-5e9f798da80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f3de15-5f87-40b3-9eb8-6a78ec4da664",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c342d0-2655-4086-88f6-a054ee9d7cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12661f1f-2217-463d-b5fc-e968f988ca5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed0a1a8-77c0-4283-8a07-c1e464b64c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd23e65-0bc7-42f7-9454-40e882eff15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fce0433-0b94-4335-92d1-d3eb690886cd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b319a6-0a3c-46ec-affe-55ccb64828f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92836bc3-f741-4f52-b4d7-3f094b44a808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4351ea-a192-46ed-9586-63668712fee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f55394-e0cf-431c-adec-73c4b9bf743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4727b67-6ef0-413a-9545-b6da573070c3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ba2ac2-fad3-4ebc-9b52-21ec64ad750e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9812a9f8-95b8-4898-a861-d94bbefd0827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed31ba1-7fce-428b-b672-de0d1d7103dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de12f2ad-0859-42d8-9b00-cc554e3f024d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4c049c-1992-4a6f-826c-36b1ac6e6ad5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ebeb70-ff56-4968-99ec-6f6f5f539c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e2fd06-392c-4e00-8c89-b867a85ba963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7df944-2019-4ae8-a622-b83d265d5928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65a01a7-34c5-4b55-bc2a-6ddf7c8547ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71370e4d-3848-4934-9cd7-da645020cab9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea6fc53-1593-4a3a-8fd0-d0115c356cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b674bb8-e574-4d37-b2e4-6970a5c5e69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473d9f0a-6c8a-435a-aa5e-e27246a9fe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c398d02e-1f36-4e22-9623-0807254aaae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c43aee-b1c2-4d95-9f6d-87f66b63d408",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f0ec28-2bab-4b45-b8f9-3aa9f49d2697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee0e245-6c5d-4234-bc4f-fb64d581f053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efa8cff-1133-4afa-b7f1-0180aa755e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce3588d-b09a-4eb7-a39c-a514507c52d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce51a56-2849-48ca-a041-44b4c8aee50b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634076b4-f298-462b-8c33-458d0da1620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcf948b-47c6-4ccf-a083-7d18a20973fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e637267-575b-4bdd-90a6-d85c2ce9788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dedb3f-0658-4d2c-8dd3-96813f9befd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea72ff0-8ef3-4cb4-9c3c-b124c4a46e31",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c2c22e-239a-4a7a-9b22-4c6df702a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4345f1c-c07c-4475-a7c7-616c5ace652a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c094f2a7-c910-486b-ac1c-cac522567209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7d5138-5880-48f6-b408-c64bca5608d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc60769-e64f-4605-925a-0f0b3277245d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0497e74a-c227-4d3a-98df-25fa5aa5a569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd25f6b-e0bc-4505-9a19-4be6da34d2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901a1005-f2b4-43d2-b9e9-b5182ea0f7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "82eed6a9-2411-4d85-b6c2-d7d893b8bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5702057-6205-477b-9ea1-e56c795e4b9c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f16484d-4ba9-4688-9864-46ede43d2eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "963507bb-f1da-4015-8efe-2cd24248f18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c77ca99-ec47-4b46-866b-12b4eb765322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9b4bb3-6e5c-4bfe-b6e1-9d2fd954385c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e48af81-2da0-482c-b009-18f724d25735",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "564054e6-a88d-4f09-acc6-e986c631dcbc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0e4feb-6d16-466c-9632-15249df4026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5229ef8-235b-4606-96b8-5fad30437d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994d34b9-ba70-4215-8490-e16371d6f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c02cf774-f657-407d-a3f4-4cfd7c85785c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8cf62f-ee26-4a69-85e9-a2d166f380bb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de70be33-b37f-4896-b747-6c9d2a76be3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afe095db-daa5-4389-9b62-036e4033e0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7412e86-c8ce-4d43-8d2c-1dac1732c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0512b5d8-8c58-42f6-886b-e93156b1ade4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66ce7ee9-e6d3-47df-92c3-01ceb3eb396a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "628a480a-a87b-47fe-b216-0930857bf5a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a836d447-9549-4d71-9165-81b5a046b6d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9b089d9-4b11-4ef3-9bc3-9d2e44ed5f23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "655a77c2-5e19-4ce1-ab81-943052c8fc9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb00dfb3-9b35-4867-83a6-86a561e13fd2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0180070e-5c16-4d40-b846-3cd79eeeb54e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c215e189-c92e-4f63-a26c-56cb07ad2540"
                }
              }
            ]
          },
          {
            "id": "bc825f8d-37d6-4850-9c95-6cdee1c99079",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ddea113-0826-440a-8cba-a897d862e9a8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5720474c-4a8b-4d45-8dd1-212cf59d6572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d3a9467-de98-4472-94ee-085f5167c162"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b42c9c9-9faa-4db0-922c-17c53dd1e8d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90fa1365-3bfb-4031-83ce-d0f3fe1e34c4"
                    }
                  }
                ]
              },
              {
                "id": "4256c4d3-8d23-40c1-b13e-3562e81ef1b9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6947769-ed3e-43eb-a798-47d70d896b8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9677c85a-7a91-4aab-9ed7-c7463a5a078c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39474c7d-9e7c-4f27-baba-7a58440780a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6256bb2-a682-4f79-bdf6-24cdbd846788"
                    }
                  }
                ]
              },
              {
                "id": "927567ff-bc7e-4ef7-9172-044cc55e096c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0080f202-fe4e-42cb-84db-5b8114bed093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11ee4c30-f34a-4bb4-bfd2-06e411ae770a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee2d898-ec75-4eea-9295-d93da7d926ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8076a1b5-2237-49bc-bac1-2bc7fa10d4f0"
                    }
                  }
                ]
              },
              {
                "id": "36c4a6e0-5c3c-4483-8f2c-78456f7594fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb46574e-3ce3-4647-83f5-92a1f56b9b3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee15573b-3bd3-4de9-b62a-e5ff65a42740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6de2ff44-5a5c-40c5-b743-7cb924ece0a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe5e0144-12c1-4699-b13c-72ded326a852"
                    }
                  }
                ]
              },
              {
                "id": "e52e2aa7-3927-4f0d-b203-f7cc867acff6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd67615-a584-4c43-870a-779d6597cd7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e311fe5b-a799-48c3-a6eb-96d5de1b7034"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a966553-97c3-45c1-a5a8-8d0d416af573",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9e0d96dd-0db7-4a3d-903c-036ebddcb8ab"
                    }
                  }
                ]
              },
              {
                "id": "34051d8f-b8ae-45b4-85e6-7397bea79bb9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b59d16b-5a80-45a2-a828-6e7a903a067a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc64e13e-9379-4372-9486-0d9e37d6fd82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3340ae77-8648-47f9-b6e6-f88f875759b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d1cd5ff-42f0-4ff1-9589-b9f940ff6401"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fd84e59-2f16-47fd-99d7-c40aa3aa3323",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0110c853-2240-4753-9176-cd6ef4b39aac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e74852a-0811-445b-b54f-5095b07a982d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9835a2d-a1c2-4bbd-9c37-fd67a3b8fbe7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae62dbf4-fc48-459f-a03e-d81ddf08e474",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80ac5919-f983-4539-a044-f7ce03aef48d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e403fd7b-9f2a-4269-b599-0aee551c0b18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bd6fc4e-313d-45bc-b984-b85c1b9d0775"
            }
          }
        ]
      },
      {
        "id": "53ed0815-2c26-4de1-956b-906bb9cc768a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1a2cd5fe-4871-4399-a96f-eae87af05ef9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bde37f5-3147-45cc-961c-cc889dcfd0b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3ef6ba5-6dae-4528-ae95-077281e2e5f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3638006-5e6c-40e1-b61e-84dad7afa42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c01e50-1f45-47f1-bef1-ebe08584072d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96abb4-ef06-4562-9ef1-842d6fb181c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f75ac8-0a49-4459-8080-629b1578e0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da76ceb-8153-4874-9634-14be351921c4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258e71a3-77a4-46ae-ac25-dcd8e31bb52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd155af9-be4c-44d7-af78-d989e1dbda9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b049a4-35da-42a5-8a61-ef3817440111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27a533a-dac5-46e7-bf73-4b6e391baa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94774144-0848-4f9a-8dc4-797110cea538",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ed940-8da2-4a26-99d0-627162568f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8daccc0e-25a8-449d-8232-09aab75bd7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650e0955-6c08-4181-ab60-05d82a71f054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4686384-ce0e-49b3-8cd3-2c4fe4b0f777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29db637-d772-4c2d-a320-585ecaac3db1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ff099b-9c6e-4766-86e9-8a2535b7f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bd135c-c25f-4cb1-9a33-34d967d2ebf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e03eb8-6922-4f0d-9a9a-888cc4e29b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a4c3db-1f94-4188-8c46-06e1a094fa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fdd8ac-b40f-4dc4-b7e9-978a1d0790ed",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a45a93b-349e-4649-971d-04a326017578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7f001f-e295-4c0c-a2a1-0a747f606a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87da5737-8e5a-4b2a-89f3-9353a29f4f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "778cf558-b2c9-4c34-84ea-d89720fc8e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1890073-5a04-4703-9650-da7aa00b4a5c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65001f5-d9de-4c27-a2f0-b34b63c4f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e78b07-92d7-47f0-a405-62ffef1ce2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2366054d-ba9d-4549-a662-6da0c6eb42ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "133443aa-032b-4276-9ce4-52a48e019881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a3026a-faee-44e8-9fac-d24e2f0c5783",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a520a9f9-d9c6-4724-aee7-bf26c5a581cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d1ff3b-504c-41e9-b71e-de7ce7f15bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491b2f68-384b-47a8-ac0f-625a413b976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2c320a-3533-4336-99cc-32386b741962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c629d8-7929-4aaa-90a0-95fa8b462177",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1570a43c-d950-4d1c-a406-022945ae83e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c7b1c6-226b-4e2c-8788-5ab4ea3f06dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7494cb1-0687-4348-bbd7-3d0c66e16161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e78f00-8a2b-4a4a-9f21-982920b14f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43eaab6a-dcc5-4c00-868a-f5ef1e2e239e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bc67f1-1fce-4e5e-8f17-389401f699e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fea4fcb-4e40-41ec-a719-10d15672ce83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b37a28-ac21-46fb-badf-68303b33f276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f81f6d-8bd7-4ab1-a225-e0ead7ddc3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d66ab39-fd30-4824-ba65-52fba6b736b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a08c2-7929-4826-ab4b-4ff3d5233623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a189e93-b076-4ab9-a0fc-dfb4ccc9070e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099072a9-6545-4a5f-af35-5fe2681c20ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85371231-bec3-4ef5-8c68-71977fb1fe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93575891-f9c8-441e-ac36-cc2ee678fb9d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ad10f9-1f87-4913-b5a7-192417020583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd4b88a-1209-428d-8a08-efca57e8ab1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544784c4-8ec0-49f7-b731-3e964f89fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d850a428-d928-46ec-ad4a-fd745aadc07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e191bad-986f-459c-9b85-0ee9b6eeb41e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1251951-ad84-4ac9-8bb3-8612ad101e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3eb3c4-41dc-403e-939a-b9be5256e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac9d723-9daa-4127-9a41-e7ec92b35ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76f45854-b657-41f5-8216-bb853f21f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee7229c-890f-44f8-8b79-106d004ccf4e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b449098-1e46-476d-b3b5-874bf2010e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69001f5c-d773-497b-a7ae-d95665ebee6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9be6cca-b348-42b6-acd7-7198877faf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f30c9d-17b5-48e7-bd7e-eab371a1189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b70db7-61a0-4b32-ac74-ddea9e729036",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7971faac-28b7-4f4c-8f44-6e33d47fdd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cc19f9-3911-4c61-a066-26701f277c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7626c50e-693f-454f-a2b5-98d9f3181335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5078182c-038c-4ae9-8a6d-17ba8cf253d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f36212-b205-4c8b-ad3d-8c7fa3078f0a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381af634-bfa6-4f10-b0cd-c959dce2722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01438db7-b923-4f5a-93fa-8476cda83723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853857e1-56db-49f7-b666-b5710a04fb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09ae73b-7b3f-4db2-be6c-d1e5697d61cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd4a0b1-419d-4f2a-bf18-a85508f1a038",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187db77d-1aa6-4595-bbd4-7c890ad15d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c9aa4a-02d0-4cd2-b488-64ab5a13826e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccc2d56-9d7a-4056-9c89-fb1d6a39847d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85626f8-f3d9-49e5-9db1-36179329e947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31556672-f58c-45c7-b7e9-7264c2e384e1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ce4a04-d84e-4f4d-b8e3-4673be94dba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4c66ad-ce06-40d6-b28d-896c17f2f01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d753eb-d5f3-4e5f-90ab-983313161d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d55f410-504a-4a3e-b3a8-ceb6a8782f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1be8f9d-e6da-426e-8a46-c99762dcfafe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0067e3a9-f210-4095-affe-a88bc90b8b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cae779c-d883-4a25-905a-11a4708e3a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb4357d-80f4-4730-8d0a-b22bf7364d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "717e3c1c-ac90-48fa-b9b2-bf40597cda80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a336a76-33bf-40bf-9a3f-217ef25698ac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef0052-22ed-46df-bdad-67d5388e05ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a066f5-a02f-48a6-b0f4-cff260e4cf93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67134b5-25c4-4133-acbf-cba1376cc3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b0417a-5ceb-49bc-b843-43e1f3645ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60b5cfe-128b-4903-abbf-e1274d42ee98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210a7cfc-38e8-4cfa-9d9f-6b48a171ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab34f9a8-6d06-4b21-8938-31565b149f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de988a9-d3b4-4d38-b1c1-7291cf834a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8149dba-ab11-4cf3-9510-c9f382efa624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7e71a3-8646-49b1-9e9f-da55abd8182a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2f4fe3-b600-423b-965d-f1d3beae65aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0e7905-7d92-4d9f-9622-800b31d4a7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc44729-e911-4d3b-81a4-ccf6b2b69598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6be632-b740-4f44-8078-158d4a3fc34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9963231-b53b-458d-8162-e5428bc858fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc57dc52-c6f1-4a73-b273-b83f42444dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5dbc1e-b8e1-4d56-95ff-99ee790b0250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17442d2-c1cd-4cdc-8209-8ca735b206fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32038250-b8a4-48d5-8b8f-5aa904afac18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dded2ad4-5ef2-49df-8d39-02dc6e14c206",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f4321a-6cb1-493b-b046-dc9ebc3536ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b937a72a-e0a2-4b28-8535-2d7fae1e5f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335c2d5c-1000-42ba-bfbe-225037f4730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f61f7e-69d9-46f2-a24c-2d212326bd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a2fb1-a069-44e0-afa5-bdfa01f7e7a2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89b7bc4-c010-4922-8c83-474392f2b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fc3f6e-e5fa-4664-b9b2-c175b5441c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fb285f-db3a-4ebc-ad66-7f1fec4d723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90373139-b1d4-47fa-bdd5-19dbffc3dbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0066cfee-63e3-4028-a8a2-fed31b4c8f36",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16959dd-5008-4974-89fe-dcf347afa2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44eb9f6b-fa19-4154-a248-fa821abef595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6a36b3-fab2-4c9b-9c5d-ffd208c45387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2080d496-4700-425c-bbe1-4242fe1cfa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16951300-2531-4015-8e3a-73d486c6ea7c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5088b032-5729-4c84-89de-113ee510acbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78849a13-5d9e-4a69-a3a0-01f4bfc00dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf37e79c-916a-4b14-b284-ecdc787fa1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbca2e49-66d9-483f-894b-8af01f6a3dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb480f3f-ea6f-4cc5-9ced-256ea5a06a0d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8480d4b-aa33-4448-a958-11b44811247f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ead9e9-1389-40ef-9e1e-3385e2cae265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e6a709-dfd9-4153-bad9-8eb0ae0915ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "466f2dd5-5944-49c3-adfe-49022d091f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e483d845-625c-44ef-b702-bdee6c58ae6b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a30ca1-27d4-4eb2-8e53-2cad48cc4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944c411c-bd01-4e0b-a352-47b38b30ae7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d24da61-2c81-4ede-9119-7726d7d4ae09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc871e4-f62e-41a1-adb1-b6e55444bc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5328010-316f-4f92-b72d-1cdc24af9e3b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca841bcb-51a1-49b2-bd08-e0fbba76ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7669e8-fc86-47f0-9988-858abd6a6f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d94a2d8-ede5-49aa-a76d-fae566730f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a4f2c5-b1a2-4058-bab4-0c8d489e860b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecf5068-fb52-47b4-8030-e3fee3468ab2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16831026-aab4-4fb5-9fd4-10e5017df41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9eb5b8-c70e-415f-aefb-97f5cfa6f568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4731c92-d08c-43c2-88b4-306533919c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ba74a2-b89b-41f7-9b57-bf71018ecc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508a4512-2464-4c8a-a3c5-ee50bb3ed48e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887c38a-d1bb-4f9e-a9b5-77c7cc3825e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749cf370-4fad-4c69-bbf6-5ab4ab11240a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8305771e-540c-4501-96cb-d9b7769a4060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31812426-68ce-43a2-b9d1-f6360678e949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f25263c-2723-4e08-9320-2e8a59cc499a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336a8c30-53fa-4559-a18f-9b59621d338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b79a45-f3a2-453c-b7b7-27f6a08c1de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75090493-e418-499f-a293-ef9253c3c5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b565c091-6e14-4c77-b1c8-b63ccc910a85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63a978a1-b37f-467d-a23a-0dd220a0e332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e4ec6de-c611-4e73-a593-0dc8455b08fb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edc0abf-3f63-4c6c-9d5d-a55937246f79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a11e4d6d-bd09-402f-88eb-0d1320838cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77f6946-dff5-4806-821a-e4b8984defd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b846b2bd-29ce-4f77-82a8-12e06ae9f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc86e31e-64ad-44e3-b8eb-07e9904361a7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4c2429-b13f-4f49-a337-dd021f095624",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69dcf0ce-83e8-4db4-8160-23740339ede7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c3b9e0-b5ab-4fcf-8f2d-092ae4571f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e247af9-7503-4c70-8ea1-673f9f1a232e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "514cd5c3-f94c-432f-a944-312e3ebe7a55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfaf7ee9-b6be-4781-a615-40c7a8348d96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f431bccf-fe10-4a56-a646-44505a6e7cca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf4f4b58-480c-4fd3-a4f5-2923e19fcb22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8a78803-6c5b-4316-97e6-70385702c75d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfe24724-023a-461d-a674-09c7beac401c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f2953d8-c258-47e8-9a5b-2b794b885c9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "679df9d8-039d-4300-9f32-ae0eaa5c1244"
            }
          }
        ]
      },
      {
        "id": "103fcd7e-07bb-46db-8f65-afd5e3b2f959",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "240104af-34a3-417b-b5a5-287d89106ff1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da27b3bd-0357-4f5d-9180-c2e213c64a40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30dea629-358a-48f6-8961-32c6225eb4ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307824a5-fb03-43a5-b0e6-319d9b8349a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d64412-48de-4857-bd4e-82bdda3890d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210ee6ca-c2d0-495a-90ad-3b20e56a3f47",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e194fbc1-92f0-496f-a870-0ab166919471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b489cb3-6e15-46c5-b286-32d74a397b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d0f8c7-dfda-49ea-a4dd-5503cd1e80a9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cae6b4-2c70-4eb1-a991-9310a29714c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c80b968-0755-4799-b139-e2c95d5e1850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5112b4-81e7-46ca-b3f4-cd24e2ff9d22",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573f4818-401f-4f7f-92be-45cf89a19858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0266e7bb-55a0-4e07-b243-ec3324228f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a5336-d153-4b3b-99ab-26e6e16f92b6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae2e5de-40b6-4a54-ba21-13bad6cc444a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde0d9de-64b6-4d91-bb42-6c69e94f4d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961751b4-3d80-4b11-a398-ff08fccb053c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328737e8-820a-4462-9602-81a24cfec269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a55d5a-3da7-4895-8b3f-70afc20e7e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03148be9-9d37-4868-b6f1-f247979cf136",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946df099-12c2-4e95-9506-ce0cab4e197c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127a2a84-a46b-4ddd-acea-7bda65c2b9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806d0d11-cc77-471c-9990-a52580664f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4083fc-b1a9-400e-842c-8d9aff55d98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b059de84-1ecb-413c-bd63-83d329182f64",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780eed3f-f018-4b14-884b-5948df63565e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f990d303-124a-4610-82bc-921a1980f5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c49482-7ff5-42ea-b538-3f6691d4892c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aac85da-66b8-4a0d-bb37-a0df1a6f47f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e0971-0ea5-4410-bd34-de82cd6ad118",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca77908-b759-44e1-ba25-975afcc81051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43961d17-738e-4cb1-b471-2d43ca61e468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b63bb-cc8c-46b5-985e-639f2a518131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2a5bd9-9386-4201-8e2c-177ef51b9eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849588cb-331c-4932-9221-8e1d8908a05f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8336475-ef2e-443f-8568-fa6bcb320038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168fc123-b082-452e-a922-fd3239f61e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a56d2-d8ce-4867-a5c5-a2e244846ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd76d385-5786-4a0b-9404-18bd8b7d16f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0bebbb-4b30-4d32-8259-652e706aae07",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9800a46c-17c4-446f-af7e-9d105047f10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887633a0-76ce-4a46-aebc-2755f166099f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fb6247-0b29-4b4e-80af-14a440b5bfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436735c8-47d1-4fc6-9b26-efadea9a0de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b32e1-a2e9-4a91-95ba-6b04d7c47ef5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3122cf7c-053e-47a6-bc12-bc5952e8b8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364a6980-2b3b-44c4-b8d7-f4f750c426dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1301102-2352-4444-b144-101d570add49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20eef6c-fc2a-461a-8a32-b06d264e9ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e3c4fd-cde6-41cd-9de0-b626ba710562",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc94247-21e5-46b7-855b-6d88e4bf3846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19232d65-9068-4228-978c-dd0cc883b401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78460cde-8300-4ce3-8189-a6f6ff92fd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6994b46-ec8a-4d8b-96d2-c0e213283eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86be67c9-7552-4c12-955b-36e668d03104",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7709af-83ef-4bfe-b659-0e13cb71797a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e14867e2-5446-40af-9501-dcaef241bc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa605f-8b15-4c4a-83ca-b4998099bde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5977b490-1ae3-46dd-aef9-4ac753896573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49617b67-73d0-4314-849d-16ccc2c95fca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f363b3f-7b9d-42c1-8060-f9b9929e89da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8198961-4c3c-47cc-a2aa-23e9820c0604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518a49a8-1288-4aba-b514-756bc7aa29d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f4c4e3-89a0-46f7-9611-90140c6b90b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91b3f7f-3948-4a83-a7d6-ef6629849b8d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2349c41-1d46-4fc2-92d0-a12ccc1b12d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86225acf-4819-4318-b933-5733473b3600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9abe5d-da4d-4d3e-9ad3-d9f45388ae10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9791a8b-f3e8-400e-9d12-3c5fb7b33ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0316b0fe-64c1-412e-a49d-46f32103a484",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b9a598-0e16-4f94-b3cd-4c21b765881f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f3396f-302d-4374-b092-1426d4e63719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d30b63-80df-4afb-b18c-9179fe1de1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe831ba2-972d-4c05-ab59-ad749f75ea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4079171e-57c6-4125-8b8e-e0f171991dd4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c570e25f-f61b-4d41-a1b4-f3bbb5af7d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e8a8e4-dfb9-4fca-a529-5cc432d694c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8120f20-8e92-4bcd-8c40-fc55ae91929b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597ccd45-9833-45a6-aa7b-a5169dfc2728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538825f5-c05f-4e55-aa7c-52d814a71084",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168cefaf-4a22-4ee4-9c48-771f6d6e7870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5ab18c-2dae-47d6-a71b-ca56110f2c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d0882e-8fad-471f-aa4b-7d4b803c6675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015118fd-10fa-46cb-8384-98c2094a0686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354a8e9a-a06a-40d2-a56c-3c6730740617",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d08f03c-c7bd-474d-b847-4f4664b4230f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21e481f-dd0f-4fc8-9c7c-f779e6fef865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e467fd3e-aa1c-44fe-b6e5-0318240694f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d5d395-e4f9-4442-b039-1987b112c645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa87431-4911-4775-b3ef-e15cc3f55d3e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9538da-bee6-452d-8727-49a2c0e7c053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3074b56-4e84-4213-8021-d782b865599d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64448bf9-2ce4-4b0f-b98c-1f02dd1d9b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c60a202-d460-4c17-883a-105c871c1fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300f40ad-ea01-4c1a-aeea-08c91fbe5975",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46ef7a8-2f94-4de4-b668-31f8f1ff9d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda3880c-865b-43aa-94c6-5c87964fb909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1ffabc-d279-4b62-80ff-3b9cb52340f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb7d227-4a23-4c92-8dd3-bacaf27f3737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf5b77d-bf08-47af-a712-cbe724e666c8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689c45cb-7eba-49d5-9bea-472e22897b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630cf7dd-1281-4037-90ca-d94dc4bd2c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee18fdaa-30c2-4ed4-9ea9-e742289385b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9d4e63-1a68-4a0f-99da-602d6950d1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d646c29-5a3f-41f0-89cf-2c58ba1332a1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32c0da0-57f3-40a2-9073-d8239d8e3693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fc2f3b-6c2f-4bb5-b25d-0436e6e012b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fc48a0-413b-43e3-846e-e05d66b50cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3dfba71-904c-47dc-8e23-52d4c7523cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d12051-aa0d-463a-b328-493cc2b059b9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3624c169-ee82-4665-924f-3aaf7da64f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0107f77e-bddf-4e73-bbd4-9f695789522a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca35867-4f41-4e37-aebf-87d4018a1a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ff3824-d490-4bef-acf2-3f63934cead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d844cb-539d-4d75-a745-697b5a334fb2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50e4018-710d-4d75-8843-93a6ee09f63f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e508bfe2-adb7-4027-8973-61f9821f86c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec858115-273c-4669-a1ec-68e84b37fb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f71ae76-cdfb-42f5-87dd-a1abcb295081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6cbff3-49cb-46d5-8c10-1cfa8e1ae1cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8b64a6-9632-40ca-bffe-8f3c02542603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d505ce8b-9f1b-46be-981f-d4b62cbb54ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1deaed-d07d-4e82-a5fd-73fdaa968c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bc935a-8c5a-4684-80d4-896352fba111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dc2198-59e7-4448-b367-7a4b78b7d23b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dec44c5-c104-4e49-b76f-ca874eb5871e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a67ef8d-0394-4ab3-8a54-4eb8bf1d47cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed08baae-f751-4272-8e6d-c6dbfdd944a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb3de62-3353-4e7e-828b-f48a044c7f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e369c7-7566-43ed-9e78-a08a0d820727",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842e623-efeb-4bdc-a1cf-129a444d1f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16843bdd-0e46-432e-adbc-9a4acf3eed38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a81adc1-2337-42b6-96b2-57a3e184f2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec68b66f-12fe-4bc5-9a89-528d2f879bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee67eb27-0419-4207-bda9-b06c0513742f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5ec617-13ca-4fa4-af65-4b236b63b25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc76fbe-b4a2-4454-b42f-95a00584d5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbc9927-384a-4d46-904a-9b509b89a560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e722c95-bd86-4766-aaff-2cb2d673ba1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecffa5a6-ed9b-451b-b8b8-b89e883327d5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fc3e4b-f35d-4646-8670-cd459e9381ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0186814b-edd4-49b5-817b-cc80801f5681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5457b801-c2f0-48cf-9b97-af75a0e2f6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3aa137-1366-443f-b41e-e5e868a22d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275da2a7-7172-4acc-811a-70c6534fffcf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fac8675-9d1e-4512-972e-53c70c848241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd38100c-6620-405c-a142-937c04f7610c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d7c6da-8924-4d82-9d67-f1a69cfb1e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337a447e-eb41-4ebe-aa38-1964d9f0ce27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee0a501-5b18-47af-b385-9ee83564d57a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4866d365-6d7e-45d4-a1fd-76a32b5e6c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d08ff5-cbdc-45a7-88ba-d8d81943e769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3fcda7-6994-40c3-a9b3-c4c91b48cdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8159c57-6ecb-4abc-9f02-0121fec874e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc3a4d-55b1-441e-b361-5ae8cc33aea0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6845715e-885b-4c8c-95d1-b715b22fd7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac28b17-6a8e-40eb-b743-420f34d47c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819f7b4e-25f1-484d-92c6-359bbe2dea95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74c097a-0c07-4968-ad06-01078e51923c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8123e9-e05d-4685-82eb-e69de04f0f57",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdabd55c-7a19-4780-9899-4527cdb30871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd216e6-3cb5-4e84-a63b-0f36fa302d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c29a6a-aef2-4f87-bbf6-7b541ebb780c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73da3df-4d15-4248-bd2c-3d96f429361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4173491-b0e6-4dc6-a07a-10f66623cf3a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a618345-1e91-456f-bcc9-75c74534fdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56badfa7-2d85-463d-8b87-ee251550b44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36477dd-dde4-411d-a442-fca2b8453015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e765ee2-7e78-4d8f-8d0f-ac1e148c6394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2feb512e-5ae4-42dd-a468-169d0abe31d1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45f179e-6904-4c5a-887b-c629b949fa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8c39aa-8a96-411f-99b2-61701e9c80fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daeab31-3269-4ea3-a49d-461c8ddc6794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b518f434-5794-47de-b6ef-32087f566609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec98042-a01b-4ead-8070-72b47c67a236",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0b0044-400f-473c-861a-a0aeac9633c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a23c9e-bd2a-46f2-8c69-e8ba60984bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76add4d3-23f7-468e-bd0b-ab760fc67461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f136a95-e18f-43d6-b2e3-ccd3b2b6ba6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35c5719-2e47-4569-b74b-23e1dad1fba1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa95cb32-0fe9-4e24-b1a5-2b1722fe390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69041016-f3ec-418d-9944-190dc3072d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1750856-1fe6-4374-a784-b1caa3a904a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a37f8d-6f8b-410b-a388-2c595b7e3b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ad4d77-c269-4217-b754-274b12e4f47b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64605147-3e91-496e-8e2f-ec00462e330d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6128ea-dcad-441c-a0aa-c34ae032e8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a203c69-32a7-4370-87f3-6138256796ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299ab21e-7737-4aae-a3ec-498a15951618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e4c3a5-0112-413a-b846-bd81516735e3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4753d859-cb77-450d-8cf2-617e9eaed682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bc3244-aefb-4863-885d-8306ac8115e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56bf793-f2b8-4d20-8d49-113e07ed1bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0714a5-83fd-4c15-8920-7500a9812595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af3b1e7-d383-439e-980f-9c698f24e00e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82028ac4-8945-4bf4-9056-5b7c3c4c36f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e808d3-577e-4b3a-988f-78b5886878be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55a6625-58d9-4280-81ec-dc880b7f67d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d380bd2-875c-4815-8dbc-27236a53369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdee5d4b-cf66-421f-91e2-15465c3040a2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bcb19b-108f-47ff-a64a-dd6457132684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50ec5eb-c6e6-4c33-825c-d565a432adcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47981a0a-960a-4270-80e6-4797e8898c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778fe601-90b7-4ece-a22d-d9cc6463ac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d49483-68d4-4772-a44a-106b2fe84c12",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7311350f-7122-4128-9b3f-49edde79240d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1d0492-f233-4e6b-beee-01844df54c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc5d582-bb58-44ab-a6ce-5201171a7ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab10ca6-ab58-498c-950f-183d381c59ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0585d27b-91f2-4143-b08e-8d0522f7413f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f65720-18c4-4b4d-9156-bf82035742c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cc2265-20de-48ce-9b74-5d57495ce058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cced16-dfa2-44f5-895a-187b7fa41e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83dce75-1587-4131-8fd8-ef7097591a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0394c5-f6cd-4d55-a768-a9e9352afd56",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbfc11a-254b-40fa-8da3-e0af1a062195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbc8b5b-2fcc-4b12-b772-701faff3de47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707c14cd-411e-4456-8ffe-b7fdc0358d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ed925d-42ae-42de-8861-af0f1f359be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bd882e-ca87-4801-b0c0-f5e1fda9d627",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739f64d1-a914-4ba5-a97e-c03b6bd66ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f638b5-a485-472e-a477-b7ba505d3abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629ec5cf-9a8a-47b2-aaf1-2f83da1e17e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cf2b7e-7802-4cf4-88b9-49951fd02ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112aa6d8-4ab9-4f5b-9691-7bf6fdf24817",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1df9410-c216-4cdc-b97b-55af83e267d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038e3733-7f3b-4041-8dee-b5997a25322c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c69cf7-a543-40bd-9215-7aee15205731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426a742b-8014-4ac3-b1b8-01b071d8dcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a608151-1c7b-48d7-80ce-a229ee77425d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcf6900-0a3e-4307-a510-3fd1cd7374b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac06f723-3b14-4821-be67-82b990d30206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8d03f2-4597-4b3b-8efe-ee7af00fa110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597d0aee-1741-45c9-85d1-0b1a301919e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21760a39-cb18-4fe6-be4b-d8eeda700a2c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d19be1-7fc5-41d7-ada5-5fad7292334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1facafd-ea45-4329-8819-dd34964de305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1efed3-791b-45a4-8c8d-889fd393db4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7f0185-e4e5-4fcb-b6c5-729f7ae860f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cec983-7514-42cb-b192-8c2634eb79de",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb7a9c6-6bb3-475a-b327-050fdf4e9195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4e39b9-5ff6-4cac-a209-d1246c453575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5508942a-cab1-4083-89ea-d6550d50fdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d205da09-c888-42a4-808c-2177cd74a9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ed643d-a3ca-4aa6-b478-6a0aaa026ac2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c339f6f-fce3-4ab5-bdc6-44ca0f110fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15af91ba-4e99-4e4c-9494-9a1b8899e6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274280c2-4d91-44bd-a808-f51945f1fe59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88abb230-fcf0-41ff-9db4-7a8906e19d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb500ff-3050-48bc-ac20-c228e5cd66ba",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af7cc6c-c48d-46a9-a6c3-1945001b479d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2530fb1a-9bef-4bd2-8c82-f6035215d9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8362af5d-d306-4316-8fb6-af408dc11e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda96d17-3a3b-4d3f-aef2-1fb2fdb635f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc49411d-957c-4ede-ab78-644cf3b67fec",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f2d1da-bcc0-47c5-b9d8-d6695b8d6cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822aaf76-0248-4fcb-9f90-1ae292d20f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e365ac-35d7-409d-92da-63f0b498f4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efc4198-e4ec-48d0-9248-10c4911255cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fb6de3-d9b4-47fb-8208-165a8fa6f79f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d23b7c-5c9f-4f83-80dd-ae54d610fca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6337d0b-3e07-45c1-857f-20d4b87b1ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c44b77f-d85d-43d4-89d5-d326b9a45488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd482bc3-ef74-410d-9583-a31308ba2f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ec7b8-3088-4894-80ba-a1264972fed2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8dc2af-d9fe-4448-925b-4e96e6d25d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46db8cb-d321-476e-b72b-dd17aafed742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4bf8a6-9964-40d8-90b0-a0998a2b0f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cebe49-3c5a-4bd7-bafa-cc1539fe0134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfc1603-9e3a-4cb0-ae65-e41672b03047",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f960a104-231a-45d9-9fa6-32dc04a72652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb492a67-87d9-4f6b-ba64-eba8102b80d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbf7f38-ae77-417a-a6d9-c680a1987db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c056790-0a3c-4c91-b02a-ef3504c29d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fb799a-d1b4-46ab-9f80-3bae134cd98f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a7aca-44ef-47d9-9216-d9f3796650bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d457b8a-4d5d-4e6e-a365-cffce78edf9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fb0f9c-779d-48cf-a7bc-111977e3b9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f6fe85-7fbc-42d6-876f-325020143683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951d2b99-c7df-4d77-84f2-b5f95e25848d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb5f6a0-5ecf-49e1-8c38-4090707bd001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8862ef-2d66-439c-aa28-46b7adef27d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da1beca-4267-4837-899b-0650e671f7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d4b377-15af-4f29-9110-e1e3204f4938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72570fd4-6e61-435a-aa4c-304508490894",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f50c813-0cdf-44f3-a67f-cc0ea5240d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79e1b70-de0d-4ec0-8078-d08543b3460b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d03d02-2e14-473e-9eb3-65a1554a6254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3da14b-7f83-4dd9-ac6f-38ca7c301829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d94b8b-d637-48c6-84fd-91b98b2cc1df",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4b9d94-0465-43bb-a003-97aeaa6c1d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28caa3a0-0f41-4349-afb3-89bcf022c0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4bfed2-a8d9-4152-93d2-7c9ed580ff18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80d0641-e1ec-4643-a8e1-128eeba5f426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aecc540-7a13-405c-90e5-138eea10ffbd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90159f3e-229f-44c8-b484-87175ba32fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69831ff6-987b-40cb-843c-30d4469607cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6967d3-069a-4ba2-9c13-f76ffc44095b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfe50b9-10de-4174-82f3-c2ff191863f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f683f-aabe-428b-9f65-86687d6640c5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8d43bd-1d38-4082-a096-aca37bb50ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72314840-ed49-4521-bb62-f9bbf6cea35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a16a4b-ecbb-44a2-931a-1ac245ef57f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a32b9d1-f26a-4b5d-b2b9-760a6eb64fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7569a14-aa85-4a77-81f8-8941fac80645",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d7321b-a6ae-4d46-85ca-98e91230b43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4d893d6-7c80-4be1-be69-b31aa2122d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b385b1e-4d4b-436a-bfd9-f27e4bb92143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4ab0b4-c7eb-4c13-a4f5-2b4dd064ea73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c0d03a-d26d-4496-bb9b-5e838f2be053",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c33c999-3abb-484e-9847-8d6c6b64d930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7267df59-2691-4e19-a31d-658d15e6da87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85aaf13-11ed-4db0-83e3-73593604f3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb96b04d-b2bc-4746-a8c2-a7d364a187d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23910c48-5404-49ec-b2dc-281900dda6a8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1102580-d753-4b2b-b9c9-0f2d655de98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd46056-7ec6-4dba-8937-644b53371d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cb3e4c-9456-4492-9e01-7055716bb50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216eae0a-d257-494d-834c-c5fe03d57917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47a1a93-8cbc-41e0-9c31-296b319ea46d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fedebf-b571-4d80-9600-312706bde63d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ccf86d3-289b-4af9-9c50-d806c85363df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2878d8d-117b-48a3-b234-3bcbed818341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23def87-7a4e-4ec7-ac27-578bbcbc3612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c76527-ad34-4443-a519-ed6c0590e398",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd26796d-ab43-49b7-a58e-97e279f81697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5789e1fc-dc59-4742-bdd9-8a3900b930ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d63792-d9ca-406a-b823-df805269d69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e685205-abb3-452e-af0d-7716309a98f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8255f7-ad76-4ac5-9fe7-6651052fd364",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d56bb1-11ed-4ed4-a394-63737e60ee56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304dc6fb-b27d-42ba-9f65-54a94b51dca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6260e86-06c2-4072-adf3-4041f6b16502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8b153a-3fb3-41da-8d99-1890b15e5f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f572d8-dde0-4705-978e-a17218ec4ced",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2540a03e-8353-4d3d-9eef-c296e99f1c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d3f623-bbd2-4c45-a0bb-58dce23d5d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd6c4f5-f8a4-41c9-8ed8-ba07f56414dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbc76e9-4c1b-4c7b-97b0-4f409a073d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31eb031a-1116-4bbd-b8a8-e3de4fd86e6a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999f0574-e66f-4e18-a373-1c5ecc87eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7af9183-7a45-4d24-b58f-05c83355bcf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c8dc32-d773-438f-aa79-97022bef2785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf99062-6f35-45ea-80ce-52cf4e7b576d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f1ebe8-ba6a-4a0e-8fd5-1f8185619396",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c1c6ce-ce36-498b-81a4-b63287c41ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba6e979-9ee9-46d4-a8aa-b9db4a633afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f866cd60-6d23-4f73-a713-0b54161b562c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae84706e-ddf1-411b-9c2d-7f9d5a357ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5200f85f-e077-49a2-bb37-3103d28afbe9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3e7d9e-b81c-4d6c-b5e8-fcee45008d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3470a8d6-293c-4741-b5b6-14d83fac2eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd24895-2ed9-43f4-b85d-d86fccc488f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdb26ad-d763-42f8-993e-1adc0d52dd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8913771-963c-4b0c-953e-19a636271593",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd18d4c-9315-4e25-82a3-b8a9aae47dd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43313133-143b-46d1-81d5-4e04757a7d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068044d3-4c67-4410-a95d-2328aa70ca25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e5d34d-3607-44cd-897d-a7d5d8eae71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc375f6-e25b-4da7-8bde-4954daf9e617",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05d6632-86c2-4056-86f8-d12bfacfe376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed758bd-bb94-4c21-b08d-3317bdb8f4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0377d3d2-cbf9-4271-8b2a-66ec3e54fc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6606a5f0-aba2-417b-8288-513392202ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a9a214-0741-4a7a-bb6e-cc29dd943ace",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683ecf3-f0be-4d69-b85d-3de2a5b6f377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fce1073-4fe0-4a31-9893-4f0dddcdca00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b143e298-8264-44ed-b7c5-c877a2f547cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8e2582-6dbc-422f-ac00-64383a2e1032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214dbf47-def4-4540-bae7-15cd95a853fe",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a484f2-df76-48d2-b0fe-38e6ab04bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d212fd-0660-4d11-938f-aa4adf1b0edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f534b46-25e5-4683-b931-0570272f16fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a0232c-5070-4743-9bd6-fd5db186bade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd4f6a8-8d72-4225-b59b-2039e8259a22",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce57653-0cce-4014-9f49-9eb7a947f759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34cf40d6-c91b-448e-abb2-b2162eb235b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b58e2-0c76-4d83-853d-2caf21dae008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547e9edf-ba40-4633-b9ed-8c7847121844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38895942-4e73-4394-93ca-8997c7608d7f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca27374-3326-4af3-a2db-f31079084ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98fe79d-733f-4794-a24f-9d1b9fc5a773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7603fadc-f86b-43c8-a2d5-7dcc7f692769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e88b52-b960-4cf2-a529-cf7f9b6217fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc403efe-a669-49a2-925c-07b044dbdf6b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104bee0e-6142-4a75-bc55-4b3d64e7a899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0528d34-ba9e-4bdd-a19e-910c3f91e0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd52bc3c-5cc3-48cd-bb90-9456aec5fc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e82a4c-7721-4a3c-8893-f9b456855971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132d542c-d04a-476f-a091-04f76b503363",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c7aa8f-1199-4ae6-be4e-4f78942fa440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fb85c8-f59f-4ac3-896d-962a18a9b705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2349d3c-d4d1-4a1d-a336-e4f0cc249ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf1a640-ae5d-4fe5-ac1d-ff7edd1f557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ed0575-3c40-4d3a-ad4d-cd469ee5a989",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fed396-cfae-4ad6-9036-b8faf85079e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11456699-4fd7-42b2-a35c-8322d6d6429f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd7440e-2911-433f-a853-e99cde4313f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05356e9c-df77-40c3-a6cf-4bdaebdc227b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f959ae8a-9ab7-40f1-a8e2-18a93172943a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bd6991-e47f-43b1-bf49-9d1bb276ec92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1afa9164-4b7d-4ead-b91c-94aaa03671a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f0942d-fb96-4b3b-b90a-50da463a70b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8c2e4f-047b-444e-8269-b500ccf5ee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3efa01-bc8b-45c8-8a9e-c1bf4c393954",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e784dc17-446a-460d-ab94-3ed77b2d603b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb5b090-406e-4fc9-afb2-323a8cd8724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35f6bea-512c-41f9-8b11-504cc22ab339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6173b6dd-19de-48bf-ba60-ac13117f61eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f356f00-d7d4-4807-aadb-8e68e2ea552e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5740742-5651-4fd7-bd42-c3713f5f1a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4467f1d6-d4e4-4eb6-bb73-b2b6aa5a2a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f007a02-9b41-46a5-9178-f943e8cad8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a094db-ed46-4e28-8301-57e54f9723c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cdb7ba-c589-49c5-80f2-eec8f7ebb8ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c12c68-5977-4fbb-8097-d745818395f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbfd413-84b4-4c73-9891-f5d3013bc206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb992a8-1a8f-4be9-b6ac-dc086b58622b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6831f8-1395-4d56-a4b7-b5883fdb4faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b607e2ea-343d-49ae-8348-418c8c1c10b6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ff8c9a-4fda-4b4f-93b7-839fe64e0091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebddcc65-6ce5-4078-9b78-4717adc7e499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834d7384-2d46-494b-b7bd-f55ca6c7840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42320e6c-868d-4232-bc96-1721aa1a62bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d40942-b89d-4153-bab7-407355b09f60",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c518fd-0fc7-4157-9fab-09325b928f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1aa7dee-b337-420c-a14a-541036ca7c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04382766-302a-42e4-ac5d-6f7a02497a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68bfc93-252c-4d19-9c1f-0b3b763c25be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8dc0a5-d7b6-46ce-a56b-e14b8e92836e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d3000f-9129-4d40-a5ea-8a81b5fbbc4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a2142e-9891-4752-8fe8-a51258001dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72121179-8805-46c3-9281-c4fa1178ba4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4355ab-d859-4015-8854-338f133128cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4a540-f6c2-4bee-94ce-90404e5a6f20",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dfca42-254b-40d4-8752-f0dc169785c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34add2e4-cdcb-44bb-bd78-0ca01bb19ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7247f297-5334-4029-9e8b-10978ec1d9cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c9b5be-0f78-4afe-b6ef-4e8c839cffd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc546d5-f78a-4e43-808e-b19012ab40dc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b351b47-5412-458d-9b8a-b5798b49ead6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c27ebb6-9a4b-480f-b1b9-f1ac24b5b487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1443ff09-3e92-4b46-b8f1-754b07742388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06dac281-97fb-4130-87ce-ee20edcbc176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0d028a-e365-4a13-9e10-659cc20687a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0d70ea-b683-421e-8908-af5f744b8734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5282fb00-e7f3-4c99-b8dd-6ff5bc6788e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e89a16-3e11-4508-8f91-5e5b0087bf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f14937-dfb4-4cf8-b0f9-a96ca06e067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc2c1bf-1166-436c-8dc0-dcb360bac141",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30991a8-e94d-4da0-b7c7-5621572ba1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fb8aef2-fc6f-43fb-ab15-8e17005a4683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e210666-40de-4da9-bf56-22a39e008ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7150c19a-610f-414f-9fd0-1bed6fe47711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95792df-2c85-442f-b3c8-c4cda30c8112",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9537645c-e11b-4666-8871-4de78d4f9fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8baddfc7-8379-4b67-be2b-93d373554c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5361476-8e5d-41af-81fc-d7e170bbdd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f43c7d7-1830-47d8-928d-a155ce89c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d172da-7163-46df-a902-43df2d3f37ba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda91f27-8c83-4a33-92d0-1c819e170ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847eefb9-24ae-4fa6-bd4f-b6531da5e53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d091cfcf-9dad-44af-b0d9-3ea7dfc0ce92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9464bcf7-8c55-43ad-ba66-0478a924b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773510bf-7155-4baa-8dac-c893eaea4897",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fbdbe8-e9aa-4b3f-a921-a5b26ab190e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e01fc3-2c5c-40fd-9741-b13e7c7f6a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f61a68-e16c-4b44-855c-3977e5594376",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8e588-770c-4ce2-a340-6742b2866656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12f8b71-c66d-4548-9c82-97543a5eef22",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab10ae2b-2d3f-41c1-a31e-55b0dbaad7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7057f129-f97e-44cc-b018-5e5a44ea539c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cc7081-262d-41ec-b3f4-24da3094d2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828a53d7-44f6-465a-8812-e12da27c1b54"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c1ce527-1d19-4eaa-9edc-a576d9e55500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be7c432c-5784-4248-bfc1-545a795c1b24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcef21a2-3cfc-4672-9bca-d87841e80bdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "704e2d78-243d-435d-80e5-4a944f322fe9"
                    }
                  }
                ]
              },
              {
                "id": "feadfcf8-59ba-4adf-8cba-d5665a8a5a82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c09a59bd-cfe4-4d37-941f-2f95a66a3a82",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab23022-8aad-4cb4-8867-f9d82e2e8d25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1f0f944c-a400-4e12-be63-f89db3f6bf81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263f685b-5f80-4407-8069-6a7e58dbf536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccefdbe3-83ad-472b-9965-0d61aa65dd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d01d997-82ff-4925-bd3b-b7e147e52249",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da007ae3-c116-40be-afea-1b8b96e63bf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb577eee-beb6-4f69-b11e-f7a65d8035bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae2b21e-9b33-40b6-9e89-3058fd538f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da4422f8-9214-4c01-b40e-60bff71665cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d76ad7a-81bb-4f17-b516-a0221ba0c0e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcb079b2-fca0-4831-9ec7-e96e2b724c22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2d5754c-95e3-454c-8dd4-caf091bdfa69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efa100d2-3f64-438a-90d7-2e06eed70c30"
                    }
                  }
                ]
              },
              {
                "id": "465a767d-8f5c-4dfc-838d-9fc52650a174",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c1a29ffd-59af-4f75-b069-35723d900d4a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb2fdbf-9e7a-47a3-bace-90495bf52848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "26a33291-3e93-4466-b246-85edf0de07d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de6ece8-e2f7-4905-964a-d1716eae6caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338f5241-c0da-4aec-a11e-224d541d1bc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb1bf74e-ef77-4a08-9f32-7c4eadf23c5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fe3ebb7-02a8-4168-ab4d-a4735228c150",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cae83de-b364-4b97-80d4-a83f850f905b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2338fd54-b6da-4c55-9b5b-148d9a7992e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cc54e0e-5494-4afb-987e-f4870b437dc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a45bc96-290f-4465-a89f-dc4470bbec19"
                    }
                  }
                ]
              },
              {
                "id": "928a2145-6d44-4135-8b5f-e7d4ae61e0b2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61c620b2-cf81-4900-8fa5-4eb00b41f7c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32e06916-d639-4536-93b9-84c468fb589c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0506f30c-bbf5-43ac-b64d-fd6873bebe67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d140fec-287f-4d6b-a4a2-1aa53880bdbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97363b5d-6451-4ce5-b84c-5f8257a4ecd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "310a99ad-481c-4a1a-b910-0c048e4530ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe4ea847-a556-46c5-abb1-b8c540b0665d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b4e0c2c-a996-477f-90ce-3636c94922de"
            }
          }
        ]
      },
      {
        "id": "b0ae541d-65bd-48c2-b964-7afe64e49d7b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fcdb5fc9-b6ba-424c-bda2-106a6acb4374",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67219b72-bde3-400b-b6b9-6039a80cd2d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d5ac06-84aa-43dc-9ed2-06f9bf7b447a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4c163399-5c0f-4e31-85c7-b24820a96bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35ad1e4-48c3-4339-83a4-c26b278866be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5be78dd-aeee-4522-84d7-6b07a554c387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e93ecf0-9b33-445c-ad8c-9328d55bfccd",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa950530-33c3-493b-96ee-2d05c88eeb86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9a523b08-6a37-43fe-84d6-57b124e73a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88d37e7-3306-45e9-833e-28ecad4136d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d65b676e-2dfa-4c84-bd59-58225487ddd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "499403d1-2818-4d69-95fc-c8e63c905f90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b45ecec-37c9-4f0a-be12-4dd29a602649"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8bf0804-6f9e-48d8-b878-35e69d122773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d9f5175-7fad-42c4-a528-be54914d9241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d19593e-da43-4740-aac4-b6c093541c53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d183febb-979d-49f8-93b8-060d6e58b504"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33c96aa4-1b4c-41c2-8719-911e492170e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1431c6b6-1b6b-42d0-b120-72608f5fddea"
            }
          }
        ]
      },
      {
        "id": "d0f412c2-8a7f-4769-8fe5-44d616fdb387",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "46bc2599-58b6-4236-ac60-e1fddeff12fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9919f698-1b53-47b4-9f2b-f307e3d49866",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a2f34c8-ea96-4070-a692-d3464c38a910",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d229c-9e3a-46cf-b534-9e83a1f25a11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21a2830f-60cf-49e9-aa14-615544da2893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe35f763-fe38-4b8b-b4ba-44ea3b934a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c28a1324-18c2-47c1-a047-34a59ffe0965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce3901c-2756-445d-acd0-e1eec74044c0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f84506c-bba8-4e50-92ed-5683dbb2adb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "22eee407-a83b-49a9-9051-47ce3ddb6063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b3dbc2-f263-4948-9ab3-3af4a9c89c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97090d84-b6f6-4a9f-b002-930fe11312a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15f86d9b-42e7-45a4-9156-4dc7f675ccf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5601f9c6-7a33-43a5-ba40-09cb158f986a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ac89d6b-371b-4f15-a3c9-076dc65a7119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0ee97bc-29ec-45ad-a41a-81a085af31e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04e7040b-3d54-4718-8c8d-f844666dedaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b5aa4b4-c69e-41ef-954a-35a06cf21e84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2db7905-b755-47e6-b023-b6e2418f3309",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "405cd9e9-460d-4485-833c-6d787c12a536"
            }
          }
        ]
      },
      {
        "id": "5dd21222-85f0-4f18-b2e0-6c9c30600a77",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1ef30da2-91a2-4d2f-b953-e5d02ec786eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0816d6d5-78ad-4e5a-9a53-76fc131f233d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fa15b1a-01cc-4d43-8417-b7c6e06e1631",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706cadfd-025f-474c-b12f-6d723c1db66e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c84ea816-6b93-46dd-b03a-d6dd42cbc574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ccb79-1bdc-4652-a1db-4ec6f3b189b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e9d76f6-4bf6-436b-be63-7e99361cca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8b1f16-7b94-4dda-8555-449120a61c6e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4c39ec-fcaa-49a1-9d73-1ad21f22c6e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2110b2ba-ea9c-46de-a753-b0dd4e798cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcf73d8-f6e8-4158-aea7-286582632160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed1626c2-8cd3-4a86-9804-a354f445d3d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47f39862-b8bd-4d53-81e2-632802cf3a5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6246e58-257e-4d3f-a2eb-6699740c11b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd350a2d-6b72-4d87-9fa7-44668bbdbb4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88d7963d-d61e-40da-8d96-05cb9fe55efe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b219e23-0f12-45d7-8060-0b5a272a924a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1089e960-318b-4ca5-aced-f760223273dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57dcca8a-f6e4-41c7-b07d-4473995a7f3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a401572-c2b4-47c0-9c2e-22b02091a321"
            }
          }
        ]
      },
      {
        "id": "2b7214ff-e2b6-40f0-a053-3fe64100faa8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf26c286-e58f-47a2-b7bf-6e02afb0b591",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dcf6f46-79d7-4a30-8488-f288922a91b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "90a874ec-1867-4ae6-9984-ccda8e76b4c2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7431fd75-278f-4e58-85b4-cb5ddb2bc3f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "056de61a-cb1c-4930-8319-112a6ba0e237",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.057692307692307,
      "responseMin": 3,
      "responseMax": 378,
      "responseSd": 44.288743778118004,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680395973166,
      "completed": 1680395987041
    },
    "executions": [
      {
        "id": "c710260b-73ed-42a4-b6ef-c1cd3e633a6b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fe047cc6-c903-4833-99e0-ff0234f99f7f",
          "httpRequestId": "ecec496b-ae4b-47d9-8b76-0e33f8cb31db"
        },
        "item": {
          "id": "c710260b-73ed-42a4-b6ef-c1cd3e633a6b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "435b97d1-619c-4335-ac7c-7b7367658bf3",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "d86ec9f6-a1a4-4157-ac1c-6deeb902e6f7",
        "cursor": {
          "ref": "cc7d7b66-160f-4361-839f-85a7fcc8e5e0",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "063c88f1-63a2-4ba9-a953-5fbeca040cfb"
        },
        "item": {
          "id": "d86ec9f6-a1a4-4157-ac1c-6deeb902e6f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d51fc0c3-5a49-48a8-918f-53e9fab55ba0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "27f61897-3039-4fea-8852-2f6455075bf7",
        "cursor": {
          "ref": "597980ff-55d9-4d2c-b8e8-d971ba94abcd",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ea99b026-e085-470e-a9b0-0581d3455820"
        },
        "item": {
          "id": "27f61897-3039-4fea-8852-2f6455075bf7",
          "name": "did_json"
        },
        "response": {
          "id": "ce19afb9-001e-4de1-aa76-369c87ec9d15",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1a3358-fb0a-447c-b788-5050741379cc",
        "cursor": {
          "ref": "1b517fc9-db13-4482-8498-a685631854f5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c205bdac-7b35-4751-8bec-480782c0ba39"
        },
        "item": {
          "id": "1c1a3358-fb0a-447c-b788-5050741379cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "8a030b24-8d57-4381-9275-1ee899af4387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1a3358-fb0a-447c-b788-5050741379cc",
        "cursor": {
          "ref": "1b517fc9-db13-4482-8498-a685631854f5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c205bdac-7b35-4751-8bec-480782c0ba39"
        },
        "item": {
          "id": "1c1a3358-fb0a-447c-b788-5050741379cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "8a030b24-8d57-4381-9275-1ee899af4387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540d549d-fc60-488c-9247-0afea571e313",
        "cursor": {
          "ref": "9dc9de21-0c9b-4c32-8848-3ca1cb7c390f",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "00e1039d-0798-4c4f-8c2c-5eeefe37d3e9"
        },
        "item": {
          "id": "540d549d-fc60-488c-9247-0afea571e313",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4b373c6d-863b-4be0-b86b-e583ef2b7b89",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd536e0-3d6c-4542-b01c-4f156d3a0338",
        "cursor": {
          "ref": "2f3d3908-f585-4d0a-aee8-a8811e32ca8c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1233b751-ff14-47e1-b10b-a8ff6d5305c3"
        },
        "item": {
          "id": "0bd536e0-3d6c-4542-b01c-4f156d3a0338",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e2dc655b-4ac4-4c33-8b2f-ab97dbc7c12f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7bfffb-5bda-40a6-8d54-ac5adcc56beb",
        "cursor": {
          "ref": "264bb773-69cd-4a61-bab3-51d99520de93",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4bcb265b-0f99-48e3-a413-0be0a8ae51fc"
        },
        "item": {
          "id": "de7bfffb-5bda-40a6-8d54-ac5adcc56beb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fe37cea5-3fa1-498a-9672-db4a2f8bd8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a005e-6e40-4a47-8ff4-759cfe8e7fee",
        "cursor": {
          "ref": "3590413b-f556-4bbd-82a0-2968f34683ff",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1fab39d3-60b8-47cb-bfe1-9ae543c15ca7"
        },
        "item": {
          "id": "b05a005e-6e40-4a47-8ff4-759cfe8e7fee",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "adf03977-3c51-401f-b8ab-04800a920328",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a005e-6e40-4a47-8ff4-759cfe8e7fee",
        "cursor": {
          "ref": "3590413b-f556-4bbd-82a0-2968f34683ff",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1fab39d3-60b8-47cb-bfe1-9ae543c15ca7"
        },
        "item": {
          "id": "b05a005e-6e40-4a47-8ff4-759cfe8e7fee",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "adf03977-3c51-401f-b8ab-04800a920328",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac455920-ad0d-49aa-bf80-280b4f862a1a",
        "cursor": {
          "ref": "e9b4ea7b-575b-4419-9d54-c7eb5d532cc2",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d1629745-156c-4a3f-8064-ba5894b97179"
        },
        "item": {
          "id": "ac455920-ad0d-49aa-bf80-280b4f862a1a",
          "name": "identifiers"
        },
        "response": {
          "id": "7844e2ae-f4f9-4486-9d47-80c6b4a7af87",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b800b6a-e483-467f-8f3c-37049846e595",
        "cursor": {
          "ref": "7f1e676b-786f-42b7-9981-6c6411422291",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f8b94dd-412f-4909-9d37-48266c342161"
        },
        "item": {
          "id": "4b800b6a-e483-467f-8f3c-37049846e595",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d03e447c-2c21-4c33-bd39-268be1a2d680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b800b6a-e483-467f-8f3c-37049846e595",
        "cursor": {
          "ref": "7f1e676b-786f-42b7-9981-6c6411422291",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f8b94dd-412f-4909-9d37-48266c342161"
        },
        "item": {
          "id": "4b800b6a-e483-467f-8f3c-37049846e595",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d03e447c-2c21-4c33-bd39-268be1a2d680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c412b72-20e5-44a0-8f73-b57f654aff89",
        "cursor": {
          "ref": "6cdb0c1e-f2b3-4ee2-9949-8a7841221962",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a9c2438-ac27-49ff-837e-0fad26ff1d4f"
        },
        "item": {
          "id": "0c412b72-20e5-44a0-8f73-b57f654aff89",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "91e8c89e-2ad5-4f69-acf9-23c9fbe57061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d6e36d-0b20-416f-a059-24095e425f71",
        "cursor": {
          "ref": "edb87f0a-d3c3-48e2-9eca-487e2d52ba6a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "444672b8-de4b-4a4f-b1c0-e0f78b6fbbd3"
        },
        "item": {
          "id": "c4d6e36d-0b20-416f-a059-24095e425f71",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "37168515-647f-4308-8706-f9bc976c1d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb6d8fd-53d6-48e1-83f8-a0a995088747",
        "cursor": {
          "ref": "2b2b1c39-4602-427a-8669-8e2145fa92db",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e496d7d9-3411-4cbb-ad24-82a15967f0bb"
        },
        "item": {
          "id": "ccb6d8fd-53d6-48e1-83f8-a0a995088747",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aeaa56a5-110f-4863-bbfe-008164f6e640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7ee11f-81f4-49b2-8394-fefb02b0fe22",
        "cursor": {
          "ref": "dad3ffc8-e906-41dd-9a0a-efcbbe53e285",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c08f543d-af13-4c4f-87d4-6c84377b20e7"
        },
        "item": {
          "id": "3b7ee11f-81f4-49b2-8394-fefb02b0fe22",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b59a6099-973e-41c6-9149-764a02c003d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f47b58b-9186-4a55-9e40-ae804d6f664e",
        "cursor": {
          "ref": "ffe9439d-e129-4052-9019-f894a720e04c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "038d7f63-ef21-4e9d-8ebb-b4a674ef1e12"
        },
        "item": {
          "id": "5f47b58b-9186-4a55-9e40-ae804d6f664e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6d18cdcf-a2c7-4ad8-8da2-2614988b03fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf10408-f63f-491c-b7c6-5daf26228d3f",
        "cursor": {
          "ref": "cbc73d61-a67a-472e-b9af-6c6155835f83",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "19b27054-e2e2-4aba-a0f1-e2ab753bdbfa"
        },
        "item": {
          "id": "bcf10408-f63f-491c-b7c6-5daf26228d3f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "453ba73b-5034-495e-8d6a-9dbad779bf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f603f963-3395-4925-a4c8-086081b48ed4",
        "cursor": {
          "ref": "26fd1ae2-9e17-4568-a1e7-caf42e86df21",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "16eaf7a9-b858-48d0-8674-b9c74fe88040"
        },
        "item": {
          "id": "f603f963-3395-4925-a4c8-086081b48ed4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fc71231a-c4b6-454b-b266-f5005dc8166c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c296dbc2-0295-462b-9b88-adacb0ab5a93",
        "cursor": {
          "ref": "02bb1a58-f689-47df-a7d9-85c36893aae9",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9debcfa9-2ed5-4be8-b1eb-1eb4ad271a47"
        },
        "item": {
          "id": "c296dbc2-0295-462b-9b88-adacb0ab5a93",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7034658e-f44a-4f02-9926-6e989e7830cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a664f4-ca2a-422a-9e2d-352ea1e07602",
        "cursor": {
          "ref": "13e7b218-0419-4a62-904e-613086414b96",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a3055905-8054-4426-a649-cabe88a1e96a"
        },
        "item": {
          "id": "01a664f4-ca2a-422a-9e2d-352ea1e07602",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e33ebdd0-224d-4afe-9f3e-c953ad89e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45333a14-b1e2-4402-b8a5-f79069f7ed9e",
        "cursor": {
          "ref": "007e90c2-c7eb-468c-a6cc-297ecdb4c578",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4403ca5a-0b35-49e2-884f-33134e42a3a9"
        },
        "item": {
          "id": "45333a14-b1e2-4402-b8a5-f79069f7ed9e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "895e2efa-1a74-489b-971d-c81fda19d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2399669-aeaa-4526-b6c7-96761e19d209",
        "cursor": {
          "ref": "2fd5f493-fe6d-4d02-b1b7-90fe203bb0ba",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "14156b76-a670-460e-86fa-8647889a47bb"
        },
        "item": {
          "id": "c2399669-aeaa-4526-b6c7-96761e19d209",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01192ff8-127a-4a26-b4bd-321262fa551b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc9d030-76b4-4d68-bb3d-db8ff607cad2",
        "cursor": {
          "ref": "1cbfc47d-6de6-4f22-a1d2-5d3d78293cad",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "49b1fc39-3906-4566-ab47-8ce76b8223d7"
        },
        "item": {
          "id": "8cc9d030-76b4-4d68-bb3d-db8ff607cad2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "10ff781f-5a47-4630-9e0b-fe76267119e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0a57c-f8a1-4610-b246-374e21cb6486",
        "cursor": {
          "ref": "cf156a19-e772-4689-ae4c-91238c2af146",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1544a3ce-629e-40bf-8666-78ed70177867"
        },
        "item": {
          "id": "94c0a57c-f8a1-4610-b246-374e21cb6486",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c6fb30a2-370e-42d5-9c3e-b610c75d35d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7790acf4-c5f6-4bc3-ba28-edcaaa5f009b",
        "cursor": {
          "ref": "58332037-7c71-4700-b9a9-29092b9b012a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c08101ec-05b2-47a6-9525-ddba7a02fae2"
        },
        "item": {
          "id": "7790acf4-c5f6-4bc3-ba28-edcaaa5f009b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4d81e287-ee99-4f06-9d03-8e007c5d5525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e50cec0-1470-4108-88bc-ca68e1dfd56f",
        "cursor": {
          "ref": "ac6a515c-1721-48c5-9ecf-9334fdc1268f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d957947a-153a-4ed3-83f8-be28cb6798c5"
        },
        "item": {
          "id": "2e50cec0-1470-4108-88bc-ca68e1dfd56f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d6a91c52-3438-454e-90f5-b54ee6fc700e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60090080-b97a-4e57-913d-82d17a9c451b",
        "cursor": {
          "ref": "a600323d-7b5b-40fe-9036-c9364a1caf83",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f392c4b8-a700-462a-85d4-6921ff3c8c99"
        },
        "item": {
          "id": "60090080-b97a-4e57-913d-82d17a9c451b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "25eeb304-89ff-461a-a2fe-39f546ba0c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b72487-9428-45ac-947a-0b8b25235f68",
        "cursor": {
          "ref": "8330b548-e1a1-4e3a-b4f0-686ba6d23af9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae61ba9f-9ba2-4de3-91ad-5ad73721da7d"
        },
        "item": {
          "id": "c6b72487-9428-45ac-947a-0b8b25235f68",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7eb85119-9cc6-4ec7-a363-26c4a69cccb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca5569a-2faf-411e-8ca2-d274bb2346c4",
        "cursor": {
          "ref": "739db0b8-89c7-4e68-9635-c752ec1a907b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6ce1002-8f4f-4809-a8f5-0e1d2bb7d2b4"
        },
        "item": {
          "id": "cca5569a-2faf-411e-8ca2-d274bb2346c4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f6d3197d-83b8-4a4a-a9a8-c07c09571071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a542330-891c-4672-8050-b2445114e0ac",
        "cursor": {
          "ref": "62d53640-451e-4c62-a3bc-d0ecff69a1f1",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c4b91dd6-8533-426a-be6e-8d2f3fedeb06"
        },
        "item": {
          "id": "3a542330-891c-4672-8050-b2445114e0ac",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "db8c0571-c8b9-4e72-8185-8f636ebb8b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aef6e67-2136-4b92-8368-e33802dd7829",
        "cursor": {
          "ref": "0d371463-4247-4003-baf8-175f5eca4831",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b1a00165-6bcf-4a19-aa53-010c19df06d1"
        },
        "item": {
          "id": "5aef6e67-2136-4b92-8368-e33802dd7829",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1dc3ace0-669a-41dd-9b2b-757b39007a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37001cea-9963-43ac-9f0b-a593efc0cac1",
        "cursor": {
          "ref": "e8844c65-34c0-4c2c-940c-9ce34d4b80b9",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "059547a0-07e8-414e-931c-c37effe1838a"
        },
        "item": {
          "id": "37001cea-9963-43ac-9f0b-a593efc0cac1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fc3830e2-17a1-424b-a523-8e0c49408cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b32610-d13c-44aa-b503-6b45721ec358",
        "cursor": {
          "ref": "a542cf9f-afde-4ac1-a9de-183af252df94",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "42c886e1-02f0-41a2-bb98-8c21f18911aa"
        },
        "item": {
          "id": "77b32610-d13c-44aa-b503-6b45721ec358",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ffd42bb3-f81b-432a-b7d1-817b2cc936b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb582b6-6de6-4c13-bcac-922c14c37448",
        "cursor": {
          "ref": "2e90f729-59cc-44ba-9b81-fb3d9475bbe3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6145bcb4-3273-49ea-95c3-247a474f5209"
        },
        "item": {
          "id": "1cb582b6-6de6-4c13-bcac-922c14c37448",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "17e0f3fe-87a3-4539-b187-d4242850de30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae74a2e-5d3c-402b-9461-e0a7c64e0b7d",
        "cursor": {
          "ref": "40d6815c-2b55-44af-b72a-a2bd99e1f118",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1ce2c5fa-38a7-4bd5-a9bd-b551ec6f8724"
        },
        "item": {
          "id": "2ae74a2e-5d3c-402b-9461-e0a7c64e0b7d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2e76f2d8-42e1-4e00-ab0f-ba3b374512d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a986f1a-3008-4319-82b9-e561020ffaaa",
        "cursor": {
          "ref": "34a2b8b0-2843-4980-b3f1-ce4f599bcba6",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da71d0ed-08ef-452b-83ab-b76844c60b55"
        },
        "item": {
          "id": "8a986f1a-3008-4319-82b9-e561020ffaaa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a2f805bd-bcc5-40b9-9068-f240d2fa4c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0a6118-1290-4b0f-b460-aca7287b5edb",
        "cursor": {
          "ref": "4ffd086a-c773-4fb2-8698-2d22666708b1",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e95b0698-a7e1-47f1-bf8f-411b8ad98386"
        },
        "item": {
          "id": "8b0a6118-1290-4b0f-b460-aca7287b5edb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b08d7a2b-5cc4-4bf9-80af-63f20d10e3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f153c372-5116-4c2a-8632-9a27306bf650",
        "cursor": {
          "ref": "81a007c3-bf4e-4d41-bd4f-ae18e354ab09",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a36eb3f9-f29e-4bb5-91db-f106c7966f98"
        },
        "item": {
          "id": "f153c372-5116-4c2a-8632-9a27306bf650",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4ed76ce1-a981-42bd-bf10-4cf110cda6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebbd482-11c8-49a7-bd82-e56d84efd2be",
        "cursor": {
          "ref": "8416cc9b-a399-4795-b739-281dfc3afcbc",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2beda368-1845-4b53-badc-c9da6ce24f62"
        },
        "item": {
          "id": "6ebbd482-11c8-49a7-bd82-e56d84efd2be",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "471c5a87-14d7-4ab3-8b46-a603b36dac78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc75e202-8329-4340-b620-a50bd58ec034",
        "cursor": {
          "ref": "a2d1afa4-50d8-4fc9-9943-3bce15478387",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a9938327-2ee7-4c21-999d-de7ad77bf61a"
        },
        "item": {
          "id": "bc75e202-8329-4340-b620-a50bd58ec034",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e448cde5-5af8-4316-ad41-37ceb0d6e03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8a36d2-c5d3-4b50-a04e-1341e208437c",
        "cursor": {
          "ref": "f1c423ab-7826-42dc-b6d0-976689dac636",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "63b4f928-2b6e-4fef-9d18-6776fa35ae2f"
        },
        "item": {
          "id": "ed8a36d2-c5d3-4b50-a04e-1341e208437c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "596cd5f2-efe7-4954-b8d4-08170f250172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be8080e-8ec7-4d83-8b2f-5b474c818ea4",
        "cursor": {
          "ref": "5d37dc76-da1f-425e-a890-9372d5672b31",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ae042bfd-81fe-477d-960f-0a0ac245ee7b"
        },
        "item": {
          "id": "6be8080e-8ec7-4d83-8b2f-5b474c818ea4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29e3671f-b9a6-4d2a-80bf-184117c61857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1f3d94-4e87-4320-9327-22e831a42e5f",
        "cursor": {
          "ref": "76992c36-bc74-41f7-96b4-b51c9bccd01d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9c74dbc9-6383-40c1-b0f5-a3a3ba36de98"
        },
        "item": {
          "id": "1b1f3d94-4e87-4320-9327-22e831a42e5f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "89bdd3e0-9069-4045-b419-1c795a6f4ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2b9a85-f44e-4a9d-b8ef-17c35e05d82e",
        "cursor": {
          "ref": "7467335b-293e-4003-98db-525f4c3ff2da",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "40c3fd72-e2cf-4099-9fc8-272d478017e6"
        },
        "item": {
          "id": "9f2b9a85-f44e-4a9d-b8ef-17c35e05d82e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c90c9a2-9a72-4b3f-a17a-8e50c2a85bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91e313d-da2b-4d85-a607-842e604463da",
        "cursor": {
          "ref": "8c89a025-1521-493d-af50-ba5d8a5dfcd2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "63b7a079-d2be-4aa4-9465-66dda20b95f0"
        },
        "item": {
          "id": "c91e313d-da2b-4d85-a607-842e604463da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c33a19ca-7ed0-4e4a-a990-454545ab6cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccba805-a061-408e-ab0e-1353943c4327",
        "cursor": {
          "ref": "39cf7208-8c74-48c7-85c1-cd549a9db664",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aaf0cd59-a1ab-4219-8a76-4e6ef3e49468"
        },
        "item": {
          "id": "dccba805-a061-408e-ab0e-1353943c4327",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "98e4e42f-369c-4ce8-a24a-e372ef266bf5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1973793-bf65-41cb-9e7b-0b9429408736",
        "cursor": {
          "ref": "1c2cdf2a-7d53-45b9-9935-ccd4ccafdfed",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "016b03a9-4a7e-4419-81a3-d43b09445a91"
        },
        "item": {
          "id": "c1973793-bf65-41cb-9e7b-0b9429408736",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5a70b640-1b5e-43ba-8667-b23c636ceba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75192fb-9a19-4880-ac14-d3ef27ef0e22",
        "cursor": {
          "ref": "3b5c2152-602c-4581-8668-3902d1f2a871",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "80309e54-d31f-4dc5-8f2a-cc169701183f"
        },
        "item": {
          "id": "f75192fb-9a19-4880-ac14-d3ef27ef0e22",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "69a5d20a-c8d3-44eb-8387-ab5ada8b848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a878dee-65c9-4188-9b33-04e88bf89a8e",
        "cursor": {
          "ref": "6c8578cc-3d6e-43fd-b1cb-2af47879a616",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dec9f56f-0c7f-4b8a-a094-6f336314e525"
        },
        "item": {
          "id": "1a878dee-65c9-4188-9b33-04e88bf89a8e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ba57d6f6-5d49-4be5-a453-76e68bc2aa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e99e6b-1fe4-4a59-bd95-2a7033799e9f",
        "cursor": {
          "ref": "e5d0b3c2-1163-4987-b167-e7b11d5568e0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0ddcf18f-7773-4ffa-9f87-3de14c70055f"
        },
        "item": {
          "id": "e3e99e6b-1fe4-4a59-bd95-2a7033799e9f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8dd3768e-17f6-4af0-bb18-fbcf76be409e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ec161-e887-4fea-9a22-acd4777ec277",
        "cursor": {
          "ref": "c2901d83-eb32-4d4b-9688-2f1efd168abb",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee8ed8a0-d11a-43ec-9101-61a9f9465386"
        },
        "item": {
          "id": "538ec161-e887-4fea-9a22-acd4777ec277",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5010b149-d894-4146-b3d3-742df03e64ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f4ba71-b624-4f70-867a-99a490349f15",
        "cursor": {
          "ref": "595bf48d-9842-491e-8451-67016fe7cb5d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "85d64b64-4a56-4a1b-b779-ad54276cd18e"
        },
        "item": {
          "id": "47f4ba71-b624-4f70-867a-99a490349f15",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "77201efb-016e-4199-bab7-7d6a9a620040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aed08ec-035d-4d4c-bb81-e3d089f9351b",
        "cursor": {
          "ref": "592d19dc-b530-47ef-a9dd-e0b8b9c23d61",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aabf32da-ec7a-4540-80d7-3ab7e3c55917"
        },
        "item": {
          "id": "1aed08ec-035d-4d4c-bb81-e3d089f9351b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8d75ee58-6399-4f72-9922-668679c8fc8f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ea72f-210b-4d51-9e05-e9aa9506d02b",
        "cursor": {
          "ref": "ec24a001-13e0-4893-ac33-a8fd878a4d7a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "547b4859-728c-4c7f-a897-3aed68594839"
        },
        "item": {
          "id": "e21ea72f-210b-4d51-9e05-e9aa9506d02b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "456a1d6b-47ee-4954-b329-1ade163513ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e1cc18-edd6-41b7-823c-02528afd214e",
        "cursor": {
          "ref": "27e02383-de30-4d0e-aad1-c15185816ee3",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e76030cd-a4db-4c2f-bd93-c90e81116b6a"
        },
        "item": {
          "id": "93e1cc18-edd6-41b7-823c-02528afd214e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1a6b1517-2530-4e0f-a902-6c5e71a93c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2ae1a6-476b-41af-9bb9-d0081f8e74ff",
        "cursor": {
          "ref": "1e3e833c-a17e-4516-a858-dda165f2392a",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "543d93fa-71f1-4b83-8ae8-2b9c817756c4"
        },
        "item": {
          "id": "0e2ae1a6-476b-41af-9bb9-d0081f8e74ff",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "41c8a21c-b8f1-4b51-a91b-173df6efd01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a307ee38-04e9-413d-831b-c76acda41222",
        "cursor": {
          "ref": "b2bcbc8d-f4dd-49bc-a5a8-1f97c0dd6ce7",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "43971065-ff60-488f-879e-7fc8011d970e"
        },
        "item": {
          "id": "a307ee38-04e9-413d-831b-c76acda41222",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cab07471-2000-480f-a312-b50ca22c3e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a74e82-fa04-4dee-b851-fa2012b268c1",
        "cursor": {
          "ref": "bb66846a-e9c0-4fe7-88a2-280ebce9e288",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c635afea-23d5-4018-a951-d636cc31df87"
        },
        "item": {
          "id": "b6a74e82-fa04-4dee-b851-fa2012b268c1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b898d125-d91c-4387-85df-d0da5b42d859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa46fe88-4d71-4423-9471-6756a98f3702",
        "cursor": {
          "ref": "787f5958-9fc7-4772-9af9-7b2817312994",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "11a6ee68-8759-47dd-9f9f-3feac9f9cd1f"
        },
        "item": {
          "id": "fa46fe88-4d71-4423-9471-6756a98f3702",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6939bbfe-9de8-4f01-a4c7-2ae9c5f235f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd878cb8-555b-4b05-a34f-49f976540564",
        "cursor": {
          "ref": "a5c1e04b-2787-476e-8d44-d9f576b5ce74",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "628022d5-6115-4639-9698-7740ece6052d"
        },
        "item": {
          "id": "fd878cb8-555b-4b05-a34f-49f976540564",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2ae2cc8e-6d19-4afd-aefa-69b4749517ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9739e1c5-e1aa-4fb7-8757-0a44f3b4d9ed",
        "cursor": {
          "ref": "754303e7-d5ed-44e6-9bc5-7e96e912af1b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "456ff4c6-b0d0-440e-879b-50f09511bfcd"
        },
        "item": {
          "id": "9739e1c5-e1aa-4fb7-8757-0a44f3b4d9ed",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "03549f92-d8ee-4a3b-805c-fdbef6267350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18987bc-0625-46cf-a1c6-68d79fa774e5",
        "cursor": {
          "ref": "509d98e3-2c5d-4aef-b212-cb0b48a26e38",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dbb7d19f-c3d5-4f5c-bfe2-17e3698f787d"
        },
        "item": {
          "id": "c18987bc-0625-46cf-a1c6-68d79fa774e5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "36c877e4-2e13-461c-9843-d3b5a62d86ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ed53e-dca1-489f-ae19-84882bde408e",
        "cursor": {
          "ref": "d36a00e4-a833-4369-b9a9-cc4f7e927ff0",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "97c97c83-02ad-40ac-8c1b-71b93962a809"
        },
        "item": {
          "id": "9c7ed53e-dca1-489f-ae19-84882bde408e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e7c5bbde-7867-40a7-a1e2-2677e3749d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206227b2-ddef-4734-8951-3f7e5a356f7a",
        "cursor": {
          "ref": "b9626e48-54d4-43cd-9b54-8e562589872d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "60fbac6a-eede-4c79-9305-013598d38720"
        },
        "item": {
          "id": "206227b2-ddef-4734-8951-3f7e5a356f7a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8be0d189-5508-48a6-b56e-08968c730173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca06cdff-a471-40b6-ab3e-df76a6a39813",
        "cursor": {
          "ref": "6698d5b6-1e6b-49b6-aa15-044330e39e4b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed008695-852a-457f-8a1e-46874fce0001"
        },
        "item": {
          "id": "ca06cdff-a471-40b6-ab3e-df76a6a39813",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4812aaf2-1551-4173-b06c-c8667a2f75bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e802f782-ed0e-4da0-a36a-fce430f3a1df",
        "cursor": {
          "ref": "be4f3005-2304-4cc3-af3d-e02401e86f36",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "16d27ae2-00c2-4f09-8209-a24cddce4d46"
        },
        "item": {
          "id": "e802f782-ed0e-4da0-a36a-fce430f3a1df",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8c393eea-4ee8-4c3a-9a1a-50540162fa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107d85da-bbe9-4f00-b321-3a1d4fb51d2c",
        "cursor": {
          "ref": "83c9dd9a-9460-467f-a9a5-39f825c798b1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "663abfc6-1dc0-4468-8b77-dfc86b00b3b1"
        },
        "item": {
          "id": "107d85da-bbe9-4f00-b321-3a1d4fb51d2c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0d009ca8-b21d-446c-9129-0f3eeddc33b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316f5960-9126-475c-9181-438c92e4f7fa",
        "cursor": {
          "ref": "44bc9ca0-1063-4398-aeb1-f677a4cce503",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "876094e5-74d9-45ab-a234-9e26a57d3e54"
        },
        "item": {
          "id": "316f5960-9126-475c-9181-438c92e4f7fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3c3d21a3-d252-4b6b-a522-5b4883a1065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86623cc6-ce24-4eeb-a8a1-90ba073211b1",
        "cursor": {
          "ref": "b2ef83c9-8528-423c-949e-5673395df549",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cb46e292-83ef-4418-97f0-981af996f2e0"
        },
        "item": {
          "id": "86623cc6-ce24-4eeb-a8a1-90ba073211b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8d70501c-6053-42ae-91a9-83dd0a874324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde7ea9f-aeda-45aa-9315-dfb86275caad",
        "cursor": {
          "ref": "d37e1ed8-4666-463d-bfc7-a737c10d28aa",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "262f5e5c-f569-4990-9aaa-a47ce7dae012"
        },
        "item": {
          "id": "cde7ea9f-aeda-45aa-9315-dfb86275caad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0cbe7ccb-f4f8-4692-9ee5-ee4b2d22e8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed51ea5d-61a1-4026-ab4c-85ada03df482",
        "cursor": {
          "ref": "569e936e-242b-44da-b0c7-eb288c6dfecb",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5985a3b9-3af0-482d-a7bd-a84023bbed4a"
        },
        "item": {
          "id": "ed51ea5d-61a1-4026-ab4c-85ada03df482",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e3b3f238-8e6a-47b6-b984-5b7936b878a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7d3b1a-2d4c-4ba8-ac87-9b2406bc9aa2",
        "cursor": {
          "ref": "4bc82fb0-d9f7-43d7-a860-0c1fefb9565e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "058a3272-22b5-495a-a75f-0193de29d74d"
        },
        "item": {
          "id": "3b7d3b1a-2d4c-4ba8-ac87-9b2406bc9aa2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "62873144-6c65-4c2c-a076-3d7a6aec720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4028b64a-b91e-4dc7-a122-26bdb9d23be3",
        "cursor": {
          "ref": "a5c6aeb6-e4a7-400b-94c5-36536ad20057",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b4a33fc9-490f-4fc4-abb8-362bf66e4c7e"
        },
        "item": {
          "id": "4028b64a-b91e-4dc7-a122-26bdb9d23be3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae291bad-bdd3-4120-a576-10605fbee91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159fc2a-54f3-45f1-b996-96d62508e276",
        "cursor": {
          "ref": "f96dd359-3058-44d1-b47d-2d4cbdf3662d",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c2315152-bb39-4ef1-b374-e20353f1c928"
        },
        "item": {
          "id": "8159fc2a-54f3-45f1-b996-96d62508e276",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dd4dd192-9a11-440d-a34f-848dc9414707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e5dc49-c041-40f5-879e-93d237c0c9ce",
        "cursor": {
          "ref": "9bfcdaaa-6fb4-4dc7-aaad-8bf3061a273c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eda391e6-c8f4-4a05-90b1-559a7c53eb71"
        },
        "item": {
          "id": "29e5dc49-c041-40f5-879e-93d237c0c9ce",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b7dfb41-b55b-4543-811e-0cfe7555c008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907da437-2577-4298-a7a9-8067e6a2c860",
        "cursor": {
          "ref": "a60737bb-25d0-4a95-9585-695dfe0e8eed",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7cce91dd-7991-4167-81bc-bdec64793dab"
        },
        "item": {
          "id": "907da437-2577-4298-a7a9-8067e6a2c860",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d163e818-cc0e-465e-9e57-012c97f6aa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e40604-f937-4741-9abe-d35bda7bff5b",
        "cursor": {
          "ref": "11f2cb1c-840d-415a-baa4-fa156f887589",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d88479a9-6486-4f07-9813-f466ff698343"
        },
        "item": {
          "id": "31e40604-f937-4741-9abe-d35bda7bff5b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2925388f-1fdf-4db0-9db3-1f5995c0ce47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc6d2a3-0a48-4bdd-96aa-b5335a90bf0e",
        "cursor": {
          "ref": "a44fe5de-0fa4-454e-b9ea-0256bcb7568b",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "932bc570-bd8e-4df2-9a35-0046d0bc6e0a"
        },
        "item": {
          "id": "7fc6d2a3-0a48-4bdd-96aa-b5335a90bf0e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "83d8b653-77c4-474c-9bdc-af045dc8f152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b0883-db1f-4e89-95d9-2777c865ee3a",
        "cursor": {
          "ref": "c7b9708e-d1e1-4125-bffa-0f103af00e29",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dcd6f5ca-3db5-4290-890b-d9929fac973b"
        },
        "item": {
          "id": "208b0883-db1f-4e89-95d9-2777c865ee3a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f09cf87-8025-485f-b238-707e66ed2c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2974fb-408b-471e-b482-47c48014c549",
        "cursor": {
          "ref": "5c9165e1-b38b-468a-8225-eed39f9fa238",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8cf5ee1f-6154-4ac7-9496-a838e34d9c73"
        },
        "item": {
          "id": "fc2974fb-408b-471e-b482-47c48014c549",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9963c5e4-3b37-4008-9391-2cd727b3857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6f2970-cb4d-48f8-93a1-b0b8cc8da780",
        "cursor": {
          "ref": "2177dc7c-6856-4727-846e-9ce386f629cc",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "13144012-1cad-475e-a5d0-1947b251f13a"
        },
        "item": {
          "id": "1a6f2970-cb4d-48f8-93a1-b0b8cc8da780",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cb08990-a7a5-4851-bc8e-fbd57baf14af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce5d50d-30ff-49cf-a7ed-842bdc216b19",
        "cursor": {
          "ref": "2004ad0e-1d02-45c2-8850-7177680a8a88",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41f3303a-32b9-4d1f-a966-01375cff9b73"
        },
        "item": {
          "id": "fce5d50d-30ff-49cf-a7ed-842bdc216b19",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9a33f770-b3d6-4753-ba67-72d4582530f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e98b98b-83d5-49bd-99f1-4d5fde50aa2a",
        "cursor": {
          "ref": "0d26430c-581a-4614-b551-41d7179184d1",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc7e46e2-1dd4-472c-9706-c39f36e133d3"
        },
        "item": {
          "id": "5e98b98b-83d5-49bd-99f1-4d5fde50aa2a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "386d284d-a227-4089-9d83-7d690078406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a6bb3c-e1f3-4519-a4ad-3964c7ce57d3",
        "cursor": {
          "ref": "aad9f2e2-fc85-4dde-9f9c-5fbd561870a5",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8f5b4d6a-8a20-499c-b069-4741bb94b4de"
        },
        "item": {
          "id": "61a6bb3c-e1f3-4519-a4ad-3964c7ce57d3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "42ba2937-d50f-4945-9503-e3b48f0fc44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384d6db8-23b7-417a-b452-4bab2d48c9d3",
        "cursor": {
          "ref": "2cf93028-47c5-4c92-9f3f-28bec7f35ee3",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9f2a3c8c-c74e-4bb9-b7cb-33fdbc465d1d"
        },
        "item": {
          "id": "384d6db8-23b7-417a-b452-4bab2d48c9d3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d50f14bb-72df-4a79-b107-b8aec0d97e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296bcd9e-2a8d-4522-b208-4e7954615a09",
        "cursor": {
          "ref": "b4221163-0b7c-47a5-a5bb-49aad0c06524",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b67a4aa7-6d70-4b9a-8107-aa7b2b364a0e"
        },
        "item": {
          "id": "296bcd9e-2a8d-4522-b208-4e7954615a09",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f9e548c2-a211-465f-94bd-c26ed82c65f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc63dd2-4107-4193-aa76-89e339056125",
        "cursor": {
          "ref": "a60d08c3-d929-4acd-9249-a2f428006693",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1b3e6330-dfd4-4acc-b000-fb341e231cad"
        },
        "item": {
          "id": "7dc63dd2-4107-4193-aa76-89e339056125",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "05f44ddc-c824-4ed5-b404-e227bf419058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d49c146-35f6-4b87-b506-a86aaf86ebdd",
        "cursor": {
          "ref": "328e1115-01e0-4683-9740-7f0385d0f939",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3195720a-2c3c-4313-ba73-3e36d3c014c4"
        },
        "item": {
          "id": "5d49c146-35f6-4b87-b506-a86aaf86ebdd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b648321f-0966-47bf-ae05-bfd49f7097ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04f845c-2e8c-47a4-a0f6-05c2ac60c98d",
        "cursor": {
          "ref": "0e14cd23-939b-4a1c-b181-802387911472",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "87226d0e-fd70-43e4-8889-d514f3e347b6"
        },
        "item": {
          "id": "e04f845c-2e8c-47a4-a0f6-05c2ac60c98d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e6f6817c-0c5b-456a-8569-50a2deea91fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab9112f-07d0-42fc-b362-b476bfa65f9a",
        "cursor": {
          "ref": "7bd9df59-b6f8-4eab-bc3e-ee39544e3207",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "00fab4f3-039c-4cdf-a1e9-9691216c25a8"
        },
        "item": {
          "id": "2ab9112f-07d0-42fc-b362-b476bfa65f9a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c474ea8c-f202-4731-8458-8cd710f54725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f73d5b8-0780-4be9-8e74-e9be5c2ac431",
        "cursor": {
          "ref": "804e8218-77fc-46b3-aee8-35b25106ff32",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb1cf287-dbc0-4d68-964b-e4b6ba3b0c6f"
        },
        "item": {
          "id": "2f73d5b8-0780-4be9-8e74-e9be5c2ac431",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e775073e-0340-4ad8-9619-43c8645f08f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfa9d70-d289-402f-916c-d796d51e3499",
        "cursor": {
          "ref": "6f7da191-09d6-4b78-b7fb-2b849c6ae2ea",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e75d892d-9314-4dbb-b9e4-3c57743325af"
        },
        "item": {
          "id": "4cfa9d70-d289-402f-916c-d796d51e3499",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60f40972-65a5-4309-b837-ce22b298c72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f3de15-5f87-40b3-9eb8-6a78ec4da664",
        "cursor": {
          "ref": "ce277b95-0816-45dc-a60a-aab3b195bd32",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b08c1b49-d1a3-4dac-8831-daaf59c5b172"
        },
        "item": {
          "id": "a4f3de15-5f87-40b3-9eb8-6a78ec4da664",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "65a9a4f2-fd0b-4a5e-a2e3-caa8ba69f012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fce0433-0b94-4335-92d1-d3eb690886cd",
        "cursor": {
          "ref": "d4fa025b-c305-470d-b67a-25dbf6b21b2d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3a34415f-1d80-4fde-8426-092201ff5c62"
        },
        "item": {
          "id": "1fce0433-0b94-4335-92d1-d3eb690886cd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6149a58f-5e67-4789-a984-986220df5665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4727b67-6ef0-413a-9545-b6da573070c3",
        "cursor": {
          "ref": "45afe20d-ba86-46cd-96b1-d67acbe08a08",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b4c02261-c4ba-4f46-a39c-f11e46bbde7f"
        },
        "item": {
          "id": "d4727b67-6ef0-413a-9545-b6da573070c3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d2c23017-cb9f-40fd-b391-88c30d5c785c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4c049c-1992-4a6f-826c-36b1ac6e6ad5",
        "cursor": {
          "ref": "676f7348-8c34-45da-93c9-cb74d3e683fe",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9a3354b0-6bed-49ab-a912-782e616f0963"
        },
        "item": {
          "id": "cf4c049c-1992-4a6f-826c-36b1ac6e6ad5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "54a01e48-7903-455d-b80a-d42d7de6dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71370e4d-3848-4934-9cd7-da645020cab9",
        "cursor": {
          "ref": "8bd73630-c67f-4ee9-8c73-47b370df232e",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "776410dc-a5ed-4358-9f4b-e3747b2b7901"
        },
        "item": {
          "id": "71370e4d-3848-4934-9cd7-da645020cab9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b06ed672-2726-428e-a4d1-205c464d6a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c43aee-b1c2-4d95-9f6d-87f66b63d408",
        "cursor": {
          "ref": "d7591c80-2395-43af-a1d9-6dff38afa100",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0ab97d46-4b63-4ee1-b483-17d9b329d09e"
        },
        "item": {
          "id": "e2c43aee-b1c2-4d95-9f6d-87f66b63d408",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5f3160ae-30ff-4796-91c1-995204f3b3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce51a56-2849-48ca-a041-44b4c8aee50b",
        "cursor": {
          "ref": "c83cba8c-13c0-483e-8ff1-9dcf4ed2b983",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "81eb58d7-478c-4d15-8291-0ada8342c0bf"
        },
        "item": {
          "id": "bce51a56-2849-48ca-a041-44b4c8aee50b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f158384d-93a0-42eb-b2b0-80d95096b9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea72ff0-8ef3-4cb4-9c3c-b124c4a46e31",
        "cursor": {
          "ref": "d0311a71-4956-4a95-9f4c-7281e8d6d465",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d440891b-11db-48ee-b030-c07ac4278a28"
        },
        "item": {
          "id": "eea72ff0-8ef3-4cb4-9c3c-b124c4a46e31",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "58334d36-54be-4ebd-9cc5-951b27d0239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc60769-e64f-4605-925a-0f0b3277245d",
        "cursor": {
          "ref": "9abafb36-9422-414f-b1b5-88828bf9b5e3",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0750f10f-e7cf-4faf-83e5-9b91d95a3bef"
        },
        "item": {
          "id": "4cc60769-e64f-4605-925a-0f0b3277245d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "656dd2bc-9ece-4d2c-b280-394e0fd36a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5702057-6205-477b-9ea1-e56c795e4b9c",
        "cursor": {
          "ref": "695030c3-c087-43e9-b525-8a26d5b4f0ea",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aa0ee599-50d7-4f19-858a-ecb74c8ffa9f"
        },
        "item": {
          "id": "b5702057-6205-477b-9ea1-e56c795e4b9c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "262ff2ae-29de-4bd5-9305-7e47fd38b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564054e6-a88d-4f09-acc6-e986c631dcbc",
        "cursor": {
          "ref": "2fa8605d-2ebc-47a9-aff5-1a9bd26ba951",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "68815926-15a7-4c02-aebc-db33440ef9f1"
        },
        "item": {
          "id": "564054e6-a88d-4f09-acc6-e986c631dcbc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4edae239-8a82-4f3f-bd76-fe34dcff2f3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8cf62f-ee26-4a69-85e9-a2d166f380bb",
        "cursor": {
          "ref": "b276abfb-d941-4942-98a8-10e4d64e3860",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f24d032d-3b1a-4eed-9c99-7050db989a7a"
        },
        "item": {
          "id": "7f8cf62f-ee26-4a69-85e9-a2d166f380bb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1a2f4554-d5c5-4db7-9f5e-f5d193d01cf5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddea113-0826-440a-8cba-a897d862e9a8",
        "cursor": {
          "ref": "06863a53-a2a0-4d61-acc3-c9050649509b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f353449-f7ad-4499-9475-3b04d436c232"
        },
        "item": {
          "id": "6ddea113-0826-440a-8cba-a897d862e9a8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "93f8c272-b88c-43d7-9194-9dcc9aa9f991",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4256c4d3-8d23-40c1-b13e-3562e81ef1b9",
        "cursor": {
          "ref": "39fbae2a-d911-4a4c-8989-066c20a041d0",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cf5e429d-4a1c-4d47-bc5b-b7383e717f39"
        },
        "item": {
          "id": "4256c4d3-8d23-40c1-b13e-3562e81ef1b9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2e32bccf-849e-4c70-b493-187082e81570",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "927567ff-bc7e-4ef7-9172-044cc55e096c",
        "cursor": {
          "ref": "5c24c165-c769-4e63-8e96-f79f49d08be6",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "151df878-ba44-4571-8484-d408b07e3272"
        },
        "item": {
          "id": "927567ff-bc7e-4ef7-9172-044cc55e096c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a595d264-ef0a-4285-84d3-c7a0097d3adf",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c4a6e0-5c3c-4483-8f2c-78456f7594fa",
        "cursor": {
          "ref": "9e4b164c-3600-4ea8-865b-d31756de0b28",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d751a3e1-6ec3-4bba-a4d4-038a59a83f2b"
        },
        "item": {
          "id": "36c4a6e0-5c3c-4483-8f2c-78456f7594fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9539a143-25e7-405d-b274-81a59e47f505",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e2aa7-3927-4f0d-b203-f7cc867acff6",
        "cursor": {
          "ref": "78ccd28a-41b6-4c8b-875c-d83912ca6904",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "790f73e1-93cf-42da-8e39-f69513d3749d"
        },
        "item": {
          "id": "e52e2aa7-3927-4f0d-b203-f7cc867acff6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1416b151-3be4-4935-9295-ca84e7142bd9",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "34051d8f-b8ae-45b4-85e6-7397bea79bb9",
        "cursor": {
          "ref": "53ec94f9-c237-4219-b57e-7b5e23cb58e4",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4b6a6051-d04c-48ef-bd49-8df5e7a67039"
        },
        "item": {
          "id": "34051d8f-b8ae-45b4-85e6-7397bea79bb9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "504789b2-6790-4d4e-b7ff-04d3be347fee",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ef6ba5-6dae-4528-ae95-077281e2e5f2",
        "cursor": {
          "ref": "de55000f-b504-4d2e-8d9b-1ff173286f81",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b06de7d8-e3a4-4a8e-9511-0dce701e4019"
        },
        "item": {
          "id": "c3ef6ba5-6dae-4528-ae95-077281e2e5f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29f1582a-897e-4022-95c8-1e60593cb5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ef6ba5-6dae-4528-ae95-077281e2e5f2",
        "cursor": {
          "ref": "de55000f-b504-4d2e-8d9b-1ff173286f81",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b06de7d8-e3a4-4a8e-9511-0dce701e4019"
        },
        "item": {
          "id": "c3ef6ba5-6dae-4528-ae95-077281e2e5f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29f1582a-897e-4022-95c8-1e60593cb5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da76ceb-8153-4874-9634-14be351921c4",
        "cursor": {
          "ref": "3bc99e6a-326e-46d3-ad79-33de073ced67",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f216497e-398b-470a-8633-ff2ab15e794f"
        },
        "item": {
          "id": "6da76ceb-8153-4874-9634-14be351921c4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "21987aa9-324d-42ea-ae66-19e02e7812c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94774144-0848-4f9a-8dc4-797110cea538",
        "cursor": {
          "ref": "7767bd89-0a0a-403f-a9d5-e416e09846fa",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b0822d93-2179-4620-9265-c5d9abe9baac"
        },
        "item": {
          "id": "94774144-0848-4f9a-8dc4-797110cea538",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ffe295b-413b-4c40-b0aa-f1c569d81068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29db637-d772-4c2d-a320-585ecaac3db1",
        "cursor": {
          "ref": "c5bc6e84-8404-435d-88d8-bebb811cf0c0",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d3de002d-54f5-49e4-b2e0-392f7c250f15"
        },
        "item": {
          "id": "d29db637-d772-4c2d-a320-585ecaac3db1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "93549a97-6625-4d33-9589-16135c084a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fdd8ac-b40f-4dc4-b7e9-978a1d0790ed",
        "cursor": {
          "ref": "633ef4da-fe63-4424-88bf-d1c9fa8f0928",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0cba9b7c-8f5c-4d84-a3b3-caf3fc3582e4"
        },
        "item": {
          "id": "42fdd8ac-b40f-4dc4-b7e9-978a1d0790ed",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8922dda7-9de3-422e-b06a-132d45754fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1890073-5a04-4703-9650-da7aa00b4a5c",
        "cursor": {
          "ref": "956c69ef-4b01-43de-866f-a81ac13e0d79",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f9074c78-826d-47e9-a353-66c865e4d692"
        },
        "item": {
          "id": "e1890073-5a04-4703-9650-da7aa00b4a5c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "148d0539-927d-48d4-a49c-a0f42d519b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a3026a-faee-44e8-9fac-d24e2f0c5783",
        "cursor": {
          "ref": "599812ea-296a-4e70-a5f7-a70de657203d",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b95dfa1f-b165-4544-8dcf-595ab12f8fad"
        },
        "item": {
          "id": "f7a3026a-faee-44e8-9fac-d24e2f0c5783",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "05424d08-75bc-4171-bf13-b242c40465ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c629d8-7929-4aaa-90a0-95fa8b462177",
        "cursor": {
          "ref": "f05fb97f-65cd-4bad-b475-d5895626f059",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "30ad6ce1-dd57-48f8-810e-89a8fa304bcf"
        },
        "item": {
          "id": "19c629d8-7929-4aaa-90a0-95fa8b462177",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5aba69b0-177d-4c2e-83b4-28d579aac428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43eaab6a-dcc5-4c00-868a-f5ef1e2e239e",
        "cursor": {
          "ref": "8995f759-0355-4a5a-82ce-472cf9cf1108",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "586320a7-3dc1-4d63-b991-16ce39b1c537"
        },
        "item": {
          "id": "43eaab6a-dcc5-4c00-868a-f5ef1e2e239e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f4b535d7-b0ad-4c24-9745-126820360520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d66ab39-fd30-4824-ba65-52fba6b736b1",
        "cursor": {
          "ref": "82d3f1b3-733d-4047-aaff-16addead4e8c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2490d892-4b39-4d9a-b743-6490fd2f58aa"
        },
        "item": {
          "id": "6d66ab39-fd30-4824-ba65-52fba6b736b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a18d919b-d97c-4a5e-8dd7-62963eadfda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93575891-f9c8-441e-ac36-cc2ee678fb9d",
        "cursor": {
          "ref": "fe7c84f4-448f-4c09-874b-4485a7327790",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ff84dff7-0e05-4661-9bc4-307ec32b8714"
        },
        "item": {
          "id": "93575891-f9c8-441e-ac36-cc2ee678fb9d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c4d1ed24-d78d-4134-9110-4c1a4a0a0929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e191bad-986f-459c-9b85-0ee9b6eeb41e",
        "cursor": {
          "ref": "9178fd49-d403-4170-af8f-6a6927a7e53c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e3e96bd0-8f56-44d9-9e21-0bb372b38bd8"
        },
        "item": {
          "id": "2e191bad-986f-459c-9b85-0ee9b6eeb41e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "033df6cb-4a3b-4179-9d87-7fe7d5a4a11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee7229c-890f-44f8-8b79-106d004ccf4e",
        "cursor": {
          "ref": "d619c46f-562a-4299-b6ba-6f0885064734",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "30201214-396f-4905-a450-8ccb7ee8ae82"
        },
        "item": {
          "id": "2ee7229c-890f-44f8-8b79-106d004ccf4e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ecc0054-41b2-404e-b543-99e8f8ec0ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b70db7-61a0-4b32-ac74-ddea9e729036",
        "cursor": {
          "ref": "c0da07f6-6e7e-450f-963f-dae248b95dde",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5a323fa4-64be-4551-8eca-c7d950388e5f"
        },
        "item": {
          "id": "e8b70db7-61a0-4b32-ac74-ddea9e729036",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02c85c0c-473e-42ea-9527-e56bcb2187ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f36212-b205-4c8b-ad3d-8c7fa3078f0a",
        "cursor": {
          "ref": "e6e236a8-729e-45b6-9419-9befa616ef42",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c8345c5-aa5c-4bad-88fe-cd5f824643ee"
        },
        "item": {
          "id": "77f36212-b205-4c8b-ad3d-8c7fa3078f0a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45d29235-a69f-48bb-998e-893fbd3bbaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd4a0b1-419d-4f2a-bf18-a85508f1a038",
        "cursor": {
          "ref": "7b79ed4d-20ea-437d-ac89-da7d65c18fb4",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "210cadbc-9883-4d81-93e1-c03bc143ac78"
        },
        "item": {
          "id": "5dd4a0b1-419d-4f2a-bf18-a85508f1a038",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "336ac7f4-97f7-46c5-97c4-da9cc38b0677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31556672-f58c-45c7-b7e9-7264c2e384e1",
        "cursor": {
          "ref": "763bc405-9247-415f-bc68-3e0fcfa24a61",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "98809a4b-e22f-4fc9-8259-edcb1142e5ac"
        },
        "item": {
          "id": "31556672-f58c-45c7-b7e9-7264c2e384e1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1dbb1edb-0877-44f8-9212-988ab2b722b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1be8f9d-e6da-426e-8a46-c99762dcfafe",
        "cursor": {
          "ref": "cf7a61b3-bbed-4f73-b9c4-3dfb4b484fc1",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0c03feba-75cf-4d31-8111-a517de53996e"
        },
        "item": {
          "id": "a1be8f9d-e6da-426e-8a46-c99762dcfafe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d5e41d87-34f0-49c5-9122-74bb007be6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a336a76-33bf-40bf-9a3f-217ef25698ac",
        "cursor": {
          "ref": "7881301e-31bc-4c69-a3e3-63d07c3913f8",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "455c1310-26c4-4f60-8253-a12b27b99b0c"
        },
        "item": {
          "id": "8a336a76-33bf-40bf-9a3f-217ef25698ac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "48db6fa6-f51f-421d-925f-8cf81069f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60b5cfe-128b-4903-abbf-e1274d42ee98",
        "cursor": {
          "ref": "1ed6d991-4818-494d-a971-c76653195ad3",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ac6aa71e-f5fa-418a-b48b-8695b2958507"
        },
        "item": {
          "id": "e60b5cfe-128b-4903-abbf-e1274d42ee98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a98e2b36-554d-4c37-b4d7-16fec86d0f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7e71a3-8646-49b1-9e9f-da55abd8182a",
        "cursor": {
          "ref": "22a9b369-9d86-4d56-89e3-d397af3b597f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ff1679e7-14e3-4f42-8188-036161532367"
        },
        "item": {
          "id": "0b7e71a3-8646-49b1-9e9f-da55abd8182a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "91ff3a26-1873-4eab-91f5-152b85fa5e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9963231-b53b-458d-8162-e5428bc858fa",
        "cursor": {
          "ref": "68b5b615-205d-43f0-9272-f6d1d9cebda1",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "053a9e8f-fbaf-435f-9407-8af3959e2e8e"
        },
        "item": {
          "id": "d9963231-b53b-458d-8162-e5428bc858fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "89641c92-9ce4-44b5-bba7-dad380f58a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dded2ad4-5ef2-49df-8d39-02dc6e14c206",
        "cursor": {
          "ref": "8fba7750-6bd1-4f68-90d6-6ada6db0bf21",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f5795b79-02db-4ac4-acf0-0a8e8ac98201"
        },
        "item": {
          "id": "dded2ad4-5ef2-49df-8d39-02dc6e14c206",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2983b040-0dbc-4c67-b442-6df3e6fd2e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a2fb1-a069-44e0-afa5-bdfa01f7e7a2",
        "cursor": {
          "ref": "4009eeeb-9af9-431b-8d1f-83dde2255d17",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b27d8489-cc32-4032-be53-92fbd8ebb92c"
        },
        "item": {
          "id": "0c7a2fb1-a069-44e0-afa5-bdfa01f7e7a2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "02787666-538d-4bdf-a963-3a9e35d1ae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0066cfee-63e3-4028-a8a2-fed31b4c8f36",
        "cursor": {
          "ref": "bc1a262d-ead9-44fc-900f-b925a8710278",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d7592baf-cb3d-4ac1-a930-a9737795d749"
        },
        "item": {
          "id": "0066cfee-63e3-4028-a8a2-fed31b4c8f36",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "25495471-6345-4717-a2b3-e82d889b1d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16951300-2531-4015-8e3a-73d486c6ea7c",
        "cursor": {
          "ref": "4299a645-48d2-40fe-9f25-247ecf0679e8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0e7dcbf5-c6f9-4926-84b8-4f154c7d55cd"
        },
        "item": {
          "id": "16951300-2531-4015-8e3a-73d486c6ea7c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57619f7c-0710-4283-8094-3f43d0f18226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb480f3f-ea6f-4cc5-9ced-256ea5a06a0d",
        "cursor": {
          "ref": "c819bd3a-aff9-49f3-803a-862f4a83797e",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f4564ef-138d-4eee-9063-4f0cbcfaa094"
        },
        "item": {
          "id": "eb480f3f-ea6f-4cc5-9ced-256ea5a06a0d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "705dd601-33a0-49d5-91be-7932e8a99e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e483d845-625c-44ef-b702-bdee6c58ae6b",
        "cursor": {
          "ref": "2dfc43e6-d2c9-4119-b707-6183ff2d2d1a",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c560b32-24c6-474b-b689-9e46f6b3f473"
        },
        "item": {
          "id": "e483d845-625c-44ef-b702-bdee6c58ae6b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "26cd0404-ac06-453d-8c86-5e8c994fc3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5328010-316f-4f92-b72d-1cdc24af9e3b",
        "cursor": {
          "ref": "07cc4e58-024e-4e70-b560-a2c61376b8d1",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7583ea1b-508c-460b-9abc-5f4fb7d89a17"
        },
        "item": {
          "id": "a5328010-316f-4f92-b72d-1cdc24af9e3b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4b100247-8de9-4966-82c1-eacf73a85a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecf5068-fb52-47b4-8030-e3fee3468ab2",
        "cursor": {
          "ref": "276e8f5b-be09-448b-91ff-b70a28931157",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f302f838-0409-4e92-8f2b-270ff132cce9"
        },
        "item": {
          "id": "fecf5068-fb52-47b4-8030-e3fee3468ab2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9132540d-23e4-42c1-8552-79f8ddefd9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508a4512-2464-4c8a-a3c5-ee50bb3ed48e",
        "cursor": {
          "ref": "0ffbc44e-fb3e-4464-972d-2a12519444ff",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4c385c69-6089-472c-89fc-e15ce41f399c"
        },
        "item": {
          "id": "508a4512-2464-4c8a-a3c5-ee50bb3ed48e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "39ca5eb0-6f4d-43b1-b9dd-869c4ee7737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f25263c-2723-4e08-9320-2e8a59cc499a",
        "cursor": {
          "ref": "ecb70c06-cfa4-491d-b7fd-a046b3071cc2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e8b65f7d-a16c-43f8-9ab1-93424d508dc7"
        },
        "item": {
          "id": "0f25263c-2723-4e08-9320-2e8a59cc499a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "eb27dacd-4324-4ab7-bd90-b466f4d731e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4ec6de-c611-4e73-a593-0dc8455b08fb",
        "cursor": {
          "ref": "c9da153a-9265-4646-b654-045913d4aae4",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d8b85369-0747-4603-ae87-3f7d12231d02"
        },
        "item": {
          "id": "0e4ec6de-c611-4e73-a593-0dc8455b08fb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38fbe8c3-4475-4fc7-9fd5-646ad014e992",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc86e31e-64ad-44e3-b8eb-07e9904361a7",
        "cursor": {
          "ref": "f627beba-9e20-435a-8c99-13f89c0af2c2",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7d4548e-4de9-41f3-ad5b-9051db156171"
        },
        "item": {
          "id": "fc86e31e-64ad-44e3-b8eb-07e9904361a7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b1562176-f5b1-49c0-815c-f06f11d355b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dea629-358a-48f6-8961-32c6225eb4ef",
        "cursor": {
          "ref": "76dba600-ea05-4367-8a08-60c3bec57dc7",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cb4854a0-77ad-42ac-98bb-b917aa0fee3e"
        },
        "item": {
          "id": "30dea629-358a-48f6-8961-32c6225eb4ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f44907c1-58d6-4059-aa7d-bbefcbd020c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dea629-358a-48f6-8961-32c6225eb4ef",
        "cursor": {
          "ref": "76dba600-ea05-4367-8a08-60c3bec57dc7",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cb4854a0-77ad-42ac-98bb-b917aa0fee3e"
        },
        "item": {
          "id": "30dea629-358a-48f6-8961-32c6225eb4ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f44907c1-58d6-4059-aa7d-bbefcbd020c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210ee6ca-c2d0-495a-90ad-3b20e56a3f47",
        "cursor": {
          "ref": "74cd6b6a-a893-43e0-8567-a8151afedacc",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f2c652e6-c958-4681-aa34-91d542679888"
        },
        "item": {
          "id": "210ee6ca-c2d0-495a-90ad-3b20e56a3f47",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c6c469e3-f04c-4c89-9b35-0b30145bff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d0f8c7-dfda-49ea-a4dd-5503cd1e80a9",
        "cursor": {
          "ref": "6aeed05d-fb0d-4de4-9fdd-bd1f3d39dc9c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23e0464f-5de7-4eba-9723-f45f3cc8b7b0"
        },
        "item": {
          "id": "b0d0f8c7-dfda-49ea-a4dd-5503cd1e80a9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "85660a8f-05bd-48e3-961a-4540926a4f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5112b4-81e7-46ca-b3f4-cd24e2ff9d22",
        "cursor": {
          "ref": "ec87ec2f-38c8-43cd-93b1-9c6cac707f91",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dda3ee5a-f357-44d2-aed1-15e84131a3f4"
        },
        "item": {
          "id": "8a5112b4-81e7-46ca-b3f4-cd24e2ff9d22",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c7cf81b-f45e-4317-b9ee-b11cd388f2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a5336-d153-4b3b-99ab-26e6e16f92b6",
        "cursor": {
          "ref": "bd103567-01b8-480c-9bd8-fca34ed35fda",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c2c3b1aa-31de-4af3-bbe4-1c031a5591f0"
        },
        "item": {
          "id": "da4a5336-d153-4b3b-99ab-26e6e16f92b6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "abaa1d25-e4d0-4087-b47d-80fc392efc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961751b4-3d80-4b11-a398-ff08fccb053c",
        "cursor": {
          "ref": "8f895bc6-12bc-48c4-82db-74f717c3f95f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "059a5126-7a99-4a8a-a1cb-ab74a9429cc2"
        },
        "item": {
          "id": "961751b4-3d80-4b11-a398-ff08fccb053c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dfbda5f8-c546-4a08-ae2f-6c0a65382b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03148be9-9d37-4868-b6f1-f247979cf136",
        "cursor": {
          "ref": "14cd7787-9fe8-4db4-951c-4568ae2cb312",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a68be08c-f93d-4fe4-a9e8-a7748bc765e0"
        },
        "item": {
          "id": "03148be9-9d37-4868-b6f1-f247979cf136",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8fbf9dc4-30cc-42b2-b73f-6184a1a359a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b059de84-1ecb-413c-bd63-83d329182f64",
        "cursor": {
          "ref": "71b433a3-a1cf-485c-a090-6d6cf6b75ce3",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d8185228-71c3-499e-b2d7-b37ced053119"
        },
        "item": {
          "id": "b059de84-1ecb-413c-bd63-83d329182f64",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "730e7325-df4e-4815-be71-da07d5a0d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e0971-0ea5-4410-bd34-de82cd6ad118",
        "cursor": {
          "ref": "8d2e955b-0788-4a81-a95b-237abc6ccd35",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6d89f957-8911-4b7f-9dfd-a958d942a7a8"
        },
        "item": {
          "id": "2a5e0971-0ea5-4410-bd34-de82cd6ad118",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8ccfcbf1-51a3-4e6c-b108-e8f4d5a87053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849588cb-331c-4932-9221-8e1d8908a05f",
        "cursor": {
          "ref": "f78d4314-a3e6-4796-8e29-e88f0d84a82e",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c333440b-1fda-4c9f-8a74-1795ee55253a"
        },
        "item": {
          "id": "849588cb-331c-4932-9221-8e1d8908a05f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8a40ced7-0bea-4812-8188-9b635de7d84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0bebbb-4b30-4d32-8259-652e706aae07",
        "cursor": {
          "ref": "a627fcb2-b2e4-42fb-85af-c20f8549965d",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "735ca6da-ab77-4bae-ab66-f647863a50ed"
        },
        "item": {
          "id": "4a0bebbb-4b30-4d32-8259-652e706aae07",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9258c845-7868-4602-b78d-27f79077c04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b32e1-a2e9-4a91-95ba-6b04d7c47ef5",
        "cursor": {
          "ref": "e4429eb9-dd21-40f9-8287-c9e108649152",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1ad55645-fe10-4dcc-94cf-ce2332c57900"
        },
        "item": {
          "id": "592b32e1-a2e9-4a91-95ba-6b04d7c47ef5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "90245aa8-0ec5-43d2-9cc1-08014f1f3a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e3c4fd-cde6-41cd-9de0-b626ba710562",
        "cursor": {
          "ref": "e27585ab-781a-4101-ba55-a92965e88bf7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "575fc761-5ffa-4058-bafd-e54ec197816b"
        },
        "item": {
          "id": "f2e3c4fd-cde6-41cd-9de0-b626ba710562",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "72109d23-2f20-44e8-a147-2519b1b3d3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86be67c9-7552-4c12-955b-36e668d03104",
        "cursor": {
          "ref": "60de2f02-762f-42e0-a9e4-487c37683bba",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "284a9c83-95d4-4ad1-8554-c9a15556b816"
        },
        "item": {
          "id": "86be67c9-7552-4c12-955b-36e668d03104",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "81fbb4a5-9864-4ca1-9ee3-cd95b8581a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49617b67-73d0-4314-849d-16ccc2c95fca",
        "cursor": {
          "ref": "c11c45c6-1423-4589-81da-62ed80e44b1e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b031b43e-61f2-44d3-b4cb-6fe9f64dce0c"
        },
        "item": {
          "id": "49617b67-73d0-4314-849d-16ccc2c95fca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e405e32d-fdca-4a34-b9a8-1ca36fbcb402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91b3f7f-3948-4a83-a7d6-ef6629849b8d",
        "cursor": {
          "ref": "39628978-3a1a-4bcf-ab11-ff9c14dc30d0",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "158f617a-b946-4b40-b907-40b0a3c83f69"
        },
        "item": {
          "id": "f91b3f7f-3948-4a83-a7d6-ef6629849b8d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1eba6af2-8458-467a-9f2d-6982335a65b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0316b0fe-64c1-412e-a49d-46f32103a484",
        "cursor": {
          "ref": "1554facd-69bb-4bbe-aa32-b57c8b6e6fd1",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61d5d4ee-df1d-48e1-b089-e1ed03bccb02"
        },
        "item": {
          "id": "0316b0fe-64c1-412e-a49d-46f32103a484",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3fc21bf5-ce18-4d69-bd17-998d3f597212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4079171e-57c6-4125-8b8e-e0f171991dd4",
        "cursor": {
          "ref": "05c1ab01-837f-4dbd-9fcf-1f66fde1caf2",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b710687-85b7-4c3a-9324-a99735228a5a"
        },
        "item": {
          "id": "4079171e-57c6-4125-8b8e-e0f171991dd4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a9c3931c-7229-49b2-95a9-1fad1ac1150f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538825f5-c05f-4e55-aa7c-52d814a71084",
        "cursor": {
          "ref": "a83e2fed-3099-4a07-92b0-8acb0e664007",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5e088dd6-8335-4c04-9a2e-fc46c235b8ee"
        },
        "item": {
          "id": "538825f5-c05f-4e55-aa7c-52d814a71084",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e823a646-f6d3-404e-83ee-2e3d2fd39548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354a8e9a-a06a-40d2-a56c-3c6730740617",
        "cursor": {
          "ref": "a374f057-93f3-4ad0-ab2f-a3adace20e77",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "11a3cff5-901f-4abd-ae9f-1b7adf9bca42"
        },
        "item": {
          "id": "354a8e9a-a06a-40d2-a56c-3c6730740617",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68336f98-8d89-4f05-8a7e-3226294e3ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa87431-4911-4775-b3ef-e15cc3f55d3e",
        "cursor": {
          "ref": "9fe6f327-535c-41de-9447-1321b5d8e975",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "91334dd2-1eb2-4a3a-b977-bcb26a8c3603"
        },
        "item": {
          "id": "0aa87431-4911-4775-b3ef-e15cc3f55d3e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5f0dd112-ac8d-4115-acb6-08d9879a35b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300f40ad-ea01-4c1a-aeea-08c91fbe5975",
        "cursor": {
          "ref": "cd055960-4145-4355-87b8-50a2a5fd1631",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "69e844ef-fb7f-40a6-8d62-8c7bf509d524"
        },
        "item": {
          "id": "300f40ad-ea01-4c1a-aeea-08c91fbe5975",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5b0d5599-bcb1-4c77-9a48-35197b5e5a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf5b77d-bf08-47af-a712-cbe724e666c8",
        "cursor": {
          "ref": "520ad541-6a99-43df-b048-735eba808eef",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d80665b1-e393-45e3-b6a8-95a8fb1f194a"
        },
        "item": {
          "id": "acf5b77d-bf08-47af-a712-cbe724e666c8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1ee12cb8-5e72-4380-af38-d6a6ce476e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d646c29-5a3f-41f0-89cf-2c58ba1332a1",
        "cursor": {
          "ref": "d87befb8-6a35-4a5c-9caf-924a5ddabb66",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f47581c5-0212-4e38-9c19-d6ceb1974808"
        },
        "item": {
          "id": "6d646c29-5a3f-41f0-89cf-2c58ba1332a1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "29eee890-366c-4d8b-8746-74a7089392c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d12051-aa0d-463a-b328-493cc2b059b9",
        "cursor": {
          "ref": "c73d1773-dfa2-4044-8093-ce9f008c5c03",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9efe799e-e368-4887-9bba-847b0967e60a"
        },
        "item": {
          "id": "89d12051-aa0d-463a-b328-493cc2b059b9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "416e0322-b9ee-4e39-bffa-27b9b93f0e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d844cb-539d-4d75-a745-697b5a334fb2",
        "cursor": {
          "ref": "48da07d3-d122-4d5a-9f6e-2c82a40da156",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f7fd62ac-4b02-4d14-a016-25ace03bf9b3"
        },
        "item": {
          "id": "29d844cb-539d-4d75-a745-697b5a334fb2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b88d05ba-9680-473b-8522-18dd4c7b363c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6cbff3-49cb-46d5-8c10-1cfa8e1ae1cb",
        "cursor": {
          "ref": "77c79699-dafa-4405-bb9b-95c1a21cedd1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f05a5259-c164-409e-8b11-f0bd57607806"
        },
        "item": {
          "id": "3a6cbff3-49cb-46d5-8c10-1cfa8e1ae1cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c8dc1b21-fd49-41eb-9c9c-717d6f2d3761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dc2198-59e7-4448-b367-7a4b78b7d23b",
        "cursor": {
          "ref": "eaedd4be-9060-4da0-8dc2-988d438c6f89",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a97fbbfd-fe3c-4d03-a827-509a971b9cf5"
        },
        "item": {
          "id": "e5dc2198-59e7-4448-b367-7a4b78b7d23b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35284b9c-cf52-4f79-a62d-7ec2dfd6acc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e369c7-7566-43ed-9e78-a08a0d820727",
        "cursor": {
          "ref": "57b7ab2b-1834-457e-9b99-52b01df9a5c0",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e8d53ede-63e2-49e6-b876-fa0114ccd3c9"
        },
        "item": {
          "id": "37e369c7-7566-43ed-9e78-a08a0d820727",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e304b97d-a258-4e71-b319-4b02b73d1504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67eb27-0419-4207-bda9-b06c0513742f",
        "cursor": {
          "ref": "f2aab2e0-5d85-4602-91eb-4ebcea2b4cb2",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4cd03729-154f-49e6-b15a-582f0aac6865"
        },
        "item": {
          "id": "ee67eb27-0419-4207-bda9-b06c0513742f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e7d57bb9-00c9-4ddf-8553-4e96956d6009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecffa5a6-ed9b-451b-b8b8-b89e883327d5",
        "cursor": {
          "ref": "9f0c375f-f2f0-4452-909b-a566578a7838",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4807c8f8-1636-4126-8359-076d4895e667"
        },
        "item": {
          "id": "ecffa5a6-ed9b-451b-b8b8-b89e883327d5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "031d7f93-534b-4c57-9636-adf6870e26c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275da2a7-7172-4acc-811a-70c6534fffcf",
        "cursor": {
          "ref": "4b53176c-2842-4fb6-8989-78c21053bb6e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5fc1998e-a120-49c5-ba1a-c3b81224bb62"
        },
        "item": {
          "id": "275da2a7-7172-4acc-811a-70c6534fffcf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e761f0ad-2759-40c3-98c3-2346570f8298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee0a501-5b18-47af-b385-9ee83564d57a",
        "cursor": {
          "ref": "d6ae1fb7-2649-44f0-a894-e34ac2219c2d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3900b9d5-eb5b-4b31-89fb-09e88af316e4"
        },
        "item": {
          "id": "6ee0a501-5b18-47af-b385-9ee83564d57a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "eaf53bde-13db-482d-943e-d585f3794115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc3a4d-55b1-441e-b361-5ae8cc33aea0",
        "cursor": {
          "ref": "bcdc9a4c-1813-4a93-a810-d85c84c88763",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9d93bbef-abef-4c39-a10e-ace5c2256f9e"
        },
        "item": {
          "id": "6dcc3a4d-55b1-441e-b361-5ae8cc33aea0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0dd662e-ab46-459f-9709-981b3940dada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8123e9-e05d-4685-82eb-e69de04f0f57",
        "cursor": {
          "ref": "8268e744-cdf0-4ab2-8033-2055cbe8f7fd",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a9cca099-6a39-4716-9719-76ec7782bad1"
        },
        "item": {
          "id": "2f8123e9-e05d-4685-82eb-e69de04f0f57",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ebc4a527-0cc6-4598-a1c7-f80d1039e3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4173491-b0e6-4dc6-a07a-10f66623cf3a",
        "cursor": {
          "ref": "2ccf9e15-7576-437c-a2a9-ad3d8a9e3666",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "326acb39-7fe5-46ec-b30f-d1414f539477"
        },
        "item": {
          "id": "c4173491-b0e6-4dc6-a07a-10f66623cf3a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "93a3f1bc-1b3d-480d-be23-06bd76a55fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feb512e-5ae4-42dd-a468-169d0abe31d1",
        "cursor": {
          "ref": "ad621417-4165-47c1-9857-77f63eef42ae",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d46804ea-1e1d-401e-82b6-023b7098bef9"
        },
        "item": {
          "id": "2feb512e-5ae4-42dd-a468-169d0abe31d1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5c4a180d-0245-43e9-aefd-f68de929fed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec98042-a01b-4ead-8070-72b47c67a236",
        "cursor": {
          "ref": "5dc2cc03-13ee-4452-8ec6-e90436a8b4b5",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5a0b48e0-4da9-41e5-b22c-c0d718e7cae7"
        },
        "item": {
          "id": "eec98042-a01b-4ead-8070-72b47c67a236",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "32fee177-e445-4913-a7e2-455f11ebda4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35c5719-2e47-4569-b74b-23e1dad1fba1",
        "cursor": {
          "ref": "fc591301-2b75-4791-8488-b9d0b7fe8c07",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "89e9c33e-e34d-48e9-865f-e198d12dbd46"
        },
        "item": {
          "id": "c35c5719-2e47-4569-b74b-23e1dad1fba1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4eaa548e-0c9a-4e6e-8c3d-0cdf7c3d06e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ad4d77-c269-4217-b754-274b12e4f47b",
        "cursor": {
          "ref": "806a73d6-c0cc-4b2b-9e2d-2bd618ba4cdd",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b27cf153-8aed-459f-a623-b12f2d140466"
        },
        "item": {
          "id": "35ad4d77-c269-4217-b754-274b12e4f47b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4bd417e4-dcc2-4492-b2c4-24faf65fb1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e4c3a5-0112-413a-b846-bd81516735e3",
        "cursor": {
          "ref": "2bfd8d5c-49d4-4e5a-8119-26cd2ab9deed",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8c03aeca-7d79-4354-acf0-e657e1cb973d"
        },
        "item": {
          "id": "14e4c3a5-0112-413a-b846-bd81516735e3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "884c6c3f-9642-494e-a2ac-c234f3723625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af3b1e7-d383-439e-980f-9c698f24e00e",
        "cursor": {
          "ref": "156879ff-1fd6-491c-809a-5c6c009c7051",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6587f3d9-d866-42b2-832e-3da1d32f2fcd"
        },
        "item": {
          "id": "3af3b1e7-d383-439e-980f-9c698f24e00e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "01f9d54d-7e21-48f5-a0b7-717866b72643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdee5d4b-cf66-421f-91e2-15465c3040a2",
        "cursor": {
          "ref": "f24d0974-3625-4ae6-b068-3bddcf008b9a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "32fe4413-b627-46fb-a3a7-e20b1e2971cf"
        },
        "item": {
          "id": "bdee5d4b-cf66-421f-91e2-15465c3040a2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5ee31bda-caba-49a4-a1c3-f2687e483504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d49483-68d4-4772-a44a-106b2fe84c12",
        "cursor": {
          "ref": "7df0e502-2b6c-48cd-9b44-090cdfc11383",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "726a7b8b-34d3-4e42-93d3-83692e58006b"
        },
        "item": {
          "id": "b2d49483-68d4-4772-a44a-106b2fe84c12",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "21cb6b23-85e8-4b31-afab-094d60393db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0585d27b-91f2-4143-b08e-8d0522f7413f",
        "cursor": {
          "ref": "e0a0ec64-0471-4676-a400-42206d285a6f",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ddcbf287-cb7c-4d68-918d-c5a28efea65f"
        },
        "item": {
          "id": "0585d27b-91f2-4143-b08e-8d0522f7413f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5ca3c6cf-b868-4496-b965-9a8bfec94c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0394c5-f6cd-4d55-a768-a9e9352afd56",
        "cursor": {
          "ref": "127e4ae5-6625-428e-954a-482f75bf02ed",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7efa1f40-5475-403c-914e-6b7d9c8a1b22"
        },
        "item": {
          "id": "9a0394c5-f6cd-4d55-a768-a9e9352afd56",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b222dfa-9145-4a48-acee-caa89dfed300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bd882e-ca87-4801-b0c0-f5e1fda9d627",
        "cursor": {
          "ref": "1816fadf-6a21-4dbe-abd4-b3d4b6b849de",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "83ff1d05-dcf1-4637-a147-2accf5e8debb"
        },
        "item": {
          "id": "e9bd882e-ca87-4801-b0c0-f5e1fda9d627",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "67103f6b-a3d3-4c65-bf1e-ca676e0e497e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112aa6d8-4ab9-4f5b-9691-7bf6fdf24817",
        "cursor": {
          "ref": "404fbb22-6ebb-46a9-92e6-7bd0a4ff149a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6e92c5cb-693d-4597-a04f-c0963ae397bf"
        },
        "item": {
          "id": "112aa6d8-4ab9-4f5b-9691-7bf6fdf24817",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2657eb97-9b29-4340-ac74-bfc035ae294f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a608151-1c7b-48d7-80ce-a229ee77425d",
        "cursor": {
          "ref": "35724ea8-6c9d-421b-8dc6-1ac534588fea",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "09a7d4fd-9776-4f35-8e5d-0b72270aa3ed"
        },
        "item": {
          "id": "2a608151-1c7b-48d7-80ce-a229ee77425d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ccd1e0c8-b51d-4e66-aebc-b5304459326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21760a39-cb18-4fe6-be4b-d8eeda700a2c",
        "cursor": {
          "ref": "36a02416-f3d7-461e-b71b-ade2c253b18f",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b0432ee1-46ae-45a0-a449-df9bf56a06cb"
        },
        "item": {
          "id": "21760a39-cb18-4fe6-be4b-d8eeda700a2c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "afce4091-01a8-4e3c-b2a0-01131bd927dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cec983-7514-42cb-b192-8c2634eb79de",
        "cursor": {
          "ref": "9a660053-cfb1-4efa-87c1-6f27c9ac8c6e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9a8363c9-f6a2-480b-8e5c-74aeacee8496"
        },
        "item": {
          "id": "a3cec983-7514-42cb-b192-8c2634eb79de",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1c5a600e-0319-44b7-b4e7-3913546e6f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ed643d-a3ca-4aa6-b478-6a0aaa026ac2",
        "cursor": {
          "ref": "4ef50dc3-6906-4dfa-b90b-2f930caef189",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0876b0c6-6751-49fd-8b0f-5601d5a99c5c"
        },
        "item": {
          "id": "f9ed643d-a3ca-4aa6-b478-6a0aaa026ac2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3d6dcf87-d9c6-4ed2-a70d-257846d9187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb500ff-3050-48bc-ac20-c228e5cd66ba",
        "cursor": {
          "ref": "ecc76cd9-9d46-4037-9552-f125b5debc55",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c01fbd92-8c42-4db3-ba43-88ba87653b68"
        },
        "item": {
          "id": "deb500ff-3050-48bc-ac20-c228e5cd66ba",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8dea0725-08cb-4539-ac00-1c9b8d060c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc49411d-957c-4ede-ab78-644cf3b67fec",
        "cursor": {
          "ref": "6dabb3f4-780b-419b-adca-0e7e6eadb920",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "47a5d8df-79d2-4ca1-9ba5-c64cba7461f1"
        },
        "item": {
          "id": "fc49411d-957c-4ede-ab78-644cf3b67fec",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d200b1a0-6399-43a2-b180-2adf9fa1e696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb6de3-d9b4-47fb-8208-165a8fa6f79f",
        "cursor": {
          "ref": "a7027e06-39e0-4f03-9487-2d1564058998",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2b8a5171-08e9-4498-b2d3-58a22f3147dc"
        },
        "item": {
          "id": "43fb6de3-d9b4-47fb-8208-165a8fa6f79f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a9971185-8c2e-4146-a578-f92cd3b2d251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ec7b8-3088-4894-80ba-a1264972fed2",
        "cursor": {
          "ref": "7182cff8-b3e9-4264-a4b9-7e11ff5da8db",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b74563fe-2f2f-4603-9307-a1a85f497086"
        },
        "item": {
          "id": "aa3ec7b8-3088-4894-80ba-a1264972fed2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8443fd1-7654-4d2e-9d80-403b9f303d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfc1603-9e3a-4cb0-ae65-e41672b03047",
        "cursor": {
          "ref": "dc41bf83-5fef-4b08-a7af-cadf9ab9996f",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "da03ecb8-cf1d-4dbd-9919-7a7eac734dd1"
        },
        "item": {
          "id": "adfc1603-9e3a-4cb0-ae65-e41672b03047",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "495c7801-9eb2-4659-855e-cda16a5790bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fb799a-d1b4-46ab-9f80-3bae134cd98f",
        "cursor": {
          "ref": "edb88d26-29cb-48f0-bb54-7e9090383e5b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ba0676c6-2a94-4e55-947b-3c91bf9a0ea1"
        },
        "item": {
          "id": "22fb799a-d1b4-46ab-9f80-3bae134cd98f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "862b9e3d-2289-4cbf-ace4-a06e6094350d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951d2b99-c7df-4d77-84f2-b5f95e25848d",
        "cursor": {
          "ref": "95c7100f-fae0-4cfe-967a-27044653dd0c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "110f4d17-3b63-4721-bf39-50fd45e4aef7"
        },
        "item": {
          "id": "951d2b99-c7df-4d77-84f2-b5f95e25848d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e7a7ffb8-3798-43af-b7ae-0f54e220575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72570fd4-6e61-435a-aa4c-304508490894",
        "cursor": {
          "ref": "d0eeac39-dc6b-4276-aac7-032ed89a2ae1",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ebf85594-2b16-48f8-a896-5a4c81057d1f"
        },
        "item": {
          "id": "72570fd4-6e61-435a-aa4c-304508490894",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a7c78b03-ed99-43cb-9a51-5caa2d4216f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d94b8b-d637-48c6-84fd-91b98b2cc1df",
        "cursor": {
          "ref": "a0e0cb24-4c68-4a17-96f3-b63a912fff1b",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b220874c-3608-4ef8-8763-ba4a821b821c"
        },
        "item": {
          "id": "82d94b8b-d637-48c6-84fd-91b98b2cc1df",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5d254ff-8651-4189-882d-3606fe55e6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aecc540-7a13-405c-90e5-138eea10ffbd",
        "cursor": {
          "ref": "86f87093-43d0-4685-a9ae-9a657562efc3",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fd812c5d-a997-4050-bbc6-a5293678bec9"
        },
        "item": {
          "id": "4aecc540-7a13-405c-90e5-138eea10ffbd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "53d6ba73-75b1-436b-b815-257e10c836ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f683f-aabe-428b-9f65-86687d6640c5",
        "cursor": {
          "ref": "eeb63063-2ebd-4697-9a21-bc5a92112fae",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "590a5c4e-27be-4ca6-9ef7-eae6fbeec098"
        },
        "item": {
          "id": "795f683f-aabe-428b-9f65-86687d6640c5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e0dd9b69-340d-41e0-966e-ae0d4c9fd503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7569a14-aa85-4a77-81f8-8941fac80645",
        "cursor": {
          "ref": "c1fd6599-35a3-4316-aee5-06f649f00d5b",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "85e917e7-408c-4714-b0fb-cb4e32405a23"
        },
        "item": {
          "id": "c7569a14-aa85-4a77-81f8-8941fac80645",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8e39e8dd-45d5-4465-b382-f7e3a7773fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c0d03a-d26d-4496-bb9b-5e838f2be053",
        "cursor": {
          "ref": "85e7a5b7-5f10-4056-87e5-8e0d4b5f4996",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f4f7a616-b9e8-4f58-b978-75fe0a72891b"
        },
        "item": {
          "id": "c5c0d03a-d26d-4496-bb9b-5e838f2be053",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cdf46e7b-128c-45de-9758-bb9c90b75204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23910c48-5404-49ec-b2dc-281900dda6a8",
        "cursor": {
          "ref": "a4a098c2-94fd-4f31-bbf9-6361a7da1c89",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0912a986-b15a-42ca-9ea2-1270d8d3df94"
        },
        "item": {
          "id": "23910c48-5404-49ec-b2dc-281900dda6a8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a16e4e49-6043-4027-a129-679aaf6d2f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47a1a93-8cbc-41e0-9c31-296b319ea46d",
        "cursor": {
          "ref": "3a14bf6a-92dd-45f4-a140-6632323fa3d0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b252ca79-91db-4c09-9902-9ec76355a30a"
        },
        "item": {
          "id": "c47a1a93-8cbc-41e0-9c31-296b319ea46d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "53c1c44c-f57b-4504-a660-457d4313081f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c76527-ad34-4443-a519-ed6c0590e398",
        "cursor": {
          "ref": "c4511b4e-9bda-4c91-9297-c7ca65d21194",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "60b2f475-1451-4537-8a16-7f3ca1f99a4e"
        },
        "item": {
          "id": "42c76527-ad34-4443-a519-ed6c0590e398",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa01b867-c92b-4b01-85c3-e70597000536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8255f7-ad76-4ac5-9fe7-6651052fd364",
        "cursor": {
          "ref": "b3032ec0-bd5c-4e1a-9286-fb54d7f6e1ba",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a54e3ecc-57e0-4d51-ad57-dd7601b3e60d"
        },
        "item": {
          "id": "ba8255f7-ad76-4ac5-9fe7-6651052fd364",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4f751177-8749-4e05-a7a8-c51b257c3390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f572d8-dde0-4705-978e-a17218ec4ced",
        "cursor": {
          "ref": "250f25ce-a550-48fb-bc1e-9e2c5c1d5088",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fbd63cc1-1892-4c74-9e90-127d0dbf039f"
        },
        "item": {
          "id": "37f572d8-dde0-4705-978e-a17218ec4ced",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e1681877-62a9-4043-b308-667d6beee0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31eb031a-1116-4bbd-b8a8-e3de4fd86e6a",
        "cursor": {
          "ref": "1e0ba687-5275-4f23-bec3-bc821a5966b8",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fa4e20aa-0600-4478-ab76-9974668b5ac4"
        },
        "item": {
          "id": "31eb031a-1116-4bbd-b8a8-e3de4fd86e6a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5d57b456-4798-4fc4-b052-d1342d55492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f1ebe8-ba6a-4a0e-8fd5-1f8185619396",
        "cursor": {
          "ref": "f6635260-baca-4491-ad36-811e59a53b09",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da636e95-c947-48fd-9f13-59d3edea91f7"
        },
        "item": {
          "id": "02f1ebe8-ba6a-4a0e-8fd5-1f8185619396",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9cc20735-f3ff-4bc9-a713-2c0ce5fa7bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5200f85f-e077-49a2-bb37-3103d28afbe9",
        "cursor": {
          "ref": "5b7e99f1-f55f-4b4d-bfe8-72bb612712cf",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "717109f7-78ff-49d4-a60e-1bbb9f3a90e0"
        },
        "item": {
          "id": "5200f85f-e077-49a2-bb37-3103d28afbe9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a54a76a5-d564-4bcd-9a13-3ea9f370ae51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8913771-963c-4b0c-953e-19a636271593",
        "cursor": {
          "ref": "46be1697-6f62-4f10-ac18-1a718ff7ca11",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f93304ad-1402-4995-9aea-1426e57d1bd8"
        },
        "item": {
          "id": "d8913771-963c-4b0c-953e-19a636271593",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "20937301-e64c-4c7a-a26c-44748c658faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc375f6-e25b-4da7-8bde-4954daf9e617",
        "cursor": {
          "ref": "06872059-957e-487a-af3b-f68eb9b06765",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d11ee760-b3d3-4121-8fc3-2e21688312dd"
        },
        "item": {
          "id": "3dc375f6-e25b-4da7-8bde-4954daf9e617",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "96d7b3b2-2b80-4671-9ef3-d41d285e798f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a9a214-0741-4a7a-bb6e-cc29dd943ace",
        "cursor": {
          "ref": "d3f6dc5a-cdc7-4c26-a6f3-4edf2369e024",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "02d7ad41-08c2-4267-9a78-657cb0c53bf2"
        },
        "item": {
          "id": "02a9a214-0741-4a7a-bb6e-cc29dd943ace",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9eaa2a80-53be-4432-b020-88ef1fcdf127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214dbf47-def4-4540-bae7-15cd95a853fe",
        "cursor": {
          "ref": "b7d84908-b6f6-4f11-97a3-a31a4ce2a4d5",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "96456e6c-1c00-47df-b901-0f3b9c1c2f01"
        },
        "item": {
          "id": "214dbf47-def4-4540-bae7-15cd95a853fe",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f50a7b2c-cc3c-4aeb-8647-acaf6c4ec73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd4f6a8-8d72-4225-b59b-2039e8259a22",
        "cursor": {
          "ref": "41635b43-02a2-4e9c-b78a-625e96f83d93",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "85e8018e-a93c-41d2-8d16-772bb8e23bdb"
        },
        "item": {
          "id": "fdd4f6a8-8d72-4225-b59b-2039e8259a22",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "80f934ac-c154-4a6f-8958-fa99adcbcf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38895942-4e73-4394-93ca-8997c7608d7f",
        "cursor": {
          "ref": "6acb73c9-9544-40da-a27c-939a648891bb",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7a508096-04ab-451e-ae88-f40d9d6b5d6c"
        },
        "item": {
          "id": "38895942-4e73-4394-93ca-8997c7608d7f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8825d976-eeb5-4596-9896-4ac413e09f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc403efe-a669-49a2-925c-07b044dbdf6b",
        "cursor": {
          "ref": "754e2766-28f4-48a1-a546-d31db944f4d8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2e468704-649c-461c-9ba7-64466716b398"
        },
        "item": {
          "id": "dc403efe-a669-49a2-925c-07b044dbdf6b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8ca1db22-a35c-46db-97a9-a166035d4572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132d542c-d04a-476f-a091-04f76b503363",
        "cursor": {
          "ref": "3aa48bce-3822-46d1-ad2a-02e12f23e5a2",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ed87ff02-a652-4bcf-955f-63b9dff0cd97"
        },
        "item": {
          "id": "132d542c-d04a-476f-a091-04f76b503363",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "004929fe-e766-4be1-b7df-c085fb1a94e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ed0575-3c40-4d3a-ad4d-cd469ee5a989",
        "cursor": {
          "ref": "46c20a55-fc7a-4099-9a0f-de38d328c941",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23f5e5c4-afbc-4f35-afa8-3714dcd30948"
        },
        "item": {
          "id": "80ed0575-3c40-4d3a-ad4d-cd469ee5a989",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "978d1d47-4c2f-4a6e-82cc-66b1a96100c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f959ae8a-9ab7-40f1-a8e2-18a93172943a",
        "cursor": {
          "ref": "5545b5ee-bf9e-4311-8ef9-4b16ad35a78f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f0dad4c3-f6d0-4ff1-a99a-b27b86fb15e7"
        },
        "item": {
          "id": "f959ae8a-9ab7-40f1-a8e2-18a93172943a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "34229ce9-d279-4e82-aae3-613ee246c305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3efa01-bc8b-45c8-8a9e-c1bf4c393954",
        "cursor": {
          "ref": "472303c1-cebe-43d0-a5ba-672b999ede1d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fe0fa749-4c9d-48c0-9f15-d77a53e032ea"
        },
        "item": {
          "id": "df3efa01-bc8b-45c8-8a9e-c1bf4c393954",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3ec8a176-344a-481d-8c06-07379ac56145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f356f00-d7d4-4807-aadb-8e68e2ea552e",
        "cursor": {
          "ref": "bb30d3c8-e5b5-46ad-a717-fd241d91423b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0d987b73-9542-4384-9400-74691dc3955d"
        },
        "item": {
          "id": "4f356f00-d7d4-4807-aadb-8e68e2ea552e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "98f8e74b-25ad-4dcf-b69d-9fb273e4ced0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cdb7ba-c589-49c5-80f2-eec8f7ebb8ac",
        "cursor": {
          "ref": "a0acce34-0dd2-4ee9-82a8-797f36641e15",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b542dc1e-edb8-4104-a001-ce1f7293405b"
        },
        "item": {
          "id": "f7cdb7ba-c589-49c5-80f2-eec8f7ebb8ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7fca68e1-888e-4fcd-a113-fedbadf6ad45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b607e2ea-343d-49ae-8348-418c8c1c10b6",
        "cursor": {
          "ref": "133f6898-f368-4c9f-9007-ca9e5fbc5145",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2a1ee9e3-e3ae-483e-b3f7-4607c9312850"
        },
        "item": {
          "id": "b607e2ea-343d-49ae-8348-418c8c1c10b6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "520ae1ec-18a6-46f2-978a-e6d4a96bdda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d40942-b89d-4153-bab7-407355b09f60",
        "cursor": {
          "ref": "10b42422-7109-4267-be8b-c6d634e36155",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "70a9dab1-bc80-4322-9e56-574f44a723b8"
        },
        "item": {
          "id": "85d40942-b89d-4153-bab7-407355b09f60",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4a178e67-ae90-46ec-9ef3-5de7c015643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8dc0a5-d7b6-46ce-a56b-e14b8e92836e",
        "cursor": {
          "ref": "b8493738-ef2c-440b-986f-74d8eda9d658",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3083ac9a-4084-4a8c-aa5a-554cb5f20155"
        },
        "item": {
          "id": "df8dc0a5-d7b6-46ce-a56b-e14b8e92836e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "67413e06-0b8c-4794-8fca-1bb762dfa850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4a540-f6c2-4bee-94ce-90404e5a6f20",
        "cursor": {
          "ref": "fcf728a4-8c3f-499c-a19b-6554a157e9a5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c33494b7-825e-4e28-a3c5-57949666818f"
        },
        "item": {
          "id": "c7c4a540-f6c2-4bee-94ce-90404e5a6f20",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "357eb790-73cc-4f37-a439-a0181778500e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc546d5-f78a-4e43-808e-b19012ab40dc",
        "cursor": {
          "ref": "e366a2fd-39d8-41bb-91a0-4f968a145373",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c82fcc50-36a3-435e-a71c-855ec0d3df1d"
        },
        "item": {
          "id": "cdc546d5-f78a-4e43-808e-b19012ab40dc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "732ab6ae-1f16-48ad-b761-1a4cdf4868b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0d028a-e365-4a13-9e10-659cc20687a7",
        "cursor": {
          "ref": "e02155f9-8cd9-445b-b8cd-8d9dfeccf68e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "69ec48dd-e736-4125-881a-e7320ab52537"
        },
        "item": {
          "id": "5c0d028a-e365-4a13-9e10-659cc20687a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c6bba32b-6a1d-41d7-9c24-58e3bb8e816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc2c1bf-1166-436c-8dc0-dcb360bac141",
        "cursor": {
          "ref": "4911ed93-5033-404d-9b9f-edd4241f3455",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "195751da-fe64-413f-b7f5-edddb5e80daf"
        },
        "item": {
          "id": "afc2c1bf-1166-436c-8dc0-dcb360bac141",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e1f45e46-79fd-4b85-8ca1-bb84c6efedcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95792df-2c85-442f-b3c8-c4cda30c8112",
        "cursor": {
          "ref": "308c26df-3f6a-4a80-ae24-1b24950d71e1",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eaf8af33-a0b0-46f8-9bff-bc129af5ded4"
        },
        "item": {
          "id": "c95792df-2c85-442f-b3c8-c4cda30c8112",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2779979c-3775-44e4-8280-467b5d30f1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d172da-7163-46df-a902-43df2d3f37ba",
        "cursor": {
          "ref": "7829dfb5-5d3d-48a3-8c85-0ca881096634",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "deb229fc-b45a-4cce-9e0b-be66ddddcc6b"
        },
        "item": {
          "id": "25d172da-7163-46df-a902-43df2d3f37ba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8a3fd630-9976-4f21-a9da-5a6f564e57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773510bf-7155-4baa-8dac-c893eaea4897",
        "cursor": {
          "ref": "5535e125-4089-43fd-845a-bb0cec3800cb",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75a5a571-54bd-4c91-bdca-8726859d3b7d"
        },
        "item": {
          "id": "773510bf-7155-4baa-8dac-c893eaea4897",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "06d5ecf8-42a0-4b37-8b01-749b61c9834e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12f8b71-c66d-4548-9c82-97543a5eef22",
        "cursor": {
          "ref": "9c71cb3b-8b36-4fb1-9c86-aad181bc9188",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "35b6f06e-ca83-41e4-a6a1-e4e8525bb837"
        },
        "item": {
          "id": "d12f8b71-c66d-4548-9c82-97543a5eef22",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0b9913d2-c82d-41cd-ad86-4da6faedca5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09a59bd-cfe4-4d37-941f-2f95a66a3a82",
        "cursor": {
          "ref": "44b163fb-bd9c-40a7-a180-1829c21dfefa",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9db5cc39-a3a9-4169-8ed8-8f51c9c4a844"
        },
        "item": {
          "id": "c09a59bd-cfe4-4d37-941f-2f95a66a3a82",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "598a4ffb-73f1-49d8-9fd0-dbed94ad1e0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d01d997-82ff-4925-bd3b-b7e147e52249",
        "cursor": {
          "ref": "8aecd275-7a1a-4d3c-9867-18d5bede7f4c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "070899e1-e9bc-415d-bf18-411ada744b90"
        },
        "item": {
          "id": "0d01d997-82ff-4925-bd3b-b7e147e52249",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d6fcb341-0643-4db9-9bd3-8e201151936f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a29ffd-59af-4f75-b069-35723d900d4a",
        "cursor": {
          "ref": "ecd48ca7-f00d-46c3-b2c0-92db91d5ef52",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "06812cfc-8690-4623-9011-d5ce24731a72"
        },
        "item": {
          "id": "c1a29ffd-59af-4f75-b069-35723d900d4a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e228007-ea6d-406e-97ec-a1242a9d906b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe3ebb7-02a8-4168-ab4d-a4735228c150",
        "cursor": {
          "ref": "f523e289-36e6-4fac-8b58-d9878b77d214",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6e999a46-8b08-49e4-99ac-ecd21777ac60"
        },
        "item": {
          "id": "4fe3ebb7-02a8-4168-ab4d-a4735228c150",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5c6a8fd5-82b0-43ce-9547-2458674ae711",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "928a2145-6d44-4135-8b5f-e7d4ae61e0b2",
        "cursor": {
          "ref": "4cf4ac61-f86d-46e5-ab3b-d6a0034f2d7e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "39d82fae-70d3-41c6-bbda-19e7af4bf306"
        },
        "item": {
          "id": "928a2145-6d44-4135-8b5f-e7d4ae61e0b2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8aca53af-669c-4b48-8df9-66cad49e3c58",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
        "cursor": {
          "ref": "d4b0f047-cab0-4d8e-ab7b-fce8223246ae",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "93c01659-6cfd-4f46-a8cc-0469af1b905a"
        },
        "item": {
          "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab45568a-ddc4-497b-98ac-977cf4866879",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
        "cursor": {
          "ref": "d4b0f047-cab0-4d8e-ab7b-fce8223246ae",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "93c01659-6cfd-4f46-a8cc-0469af1b905a"
        },
        "item": {
          "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab45568a-ddc4-497b-98ac-977cf4866879",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
        "cursor": {
          "ref": "d4b0f047-cab0-4d8e-ab7b-fce8223246ae",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "93c01659-6cfd-4f46-a8cc-0469af1b905a"
        },
        "item": {
          "id": "e0c7953f-3b60-42e1-a2dc-30abef3ffafa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab45568a-ddc4-497b-98ac-977cf4866879",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e93ecf0-9b33-445c-ad8c-9328d55bfccd",
        "cursor": {
          "ref": "a7d1709e-d9c6-4d56-abab-f811cb86b2ba",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dda98838-7328-4ccf-8856-12ba12bdfcdc"
        },
        "item": {
          "id": "1e93ecf0-9b33-445c-ad8c-9328d55bfccd",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c4114579-0bae-4648-8697-e0f97a7faf6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f34c8-ea96-4070-a692-d3464c38a910",
        "cursor": {
          "ref": "037bce7b-9e43-4010-9627-54a1ad21b044",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d10d315d-a479-4ff4-a995-fb85ffec847d"
        },
        "item": {
          "id": "4a2f34c8-ea96-4070-a692-d3464c38a910",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "43fe18a5-0290-4752-8428-d8278a5401c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f34c8-ea96-4070-a692-d3464c38a910",
        "cursor": {
          "ref": "037bce7b-9e43-4010-9627-54a1ad21b044",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d10d315d-a479-4ff4-a995-fb85ffec847d"
        },
        "item": {
          "id": "4a2f34c8-ea96-4070-a692-d3464c38a910",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "43fe18a5-0290-4752-8428-d8278a5401c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce3901c-2756-445d-acd0-e1eec74044c0",
        "cursor": {
          "ref": "4c27ea78-1420-4304-9dee-71b104f469dd",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b78cdde-d4ad-44f3-b015-966069940abd"
        },
        "item": {
          "id": "8ce3901c-2756-445d-acd0-e1eec74044c0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1ce04ee1-9efe-462f-93d2-7e8085642d80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa15b1a-01cc-4d43-8417-b7c6e06e1631",
        "cursor": {
          "ref": "a0d14838-6cc9-444a-9143-0c4ee3f12774",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3ce6a6e4-64ac-4eb9-a874-5276d72f31b9"
        },
        "item": {
          "id": "4fa15b1a-01cc-4d43-8417-b7c6e06e1631",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a0015a9e-671e-4396-a27b-bb8ed23a72af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa15b1a-01cc-4d43-8417-b7c6e06e1631",
        "cursor": {
          "ref": "a0d14838-6cc9-444a-9143-0c4ee3f12774",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3ce6a6e4-64ac-4eb9-a874-5276d72f31b9"
        },
        "item": {
          "id": "4fa15b1a-01cc-4d43-8417-b7c6e06e1631",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a0015a9e-671e-4396-a27b-bb8ed23a72af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8b1f16-7b94-4dda-8555-449120a61c6e",
        "cursor": {
          "ref": "93f29e7b-a8e7-4dc7-a158-fd1596e23a28",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "64c7cfa6-8b5a-4b76-abaf-c3d76920914b"
        },
        "item": {
          "id": "cb8b1f16-7b94-4dda-8555-449120a61c6e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9ba48159-59b6-486e-a007-141f7595f40e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}