{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e7e4ac4b-35db-4577-9ac1-a0e8c2053fd1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a4dc8bb9-bd76-4df7-a0a8-44eb01fa432b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f97f9af6-7966-4ad5-9a29-8ba27292839e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "acb03a90-f5bc-4609-9478-92ba21626c00"
                }
              }
            ]
          },
          {
            "id": "e5cdc5e6-e536-4a75-8061-41eda6caeecd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a57fefa-291c-4392-81e6-dfed7f48a13f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a13b6f53-85ab-49c6-ae20-a2016f4eb6b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8a381eb1-6e1d-404f-87f2-71b0c702818b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49a27ace-d760-4e13-817d-37dd83313597",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22cd48d2-427c-4893-a436-c72c74f17f0f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "831c3ecf-7d8e-4337-afc6-e8f4d4d487c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be8d11f2-a4ae-498a-97f6-9a9311159988"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28001573-0a5f-4476-a0e5-661ec09c3ddd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d3fb39b-dfa2-4077-8cb5-6ba065020c6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5b78af0-6671-461a-adb6-b61babfb3149",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ee27691-ee82-4536-ab1c-18e278b861b0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9a7aaf6-9757-4d50-9cd7-620f74b5053c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "48a9ca80-1d49-4f60-b078-7fd04e2e290a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3579c62-6b86-44ad-89b0-63c28c9ff83a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a8cd5ff-7460-4918-8ff2-def486674c11"
            }
          }
        ]
      },
      {
        "id": "81ac5689-3f6a-41f2-8205-a6cba12c0cba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7c6b213a-68f1-4009-841f-a4f2bb871ff7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ebe0aa9-c775-49e0-b5d9-97d238fa47eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1959079-635f-4b23-91e0-e01d7d246c0a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bf8cf6-8355-4851-9b8f-fc107a11f15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37c5a8dc-dc5e-460c-b8be-53903ffbf087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfffd009-86ef-4dac-b302-3aaeb98e9167",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42815ff3-a844-4745-abb8-bea8c99cc196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eb58a6d-ba3a-4531-8be1-19c18f0717ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422152fd-e37c-45c1-834e-e157ad0dbd82",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0533d3-1eeb-4918-8311-7b770961e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "944d73e1-9576-4c84-a832-4b36f555e9c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bc4aacd-c79c-4ee2-966c-d47248a090e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da0362eb-6d01-4f8a-8f3e-6277e32af8c1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7069e19-3e35-4e00-b902-37fed3256999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb2c8b8f-48a8-465f-9b79-5fccb666ee52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15250825-8b46-4846-ba0b-8f1f2199e89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1710c37c-fbd8-4eef-a366-c6ce80335ddf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f62a146-d91e-4012-8229-34faf3b1f1f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f1697b3-7513-43e1-8eeb-c7f7b2d303e4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9a5b093-9f1a-400f-b81a-d5ecef0ee70c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cef671be-a3f0-46ff-91a5-d2799550306e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fc59b58-8c4b-4e70-9bf5-fb77c446bae1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "06922fed-eb6a-476d-b9e9-18a362f4277d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "579fa0dc-0d90-48ac-8612-56cd6b2ecf96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9d0c624-dcdf-49b9-90fa-526b1bec11b2"
            }
          }
        ]
      },
      {
        "id": "3c1d5095-b0bc-48df-8060-49aafee9e2e4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "23f42abb-be23-40bc-9262-d37e2454f07f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3e3e65b-a384-46a6-a4b0-3fbac542c8b3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a85d51c1-4eaf-4719-b96a-5dfabb3f0e40",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c37045-7268-49d9-8998-923bcb8523d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee2b947-73b9-4373-898c-f262f45f3e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829745d7-7f70-49c1-a266-1b90c9016d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bfc1795-8bb5-4bbe-b499-b27a3bca7b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47138e99-1f80-4f20-91a7-8f76827e4f38",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685543cd-24c9-40cc-83cd-151e25759067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce7c68b-0f37-4088-a589-78966f6fd31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714f70f2-c0c2-40e4-956c-09d41856d8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc0590e6-ccda-4146-b74f-9f44002785cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ec215f-64d8-4981-96a9-f764059aa491",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4442fd19-2842-4df4-a98f-d575982ce2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40953ede-1619-4988-8a03-683d0c66b5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0043f330-0eb6-4420-9e13-e9518fd01bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4edfedbe-394a-4856-9b12-41f35293bf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977fb092-8723-4a1c-b9d6-b57c03a8ddf9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9993e98d-635a-4edc-859d-17ab2177498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17bf7a5-ccd5-47f3-a70d-5b6518b798ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2945ab-6517-4b71-ac49-6a023a3e2a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac50b43-4ba1-41d8-964e-1815283b6f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daea6551-833d-4b9d-8d1d-f0650919031e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e60615-3b9a-4c3b-becb-92d9d6f5358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b03e17f-6724-4a55-bbed-2b804041f66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fb8713-0f5f-48e0-aa09-cb8906184919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e58434c-48a6-4084-bf60-455508353d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0298bd5e-5ad5-409d-96c8-5cab780be120",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ffe64f-88e8-42a3-87b3-8e9374caf436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d112bd-6d0c-439c-ad06-8b8301ec9772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad09cfb-3843-4207-a007-c53502280371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0278caa2-94b3-41c2-bfd1-a178f66396b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e98e92-7f82-4c6b-b359-1f53e355fd00",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca20325-cf9f-498a-b799-2358b04b2b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2101a791-76ef-4eb5-ab6e-4d1165edfa7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a8fdda-326e-40c2-9b1d-7e84997d32d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48574b53-8f61-424e-8266-795e5b24f727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a78997a-5097-45d2-a4cb-3a479a874d35",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7d9d22-77d7-45ce-828f-f528b4dabec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e29ed42-d298-4b5b-8d44-38e9e272be77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50029434-724d-489c-a4f8-0c99cac4f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8efd87f-5a3c-4ed1-8937-0683b0d56378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c350a2-40b3-4be2-b574-82fbac09f2a1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f164c043-3044-4f61-8449-261562502cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43653d90-e45d-4b9a-adb2-2b2d3c6ec8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af66dd2-9250-4774-9d77-5f6f231d72fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f3b0ecf-13e3-4246-ab8c-c40eaa8e3915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f81bd4e-b834-43f0-942d-893805768f1f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39d96df-7770-41ee-a3b0-86a6ce9d81df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f6bea4-cf8d-4b06-968f-53d62cca1261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b808f15-0fe8-4938-bdbb-176919c9d1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "219fa942-efc2-427b-b360-250525a7326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4673e2-7f0d-4230-a139-5b03c44ddfae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f054aa-8d46-4e4d-a4e7-ed62010b4e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d9cf94-d2cd-4e79-9b2c-44349a684465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff0a954-165d-4220-9c6b-ac7f8f251cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af95851b-6a61-4774-bc32-f04abe80d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1030541-5d28-4490-b6b8-49d4838ad64a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f343b55-c7a3-4908-b4be-cb8f6975645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7eacc9-5f4d-44d8-975a-26a8d0915093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6319e9-aad8-493f-9f57-fb9a041320f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b304a08a-78fe-404e-aac6-67531484329c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9349dc5c-6fca-4e9f-be0a-e1ac8956c5ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b5269-c4ba-4d48-a020-69ffe60a3b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9f1844-d4e4-4162-baa1-77abeaff6c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab4ee40-8f55-47ea-80e7-110b3301b959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f412e0-57a5-41ed-848a-38b5883443d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4a3b5b-f6ff-4da2-9ebf-d8e1aa3e2ede",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a52b33-880b-470d-8a7e-a88e65ce9c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d659272f-ed38-46c8-a92b-ed0cb6a71fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf351db-78f3-46fc-9abd-5c019c803a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b1d1b4b-ee83-4cf1-ad19-c908f78bdfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b236c49-bee9-4138-b0f6-68b23143c82b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048665e9-9169-47a6-a9c6-fa6c5dbc57de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de4a994-0df2-42e7-a27f-b90396470bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5ba5b4-8c0c-4b49-968e-b6fa633a11c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbdb2c96-cbc7-4eca-88e2-dc273e2ef490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653b4a9f-3aac-4860-86aa-5fbe468e84bc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be1f7f3-a3f1-4a99-986f-1dd4de2a06e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f45639-0f4c-4606-80a9-592968828f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9c8766-a4ed-40b4-a809-4a337a70cfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80edd76c-cc59-4aac-87c7-911c666ba524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce07cb3-7f36-427e-a842-73222e2d6f98",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6314d7c-4f31-4fe1-85c8-f460fdb882a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf4f6e8-f92d-4164-b3df-d6a9a8330907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7e6081-a325-48aa-9006-8886f5240143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c5c694f-eb56-4106-a77f-212e1a0ba41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeec78ed-1022-43a7-980c-3990378179ee",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3753d6c4-7a66-4799-8196-a33dc23605c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003b8367-c84c-4b08-af65-c6ba6f50be03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aa347a-62c7-4b26-baaf-1487e7eadc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dab6d8-a5b2-46e6-a66a-5df71b515d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426f2097-cee4-4e11-a95f-9874ed8b0647",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bdd4e0-77f3-47cb-b182-ce41d69e10ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a792ca-0b7c-44a9-b278-978ee7057fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e848d96-eb4c-4605-978d-06812baf5f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa7ff20-f52c-4402-aca9-5665fab9440e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cb96dc-1682-4c93-9768-02c724feaee0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a678a7b6-9eb3-4a4e-bf6a-d9678826487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20afa1c-7b71-47d4-9e50-5763e29d1539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8627377a-efb9-4719-bd3e-600f49a9a1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "754e22c5-4693-4545-bd38-99d446b94ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060ce73c-c592-44af-b043-c3a20fff81a2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc6e9c9-ce0f-41da-a5ab-e6948d93a8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82321af2-6856-4f31-821a-6ef7330c6ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cadd385-d3c2-491c-a91f-20ef9493c02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c02ad8a-6e0d-4c9b-be45-5da9179f5a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90d33d8-4425-4c92-b46c-a44ea77a0ecb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f5118-f28c-4b9e-aa45-7220dea6bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1e599c-eb0c-4d25-8446-a5e97c9a0b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfde823-979c-4a38-a981-828921f007dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c432001-6d81-4a02-ba0f-cd9be4dee2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfe9324-c35c-42e2-bb0b-9209a57c0a0f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f33a22e-10e3-46a3-a814-ba8462b6b32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8552da-62e3-4aea-90d5-df207288817a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c33753c-8023-40ae-8ce1-a135af3ab202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2aa7aa-20d9-4a27-993a-de970381f69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca693ee9-524f-4342-8a49-7823d78433bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e2f5be-e96a-4562-bb91-fd59066fd047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95f163b-739e-43d2-92ce-2ea195e4bcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521106a3-ca2d-424b-99f7-bf69940ea0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "910ba1c7-6d85-408b-9873-6d984f6b41c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1428432f-d198-4922-9b8d-afae6e2ec152",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f12e6a-c37a-48f1-800e-fb19d9769fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a805b1-a694-4318-979e-2647ca99780c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5719e54-8ef2-48e7-ac6b-8b3af644a5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6013501-bf17-4418-9850-9c56d283e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67946547-c41a-4824-af22-c5becca1e47e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8efab1-d607-4093-a71c-66384f66127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b054e65b-5479-481e-b840-6128717fb3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83246261-9bbd-4ee6-89e3-2397c58c758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb00f21-7b3e-4732-8be8-710f72abf53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc466377-564b-44bd-87b2-46f6e7a9e65c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52daa834-1795-45c1-ae87-5693d8ed4a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfa9d65-e5a4-4f19-be0f-53c6390f4012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b5d0e-31f7-4eac-994d-d815d1cfb147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5eaca4f-ce70-4ea2-b153-f1848c7d97fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc6ec13-c9e9-4224-8978-a657ee301a5f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a10a9b-eb51-43ff-aae5-ddbb07673105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d13565d-99e9-4828-902a-756743609eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf5b9bb-9380-4370-8176-ef9360467581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "483e2681-6e73-4068-89f3-fee0ce5d3fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef78eec-1b50-49aa-8450-27cea6368459",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49098f68-62d0-4a9c-9ee8-06f37f45a6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce3d032-9fe4-4e62-a1c8-3138bef5480a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be2f821-de08-4154-91e9-9483bad52ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02043ec-9b78-4e68-9491-6f68f539d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e48273f-5593-4056-800b-8b5db2b2d88e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6aa770-bb98-4732-a5e8-a74ad446060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bf2bd3-c135-4631-a26e-6046b4022243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e72583a-8e95-4be5-aab7-446d75bdfb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "542d6c1d-a75b-402f-bd24-a321aeef8338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb687ca6-2eba-4df5-b549-1301b58ab7c8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d72493-6018-4b06-a978-f9e2cb21da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d8ff17-3fb9-41a5-9e41-bf24eff57a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50718ef-974d-4f08-9c0e-1bee84a340f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4e93a0-de73-489e-b94b-b01e2cde080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ccfd62-de8b-4e51-b779-7a1dcef3f423",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e79d7a2-079d-4cfd-b523-3971658aa086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f1964e-f927-4380-bfed-b9b1b1df82b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf96e92c-ea36-4e5a-8734-a6055359e242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aea74de-cad9-480b-bfd7-4de9211cbd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a8a0a5-9735-4568-b45a-ccfec6399a62",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eada3938-9df3-48c0-be15-c19501368eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680ef5d1-3020-4eba-915a-210fa1c6b1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3d5ad8-559b-4fb9-b387-2778c4b82125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56e707f-d7a7-4109-a984-ac3a3c025b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f67d95-b824-4659-a721-ef9fc45bc082",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb8b12d-8215-4c28-a5ed-2b75753c5c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bdd801-9fa4-4741-a56a-5d9ef75cab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f409f42-6b0a-47d8-ab13-4de0a528064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0c55c2-4d81-4876-81a8-01d7666c9f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1299b7b-6b6f-4ffd-be77-e60cf0488d98",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394f7fc7-816f-4e9a-8201-64c06d027c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a311311e-58bb-4c8f-8e58-a08280f55555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8810e6-cac1-44ee-8fb8-7d5d85a8cd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e27d36c6-0616-4053-bb07-b0d42f8deb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6812d246-dc17-4659-b455-fde67ce12097",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cf023f-4921-4b89-8e92-dae7530220e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6a1a854-89ad-4a55-9f47-7ccb017c09cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7402c66-3985-48a4-b5f0-75e670aa4f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15e87c4e-72b6-4b9b-b561-e61175201a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d462818-7a8f-40a0-8a34-b58c062c037b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706353b5-cc89-4267-b75c-e990c0662e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb585b1-15e4-47c0-8526-27d3eef0dc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93030be-e951-4555-85ac-ebacd7f5aa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "076d0aa5-e92e-467c-93a0-a047262eb9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44d893e-5f1f-47fd-9344-10655722db06",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87239baa-d167-4e07-8bd1-1e25579df471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36e2e00-aed1-4fa2-95a9-04f9d3444979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633a7938-cf78-4181-8224-2b59a70c8346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8fa09f-4716-4252-bfc3-ff2f31f3fe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791288f1-e608-4c73-9393-1e7dd26ae983",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d603806-433f-4705-a350-c4f154e9add2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e20970-694e-492f-8466-4e7d5f6aaca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d3b87b-4cac-4f15-9582-0b0bc7a8f984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a0f366-f3b0-440d-9397-d353a9c3661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b59dd64-2939-42ed-a486-ed201cb09e13",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999d7223-a734-40ab-a9ca-a07f6f30f920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc33af70-379a-43cd-88a4-6e6f4e1d82e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3a2f01-0e90-4cd5-8cb3-c5c8e2b1f4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0933f8d-f88f-4d1f-9a00-3e4498b0483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc831c30-1692-40d9-9a49-467c366db3cd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e80f2f-2ac8-422b-b535-92267d3cd783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aae919e-a23d-4f2c-8196-6e4175e613b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58797377-9a2b-48e7-81c6-46dee06fcc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9babc6-a33c-4148-a6ba-3985dd7f4663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07de32a8-c7c6-42af-b82b-d48f8fbbed1c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c23f884-75cf-466d-9549-ef51beb40998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8cfd3b-1dd0-4489-91c8-15226b3c74bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6253e9c-fffa-4202-87f9-02f6eec47157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f70d231f-73d5-460a-b9cc-d5da7181e787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c30a10-6892-4f3b-98e6-be8d3719bd04",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fa530b-889b-49a4-a121-c0715e5b4347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7167d3d-0417-44b6-b0ce-dd9a90ee88f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f518df2-4837-474d-8a38-fe61e5cc01ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3c055a-f1a8-434a-81e1-b5546955691f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aed7c62-b91e-4fdd-b6a8-061af20dd8e8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f126f90d-1eed-4e7e-b0e3-edd089e4d8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9c6efb-f903-4c46-9d11-dc8283b1081b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d632e97-e187-43a9-962a-135a243d9b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7425721-236f-4a7e-853c-b162cae5140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9578363-b678-4cf2-a673-b0c98f8a434a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0b70c-8db6-4489-8ad8-5459c426a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2441f903-a10b-4672-b2c0-4995db249b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb42fa2-33b9-4342-8de6-ad9eab624f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81022c08-b92e-43f2-8675-40dd6f41d04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b81cc2-c9fd-420a-a9de-d04b9549d0db",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2343bf-03db-45a0-af5f-55b88b0c0101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57680883-af42-4ae9-be30-ad1d3e298320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279528d0-c33f-4db2-b8c4-7dcbb8d1952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5836c855-878e-4fbf-8267-8b2e651777d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c270df-fbd1-49e2-9d2e-6ad37adadf95",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538ed0ab-ec43-4c49-86f1-6aa7140951fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adc00e8-0ff2-4eea-8948-dae57e5baced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8237838-186e-4aec-b380-a5e44b41935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "672cffa1-38aa-452e-a57f-db0360f2aeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4c9629-5fb9-49dd-8acd-feb2ce6fd14f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ec5794-928c-4b73-939f-d4d7774d1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0082968-ceb9-4b4b-ad48-34cb0abe2d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c0e3e9-78a8-48a8-aa22-9a555a1aa540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0945d977-4357-4323-b935-b062057a6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181fe828-df6e-4771-9d0f-6acde0524c85",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a193a-e950-4e1c-839b-952812d6490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50d28ad-8d26-498f-af51-573ea7eeda72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb31e511-c8de-44ce-9f26-e8d5ea358d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39619da0-0076-4e59-b149-7809cf7beb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f1bd6a-25be-4b99-a909-8b10ee8b81bb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fef3993-17e6-4939-8e9e-ff8ccdaee66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3d6072-3a00-42c3-b1b3-d9d9bb33f0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69066a9a-7a4c-4f73-8ecb-f29f34862f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f81c2445-e2bf-4bb3-bb73-d4b869b77e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1884ec1-5024-4be4-8f80-329b2c2be3d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a47271-7fb5-4da6-b7fa-9eba60b3af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b979e0-111e-4e01-a2a9-01c45ffb2a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b9e1db-a603-43c5-87fa-cdbd9848dedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab5a0d5-1867-4b19-9548-dc609883825c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c37da1-2629-430c-b3a6-e179b2d083d5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63622358-5b8f-4537-88b2-b6b9245d082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2171b07-b5a8-407c-9009-12cb6b14febe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4ab48f-8e8b-41ce-b5ac-0495ca82838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d120d4f-ff55-4b1a-815d-ac557d393723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bcc1b1-d29a-43db-8cc5-e1b7cf133a03",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7117f3a1-9740-45e2-8cf7-63878de04a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9f8904-ec36-4ed5-81cf-2f780c26394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0881fe-388f-4edb-9f9e-b4f7b1f694db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87e5af4-1b40-4e22-8903-a96547500e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869ba633-ea2b-4fe0-81ff-1c614719b914",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72c3f38-1f02-4604-85aa-11efc2f0438c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb4af57-371b-4a14-9fa8-ff102df6e90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a3c4ac-9237-4590-8d45-2ef37b396dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "136fb901-7f20-4e99-8cb5-4b9865089484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a21d349-3592-47d9-bd6f-8e64cc5e0dc3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b361e1f-e2d8-4b37-b8b2-c2e6ff89122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3da9db5-53a2-4a26-b3fd-b904f048f701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612900cb-c6be-4dc8-9c17-29e90d3255d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e69febbc-16bb-4a97-9486-725f62e78225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c52d5f-bfc8-48c7-99b0-689faab3d580",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904926f0-fe0d-4a78-a579-f5d791b08e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b67bee-05b9-44b4-9a23-53a8c5a7ea73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eb2e5b-d37c-4acf-b17f-e8bdf67bae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "58ac3a75-78d6-473f-927c-c19c435ba28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aba986-97a2-4676-9512-a206fe821969",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fd4dcc-2bc7-4e42-8339-6635995592b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa88298-97ec-40f9-8ad2-5f7837f616a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d675af6a-c239-485e-81f1-7936f7095446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0ae4ca-6ae4-4888-a794-6094b0c5d687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8e64df-d88c-4e0f-98d8-9dd8b8eae4c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42afd96d-bd0a-436e-8bb2-ee18cb94cf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e6114a-cfee-4ab2-b338-4a55704ce5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49120f0c-6745-4d9d-b4e1-9986e550a83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe14687-2113-45f3-b961-adabee9b7cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfea702b-500a-48be-bb51-45ced495feec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa497a-1a97-4081-82e2-27fc3d6ad054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fca65c-2417-4115-937e-8f28aee23403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce754fe-24fb-4faa-838c-8025680f49d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dce5ef-9d41-410b-90c2-a129302f962a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b67ce20-3847-4d80-bf2d-81f43afbbf1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dcd52a-96d8-4830-a3a6-cfefa65f732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e985ca3c-cf2c-4981-8cba-7835483f1be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58ad3d7-d435-45ec-ab76-65ea97b19d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01c29ec-dfe5-46ea-95d4-2998d1291045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d762b91-f072-4e4e-84c0-ce1036dad92b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9875ae-9b55-4a39-98c4-e64299756689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11191ee-a218-47c1-b8cc-0600219a3d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a66efb-50cf-458c-bc74-e48c32b80ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f52772a0-bc15-45dc-9554-c73da897961d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8c2a07-116d-4d88-b39f-3e9d1e30895b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233bbd11-5708-4554-952f-81c28e9ba428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ecf57b-ae52-43a0-9392-f11389bfc47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bb06a9-5f99-4ca8-86ba-7bfa4f911066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "504f7d4d-63fd-4279-9ba6-d7b3a41138e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b2929a-5651-4757-9cec-102edb45c147",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83907e49-65c3-401e-a330-4ea46ec1d37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5025d158-a5db-44c1-822a-78b5a21a10ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d04d25-3404-4ec3-b35f-78ffdaef384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c086d491-16ce-441f-ba0a-7e00a95226d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a489721-3f54-4289-b9d4-d51551bf8d4d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb92994-e61f-42a3-bef6-989104e3069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b1e075-0ec2-4880-bd49-2fc5a6bde645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e24450-0e1a-4550-921d-d6506675f981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa4390b-a896-4c54-80fa-441b41d0a94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004f09b8-2e9d-489d-85d8-69310fa5db8c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ad4d01-b4e7-4a87-89a9-d68f39877686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eac867-cbbb-4bdd-85cc-1a00166a79fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f52abe-ee7a-4139-ad22-fcdb65a2bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44388b85-2df3-4fea-ac51-8b4946982de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd118f2-f9bb-4c66-a563-7baf669473ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd809721-a61f-4452-9225-6b9172da62b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00849d5-0d25-4d3e-8333-863410c68e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3e9d15-017b-4e27-af62-e2dceb2b8648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "290ef0de-c775-4706-ae17-870974dbe005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cda4b7-c557-4b38-8403-2178f7f3b5e4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00fa8bb-79d0-425f-a6ec-5c25e67334a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20154d5-510b-46d5-92e7-d4528d966cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2489b20-5cc9-40b5-8c2f-1ccfc0964b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43cb4309-833d-4f5b-ae67-d03e6099b0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97b3045-e536-4e11-b1b1-87e260b0a638",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f006ecd2-6a8c-43b2-94b1-6f923ba4c59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5f57a7-43f1-457b-b586-f6b95c9716e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486cfed6-5ef2-4e97-b13f-2b2cb5f330e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a257d86f-29c4-490e-a1c3-83e309e7de71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc8c1ef-82c7-4590-bd07-c8d1078392e2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751d7e36-8e41-43c2-9f54-c80c1212e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24377a6f-c2ec-4fd7-9f4a-e4aa3dc44832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bfa031-adba-47ec-8545-71c944710782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b959bedb-28ec-45a5-91f1-9e9bd81f91fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e259764-8990-4e9d-a6b5-85051d466b1d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec84159-7506-421b-bab2-8aa061124ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d9cffc-0567-4642-8763-9c7dd78eb47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f547822d-9150-4958-893d-f640db0d3959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "613e476d-7e65-4f8d-9b9f-fd4344894b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e2229-785c-4ecc-b191-2ad663e157f6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd02e7c-1aa0-4eba-9e7d-bd7a8f0d0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e950c991-6b58-44b4-80bf-e625c41a4e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8856bb-4d4e-4627-b6e2-2069286241b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aee5bd7-cacf-4d2b-b80e-4dcbee4f86fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117cdfe3-b204-4211-aecb-cc331f9c19bc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7843f5b-9874-49d8-8ffc-b8fd71537554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffc76d3-c112-436d-87c7-47ee800ba56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e90597f-0e68-4db4-b180-55566eb4708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ef9f8f-e8ca-43b2-aed0-190983e5701b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8163d2-6463-4a45-b591-3916af284298",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a16477-8709-47e2-88a4-6e13a6de48bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a064fa-ba87-4738-b3e8-b8983f2169fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fedcd1-133c-4204-a57e-0e4e269d8692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4697118c-598b-4dde-a66a-523bf9481506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0032a833-8745-4303-a64b-0ce7c3029566",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f33072f-75c1-4a1f-b6c3-35040b773bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81b84e3-9862-4250-b2f2-c0869042170c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c70a382-4c6a-4b48-9276-0f21129df319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be11eaec-b9f7-45a3-8290-db2672d346a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa42ac4-0e4a-4137-94a4-dd278d465c05",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aad9816-2da9-4e46-98f9-993ee1fb0ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2d7d02-0464-46ab-9991-946a7c21d625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f685395-911b-428d-a22c-b146925f2913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8a1eac-bb44-4082-82a7-c81a073122e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78243e36-5354-459b-80d5-b5e1a20b9544",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6283f05d-8f9c-4552-9339-57bda673e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c45e6ab-262e-4994-8ca9-a6ad07e0b835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b54eea-552a-43e7-9055-69e572c50b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5180aeaa-d947-4146-95ac-cde1fc6ccac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f475cff7-0b03-4c55-862e-0f9b844b878d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dd8c65-0bd3-47fc-a72a-e486ad8c5314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd90b4e2-1b41-4fec-8c9e-df8b292a94c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b6b00-6a8a-424d-b6fb-c0d57a21520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a26652a-ec4c-455a-a004-f3a5ae3b8e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2844059-0aac-483d-8a1e-4863162635b9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0573f6e4-d2a9-471f-81c3-a593761466e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2f6cc2-dad0-4b8e-8640-08f77e0b7305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f210835b-fecf-4f94-bae9-78f22b9c9e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a18846e-2ace-4b46-b99d-80256dab2379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c24df30-1183-4caf-bc8f-d07cb01fbe9c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cbf539-c8ec-49de-95d9-b13f9e7706ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f80ae4a-d8cc-4179-916e-56e781771020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a66b711-8f48-4b0e-a4b4-b378dff629e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fee9ed0d-e940-4da1-a927-d5d55d32f164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bf429c-99df-4f57-951e-91f0afa8850b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1bcad3-b08f-4d23-9424-bac6ef1521a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4714d31-757d-41ff-a664-0359864f4576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed7b11-1a5b-4a9d-9f3c-34b145a45f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e13e6c3e-97a8-44b6-b76e-f608be1228e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35684dae-d561-4208-bf8c-2a9e5d930b6e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4d0c7-22a2-4b1e-91ee-92bb195b6172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ae0f85-a31e-46b7-b551-3ec9ce4f0aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be581e1-d38f-4c05-8c98-7c9df4765643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b80e3b23-ff34-454f-aa8e-75d275331784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b1d27-e49a-4fd0-9366-7ddea35beb46",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaf1be9-cc93-406d-9730-6d794dac82a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e70138d-dfc3-48b8-b060-e1eddcc7433d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176080c5-94d7-499e-9a4d-ce09932f2fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe260e6-c420-4a14-baf6-d50fe0e809c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a07d3e-ab36-4d39-a232-b3fbc21aef40",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5691a585-6197-4c6c-8af4-fb76a4486a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd09add-814c-411f-9ce2-271a4830f34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441eebba-6b2c-46ef-bce2-f70fc807edb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f287ff-4ef5-4755-bacb-d3918710e07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c863f1-1608-4f5b-add5-399757fc50c9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c8a7a4-285d-4748-8422-416cd1baa3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6eb3caa-9f6d-4bd8-a588-f9d889525408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338d0939-bef6-4005-9897-81aeab2045d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ebed18-3415-430d-8f92-c15ce6bc8703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616625b9-06ac-4695-8249-a3de27fb547b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18799817-45e3-4de4-8412-6890eea2f546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c82f310-820f-40e9-8294-5f655e91c2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d1dd53-eba0-4c1b-aaf6-d724b64fbbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6550aad4-1559-4268-a26e-0299f5e7bd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ff33f-aa4b-47a4-a7c1-1669276ae38d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6445149-67d7-4462-a323-51ec21dc92f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f808346a-2cfb-4f0d-9b86-f8e8af4170cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fbb9a4-f8b0-4859-b3da-97affdbe04f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d203671-4776-46ce-9e04-7a0395952221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9663ad76-ea2f-410b-8306-d21803986352",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549dba3c-3520-420e-b44a-12814fd0b4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19562b02-69b2-4e40-b731-6ae4452340b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64467ca-db9b-4370-801d-9af30c4df1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64c1cfea-ec2d-402d-a60c-007f2ab602cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e978fca-1bbe-40c6-b30f-30eb5bd99e30",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82762ab0-e796-4ed6-b067-ab7192415a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6bd0ec-8560-4e2b-b226-fcffdcfd3dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53afaab-6020-48c2-8da9-b7ebe3e6e142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e9faa0-7307-4745-9881-af71025e575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0f2e62-296a-42aa-8e97-9b65bdc1f411",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67905607-2ee2-435c-b0f4-433427690b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af10d46b-24cb-4f03-a785-f64416f52463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c8dfee-9d47-407b-a606-42de027db1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb93af63-bcb7-479a-a55b-ed7dca6b2545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8d2dc3-f1fa-4b47-8cf7-b827a03233f7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44267958-5fb0-467d-bdbb-f43f6ff56410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d453ea7-582f-448b-8c5e-dc0be3baf7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9dd77c-e043-4254-8fed-81ff79f8a88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8efb6ba-4177-4e21-b70f-3f35343f3016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bad255-b522-48c0-b5a1-10d37ba101b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c888467a-8540-4529-9e83-36358532ca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eade29e-898b-473f-8626-de91e013e628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea914c8e-4f32-4128-a955-7e95066434fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "99fc27c6-627f-4825-b82b-831df10b8e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c0e7f-abb0-499e-9d0c-cffeb7765950",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88576d8-77ab-4f07-8879-acef0bbb01c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b0ee6be-cfbd-4798-95ee-e16170db6a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc908d-efd2-4f51-ad2d-a94aa5b6630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22bc82ba-f263-446c-beb4-aff951a0d3fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb74343a-6e89-490c-a2ad-2ced816f4d7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8cb5dbb-05e2-41c0-83f1-bf098cc25c99",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fadb729-a5bc-43a2-8c50-e29585eb55f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6abe5642-36e9-423b-814d-6cb125bc8d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bfa1e0-d4e9-4dec-96e0-7c9e05ad88eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15852a1e-9d04-436b-a78d-c7d5ab5a2724"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de2c19c0-9f14-4cef-ad88-1aeaa4f4755e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "342f7144-64cf-4762-b753-b309940c246c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e5156b3-3c9d-400d-a00e-05de26b0d2ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c15eb48e-8807-4528-84dc-f99cc7f9d567"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c645202b-f9c0-44ea-b82c-b1bf840b32d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "948cd591-950b-4b40-9454-500c60e013fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3cc4f04e-52c3-40a2-8331-4abc7fa61a0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c65502e-c1fd-4e6a-967c-02b254ae3c7d"
                }
              }
            ]
          },
          {
            "id": "a23b9e47-f8bb-4d32-9208-eff2f854717f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72689b5d-efe6-433e-8e15-716865d8dfac",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f192ec0c-5a2f-43b9-8247-2f20c8a57672",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850b2507-4578-4508-9c12-54a5f450e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "89a42a90-ed9d-4db9-8483-d4d243015c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d135f2bf-92ed-4707-baa6-a279877ae368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e309ec4-6612-49dc-b524-5d127e59f798"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef19fc42-0897-4169-bcf8-8bc387165fa7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3672a5c6-686e-4f48-aadd-e9a7130dab38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17985a37-7284-4417-b81c-1e3e25acd05c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fb21966-92a2-40a4-aaca-0bfd191312b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26a6d5fc-a85e-40e3-9327-9c118e8d37cc"
                    }
                  }
                ]
              },
              {
                "id": "f06d8e38-8a3f-482a-bae9-1f9ac3374c16",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a17a1e3c-285f-400b-8f62-11c908cf0249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eee7231-5997-439b-9597-d4a6c92ee652"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2dbfea9-069e-4fa4-978a-1c2dcda7954d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "596a1725-206b-43e1-88a0-b65a59c12f72"
                    }
                  }
                ]
              },
              {
                "id": "38a6adaa-4dc7-4e04-a562-67638c270173",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e66f2028-dc3a-43dd-8697-986c5cda5fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41cc941c-49b6-4859-a0c5-03798c2032f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5d13d7b-6d6e-4000-8b33-367d53a1665e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84e3a64c-265e-4fbe-9a34-a13bac3f6c30"
                    }
                  }
                ]
              },
              {
                "id": "ee9c76da-bda4-45a9-9128-f5884ea90dda",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fbff6f6-8adb-4781-8f97-f951ed448cec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a79f768e-6c9e-4c2c-b8f5-82b2e9d1f86e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "892bfc49-1e25-4adc-8364-7a12f9263716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7b945c9b-db91-44df-9c79-7f4bb3898eb0"
                    }
                  }
                ]
              },
              {
                "id": "a70c1d37-bf0c-4e09-a0c4-a7d49db4bd47",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d805c12-a35e-4eba-824c-233c0c6cd7f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbd402b5-717c-4e41-a479-b21cc13b276d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa2384f0-e324-40c0-af89-68badee39bc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "75a56bd7-c37f-400b-951b-6e8d9268f980"
                    }
                  }
                ]
              },
              {
                "id": "083e0164-8b06-428b-b5ef-206b93af8911",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "917d04f0-8d28-4c5a-9117-523a61da9991",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8e905fc-1bdb-4a60-bbea-abca45b53f6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc89be16-c8a9-4596-81c7-bfbf3c4caca5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95cd53e2-082e-4da1-974a-26a7bf7e9ca1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9845420-1b0b-4192-a1ce-11ed9cf4b711",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2369e971-b7fa-4711-afb8-db80fb6d4b8e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f67bf4d7-6a6f-4e01-a851-40e7f0641a40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b80778b-0d2b-446a-85da-e91a374cf769"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fcbc8e2-8c12-4505-a46c-28ff570601eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f02a9415-4505-4abf-a81b-fcb95e2fb9d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "335c62e9-52dd-45f0-8c17-8c59c221e94f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3330b894-e071-4864-a58f-038e0fdf69f3"
            }
          }
        ]
      },
      {
        "id": "fc45d230-b120-4e74-806e-dc8a54cf483d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f22f9734-58cd-4c39-98e0-74d53d8225d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "774752c1-d584-40f9-997c-64684e131824",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b27bb37-4819-4a9d-8a81-a312c6ce51ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c164d0d6-9937-4260-aa3e-dbd7b0d16e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063ac93d-e116-4047-970f-1773aac8fba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6540c7c-a54e-4189-a349-da5d1bb08b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb3c6b3-8f24-4b45-a768-8f9a15d1f09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa465383-be32-4513-bd55-ffa4c10b7d93",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677fc0e0-a03f-40d6-9fac-48b5ec9915c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257c0678-a5a8-4b03-b99b-ba1d454c3a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e55d186-fa93-4891-a5b7-eb266a9bd4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf09944-0ace-4170-87cd-66b644c77d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff336ef-b7d9-46f8-a0c0-2493da189a39",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94447d1b-b359-414e-934b-c9376294c1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d4c96e-fc70-4a62-99d0-6c9f2bfff7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418f8dbf-4786-40f7-8d83-720117398997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "376b1cd7-e689-45ef-baa6-10ab63dd4029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9803ea3-19d8-469f-b848-dd7a79cd2dc5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6470a6c4-b535-41cf-bb16-29227ddf9a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592a800d-ab1a-40c5-9dc1-a9d0d151d3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f35b400-04c6-4645-a660-a87094e39a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5403ed10-7058-4fe5-8998-7331e5aa6c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6568ceda-f462-4bd7-9c7e-1073184635a4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a93ea20-b76f-4f42-925a-54a514f3e43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a12af73-fa28-4a05-bdfb-10d6ca39f0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e0cdb-d38b-4c1a-a522-b9010ca037ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37326488-7fee-4585-818d-72d58ed76af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e23508-4d7f-43dd-b7f9-207e502f1c00",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c75b753-a0ac-45ac-adbd-8b7540234970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771bc483-9228-4b74-9886-e740c94a2fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba514ca-dfd2-482f-a4d2-6cb94f0c4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3f0847-de04-4716-a838-e5e20d6fad4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ce731c-73ef-49a3-8baa-8535d3e07b05",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e0cb39-dd16-4eda-8134-ea7684bfe58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e110ed-dc77-4755-960b-87fef40d0752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1dcb45-8154-4720-ba04-a90192d533c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e9d545-847b-412f-99c2-4c95c2a9e1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac630ea-df07-488e-b1fb-d3eb89fe1508",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dfbff0-6176-49f6-90e4-2111794c39c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36a2a41-0f6f-4f3e-ac18-94eb6eb8ee2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb33dad-a041-44ba-96dc-74371375cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad55a55-0e88-47a3-be12-8afb341d39b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a73dcb-c478-4a9e-a5dd-5a35649abd59",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9008671f-b3bd-4f01-bfea-c5039b1d3082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f176a42-1b29-4d28-96c0-f04851228535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90f8c3b-da22-41d2-9c2e-45243f525112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12684794-f0df-41d1-b691-6289e6fb8b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d81dee-d734-4914-973e-52098bb5afaa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66077b5-dbb0-406e-b21b-b1936e9317be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b313170-42bd-4474-a4df-f844cf524578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a497125-b332-4099-8d70-913dccee408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27b780d-896f-4a6a-adab-5191dc80ea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dc28af-33e7-4040-a21d-ec12ef0f1615",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b05912d-7095-495e-ac36-7b5831428adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44823533-629d-40b7-9d8e-3bcfb11a89e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2373010-9a84-4df0-82fc-140335f53941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6163b965-b201-40b1-be76-9787bb792356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7964c9e-3aac-4e00-ba83-1a833922df33",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7643cb-0ab9-423f-b78a-c0fbb007868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280b5308-3fea-42bf-a5ac-225c34493c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b39e4fd-3186-47e6-a733-1ab723bec8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c46b101-879a-4ec5-8905-ce2cdf6bd5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1d1c3-0714-4d8d-8ac8-8d7ba45f8c0a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea41643-2092-448f-9719-a2b28426131e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145254ea-d9a4-4ccf-9473-5d563d050372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ea16e9-df58-4825-b420-b80bcfd16df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b80f8ece-f01d-40bb-96e2-ec6264be07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8c5a8a-0ae8-4f70-a084-d36980082209",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08185dd5-9513-4d90-ba08-880d84dbc4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e273b5-cbee-407a-81ce-15bc255618ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fafdcc4-61e8-4aa8-9ad4-fee39822c27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "692c5108-860b-4e71-b1fe-78bc6ef669c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a65ea8-bece-4efd-9bd0-7959b9ef1d26",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b4f67-725c-4c77-80a9-b995f1c84583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03256c4-0f8d-4cba-a1cf-af7e7697384a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c947ba76-068c-4243-94b3-fa8ef8e6069c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c2d860-72f1-4452-8a52-a46d9ca61ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8496029-2a2e-4971-9595-d0e29e4b6189",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03fd705-1dd9-4207-b28b-918f54263764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a89b032-6104-4cfc-8312-9ce46128cfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb97b57-b9eb-40cd-b1c8-9cece0dc11e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9eb478-d870-467f-953d-c03ba31a89db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd7dcd3-f6df-41da-9e0d-f94a75a6b774",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d508ed-d142-4c47-a607-a997f39fbabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04062ea7-aec9-45d6-8b45-1c81e1d7c692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50afd617-3eb0-407c-b92d-f0b7ed807704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc852e4-0f72-44d2-89e9-cd70954b837a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776b73b6-1270-4b73-b349-fdf2785a548a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875a46e5-b0b9-4029-be43-bfcb597bedef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daca027-95b4-446a-9a36-7f0a345aeeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425a6bf0-aecc-49ee-bbf3-eaf1e0052935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23e138f-387e-46a6-b13c-455c7bd433ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652cc152-0b34-463f-8823-715c0b852095",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17671286-63a1-4d1f-a841-e752db0571c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90d61ce-f239-4fb8-8834-cd48285c0e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24162b9b-3a9c-4784-a09b-dc9bcec7621c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "743d23af-f327-46cf-9048-26275e63c449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53b5efa-01c6-431e-b017-3e84518a99c1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac95fde-89f9-4312-a298-2fe476bee665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae52908-8cab-4525-b2b7-367de23fb3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9309c14a-453f-471c-a780-98c786b624c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aa0e84-9652-4779-b1bd-2372c984baf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb8b59a-9ac0-4605-8910-9833a6305b78",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf7bf4e-c3b9-4891-9625-80bcfcea0d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6550e5-46ed-4ef6-bfac-12f2ddff96ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c4eade-ff35-4775-8744-32cb5469f0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48cb095-d78a-4c6c-b5ec-95fbef45a427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f2005a-6591-4ca0-a8a7-8bb2d1c447e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e11507c-61d3-497b-a096-45a70107680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff05155b-606c-4409-9323-c10ba074e720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801a2020-e3c1-4bcb-ac64-3fa493060946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80ba47c-9e5d-441d-8927-61e0bfae6480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a75f94-8a2c-4446-8590-f97617040c12",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f6fc29-d9e9-4f35-8cd5-3a3320369eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4113cc4a-9800-4c45-a8d9-0fd4b9f4ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acce25b-3e66-4a4d-a678-31d9dd34b3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a987e88-d2de-436f-84bb-fafbf8e16c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dec88e-5b6b-4d5d-92ca-b5e4b7a24c9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b638454-32b6-4d6c-a439-981097584bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed2ec2a-dbc9-4ae4-8f5c-b8bc24917794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa294e54-fb19-48f1-91a2-4fe52e45bd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ea05ab-020a-42a6-b90c-866068775ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7811b5-a17b-4bd8-aa2c-7e84a7e27c4d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9192943a-834b-4f2d-913b-038004fa9bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20b9f10-b596-4815-af49-76ed512bc1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e249fe29-491b-4f5b-9635-3d38836985f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a3da53-ebe2-4b4e-a8f3-83a0fffd5e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ebe1f-5cb2-4f13-aeb5-5cfdbc31fd34",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16225180-49fa-4b17-ad4e-821950f4eebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c161cb24-cb96-4d42-bd02-fe37ae083063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a6e483-b0ce-4f3f-a658-450674a22567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ee8ce2-4a68-47bc-9b1b-be3331cbfabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a91931-4c07-4afd-95c2-7b419ed0d47a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7140feed-b4d6-4cad-878e-daddb82d0a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21bb32d-1f8c-4c48-8865-90f8611981f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937efb93-bb6c-4633-8bf0-c6b073ab082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10673a2b-a037-4964-bbd1-9383aefabe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c92ff1f-3504-4ed3-838f-3c0829b7cd2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04655ec-1bba-4538-8f3a-a99a19339aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ba7671-7e78-4ac1-9f0b-8dbd63eeab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0639ea78-91ed-4b37-8a3b-1a2eab8d6bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef02b3ac-1202-4a0b-830a-72ddb8089010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c79ba4-b610-48eb-ae09-a006c19abfaa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8def221-1244-486a-a57e-146257f1b62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0801d023-0c50-4ae5-a1d7-a73feadc6368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b7baff-451b-4d76-bd5e-1037eabee883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27cde615-5139-410b-bfd3-76913c21efa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22f4ae5-a8d8-485c-9e92-1197630361ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd85b2a-f9b4-4e98-8349-3cf29a06a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea7ec2c-9018-44e7-b2d7-263609cb5bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46892eda-f876-4987-b61c-1e87ff13f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f07018-d10b-4ec3-ab8f-e4658bd6a55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c8c044-fafb-46f1-8921-acc3d4acc7f6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0468f7c1-410d-48dc-9764-e63cbab8b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e34571-d1cc-49e6-8158-2fb72fb9b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8f2f8d-18dc-4ea4-808a-2605c54d8025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2d643d-e619-442a-9f81-a9291b008ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b193adf-c566-41a7-ae42-99ef27b82f47",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446e107f-6e15-4212-9c01-ae1fb8eddfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3e770a-7406-4731-8b85-df2a56981555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce9a2f7-7a19-49ec-9877-19d7ddf678f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc09e82-08fa-49b8-a7b6-45bcc337df81"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "821a3161-03fa-40d9-9b71-b8f3d9e63ecb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3439efaf-ca83-4959-8e09-8fc2b4baee49",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22d3587-e375-4650-8f0b-5c03f1e8a737",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ad741d-5f90-4f2a-8bc7-657446c6a717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e180ff15-3536-4309-9e36-434eead5fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d5ef90e-bd80-4a1d-b8c0-3e06a7e0355f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4fff69d-8ed5-40c1-a54f-8aaa6d8c1c4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97f13736-3a1d-40a9-8316-d642654dbf73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87c9dea7-3c82-46b4-bd81-ef592c55e224",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9e86e67-0278-4c9d-8d99-3625d72dbd02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e83bd332-5612-4d97-9e14-2631e6912232",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4de97cc-bcf3-498f-bedd-bdb042a1d11f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6c59027-c12e-4e69-b463-bfecc773159b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "798c3355-d618-4291-9b1d-3d9ae7061307"
            }
          }
        ]
      },
      {
        "id": "ac7b1a55-8143-43c9-932a-13fd2cbd7994",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fabe7450-a991-4540-9336-d0c7ce0ea39a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c58aa7e-c445-48ba-9315-563a1887d051",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4921fa95-c57a-486a-b807-6bdce8d80434",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ea7161-56ca-466d-99cb-248a3ed2163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4a3b01-eb38-48f8-aaae-d147fc2ad6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5bfd02-386e-4104-9524-05336e08c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e08e4b01-034e-419c-b916-267cbb6a1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591dee75-260e-4f52-8551-2851d8cb4bde",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b73eac-bc23-4d1a-886b-47ca6ae4eb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65d467c-1aa7-4b5d-a915-96a2ea44ffb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083dc667-6712-494e-94d4-f7395166e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c081bae0-b3aa-43ee-afcc-5c37601b1adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9d6f74-1a39-4a52-a092-4f007a364f21",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3c1ce8-5ea9-43a6-81c0-7e125ab51f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4255b9-4850-4c62-bacc-fcd8e8a3dc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74779630-9a69-40f6-aa81-2d0c4e31b584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "329fad3b-3b02-44e9-965f-6fba9ae1975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19328113-4888-4500-a1ec-cf8ebd5aaf06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42420d49-6b1b-40f9-b2d2-e4c833e5e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bd5499-d517-4839-ad7e-8e88e116d178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289c55f5-03e6-47ad-8e57-9b836436437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d7e8c0-724f-41cb-bdeb-dc137eab2831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c032106-a709-407a-bbd1-c50a73f1e0e4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42a31e0-043d-4e86-89e7-6e8ac4167291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5da726-472b-464c-a1e7-e06d70b1709e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c291fea-13d9-4cf1-b848-b078d871b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "182ae30b-c581-4fb7-80b9-0e35253e02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e80103b-7d7e-4a88-97bb-453771ec5094",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c092098e-9f5a-4464-932e-9284e110233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b246f43-7e69-48c0-b6bb-8bdf2766853a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad21e3b-3caa-42b4-a721-89b7ef9ea611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "224c9ba9-0708-4006-8258-0852df11dd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f2d525-4fea-4c29-9fe8-efc2258aed70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674ccee8-0e9e-48c8-a67e-d8367bc70793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbca1dd0-bccf-4b35-a502-574d482992c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c4c9b3-f9db-4d73-8f15-d98587679f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2ccc19-6e0e-4ab7-be3e-43376e7c7614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c241b58a-4cc0-4e27-9f2e-8423fc9aff42",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955fd276-8c3e-4bcd-853b-aa75198b735e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fc5786-476b-498b-8152-52922f1efd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e690de70-f2f2-4217-997c-e6dc05aec6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd23eb55-11c0-4026-aaa1-221419503be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e504c1-8e19-4a94-8801-8e2cd15d3280",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa525a-5bf8-491b-8623-60f367987954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0e972b-fd07-41c9-852a-013196f8cadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feed2ed-2760-4eae-9861-adf928eeba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c13cc7b-90a5-497a-a443-82ab190729f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e718ce-5b8e-4c1e-aa3b-c6886a4cdd57",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84835c6-a903-4d3a-b257-4939f40741db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc530e33-bd9f-476b-be12-ae1bffb79d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac11ad9-3961-4057-9fc5-d5b77d4f2f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "722e1f4c-6295-449c-b462-7e3b79972716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00ae76a-76ae-4532-bc3f-a84dbb6aae2f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3d8eca-b32d-440e-8bbb-0bd51f48cc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ba4251-93c7-49bb-a992-719593389a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e0598c-9bc5-428a-ba8d-b1a457d7d009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fba415d1-f785-4f16-a95d-a88160230a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18125741-ab16-4aa5-bfb7-08b3cf88ba96",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0cf7fb-3ca7-4774-a55b-aa8d2d622b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772de5f7-b12e-457a-8774-72e4657fa0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09010d94-41a8-4098-8ba5-fbec073265bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f03283a2-76f7-48ef-ad29-0b100bb51ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f05aed8-f212-47da-9c6f-901325756bb7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03cc08b-2142-4758-a8ee-d41d32946307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a6978c-a910-4b34-938f-62edb088101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9cc2fe-7667-4a87-899b-399880d397bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea6de85-bcf9-4430-9240-e18f5d25763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58222e0-6d6f-4dff-8c5d-6183ac0b7cb2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66ad253-3f5a-442c-bc3f-3f4cccba3a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c737bf84-4c0d-47a7-912c-341d0ff442c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27642e1-11d9-4f27-9b6c-0bac707a6653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8886071-c0d7-42c1-8f46-51c1fae5d76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7704662-59bc-4a3d-8d65-89b4e47e9250",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357be758-9971-4d9a-8a38-07bc30932a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8236b9f2-0095-45a9-ab46-d7403b941216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9814e85-3b89-444d-9f09-d55f08892d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e55e67-3ce8-4037-b1d9-9563fa3b94eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd7ad7c-9515-44d2-8a8f-fb5e02e0dd84",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828131a7-e9d6-4801-a668-3f6f327e3141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490a3753-8283-4dfa-9a08-4c0b5ae668c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b723191f-91d8-4caa-8d5a-7ff764ceb59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29fd0ac-7f5d-4cde-b38e-da725dec1470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47502d65-648d-4ba8-a05d-25196a16075a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1cb0c0-ac7e-41d1-a163-47b79fbcb593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6664f310-7cf8-48e4-bb61-ccfec30add88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9d26f5-296d-47c4-bd65-1e6bcf8232b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "773aa088-526f-4dfd-b24e-4d6fe3961bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee047bb-8229-44dc-90bf-27b9c652281a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7829e2-7174-4068-9fc0-c0d7ca020fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35fc85f-775b-4ad7-832a-2defa9b0c5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ac0a78-6d86-453a-ae93-a80f6293ab16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21b3d26c-3b53-44fe-a777-b1dde267a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62b3b5b-7355-4171-be35-fff768c63827",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540b132-be55-4783-9466-a0efcbc62a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec1a9a3-6201-406b-a024-88c47774c85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b67fa08-521c-4270-9b39-4d159f3f5ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e318538b-47d4-490b-84aa-496ffa2b14e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f5e19b-f752-42e8-8529-05d985d3321d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f782f5-4ecb-41fc-9eab-35f402558bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f8b82b-2d1f-4fae-bbf8-130a7c7042dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d38707-bfb4-437c-98b6-407522035590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c70ed0-f7b3-4ee1-995b-bf44146f425a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90b10ae-fcf5-4828-89b3-4f3d70e0dd48",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050b715d-a653-4a9e-ad1a-9c399b113dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a2266d-3ccd-4a8a-8528-6c888537375e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913d0eb5-3de1-4d0a-a7bf-78811e3eb903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc77dbc-8c3c-4e55-b257-4a1889ca46f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd33df1-9e3c-4123-b269-fd36b5b4c0f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a891cc0-0d06-4d5d-9210-d9615cbbe08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7012cf6-c649-4012-ace1-f68fa289cf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce35e5f-28a4-4b0c-b497-e4d163347e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86c1e7a-fe2c-406f-b916-bfecaf4b5cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58254545-e893-455f-a7a5-2d782ab6c30f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a722e6-8970-4bda-b6c6-261c30be01b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8b8333-ac15-4952-b676-bf9e1d8399ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88828570-e442-4f36-9b9b-fedf637a86fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac1c416-72d9-42d9-9c00-1ee96f8a3c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1134339c-9908-40e8-834a-4cf90cb2a2d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21f64da-f27a-4b69-88cd-5f410f4e3c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704d333f-e382-49fe-ab32-4125a6fd24f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993b611c-4b9a-41d2-86db-fa1694bd11b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8147f1-f51b-41a5-8b06-d7f8c1f90c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdbcacb-3e40-448a-9454-9f55f9c13e32",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14114901-3450-4b1a-bd24-a7aa23ec3407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a23b5c-03b2-4b90-9bc4-5efd5150c969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6be54e-c036-4fdc-abdc-3c06c263fcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65cb3b8-906c-41dc-aae2-7625b58cbded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affab6d1-ffc6-457a-8708-ca619b61085c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758fc837-c432-4690-9094-3015d36fc11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2cf79c-b5ca-471c-8f3f-9c503f686329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bc0147-ae2e-4d28-9c54-2819813e363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f056bf0-48e8-47ab-8007-1998cd70b3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6a0b13-72ff-4b01-b54d-d4662e8912be",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f01568-6b67-4b32-bf20-445d8207c23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7bb917-4379-400f-9ccb-dc3179435b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4457c4-c484-4226-82e1-f5f4f6d98a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee18e23-96d8-4ba7-9d90-1dc07cbe3937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8138c323-6945-470e-a51d-73006bda1af3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c51d6f3-058b-4489-9cb4-0cb4b620892d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251ccc33-3349-4a6e-b506-817c22e69f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f7731d-c50b-449f-9ca9-6472ef17f568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4e99df-dc4a-4351-8009-fcc929e64538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260d2c2-b663-4c31-9dc7-dd55aaed6d8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348abbea-b03c-4252-bf6a-4e32e0847349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b034acff-0ffb-451d-b2b0-8e0e83372875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f73f06-ef33-4e17-af55-8b8c4e506bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62e53b5-05d6-4e31-a99d-89e4de12b9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8df459d-09aa-472c-a05f-3e6bc241d20a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c890c8d-d584-4561-83c4-caa03db62ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21c1ed4-8b97-4d87-8940-0284ba0d9e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca092309-2f61-4a60-8f74-12398d0a11e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5055c6-ccd8-4a9d-818c-6f59123420f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe69b11-c92b-4e7c-84f6-658682cd6d7c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9cdb39-362a-449a-bd16-5160fdc4cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8778b47-c631-4b00-bdb9-da64cc481102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba09382f-deca-48f3-876d-05f5ce7b2551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d90b73d-294f-4575-b166-b02e41b83b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf3d63a-5fee-4f15-bab1-a46a2e0a1470",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2f0bd3-0b1d-4ff3-9142-83213936d921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a492a8a9-82f4-4868-bf1c-4b9f16c2bf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1675f86-c5ab-4e2a-935f-5c4118d1149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9277df-909e-4ff2-8715-73ee3044e77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75a3564-d932-49aa-8b44-488d4751bd21",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2f88ec-81e5-4100-af02-88a1f299c46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff4b345-c36b-406a-81bb-b1feae167fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6169e8-0909-404e-a049-6ff09504ac9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92429278-d47b-4b2f-a424-b1affb94c69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38257300-af7a-43cd-b4a1-e6240d8d7d62",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c0b8e5-3518-47f9-b70e-bc8409c9a2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2fa0d6-b42d-4861-85fe-5435e12e4d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db17beef-64dd-43d0-961e-3733802c1127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e892a7ae-8768-4409-bd09-d614581686a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0744e95-737c-4c42-9eaa-6bb55a60196a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50bf7a2-afb7-4388-bf1b-375c59214914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55707a5-dff9-48e6-8281-2e8cfb1b3779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95009faa-2d23-4c4e-8fb1-b253b30856f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c74d1d-61fe-4352-967a-2cd25ea0cbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b243be36-82b6-4861-bd26-22e4af3f92fd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58b72fb-6f7b-43a1-83b0-5014fd155aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf5a9e6-9194-4681-9c47-40423d8ea76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ebfef2-2332-4cc0-a91d-c2d1087144ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9480c6b-a9cd-4df3-9ed8-9aa36e34dea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38edb76d-fc44-4e5d-ada3-7882c8bfd09d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1254cf-53e8-4121-ba72-0684cb09ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651d9805-985f-4173-b5e0-60318a020246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c66195-139c-49bd-8bd5-d0a79423a92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2e83d2-c4ca-47ff-9ca6-99db810d256d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfc3b260-3fee-4bac-890b-bdd35ab5cda5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68c8cc4a-4863-4062-a35a-9f4946bf1ea6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7472a4-8900-4c30-b6f5-c5daf7f6e678",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3da2fc1a-9363-4df5-af62-ab7da2dce414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37d8d7c-4fb2-448f-bc92-d5668adca30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6929df8-6a71-4f6a-801b-e2fc1a09c76d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43bd7f26-e87e-430a-bbf6-bc7885a8ea6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bcf1a85-27e6-428e-9817-bfc38f9c1a70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f8094b3-16f8-46f6-984a-a53c61de1248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e84daa-6666-4338-a7e0-4c16f50c4a89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "535f48dd-305e-4b65-b2a8-dc608f9ac0e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2bd55ea3-831d-44cd-9214-9a9b03aaf8f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "359704e8-b2ec-4f48-a316-906010b50202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f97ff18-7bdc-49b0-bcbb-426effb6b336"
            }
          }
        ]
      },
      {
        "id": "0e171976-8929-4796-a02d-dedfe3db2a6e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "20c83a79-35bd-4b01-9a10-49ed49adf69e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58fb66be-39af-4660-9c47-d4a62d597de1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d63e6da2-0ea9-4c25-b93b-67c1a35c3639",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b626446-3b84-47e7-b249-416a1806545a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db48661e-51bf-430d-a75d-ebd110872dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23f3d91-eace-4182-8e9a-098478bdb137",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c03b2d-b7f2-4771-8c6e-7cb07baac19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67799bec-8614-4b6a-9dd5-f9b3c5995f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0dd7f2-e5b7-48e6-a20e-a47bff9c96dc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69918cc-481e-422f-bb70-b53e1e556b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7495b1-3c50-4872-96da-90ea3c5d1034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c54323-1129-4d3a-a357-00ef9fc0bf76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19df556-6701-4e3c-abb9-e98eaf60ab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdad8621-0ced-413f-a134-80c11cd1b968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94fc9e7-644e-466a-8724-e957897eb171",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76865eee-d94a-4afb-84dc-913e51b67f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b01585-1019-4154-902e-311388a7468b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5da66ca-d7e8-4f95-9eb6-f9d93f8df3e1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc40f8a-dc6d-45e0-9fe0-14b012c2ccfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a97155-0d43-4f2c-a316-b9e568db1ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d24cbc0-5c3f-47e0-a351-812cfdd640ba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816d40a5-f97d-4d77-a5cd-252096419ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781856a8-d71a-4aba-ac1d-3e85317c30b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfce68d7-4431-450e-af8e-ef2678649533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9160f6-348d-4557-99f0-4b0e968ea62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6c00af-f3aa-4ee9-bee8-df2105de2120",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec0faab-e96f-4dd3-b9a2-ca2805ee25fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a8e5e4-5157-49a5-b4fe-62748697431c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64bbc70-7b00-41f6-bb0a-aba66b9938ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cffcf9b-be8f-4857-a73b-dd173ad15ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8171a7a4-831a-4a73-9a42-a6546504f1ff",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93fbf94-c8c3-4a7e-ab26-5a14accaf30e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e329321-c69a-45e2-aedd-e2ca21187393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c81a9e-1b84-4f93-92e5-4e2c601198b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede5a10e-f56c-479a-951b-1e06eaf26597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4084562c-1e59-4651-ab37-d4bae606c987",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4552ba35-6945-4eeb-b736-3e094b68b446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373cb260-167f-4d0b-8ffe-b189122a9388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372850a0-b50b-45f3-87c8-ee7239ef812c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b840f7-ba32-4ff7-9d15-7b393eb878e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6aba6f-bc21-4ef7-a8bc-b644a10f23d7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433491aa-8a3e-4aff-b0c6-cac58d91fc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16c2868-4f8c-41e6-a73c-e36bbdcfc84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1b7a3d-dfd2-4aa5-8807-8d8c978b2adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67907ea8-2417-4d2a-9986-502d52bc0b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f7c8ad-2160-4a7b-8a37-4454eb377ef4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ef694-00f6-48a9-9b6f-5f8d9c568323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c0d0f4-5b42-4e54-94ae-01e517395ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc99f136-f579-4b8c-9df3-b31c77b7824a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e80f8e-3852-4e3c-bdad-14ba62c6f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d0b630-39f1-420c-813c-9f338ccfd5a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b467e06-649e-4bbd-9481-ab98e3cb0e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20921bb2-b2be-494f-84b4-b0f9a80bf8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da732511-fac0-4b95-8ef4-c1e07610b5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18292cdc-b9e8-4c64-ad13-f9b8b24ac0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65555b91-1358-499d-9ee7-dfeb9dd5a363",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab3284a-68c5-48d1-92c9-fd794d9b63a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1218f182-1319-4024-993d-49b52947a77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f08bdd6-35a5-401f-aa7e-9225f6934411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4c7770-e862-4cc1-aced-d1c840a11e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5886782-ce05-45a6-b58d-eb23365c2499",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebfa536-a215-4f1b-a8bb-b3cfaa4531ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57330e8d-bf4c-4779-b208-c50ba93698af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa77e486-6ec5-4c5c-b7d0-de8e864215de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7100caa1-8558-4b84-8c11-577262a492bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3356110f-ed82-457a-bad4-43615aafcf0b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3234f638-480b-4b98-9675-fcb2abe5aba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70fb8558-3144-4a13-842a-a12301c82c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a42e42-b916-4a3a-ba33-fc0c73b3de24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cb3d0a-db7d-4af6-929d-b08f8ed9cd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc40a46-0e94-499a-8bce-4c3c8b4debf9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5487c93a-30f7-420b-bf42-ac74b27b1436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9421ad5c-aacd-4f0a-b4df-5c2f8f5bc0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff736685-2cd9-4299-9b2c-a913cd1b5f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5896a4d-7c54-4915-8477-46157ea0fc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0fa9a3-e57d-4f4d-b2c3-2111607393d9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c23c57d-d257-47fc-a9d8-5bc95008a1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069d0b74-354f-40b8-ad68-e17a799b5adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d099468b-b332-4d0e-af96-0c726a60417d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f330c2-fd78-4554-90a2-27fdad82737a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2b4041-f6a8-4f58-96d5-b91794438aad",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbc8a70-35d6-485c-bca3-0cb2eb20c810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453357a7-b577-438a-9a7c-11af939dd91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34c8015-2b49-49c4-9825-25a66bf003da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035be2da-a663-4a61-8093-812acf6cd9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eead8ff8-75e2-43fd-bd38-cb7e36e13fd0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a798a3-6417-4b99-b457-f0f8d4af1e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8f6df5-fa71-49d8-ba10-f38d8be0825b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3483ab3-63c0-4495-9db0-6062a31843c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6061e878-cfa5-4b05-b174-c708ea10ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5081054-cb2c-43f3-9680-e25b14a6501b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1172e75d-3c30-4e58-b75f-1238f6fae64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba2890b-a771-4ea3-b898-dac32c31fd14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd772a30-837a-4290-aa50-7ebb1bf3cd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6256d54e-b934-4490-95bf-8c5ff2bbb96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ff054-8b84-4152-9f75-ad90a8833b75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768560c0-d87f-4510-866d-9c2bdbccd64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d38497-3801-4fc7-8515-3a25bc1294bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea20b456-124e-4242-bbd7-3b3d9da34ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cbf2b3-bbf1-4e9d-ac2f-bfdefd795bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e97d7c-0d74-48bd-afdb-1c2dbac6f278",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f1091a-5027-4528-bbce-3c8ac8f17c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce60bb4-b46a-4946-938b-d88ee60295f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287234f7-4c19-4088-8847-26deb4e9b70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3d2912-d6e1-43ae-821a-3f44830412f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f470c186-405b-4e4b-90a5-8c7cf01df4a1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7c4256-d2af-4b05-91d9-18292ae98960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a54b74-0f44-4fba-ac0f-5efc0cc6558a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb00788-d6b3-4cb9-b0cb-f8a58ef2b28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb72a905-618b-474f-98ee-c64b86147399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e31eee-7657-47e1-b060-74608da97e45",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478281a7-4a2c-479c-b533-2980c074365d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717305f4-5078-4929-98c2-400166269204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f14d3d-f3af-4472-8f63-f243ea52eb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4243c98e-5279-43ce-b5a1-62dfd5bb45ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d26e939-1423-4fe8-a986-ecc35ab2412f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e405918d-4252-43fb-984e-4d9089bde752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf1a7e7-e0ef-485e-ac8e-3c20cf1a2a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0ed0fd-4a75-4b37-8ffd-33d39f9da97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb91c22-dc10-46cf-8498-15f4bd7cfb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b42be-2113-4733-90cf-91b5b2c08c82",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f257aac-8a7f-490f-8db9-0b2bdc1aec16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1b83f5-06fa-41f6-9848-6d6503fde395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f1245b-e589-48df-a2a2-807145e4691b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd61a1c-c13e-4770-9044-0f05df8c4ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fd39bb-c57b-4dc1-ba2c-4c02d184e787",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c348de-03c9-4364-a800-27b2f528286d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc384a9-ae02-4fd6-a2ad-04c75182e793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4b4743-a51a-442e-a109-b03a56d8606a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63f5270-46dc-47cf-8129-68487389972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc0bc8-429e-483d-836b-b0f4602df8fa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4cccb6-5152-4744-b13c-ad2fad10b6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20dbcc2c-5aaf-472d-9c15-c80031af14da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca24d22-3c56-4fba-80fd-65ddf6e6c924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b752506-08db-44c1-b7fd-f6221621c886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5315bdc7-04e3-4d73-8c4b-640fdb817fa8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64245ff-caff-4bfa-8521-41033464b0fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6e58a4-0a3e-48d6-8275-f8b17135c661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bddb17b-5ffe-4513-b7a7-7fb32dcbae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0349497-24be-40b9-9cbe-fc5f8fffe2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1437d00e-fc2a-4a37-9cb8-e696edc2d22a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5006c3bb-263f-48c8-b2fb-6e66a590262e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3cbfa7a-802e-4f38-9654-0dc470da7ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bd000c-24d5-47bc-af6d-5efdeba2c364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3409cf84-90c2-4df4-a007-c643c1d49b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c49df0a-6858-495c-8481-c111327805ab",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4292d9-47e0-454a-8330-160d7956395d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4f42254-845b-419a-824a-60edf1a71288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe16c670-c266-4329-9dea-ce3fe130dba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c14f2a-8901-4829-bfef-ddd9e17c080c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97056f79-ddd2-4514-b7ff-d4aa3de9d668",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb62cd98-34b3-4e3d-86eb-ec7bc0456ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8f3b89-691f-4bd6-857f-bbfe771daf4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be484f2-a68d-46b8-81de-771cb8d2c4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e9daaa-8b89-463f-abce-ea6100d85d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d0eeba-a72c-43ac-812e-4a5e80346859",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e382b5-7eed-4b15-97e8-906f279ecf8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38ce897-9ef9-4341-8f0c-9c4d64789dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a685eea7-c0e3-41e5-80e6-1d826461c6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6857c2f-bf08-4494-a00d-970130bc001f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d92734-3d61-48ab-bfb1-da8e0c6c7287",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c98cce0-4ef9-4f9d-9d97-a8fa7751b646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d90a06-2779-46ee-9947-40d756e505ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b9f5aa-5d45-43d0-b962-28bbfe9b2201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f19b0f-ee5b-43dd-9fc8-e2da5a2e1ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef54c4cb-f745-4897-81c5-1df328556591",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c918dd13-7fbc-40be-b262-1a2547fd5582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a84feb3-da2e-4bee-8f3d-7c45f5680719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17b2bba-d4c0-4b6a-ad5c-a69e84aea9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d504da-d1e5-4111-a2b8-b3b0e4c2da94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856cb746-5598-40ba-8a9a-a51da12714cb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af5d47f-54b3-4431-b605-f46059042d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b84415-e1bf-4b2c-8278-73291e3fc4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200442c1-fc50-43fa-a85a-4d3ac726c5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdca9e2-bb68-4610-8824-9a98ddd74e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852e895c-3f2a-43e0-a3fc-98617a65581a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93f74eb-2a5c-44b8-880b-2cfe88e91b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad317db5-5dae-430a-9732-3a959d8255ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab93469-5f6e-4b50-be8a-d6b6e5432bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bd50b1-d55c-4d00-936e-a8c43c138f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce40bf6-3745-40df-97c8-b203a8c5f6d6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18773b8-080f-491a-b8a6-4fbdc20e2845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21747e03-8e59-4e5b-bb7a-2987291f174e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdebaa60-f66f-46ab-a2ed-1150b0d1da6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8791fae7-a9d3-49d2-90a5-e934a3192586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da07fff1-42d0-4472-bdff-7c4994fba5d7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664d06e7-7c0c-4f78-9cab-8ec37f8819f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caaa5c6-b4cd-463d-ace3-1afac9f95eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6179ffc4-3b60-4510-9cb7-98a8d6e055e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e3cf27-e59e-46bb-a0a3-9b53c6e28409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a4b168-352c-477d-833c-8f9b6d4f88fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86c3f1b-a874-4a18-a3ba-487505c91107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b1aa23-cb85-4ded-b19d-242002a8a8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124183b2-33b0-4f9f-935b-3b37db6a4fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b74111-7a84-4963-9f73-b6ccdf36eaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2090a4ad-1ead-4580-8f8c-0348ccbb06ce",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bcf474-a6bd-447f-ba5d-6e8349524a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afbf1aa-ea72-46cf-a7df-d337890880cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dff797-4fe9-42ce-9816-eba49b7f9269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c986d27e-de87-4353-a173-592aadb33a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34f9b95-76eb-417c-8e86-b8a7ab055e0a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b429f24-6fa9-44d3-9937-4a3633164046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f45da8-228a-4150-a842-b7d189192c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b1908d-cbac-481a-a510-fe0954fd1e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005d4856-b9bc-450c-b532-7b43448e72ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3441a7f8-2775-4db3-8aee-561c982720e3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841c519d-9376-44ed-8fa5-9bf6ab2e8d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca46130b-37a8-41f7-8357-3d2ae40f6f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89951ecc-5c68-4e19-b120-c05a0e1a4122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6c18db-6c6c-4998-94b9-937807e08813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c56fd4f-0803-460e-a839-61fdba3c118f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a218cc-c91a-47ae-b643-278d99a852fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cc9a49-fd12-4e13-a724-e755517f4242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3de38c-e4f2-4b74-bdb4-e35b3b7b752d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3b1247-8d8f-4ec6-8117-9b582741b0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b25e698-e718-4255-bb5b-98acc9b2b893",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd67d88e-e346-499f-96f7-345e582076bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392d1a18-e8b2-4d80-a51e-42b09b04a3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a192ed00-1289-4e4a-9caf-b3fffd1d948f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a218b9ec-93b8-46bf-bbe7-e8a435bba1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c633a740-9558-4948-8f45-1d3fce7c7366",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cdd82d-40df-498b-bffa-f0435ee571b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb56534-e102-4930-a02f-10ce0951b3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc034825-34bf-46f9-b352-9ae27262ba30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7abf85c-bbb7-4a26-8d79-5e4b60502e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb44afc-5f04-4198-bb81-3d61e5af56df",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ae31f1-7166-4bb6-8fd0-c1d0a4f24490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85aa8cd3-90a3-4072-91ab-6a5e7782b78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2c7218-73bb-4188-8ae1-7060bf297275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da881cc-9b22-4588-b694-11d37b92a4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6355b5d1-dbc0-433c-ba80-c6047756efa8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33623842-c2ff-4a7a-8d58-b4887956a364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8d1357-0769-4d25-9b46-0c77a0034a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b53030-7277-4796-a11e-1188ac28e453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7dc40e-4690-480e-802d-be1e10c0400b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9ddf7b-a388-48e9-a608-7ba7f1d993b4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c28c846-66f2-45fd-93cf-fedd8c4107cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d60050-05a7-4293-a14f-f62e2d9d8698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18eb27ce-28aa-41bf-b040-38dff0286c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1a98ce-5f73-4b76-8e2c-ec0888da301f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6d2576-1339-4590-aba0-dd1fa60124e1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4a10ec-713b-4176-8b2f-b8fb25298ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1404d6c3-e78b-4cf6-a30a-0c78d19cfadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3d05c2-6ba5-4b73-8ed8-b797bb9b587f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa83f33d-ab4e-48e4-bf59-317fc554eedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ab0551-ab0d-4c00-aedd-bd9d79ad4435",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d179ac14-6694-4056-b89b-e5e249aa7b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8387682-efb7-4865-9f40-3bbeb0b04b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a306962-a7e2-450b-a759-ae2d450ab64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6795cf-2b7e-4dbc-ad4d-b0e8ff409aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da5294-13eb-4c9e-a01c-790aee47ac94",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4cf96f-f6d1-415f-bca3-89dd01287fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62570fb4-5e33-4149-b5ae-4e3c59e3238a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e16510-f71c-43c9-a813-d0783ff5d542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f83eeb-4fae-4d77-a179-877db2c14f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6024ee-98d6-4b47-927a-418150d7a7e1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c4d8a4-1d4c-464f-9a7b-9f9cf3b5aa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17386f45-f419-4b79-9943-806ede8d5727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f815e091-2b42-412b-bb1a-fbe33b1de708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a457a827-75d5-4f61-954c-57a5c755018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2656489b-e4fd-4a71-823f-bf1cdbdeff6d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433fe6a8-187a-4dfc-acda-442efc2a39f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a297985e-dec6-4b8c-a54c-d94acc36e5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1ee4a4-31b9-4ce3-ac71-573bfe79ae3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a5bd80-e740-49d5-8f26-a0dafd99db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8104bb-65a5-41b6-b757-97aed33e6c53",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4da4aa0-f28b-4994-a935-9e64f60d535b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc1612c-5b2c-4813-b97f-a753250fdb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee098d37-b8a4-4fca-9d5d-1da04dbada3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881311dc-e867-4ec0-9610-321b6d996d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba6f541-8843-4733-99e6-a4b1ba10c1a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf75ff8-e0e7-46fd-8bdd-345a4ec86816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53ec58f-8754-46aa-88f0-367a4ee1ce76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f763c-0610-4b31-a832-8488814ded0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0554f5c1-43fe-423f-9452-f815a12e8908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d1c2b3-9fa9-42fd-ad3d-e5bab2b88735",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292bfd13-4e23-429b-8f88-565e8c8938b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db91f41a-4c00-4ef9-9be9-915e876d2f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363b269e-53e3-4460-b12d-4ba51b7119e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b020a2-64f1-4cae-89f6-2fe845a76ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037eccc4-b2d9-4a1e-b805-c1422dd1d089",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f724b8d9-697b-4409-bfc9-d737ebc3349d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7345ae-647e-4545-a65b-53e341df3aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff545c75-bb96-41d7-aedd-0f53fb0cc24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cb6fb5-6882-4ead-ac63-e63f246a707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17735b89-f74e-4992-8558-a0670a5fdf75",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca409f94-b73c-4dfc-b267-b4577b1fbaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4adc47c-53ea-4dcb-ac95-c85d1e99e888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0c341a-a19d-4218-b5de-965b787d3afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65cce10-ba80-4d59-a667-c9939ddeadfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c06a55-af78-4b90-974b-65c3d2450127",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c1bebe-e37d-429b-b5e0-f8334e805268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277e8a89-3815-437e-9600-67c9979ff5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e75b6a-5386-4314-b789-9b141a525fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a489aa-a231-4af1-b308-7cb9e0a6889a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a558e05-9099-434f-aaa7-eb312d0d7022",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36945ec-517a-432b-85b3-3155cb324c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d9d1ab-c527-461d-a501-a9f7446fbdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65508b30-4321-47f3-8115-7c3caf25cc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c34850-4ef6-47cf-9210-22dfcfe2dcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8d585a-5ff9-49cd-a6e5-6cfd03f8658d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1c1895-aaeb-4262-b26a-214559d708e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cab153d-a890-47f0-a791-339a67ade0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419ae08a-0287-48b1-8322-64ba1bbcb4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3715280-6f2b-4e75-b7e7-2a3f5770feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba25cc73-0aa7-4917-bbf6-880e785b5dbf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe6820e-c9b4-41a4-b4d3-ec9d1c7506aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4615812-a4a9-4396-af86-1ff9245096fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aeec649-5f4c-4712-b4aa-c3acbeea761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d7e9dd-f5b7-4f52-882f-e45d18cd4eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c35579-9d22-4ca3-bc9c-8c6b8332cd2f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc30d5e-24ba-4f05-b73b-0bffb9638a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777447a6-6096-4f08-95a2-ceb0f7e86c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885c23aa-35e3-4d6f-ab16-fe8eb2dcaef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0807eacc-f976-4a36-bc9d-4d636d29855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a847df-df49-4f0d-80f1-f1463169d484",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c560404-2529-47d2-b1a8-b90e17d4583b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe033e9-0560-4c7e-9e3b-cd6d818fb851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d731f956-6c4b-4d56-9cc3-43fe7468462c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9536b151-3408-4ce7-b856-1a3d6cc8e9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832ccae4-2ef8-4f7d-9e0a-e58ef15a5595",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5174c5-e9ec-4927-9197-0d7f19e64fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f87ba95-b0a0-48a4-8a4f-26b1abcbfdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097db7a7-d480-4a6f-9fd1-f1d66191366c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb675a2-3bfd-4796-b2b7-49edcc867d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92c2484-fd7a-496a-a9b4-8ea225a355df",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604c3cbe-d500-4c8e-93f8-ba765adbf1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c2f4b0-a4ee-443c-8df2-f6d96fc6ef9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45c95b4-0039-430b-9430-eaa4a14c5451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425fc5f0-1bdc-4420-8024-4a9a4c684ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be224b3f-4960-41cf-aa50-9d29a990b6a0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8535030b-0519-44b0-98c0-5b2a3c6bee76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b88178-c65c-4450-b2b8-ad384adc7691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0614fa8-1f13-456e-9a5e-ef2ce7fb075d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadea7db-031d-4048-bb4e-701f7a3c0dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93830ab1-ca34-44fe-812a-b5906da160a0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b93656-23cd-4e8d-aa3f-6b1d4e63b8a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e41405-858a-4d93-b2a7-928b02fba172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd0b06f-2440-47a6-a937-d95d26fc92c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c978ce49-e723-4a0f-8807-0ce1d2dff6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f83e9e-2a28-494f-bd72-69378bb1a0e9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b93179-a328-4fa1-88c8-6f8a775d3b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95cc38a1-f9ca-46ff-8457-fbc729be5fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b61746-c665-4048-a3f9-ef4802bd8477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264fc8c4-9c8c-4682-a06a-9322342204a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d29e007-69f7-4c4b-a5b2-bd05f274e419",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a59fab0-08fd-45bf-a6b5-015bf61c9479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0043151-9c4f-4d17-9083-7f98d0f42340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0989e8ec-56f8-432d-bda3-fced79216cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6138b3b3-3ad4-4fd7-8bff-8d6d60528b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a39a7c2-4eea-4caa-99c4-2e4267875d91",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6029d64-4b0d-41ee-bb96-4bcf5a716167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86d4d4d-f170-4c1a-b465-29d8815efd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85b9424-872a-4f2f-8b16-0e927d86e2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9560fd-9788-447d-85f1-19629370cd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847afdc0-8184-4fb2-be6e-eb59927fd54c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c5f18-1bdf-4117-9648-ab278ee00614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4492cf8d-527a-46c7-ae1e-b59afca4329f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9a42b9-b40a-4257-8ace-41ccc85ae31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d93a358-a433-4557-99f7-b0d61fb2bc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616b9631-afa6-4952-9d66-f2f1df0c7e9a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a08476-a9e5-431e-9d1b-0332a2c20079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c521f4-5211-4fbb-b7ab-7622f7a665da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629e103d-6144-4c0e-9d04-eb20e015e773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36206d96-952e-435c-ad52-524d4d75b978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d43a175-2bf2-41c6-b0e4-97c2f305098b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03828cd-6aad-4b4d-97d9-adbd538193ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78831262-e05b-401e-b5df-fc493caf2737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e43ef1-b7ca-4bd6-8477-f3393484c1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb41d09-9dd6-4da6-a4fa-2ebcf2d70b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ace70f9-daa5-49cb-999f-fbef4a076772",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24dde63-8834-48df-b1c3-274be55eb579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3074c047-74ac-44ab-9cc3-954ca3fdf25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cd5f2c-03a5-45f0-b958-aeac7f3add5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c0aebd-046b-4f70-95e5-9fdcf82d6c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292fe714-c17c-4261-a96b-10c936be1582",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f791914a-5e22-4ffd-886d-49d26e62aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16597331-8016-4ffb-bb77-e671bd89daf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05e4e3-c8ec-4ef3-a37a-1a53c1cf4d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179061fc-8763-48e9-be9d-905e56c9201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6005664a-2a66-435d-aad5-e32094904e05",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc339e88-036f-4309-8911-3a4edd1673c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac458174-18ac-4b39-95c1-676423f3f4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840bbeb3-0590-4bb5-ac09-be890a468401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691646af-8ca4-4c6c-b5c7-94e9151a7605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb06778-7dd5-47eb-ab28-e798a8ff3ff5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e1219a-3a6c-4caa-a9f1-6768df22e229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08f6975-5eaf-4e78-b7fe-dc660d2c289a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e6ffe5-62fd-43ce-a362-a7aa25d1b37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9355dfe2-7588-446c-a1cc-04f406f59966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d7e54f-9e62-4e9a-9764-761e1ff03d94",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f751b8ee-3d0a-42e5-8833-ec104bd6889d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e906a98-e8ad-47ca-9884-5d55a190a7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98703719-7d50-4dd1-9c2f-9866d9e90d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe94857f-8c1a-4ccd-bc04-91756882c1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3e1a37-64e5-418f-a967-eda01ca8fae8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92e9afe-dd9c-4743-a6b6-c7878bf5cec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0c3197-bec8-4072-bda5-9306173ecab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1404283-852f-4abd-9349-37eb06f32490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82386d4e-3cf0-4aa0-a765-d32a524f2d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae030050-c31f-4a8d-ae4f-052d794a1311",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3158b5c-28c2-432e-8c73-e132efea1865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934be882-fd0f-4874-a3d8-be76aea046ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df791ff1-2dc5-44b5-9ddd-7092a0ad83e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd13f47-4653-453b-822c-a856230254a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5051a76d-201d-472b-83c8-3d55d47a72c9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaba71bf-33ae-466e-a053-f81ec6b887d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05780b16-5c59-43ab-9eb5-cbe823f4d56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8260b08a-bfec-4cd3-8d7c-08c9ecccc9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315d4055-e411-41cc-bd56-15d2a50dd0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cc4cf1-8a95-4d08-b3da-af8a5b7cb915",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad316ade-a3fc-444b-a831-3a209d0ebc79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbe0cf7-54cc-4c5a-a3f9-c6d4de2ff4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6182fa82-4145-4ce0-9a41-13fdb977eaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edd5431-1909-48a5-bd1d-290a89fe38b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8760778d-51ff-4293-b48b-816d7101fae0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa40121-d441-4db7-8b9d-d0c87595c78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e511eca0-58c2-4d9e-aa88-dbfde8392bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2851b48b-e9d2-4aa5-b603-92bc20c18245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72af05d2-4a1f-43a5-8397-ef1bb4e52952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661fa075-dd60-45bd-9eed-9f35d6588b8e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db867580-4a1f-4acc-a5ce-9a55c81ff5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0efced-b349-4c12-866b-ea41e66f49b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeb498f-d78e-4aa8-b6a7-20dcfc31056a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f2c6b3-92e4-4705-8189-1f331ba180af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921b8bca-5a85-4327-8d2e-8fe01561a4ee",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a6d235-5dca-467a-a523-4eaf2aa3c9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441679a2-a302-4766-8849-3fcfac72c91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780b5d47-9973-40a9-a630-56184cb552fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf953aa-b7e6-47e5-8b55-fe8de21eb48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bca6732-7e71-422a-8347-432e218ec4cb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862494d4-b2f5-40ef-b8e6-450fafa36c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d9ea26-0eea-4139-b325-4a85331d3867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5cb1b7-8e16-4efa-857a-bc6b0e82819c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f7a103-e1b4-41cc-ab54-20950b9f6c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035650d3-8d73-43db-9931-6fa21c4088bd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156281ff-7e35-4a7f-ae0e-06eafbbe02c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf4268b-c6d6-4226-952f-6b8a347dcc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6ad824-2717-441e-9137-91824b9371cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9969a636-0650-4c9f-b0a6-9884a8a7da24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75f6212-2f85-47fe-b355-0241f757fa18",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45e1b0a-22ad-4a6b-8cd8-a9d4d170e321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1914a7d-e779-48f5-90c0-6ada2f8d56f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d98dff-578d-4c95-ab1b-47bfa3296b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12042d8-b5cf-4121-980a-432e03c04d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5bd85d-095c-4098-a5bb-b8c936c59930",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b13f01-fdeb-4146-95d2-adf248d95d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca4348f-5ee5-4bab-aac8-fd48a2270174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15ce89e-8a4b-44cf-910c-36d132998369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0128032-6a57-4c17-905a-104a987f2276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74232fd8-b0ab-40a6-8b6c-f499f5256479",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edeab584-f1ff-4490-aba4-3b9a2caf2d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94dd954c-fb98-4527-b61e-c4281aad7830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032a475c-a968-49e2-9110-33966608dc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbdbe93-f7f1-4ae5-94c3-f09f13b92334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6824697c-d5b4-49b3-affb-0c4c0b7fa01c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be6ce9b-2a1c-4a3f-ab16-4ca1dbd5c559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0f217f-42f4-4193-8b04-026d34fe325d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85e6ff4-ec5d-4bc4-97fb-34dbe1a56679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8524cd-b4c6-41da-a260-b453233d8d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5bdc27-668b-472c-b69a-b0e9947786b9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a1914d-a397-4951-8cab-32daedafad1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335dc80b-29cc-4699-8512-88910292610e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aab843-2726-4d9a-ae84-3446a3ecabcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c422d3e-34f4-4056-9733-95dc675b8a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990bd6e5-f595-44de-ad8f-4667c0d75c23",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552b71ee-9ae4-42e6-a68f-faa5151743a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13503317-2601-4235-acbd-66a474e3d4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f89b8aa-1338-4a03-86eb-b24b8eb2e61a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f1b597-9481-4dbb-bf35-6f0f42fc2600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8418a253-1f79-4e43-b759-bb9afd0477bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84c6723-a605-4ad7-80f6-7ed933d56b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2ed4c1-9456-488e-9efb-7f565f77d200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e183d49f-244e-4026-a433-40d436b0afc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c938a6-21b5-471e-9b02-5058d1f97aa8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9a654f4-5395-4f08-97a4-9b6667663b89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3042c58e-882f-403c-a469-27f89c6814da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "462cbb9e-e8a2-4c07-8bfe-5a16c7b4e6cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "846cd852-badc-4a62-af56-4591e7d938de"
                    }
                  }
                ]
              },
              {
                "id": "e86e8a9d-250d-4644-9bdd-679802b7d903",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0a91db0-13bc-4fe7-a6a3-b9cb490c19ac",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc91aca0-5697-47ba-ac7b-9ebf57ec00e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a6512fba-82f5-419e-8f4b-98097fa5fe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce6eab3-dfc2-4b00-ba71-147489d22c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce50954b-d95b-4b90-a9b9-542998b2695f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a0838d0-3c0b-46bc-b7e1-9428498cf9ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "577dc972-bf53-4d6d-b2a8-be0f49a74ab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cb7aadf-53ff-41e8-89e1-57a668dedba9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6740b5b1-86f1-41e9-a93e-70234f09f4ed"
                    }
                  }
                ]
              },
              {
                "id": "fb27d502-f888-428b-9bbf-64928eeeaca5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "53f176c8-91cd-46a9-85f6-17e6bf128801",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1ddf04-f2c9-417f-afcb-34827cc1c34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dd4ce8d5-4e98-4c43-bea4-2371d053ff74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e2e4c3-44e5-4239-afde-fe626535e19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ed6c38-c8d7-4a06-80d6-c9de3a4b8e8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d9a43ac-b454-4da2-a614-5ef553f678e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca4a642a-47e8-472c-8ded-710237c7ddcd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3a8a894-de27-43d6-ba0d-b3a3a300910e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02ef0b99-0fef-47eb-9a63-b4860be96f01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac956b62-31fe-45f2-a97c-b8b04b418c38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f593d6c3-93d0-4718-a7a8-f9dda00c3bd1"
                    }
                  }
                ]
              },
              {
                "id": "25c4b8ca-225e-425f-8a09-fb070a984e99",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ccd67d0-f7ba-4e66-af48-ea6f443d5d23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "88e20db2-402d-479e-b5e0-308979457cd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efbfdbcf-1923-41b0-acf7-4102e2d31bff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5bceeb5-0e04-4c81-a3aa-80990afc2c61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a5a0f53-2a2a-42b6-93b6-c62be29c9744",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8364c26a-e1f4-494d-9a67-6ab07a46bd8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a9f559c-2e9c-420c-a50b-d2ae7638d4d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60af27ca-b028-42fc-8bad-7f55e250136e"
            }
          }
        ]
      },
      {
        "id": "79972ea4-2817-4355-ac83-d603dc406842",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "853d3f09-bbda-4496-a151-7bf05ca8f093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bf32f6b-0605-4c72-bee7-4c936c383289",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea87817f-092c-4e85-9e14-9ab2e92f49ed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c842d8a5-da90-4e5c-a970-dbf65ecd8d39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b0dd1186-5040-43fe-a27f-a98bd68077be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d94e0ee-5458-4f1e-b4e0-37b796176371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "528bf9c6-f339-4656-9158-37081d33e1f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36a59ae7-4350-43e3-aa3e-de63fc21dd97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a62bdc-1bb4-44b5-bd7c-5fe776824981"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d73a167-eb1f-4765-8d27-675add0fe238",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32e0b799-cf5f-4f0c-b9ff-60e4568c20a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "357b984d-ff73-4913-97d3-fffbf4475f88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "adaa9237-23c6-4aa8-8027-a9c083345f78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "578c2819-6d9f-415d-a46e-ba2a86ee2cd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1de0dec4-2fd0-4b81-9415-ad1e57900a95"
            }
          }
        ]
      },
      {
        "id": "2c87b463-680a-4a76-9b7b-85d858207431",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "81af6fb0-74ba-4f58-b878-812bf69ee19b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "091398de-8abe-4bc4-82a2-dd45e756d8d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31a366da-631c-4f4f-b8b1-f0ce086a32b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859fdc27-0e4b-4ab2-9925-468ebe4a2ebc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "433a503a-a48c-4260-944e-c011a4865abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04e2866-f154-4167-a6a4-d3def803093b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "020044cd-f781-4bf9-88f9-d35ac91ec33f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f810d4a3-e937-4b54-805f-80c81bd2afb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57839c59-b802-452f-a355-11f5ef7108b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f805a81-4dcc-4af1-af01-978b96b3aea7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98911942-3e7b-4fbe-bab6-dd4a29a79bab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8fdf8b4-e563-4f86-ba88-3122559e7ad2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfd98346-6e40-4941-a030-15ab29faf780"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5d6d2d0-ee13-4729-8a9b-86e913e6e0fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dd8724c-d8db-42ff-a398-6ea54e0ba031"
            }
          }
        ]
      },
      {
        "id": "7b51490d-fc4a-4e13-ba51-211d268a19a3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c1a48dae-d663-434c-a45b-9dbc4e6bab06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3969b95-6217-41cf-9837-b06e5ce35203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b419c688-df33-4029-9845-6d5f11312909",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef624fb-10e3-44d7-90ec-192b64a26aa4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6dc21e4-8b43-4d66-9f99-d38085502234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a13025f-591a-4d17-a6b2-21a56785e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc0c12b7-a194-4e84-863b-d6c8413350bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e43ec82-c14a-4ef6-9e72-906ea7bd3110",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f25a9b2-7498-4b1b-a0ee-1e95c43cc1cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a51eaf99-be69-48aa-b3ec-fc9518b3f2b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "662ef1c9-e858-4c37-92d4-8db7a6246ba1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b78df2a-c479-4b42-ac56-0d6e73bbb336",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c42d4b70-043b-4c3a-9512-ae35bf8fd506"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae21d963-194c-47cc-9197-079494ba4880",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d3b2585-9fd2-4ae3-b449-b40e7d721d67"
            }
          }
        ]
      },
      {
        "id": "3db24200-a6e0-4a05-8a6c-94f60a7593d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eae4589c-e75b-4860-a3e1-97be2084b38a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e94b2034-000d-4e01-a841-e3c2d2309482",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "61327a05-05be-466d-9189-7462230e1991",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4c8b27a-f653-4576-832a-3f8e6f906edb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41a3dd75-cbb8-49df-8de8-80cff1454de0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 411.34736842105264,
      "responseMin": 19,
      "responseMax": 11673,
      "responseSd": 1428.6020582158926,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697934973398,
      "completed": 1697935102748
    },
    "executions": [
      {
        "id": "a4dc8bb9-bd76-4df7-a0a8-44eb01fa432b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a1caaafd-8d7e-435c-8fd9-46a968f79247",
          "httpRequestId": "b3320231-014b-45a6-b1bb-04de43695363"
        },
        "item": {
          "id": "a4dc8bb9-bd76-4df7-a0a8-44eb01fa432b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a1373628-8c99-4fb6-bf73-afbb2d4b7749",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 0
        }
      },
      {
        "id": "e5cdc5e6-e536-4a75-8061-41eda6caeecd",
        "cursor": {
          "ref": "07e1a8f7-3732-4a6f-ba23-6beab47e34d7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bc6b04df-dec4-4635-8e8d-c628d3c56707"
        },
        "item": {
          "id": "e5cdc5e6-e536-4a75-8061-41eda6caeecd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c6d4e816-1af7-47b1-ac46-a869ebb8ec5b",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "22cd48d2-427c-4893-a436-c72c74f17f0f",
        "cursor": {
          "ref": "d2ea4708-3738-4734-990d-245bcc8cb962",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "914511dc-40b7-4a3d-8ef4-6167896c9fbe"
        },
        "item": {
          "id": "22cd48d2-427c-4893-a436-c72c74f17f0f",
          "name": "did_json"
        },
        "response": {
          "id": "186af71b-c139-483c-8940-69183891fa84",
          "status": "OK",
          "code": 200,
          "responseTime": 1762,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1959079-635f-4b23-91e0-e01d7d246c0a",
        "cursor": {
          "ref": "4e5fbbce-4e64-46b8-9614-a11d925a8d06",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "708a5e35-e382-4559-9d21-8696d7e9e507"
        },
        "item": {
          "id": "b1959079-635f-4b23-91e0-e01d7d246c0a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8c5ecb21-9c06-481e-ae5d-3337d5d0e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1959079-635f-4b23-91e0-e01d7d246c0a",
        "cursor": {
          "ref": "4e5fbbce-4e64-46b8-9614-a11d925a8d06",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "708a5e35-e382-4559-9d21-8696d7e9e507"
        },
        "item": {
          "id": "b1959079-635f-4b23-91e0-e01d7d246c0a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8c5ecb21-9c06-481e-ae5d-3337d5d0e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfffd009-86ef-4dac-b302-3aaeb98e9167",
        "cursor": {
          "ref": "aa5be3bd-ea60-4385-8511-5d8b3b092efc",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ad9435de-acae-4dc9-9431-4ae70482de3f"
        },
        "item": {
          "id": "dfffd009-86ef-4dac-b302-3aaeb98e9167",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1c4f40d9-5c9a-48cd-b90d-84ac7db3d158",
          "status": "Not Found",
          "code": 404,
          "responseTime": 310,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422152fd-e37c-45c1-834e-e157ad0dbd82",
        "cursor": {
          "ref": "7594ae1d-575a-4c29-8bc0-1cade09fe0fa",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "276e1b8f-a25e-4256-8c4f-76d8e4cab7d7"
        },
        "item": {
          "id": "422152fd-e37c-45c1-834e-e157ad0dbd82",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9e65cefb-5f61-477d-9359-0f7a5a252729",
          "status": "Not Found",
          "code": 404,
          "responseTime": 329,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0362eb-6d01-4f8a-8f3e-6277e32af8c1",
        "cursor": {
          "ref": "4f31d2c1-552d-43d1-b883-d77c7ec3ecfb",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "473dfba3-6a30-4295-b4c9-02452c89dd45"
        },
        "item": {
          "id": "da0362eb-6d01-4f8a-8f3e-6277e32af8c1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "55cb668b-8caa-4893-8d45-c7e059b46bd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1697b3-7513-43e1-8eeb-c7f7b2d303e4",
        "cursor": {
          "ref": "b727d25c-011e-4c3e-94d3-c5f8e97f28f5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ff381dbd-8ff9-4552-ab9c-1e204a7ea39c"
        },
        "item": {
          "id": "1f1697b3-7513-43e1-8eeb-c7f7b2d303e4",
          "name": "identifiers"
        },
        "response": {
          "id": "b01be78b-2ab6-4416-8508-c932437344f5",
          "status": "OK",
          "code": 200,
          "responseTime": 1572,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85d51c1-4eaf-4719-b96a-5dfabb3f0e40",
        "cursor": {
          "ref": "d1d057ef-93dd-434b-b5b5-24dc6af292a9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "162cc87d-560e-4343-a079-18b3319a1bfe"
        },
        "item": {
          "id": "a85d51c1-4eaf-4719-b96a-5dfabb3f0e40",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "021f6e8b-aef2-46b8-b622-8dca34d3d111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47138e99-1f80-4f20-91a7-8f76827e4f38",
        "cursor": {
          "ref": "8697c90a-0dce-443b-9746-fbbbdce9aaf8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bdb68bbf-764a-43f3-b025-b91a4fb4166c"
        },
        "item": {
          "id": "47138e99-1f80-4f20-91a7-8f76827e4f38",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2201b831-0719-4e0c-84f7-4634ae753e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ec215f-64d8-4981-96a9-f764059aa491",
        "cursor": {
          "ref": "93060b79-75f3-4808-88cf-52ef54ed88b2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b2909f0e-853c-4a44-b9f5-2ccaf013fd29"
        },
        "item": {
          "id": "18ec215f-64d8-4981-96a9-f764059aa491",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "33f0ce24-2e2e-4cad-8aa9-c52353545e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977fb092-8723-4a1c-b9d6-b57c03a8ddf9",
        "cursor": {
          "ref": "c1d1d6aa-be66-4b75-be7f-4e648c72715d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e19c7c87-7107-45ad-a6a6-19aaa7418551"
        },
        "item": {
          "id": "977fb092-8723-4a1c-b9d6-b57c03a8ddf9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b788e5d2-e41d-4700-95d8-616d09f65fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daea6551-833d-4b9d-8d1d-f0650919031e",
        "cursor": {
          "ref": "f3596ca0-b55f-4909-99d5-365cb50e3b05",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "067d5fb0-2ee3-44a4-a6b0-f5c6600e328c"
        },
        "item": {
          "id": "daea6551-833d-4b9d-8d1d-f0650919031e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d41f2b09-805b-48f6-b4df-f6f01ac74aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0298bd5e-5ad5-409d-96c8-5cab780be120",
        "cursor": {
          "ref": "1331ada6-3272-43c9-9059-a1a80f1af6e7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fada9927-da9c-46c0-9ca8-d424250ed1b9"
        },
        "item": {
          "id": "0298bd5e-5ad5-409d-96c8-5cab780be120",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b3a92fd9-4f57-429c-8f83-d5f019bcb893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e98e92-7f82-4c6b-b359-1f53e355fd00",
        "cursor": {
          "ref": "b8c77416-225c-4190-a4d3-8eeb94ab9019",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ed04fb58-bac4-48a8-bfaf-1f0f85085a8b"
        },
        "item": {
          "id": "97e98e92-7f82-4c6b-b359-1f53e355fd00",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e5c56e83-6c6d-4b7c-8a64-e9fe1483675b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a78997a-5097-45d2-a4cb-3a479a874d35",
        "cursor": {
          "ref": "9c2fba62-6565-4c85-99dd-88eccd89d2a4",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1f592553-e8fa-4054-a5d7-b03043d4bcc8"
        },
        "item": {
          "id": "6a78997a-5097-45d2-a4cb-3a479a874d35",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "55fd278e-8495-429c-8956-ab1a3e62e711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c350a2-40b3-4be2-b574-82fbac09f2a1",
        "cursor": {
          "ref": "256ab1e4-8a43-4912-b44d-e7424be97554",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5f12de46-d9c6-4cc0-8528-0e2edd9e6558"
        },
        "item": {
          "id": "12c350a2-40b3-4be2-b574-82fbac09f2a1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fde3346e-cd8a-49cb-89d5-e4d517ca9ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f81bd4e-b834-43f0-942d-893805768f1f",
        "cursor": {
          "ref": "6fbd7ffc-9543-4f99-830a-d910cba24ebf",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a1287d4d-6271-4362-a216-cb6c031d3474"
        },
        "item": {
          "id": "2f81bd4e-b834-43f0-942d-893805768f1f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5e085fb1-89d0-486b-8b53-076d7f119c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4673e2-7f0d-4230-a139-5b03c44ddfae",
        "cursor": {
          "ref": "2eb50f2f-6573-4528-a541-8c3503e095ab",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5dbda440-33aa-4826-8c52-6c9b2e60b4db"
        },
        "item": {
          "id": "9b4673e2-7f0d-4230-a139-5b03c44ddfae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "88755e61-fb3c-43ad-a4d5-2c9fe2b6b370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1030541-5d28-4490-b6b8-49d4838ad64a",
        "cursor": {
          "ref": "e2f76f7c-b2c8-4809-b547-838284fbf22b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6f11cb3b-c84a-4614-ba85-b83709925667"
        },
        "item": {
          "id": "d1030541-5d28-4490-b6b8-49d4838ad64a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a39e9ee1-5363-4205-b4cd-8adef81a83c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9349dc5c-6fca-4e9f-be0a-e1ac8956c5ec",
        "cursor": {
          "ref": "8a9a2e34-1858-4f0b-893e-b4d416e6385c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3992926a-598d-4d31-aee3-8e91370637a9"
        },
        "item": {
          "id": "9349dc5c-6fca-4e9f-be0a-e1ac8956c5ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "60569fb7-935c-4025-ab1c-878955f4c68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4a3b5b-f6ff-4da2-9ebf-d8e1aa3e2ede",
        "cursor": {
          "ref": "c84c4114-aaaf-44bd-8fc2-2a47da072fc5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "056e55cf-f2c4-4b42-b555-c20b3755f2ba"
        },
        "item": {
          "id": "bb4a3b5b-f6ff-4da2-9ebf-d8e1aa3e2ede",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c2c3fa91-e6f9-48b4-bf74-3990a4079181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b236c49-bee9-4138-b0f6-68b23143c82b",
        "cursor": {
          "ref": "dbf5522b-a9ca-47e6-af3c-f775aa952e55",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ea82750-3b9a-4c49-a488-0b513f6280a5"
        },
        "item": {
          "id": "1b236c49-bee9-4138-b0f6-68b23143c82b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "98ac452c-6a1f-478e-8164-5a5959eb652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653b4a9f-3aac-4860-86aa-5fbe468e84bc",
        "cursor": {
          "ref": "11350834-62a5-4839-8b8f-61cd9a59025c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a87ac048-26a2-451f-8475-7f0f6342911b"
        },
        "item": {
          "id": "653b4a9f-3aac-4860-86aa-5fbe468e84bc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4c84a197-935d-4927-932f-46adcd42d959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce07cb3-7f36-427e-a842-73222e2d6f98",
        "cursor": {
          "ref": "e058f31d-4b30-4e7c-afe2-744ca361496b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f790ad85-ed0d-4ecc-8817-3ccfb1124b3e"
        },
        "item": {
          "id": "8ce07cb3-7f36-427e-a842-73222e2d6f98",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "60972a46-f27e-4542-8692-62dc9e053f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeec78ed-1022-43a7-980c-3990378179ee",
        "cursor": {
          "ref": "8069bb1d-3494-48f7-aa7c-924ab027c9c3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2e9de3e0-1db7-43c2-992c-ba6a46d724cf"
        },
        "item": {
          "id": "eeec78ed-1022-43a7-980c-3990378179ee",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4d9931f7-966c-43b1-8877-90bdc71bec97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426f2097-cee4-4e11-a95f-9874ed8b0647",
        "cursor": {
          "ref": "c079f5d4-e0d5-412c-b63d-7e3bf82142fb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f95688ac-6c09-474b-a6f0-04788a052ee6"
        },
        "item": {
          "id": "426f2097-cee4-4e11-a95f-9874ed8b0647",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "465c3638-1ef4-4cb1-aad4-ab75548e0f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cb96dc-1682-4c93-9768-02c724feaee0",
        "cursor": {
          "ref": "6b0ace0f-5b5f-4af0-a1c5-088a42c8bab4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f5727e97-ed92-4173-bc3d-fa56daf90847"
        },
        "item": {
          "id": "52cb96dc-1682-4c93-9768-02c724feaee0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d75e11c5-0b35-40c7-8efd-825a42380416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060ce73c-c592-44af-b043-c3a20fff81a2",
        "cursor": {
          "ref": "663a0245-14d5-42ed-abfd-1f59fcf159a5",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "840dc84e-9d01-4702-9cde-6f42da143922"
        },
        "item": {
          "id": "060ce73c-c592-44af-b043-c3a20fff81a2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "81861e4a-056b-4a91-b986-855788fc2291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90d33d8-4425-4c92-b46c-a44ea77a0ecb",
        "cursor": {
          "ref": "464f7d6b-ed72-4806-a925-e1b3cf376dca",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "47f91796-9baf-486c-af72-230c50aef44b"
        },
        "item": {
          "id": "f90d33d8-4425-4c92-b46c-a44ea77a0ecb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b7b93d08-8e96-4b21-a939-072af6fe97b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfe9324-c35c-42e2-bb0b-9209a57c0a0f",
        "cursor": {
          "ref": "be445efd-0666-40b0-927a-27b06a8d536b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d421f4b-6434-48e1-ace8-337890293519"
        },
        "item": {
          "id": "1bfe9324-c35c-42e2-bb0b-9209a57c0a0f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e89c91ea-2ec3-4093-af97-1adce6755b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca693ee9-524f-4342-8a49-7823d78433bd",
        "cursor": {
          "ref": "35b4a74c-1f1d-4dde-8b04-9dd486cbc187",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "90beae8b-0816-4be3-bb9d-25ef0467ef3a"
        },
        "item": {
          "id": "ca693ee9-524f-4342-8a49-7823d78433bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2666fc0b-30fc-43e8-80ba-bec6473299e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1428432f-d198-4922-9b8d-afae6e2ec152",
        "cursor": {
          "ref": "943946b1-bb7d-4963-bcdd-d4d36910c9c2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2e3fcc46-cde0-4c52-ac97-b1711b56aa4f"
        },
        "item": {
          "id": "1428432f-d198-4922-9b8d-afae6e2ec152",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "06674b77-6a20-4f15-a682-142eb576f5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67946547-c41a-4824-af22-c5becca1e47e",
        "cursor": {
          "ref": "7634e481-ba6c-4212-8bbe-755b9cce29ce",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c615c519-d728-45ce-855f-9431f5bc236f"
        },
        "item": {
          "id": "67946547-c41a-4824-af22-c5becca1e47e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d01e7529-fb98-4cf5-993d-1b8bf913c8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc466377-564b-44bd-87b2-46f6e7a9e65c",
        "cursor": {
          "ref": "ebcabef3-42c8-4af9-8376-8bb5c1424e18",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "06981031-8bda-4641-9a9a-edb96f5530b4"
        },
        "item": {
          "id": "bc466377-564b-44bd-87b2-46f6e7a9e65c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c9d46b6d-a786-4713-bf02-4f4ed58fe09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc6ec13-c9e9-4224-8978-a657ee301a5f",
        "cursor": {
          "ref": "0bb3b0b3-8e80-44ae-b449-db57f2c4e34c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "636227c2-4f00-4a78-a02a-99602eda6fbd"
        },
        "item": {
          "id": "5dc6ec13-c9e9-4224-8978-a657ee301a5f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "09c19890-215f-4597-abfd-a970b9abd3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef78eec-1b50-49aa-8450-27cea6368459",
        "cursor": {
          "ref": "5bfb27af-bc1e-4db3-bbae-a4c104c9426b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "437c88fe-2857-4e48-a47d-e8989a92be03"
        },
        "item": {
          "id": "7ef78eec-1b50-49aa-8450-27cea6368459",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ab9d12e3-9d38-4544-a683-acb89f08da62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e48273f-5593-4056-800b-8b5db2b2d88e",
        "cursor": {
          "ref": "e6587b22-e9c7-4951-99e4-01285b041466",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6af24ffc-7ab3-4d85-ba0c-7c17aa6fc042"
        },
        "item": {
          "id": "0e48273f-5593-4056-800b-8b5db2b2d88e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4a2f45e9-cf31-480a-9f1a-e95785fe0ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb687ca6-2eba-4df5-b549-1301b58ab7c8",
        "cursor": {
          "ref": "482bd6ba-adbf-42aa-a788-e6695e042558",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "68a99074-2251-47fe-a0da-ac3339ad397c"
        },
        "item": {
          "id": "cb687ca6-2eba-4df5-b549-1301b58ab7c8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a3e7cc81-ff97-4c62-880b-46db4ae56559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ccfd62-de8b-4e51-b779-7a1dcef3f423",
        "cursor": {
          "ref": "c1244a27-c18d-4862-80df-b23b6d721461",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "74ec77e4-863f-4562-8a9f-851ab9950556"
        },
        "item": {
          "id": "d3ccfd62-de8b-4e51-b779-7a1dcef3f423",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1c6de5fc-4aec-4c7d-af49-2d2dea392319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a8a0a5-9735-4568-b45a-ccfec6399a62",
        "cursor": {
          "ref": "052ec491-9d78-4b13-93a0-cc0433893f49",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d860fdcc-4adc-4b62-8c87-3e91208e9243"
        },
        "item": {
          "id": "47a8a0a5-9735-4568-b45a-ccfec6399a62",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aea33492-216f-4994-9a50-c380a602d54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f67d95-b824-4659-a721-ef9fc45bc082",
        "cursor": {
          "ref": "5e9483d9-bb9d-4816-8f8c-00c0edda533c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7da4af6d-879c-4b30-8709-e763e872d78f"
        },
        "item": {
          "id": "46f67d95-b824-4659-a721-ef9fc45bc082",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dfc06569-1dd5-4463-a527-af09b506e6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1299b7b-6b6f-4ffd-be77-e60cf0488d98",
        "cursor": {
          "ref": "c528a278-dbbc-4882-b3e8-052a9b768508",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "11417e8b-72aa-477a-b9d7-87651e9a0c66"
        },
        "item": {
          "id": "d1299b7b-6b6f-4ffd-be77-e60cf0488d98",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7dea51e2-a87a-433e-8dc4-88729c216900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6812d246-dc17-4659-b455-fde67ce12097",
        "cursor": {
          "ref": "b419f5f4-4ce3-4d5a-9731-4251e00512bf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b8b5c0e2-bdc3-4ac6-99e3-259b2c5e08ea"
        },
        "item": {
          "id": "6812d246-dc17-4659-b455-fde67ce12097",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0994e608-15df-4d6d-b704-0d9448ee44b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2439,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d462818-7a8f-40a0-8a34-b58c062c037b",
        "cursor": {
          "ref": "2149b315-0a9c-482c-a438-4067a4fd0c29",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a320d643-11b5-4d21-97ee-41c6cf0d270b"
        },
        "item": {
          "id": "7d462818-7a8f-40a0-8a34-b58c062c037b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ed09e321-cefb-454d-ab18-1bca4b933ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44d893e-5f1f-47fd-9344-10655722db06",
        "cursor": {
          "ref": "b71227b1-1946-44dc-954a-6efc3b3f014f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0beabe5b-1916-4728-a79a-9346b1171e15"
        },
        "item": {
          "id": "c44d893e-5f1f-47fd-9344-10655722db06",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ab66aa2f-aaad-429e-918d-bab8af75fce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791288f1-e608-4c73-9393-1e7dd26ae983",
        "cursor": {
          "ref": "a25bd864-851c-43a2-8b43-311ebab7df9e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "74bc4ceb-3097-49fc-bd58-0116cf0191b1"
        },
        "item": {
          "id": "791288f1-e608-4c73-9393-1e7dd26ae983",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d908fb64-0b6e-40bd-a4ce-21bfd8127382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b59dd64-2939-42ed-a486-ed201cb09e13",
        "cursor": {
          "ref": "7aaa58a2-d117-4492-8e16-1f4089285479",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3d0b4599-88d8-4fa5-918f-46c996a61b10"
        },
        "item": {
          "id": "3b59dd64-2939-42ed-a486-ed201cb09e13",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6bf3b7f2-748f-4d40-8d15-e41a2a961cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc831c30-1692-40d9-9a49-467c366db3cd",
        "cursor": {
          "ref": "8b742b90-1586-498f-b5fb-fb00345be713",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b183a282-4fec-42f7-bb7e-524d9ece3f3d"
        },
        "item": {
          "id": "bc831c30-1692-40d9-9a49-467c366db3cd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1ead6622-7dc0-4769-828c-f71dab39e165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07de32a8-c7c6-42af-b82b-d48f8fbbed1c",
        "cursor": {
          "ref": "e9fd6d1f-313d-43c0-8827-337c7bfc5662",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8a10889c-cfd9-4e76-9fc9-8b0b774042ff"
        },
        "item": {
          "id": "07de32a8-c7c6-42af-b82b-d48f8fbbed1c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4b89302d-4f1f-41cb-839d-9c03d9e3caf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c30a10-6892-4f3b-98e6-be8d3719bd04",
        "cursor": {
          "ref": "41600137-1350-4849-8486-14e73767afcf",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6da27e5e-e1d8-4309-92c9-2197768d90af"
        },
        "item": {
          "id": "91c30a10-6892-4f3b-98e6-be8d3719bd04",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2db8cb6e-7b96-440b-b82a-1e0fd1349709",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2401,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aed7c62-b91e-4fdd-b6a8-061af20dd8e8",
        "cursor": {
          "ref": "dc4b08cd-8b7a-46ee-8d7d-500bb6c23f70",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9207735a-adbd-40fe-81eb-aac71a0edcc1"
        },
        "item": {
          "id": "0aed7c62-b91e-4fdd-b6a8-061af20dd8e8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "92ac7fd8-16db-40c8-8c69-c2ddb580c4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9578363-b678-4cf2-a673-b0c98f8a434a",
        "cursor": {
          "ref": "c1116e8e-05fa-413a-9ef1-563b3873530d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cc7b34ef-81e8-46bb-86c5-230e3b5bcbcf"
        },
        "item": {
          "id": "a9578363-b678-4cf2-a673-b0c98f8a434a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3b03243e-e178-4b90-9ddf-98a442ad3ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b81cc2-c9fd-420a-a9de-d04b9549d0db",
        "cursor": {
          "ref": "8e4ae77a-0a10-45f4-8a35-271e5a7d0233",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4efbde37-f8cf-448b-a99b-f927c8bb0306"
        },
        "item": {
          "id": "95b81cc2-c9fd-420a-a9de-d04b9549d0db",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aea7433f-a168-45ba-af92-4c6ed196f9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c270df-fbd1-49e2-9d2e-6ad37adadf95",
        "cursor": {
          "ref": "6bfb1a1c-e71b-42e3-93b4-ba3f31859732",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d095ef3c-1dab-4583-ac55-9579bc0871b3"
        },
        "item": {
          "id": "e7c270df-fbd1-49e2-9d2e-6ad37adadf95",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eda0ae0a-ab4f-4805-b3b4-32e779b0caca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4c9629-5fb9-49dd-8acd-feb2ce6fd14f",
        "cursor": {
          "ref": "26194db3-a561-48cc-a18f-0bc42543d684",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81ef049d-4fe7-44be-973f-f7872c14bc3a"
        },
        "item": {
          "id": "1d4c9629-5fb9-49dd-8acd-feb2ce6fd14f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6291a975-4678-487f-aa28-7290445eaa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181fe828-df6e-4771-9d0f-6acde0524c85",
        "cursor": {
          "ref": "1ed6cab6-71e1-4d95-b016-dce68ae2a4c1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "15ea90dd-d3b0-4c3f-ac89-07c3f300ba3d"
        },
        "item": {
          "id": "181fe828-df6e-4771-9d0f-6acde0524c85",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ab32fb10-b836-4c27-b29f-8bd255641df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f1bd6a-25be-4b99-a909-8b10ee8b81bb",
        "cursor": {
          "ref": "aa3a6ef1-cfe9-478a-a592-060ab342e250",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "778513ab-8b01-4bae-afa4-7fd5c9eb950c"
        },
        "item": {
          "id": "71f1bd6a-25be-4b99-a909-8b10ee8b81bb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d33491e1-3d9e-462b-92d7-8d2ee6e41517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1884ec1-5024-4be4-8f80-329b2c2be3d5",
        "cursor": {
          "ref": "ad90ea10-a219-4e4b-9299-8a4a9f67c162",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "496fb119-b3f2-4aa7-bb81-ad9389353322"
        },
        "item": {
          "id": "f1884ec1-5024-4be4-8f80-329b2c2be3d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d86782e0-8bca-4c89-b456-68c623b13981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c37da1-2629-430c-b3a6-e179b2d083d5",
        "cursor": {
          "ref": "7b205444-1d2b-4013-ad85-fa2a3c84b63c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a752cabd-d49d-4b17-b6fc-15faf87c81b4"
        },
        "item": {
          "id": "25c37da1-2629-430c-b3a6-e179b2d083d5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "440951c2-ba18-46d6-b570-fdebac9dd864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bcc1b1-d29a-43db-8cc5-e1b7cf133a03",
        "cursor": {
          "ref": "a29a8297-3ef9-4e20-9833-bdf66c349c9b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0186a5b4-93e7-4e5a-a73c-8fd8ade07546"
        },
        "item": {
          "id": "f0bcc1b1-d29a-43db-8cc5-e1b7cf133a03",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7b141be1-02a4-4d75-819f-b679f7e9c17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869ba633-ea2b-4fe0-81ff-1c614719b914",
        "cursor": {
          "ref": "045e8eda-aa25-4600-bc52-630436508b04",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a3c13f9a-c60d-4ef7-843b-fb266bb0a0b8"
        },
        "item": {
          "id": "869ba633-ea2b-4fe0-81ff-1c614719b914",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "85826081-3ed0-4c80-9d46-26c28632e61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a21d349-3592-47d9-bd6f-8e64cc5e0dc3",
        "cursor": {
          "ref": "ef880113-bc96-4050-8c19-9e50ab924aa5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3dbb4882-b5a0-43d3-b2af-a8c9ad57cb70"
        },
        "item": {
          "id": "0a21d349-3592-47d9-bd6f-8e64cc5e0dc3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "38e997ff-4fb8-4a91-9744-29ef80444a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c52d5f-bfc8-48c7-99b0-689faab3d580",
        "cursor": {
          "ref": "c9cd5d37-1e2d-4ec1-873b-9d5517bb20d5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "85ee4463-2366-4b8c-893b-f66ceb828b70"
        },
        "item": {
          "id": "96c52d5f-bfc8-48c7-99b0-689faab3d580",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c39aa02e-f4c3-4162-ae6d-9f2692c66047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aba986-97a2-4676-9512-a206fe821969",
        "cursor": {
          "ref": "8b87f0dd-cbba-4d5b-800b-06169a8cfc02",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "374e366d-202c-4b88-af80-636f6f685bfb"
        },
        "item": {
          "id": "44aba986-97a2-4676-9512-a206fe821969",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24dd9e3e-453a-423c-9780-64bd56444f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8e64df-d88c-4e0f-98d8-9dd8b8eae4c9",
        "cursor": {
          "ref": "18dabd09-5b47-470a-9da6-cf8bdc62b150",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f9fef9a3-9107-495c-82b9-747fe2529c2d"
        },
        "item": {
          "id": "7b8e64df-d88c-4e0f-98d8-9dd8b8eae4c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "39bdea56-1abd-480c-8ab8-515073ac6d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfea702b-500a-48be-bb51-45ced495feec",
        "cursor": {
          "ref": "eb3a1911-84c4-430d-b10c-3003ae8b6d24",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c3f1e5ef-fd22-404b-a4a8-6b18cb112d7c"
        },
        "item": {
          "id": "cfea702b-500a-48be-bb51-45ced495feec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "36254c81-fd08-4198-8a77-a9381bc37b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b67ce20-3847-4d80-bf2d-81f43afbbf1b",
        "cursor": {
          "ref": "1c16620a-9cee-43d3-afd4-f746ba44cc67",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8e4ba287-2d6e-4fca-8d32-0d79a1d963de"
        },
        "item": {
          "id": "2b67ce20-3847-4d80-bf2d-81f43afbbf1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "858be18c-3db6-441d-b3e6-d352d071ce3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d762b91-f072-4e4e-84c0-ce1036dad92b",
        "cursor": {
          "ref": "94aa4a50-f3d6-4534-82bb-f8d376e9181d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "57213c33-2890-4bc1-8492-e5383ba40456"
        },
        "item": {
          "id": "2d762b91-f072-4e4e-84c0-ce1036dad92b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "caa5a517-49d8-4ab7-b95e-c4a644dddf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8c2a07-116d-4d88-b39f-3e9d1e30895b",
        "cursor": {
          "ref": "802e497c-ea54-4f4c-a03e-54fc8d66a8c6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "226880bb-fa1b-4c46-9e93-6d14cefefbbe"
        },
        "item": {
          "id": "6a8c2a07-116d-4d88-b39f-3e9d1e30895b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e5b931e0-e7de-4da6-9404-ff75964114b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b2929a-5651-4757-9cec-102edb45c147",
        "cursor": {
          "ref": "f717e900-e0ff-4ff7-af05-df6a0e99682a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9a730a3-4cf2-4167-b3f4-b5f23f1b1dba"
        },
        "item": {
          "id": "f8b2929a-5651-4757-9cec-102edb45c147",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2e736bcb-8bdb-446a-ad91-4a1de71ce1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a489721-3f54-4289-b9d4-d51551bf8d4d",
        "cursor": {
          "ref": "59352c60-126f-4108-a7b0-2f0c571fc946",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "01282d55-dc82-4ae2-9675-7d078b965d20"
        },
        "item": {
          "id": "7a489721-3f54-4289-b9d4-d51551bf8d4d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f702c355-d88d-4748-9ffb-162ea61af4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004f09b8-2e9d-489d-85d8-69310fa5db8c",
        "cursor": {
          "ref": "94dc523f-7814-4c4b-a735-1b5f0ca6a166",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71c9bfdf-2706-4d0c-b585-fb00670aaf49"
        },
        "item": {
          "id": "004f09b8-2e9d-489d-85d8-69310fa5db8c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c680b03f-974e-4e35-b7f3-ac44080dd028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd118f2-f9bb-4c66-a563-7baf669473ca",
        "cursor": {
          "ref": "a2b5174b-bfda-45c0-beb4-a326f29ef73b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f421e5e9-7147-443b-8887-f88f5662af75"
        },
        "item": {
          "id": "4dd118f2-f9bb-4c66-a563-7baf669473ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "12e92c61-d540-4396-a627-19d20ab5877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cda4b7-c557-4b38-8403-2178f7f3b5e4",
        "cursor": {
          "ref": "40821868-59aa-440f-9a56-16beda55ad69",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8409b60e-ccfd-4a63-8644-4e42ef4b5f16"
        },
        "item": {
          "id": "55cda4b7-c557-4b38-8403-2178f7f3b5e4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ac8c855b-1576-435d-964d-720859f4a6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97b3045-e536-4e11-b1b1-87e260b0a638",
        "cursor": {
          "ref": "37f5b22d-125f-4c23-84fc-b2e1c20ba000",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "72772e1b-fdcc-4872-98f1-6b7dd5f41ad7"
        },
        "item": {
          "id": "c97b3045-e536-4e11-b1b1-87e260b0a638",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0033eb75-0044-457d-ad13-858a9a597668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc8c1ef-82c7-4590-bd07-c8d1078392e2",
        "cursor": {
          "ref": "96328ba9-867e-4dff-88e6-29050657b314",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9054d8a1-e31e-4faa-b74b-03f038438c4c"
        },
        "item": {
          "id": "4cc8c1ef-82c7-4590-bd07-c8d1078392e2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f83b0cbb-1d51-4a36-bc4e-6a8640c4911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e259764-8990-4e9d-a6b5-85051d466b1d",
        "cursor": {
          "ref": "157aad3d-afe9-472c-b82a-79ade7679786",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "822b94da-4f2c-4cd2-b350-e3ed8d8cdd14"
        },
        "item": {
          "id": "4e259764-8990-4e9d-a6b5-85051d466b1d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13b00c4f-895d-4377-b4b9-07ddc0c4c67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e2229-785c-4ecc-b191-2ad663e157f6",
        "cursor": {
          "ref": "043b7f2d-39ca-47b6-9922-fd70cc91f8af",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f274a3ae-a0a8-4a98-a69f-016ef7e9817b"
        },
        "item": {
          "id": "e77e2229-785c-4ecc-b191-2ad663e157f6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fb9bdda1-1ba7-41da-8bfa-c251aa366c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117cdfe3-b204-4211-aecb-cc331f9c19bc",
        "cursor": {
          "ref": "eb81d5e7-62be-4652-b2e2-86e707c5b217",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "697a9254-217f-44c8-ada1-bd9d69df3257"
        },
        "item": {
          "id": "117cdfe3-b204-4211-aecb-cc331f9c19bc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "21f6f208-80d7-40bd-8489-f156e3708818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8163d2-6463-4a45-b591-3916af284298",
        "cursor": {
          "ref": "fda08ef0-a476-49c8-9801-7617354f5a57",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "34066989-52a6-4b1f-9403-535262a415f9"
        },
        "item": {
          "id": "3f8163d2-6463-4a45-b591-3916af284298",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "006021b6-e42f-471e-8bd9-518760635f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0032a833-8745-4303-a64b-0ce7c3029566",
        "cursor": {
          "ref": "34ed8e0d-c39a-419c-8589-ddbd181769c1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e885504-410e-492b-bc84-5c3c3d9d0758"
        },
        "item": {
          "id": "0032a833-8745-4303-a64b-0ce7c3029566",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "562255d8-f6e0-4f7f-9b57-5c2c3adcbd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa42ac4-0e4a-4137-94a4-dd278d465c05",
        "cursor": {
          "ref": "4c04e501-83e6-43b6-b535-0bf5c0368aac",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "284805a1-8a9a-4e86-9b1b-c445c732f621"
        },
        "item": {
          "id": "3aa42ac4-0e4a-4137-94a4-dd278d465c05",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33e29cd8-d247-4b99-b3d4-94f4401daec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78243e36-5354-459b-80d5-b5e1a20b9544",
        "cursor": {
          "ref": "529ecf8b-7c8d-4cd8-a054-7a951b8f2b98",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6d4560bd-58df-4868-ad76-8c3ef0b4fb34"
        },
        "item": {
          "id": "78243e36-5354-459b-80d5-b5e1a20b9544",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e043a43-c029-45d4-863b-da48a01b2e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f475cff7-0b03-4c55-862e-0f9b844b878d",
        "cursor": {
          "ref": "d0f234a3-c809-41a9-a541-14207c369d88",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "162423cc-f2d2-4d0d-82b9-9a46e29f2c0e"
        },
        "item": {
          "id": "f475cff7-0b03-4c55-862e-0f9b844b878d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2356e073-a6da-4d6c-adb4-74b692b5f7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2844059-0aac-483d-8a1e-4863162635b9",
        "cursor": {
          "ref": "5a428bad-ce31-4347-8c92-01d0b38c671b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5295e238-9f3c-46f5-85c9-25fa76a3b212"
        },
        "item": {
          "id": "b2844059-0aac-483d-8a1e-4863162635b9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ddb4e8bb-e0c1-4daf-ba6b-84f92c7a5c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c24df30-1183-4caf-bc8f-d07cb01fbe9c",
        "cursor": {
          "ref": "4904e5c5-41d4-4acb-a85c-5ccdebf096c9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "594532b0-4bcb-4718-8c7d-81010c097926"
        },
        "item": {
          "id": "7c24df30-1183-4caf-bc8f-d07cb01fbe9c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "be4d3623-2b06-4745-a0f4-5b7276e763b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bf429c-99df-4f57-951e-91f0afa8850b",
        "cursor": {
          "ref": "95f5d08a-07ca-4a56-b816-1145ee5d9ccb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "76b8e8a7-e4c3-44b2-8ed1-53e7a2d54d85"
        },
        "item": {
          "id": "80bf429c-99df-4f57-951e-91f0afa8850b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9e0c59a3-e237-4553-81bb-2ae91508a4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35684dae-d561-4208-bf8c-2a9e5d930b6e",
        "cursor": {
          "ref": "6d6077cd-750f-4c54-8a01-8bf538b3e361",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "985c7333-1475-4c5c-a41e-c1de9aa8fce7"
        },
        "item": {
          "id": "35684dae-d561-4208-bf8c-2a9e5d930b6e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "89a0e07d-fbbe-4c2a-9703-87b7d6e531f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b1d27-e49a-4fd0-9366-7ddea35beb46",
        "cursor": {
          "ref": "d3ad081d-2c01-43db-8040-5e0e1f802078",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7832f4a2-a875-427f-86b5-af3a3ce185a4"
        },
        "item": {
          "id": "507b1d27-e49a-4fd0-9366-7ddea35beb46",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bbcb61a7-6221-4d03-8292-e98883d37789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a07d3e-ab36-4d39-a232-b3fbc21aef40",
        "cursor": {
          "ref": "b4800b46-02d1-4918-9da9-c473ea23bace",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f8071a9-deb3-4239-9103-a56a601c0008"
        },
        "item": {
          "id": "02a07d3e-ab36-4d39-a232-b3fbc21aef40",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f493948e-abe6-4c4e-bb7e-6beadad45a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c863f1-1608-4f5b-add5-399757fc50c9",
        "cursor": {
          "ref": "c4b0f767-431b-4b21-bfcf-9a5d5c481c26",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4dc353eb-4375-43c2-a78c-9e07c3de0ff4"
        },
        "item": {
          "id": "74c863f1-1608-4f5b-add5-399757fc50c9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fd711afc-1629-4b70-8adc-bf9682dea01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616625b9-06ac-4695-8249-a3de27fb547b",
        "cursor": {
          "ref": "cb6ddc60-8375-4608-9ca9-0848a30db485",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b850bbc5-b369-43e0-bd5b-e717ce6a1cf2"
        },
        "item": {
          "id": "616625b9-06ac-4695-8249-a3de27fb547b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f1695ffb-4bb3-4ef3-a1da-0148eb990f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ff33f-aa4b-47a4-a7c1-1669276ae38d",
        "cursor": {
          "ref": "057d34f0-6395-455b-b7d1-8a9fb9bc3ba3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "71158303-95f4-4b3b-b248-fc649c324f96"
        },
        "item": {
          "id": "698ff33f-aa4b-47a4-a7c1-1669276ae38d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a99df39d-9d54-42fc-bcfd-b25feac2b9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9663ad76-ea2f-410b-8306-d21803986352",
        "cursor": {
          "ref": "b122a53e-7ccd-4ea3-b41d-9f1fd0710873",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ba93edcd-3e86-4c31-8ed3-dcad3e7751cc"
        },
        "item": {
          "id": "9663ad76-ea2f-410b-8306-d21803986352",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "315af26a-b530-4fab-b721-85ab43fdacf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e978fca-1bbe-40c6-b30f-30eb5bd99e30",
        "cursor": {
          "ref": "86d7fa0e-4142-45ae-98e2-cc58f6510de9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d410089a-4b5c-4355-9bc2-c52181ce5e01"
        },
        "item": {
          "id": "4e978fca-1bbe-40c6-b30f-30eb5bd99e30",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "735bd64a-d243-4773-89e1-f438de70a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0f2e62-296a-42aa-8e97-9b65bdc1f411",
        "cursor": {
          "ref": "bf1dd7c5-4f5f-41d0-bfd7-9b5f85d8ec57",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ea696386-3925-4a17-b7eb-84609ade73d4"
        },
        "item": {
          "id": "0e0f2e62-296a-42aa-8e97-9b65bdc1f411",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "55b26a1b-bdf9-4943-952f-09b69eb6d86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8d2dc3-f1fa-4b47-8cf7-b827a03233f7",
        "cursor": {
          "ref": "2270a5c5-5500-46f3-94b7-93cfa4dc0dae",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "44dc83c9-724c-466c-bc96-b545bbf0654c"
        },
        "item": {
          "id": "5e8d2dc3-f1fa-4b47-8cf7-b827a03233f7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e1c85c9b-3414-473e-be4a-8e9d14940945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bad255-b522-48c0-b5a1-10d37ba101b8",
        "cursor": {
          "ref": "e4439b62-02e8-48a1-94f2-9ad9e270bf21",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41707aca-283b-49de-bfec-d5f410b85b51"
        },
        "item": {
          "id": "c2bad255-b522-48c0-b5a1-10d37ba101b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8aeeb679-a6f7-43e2-a272-85e0d0a940c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c0e7f-abb0-499e-9d0c-cffeb7765950",
        "cursor": {
          "ref": "10c1caa2-ca45-47c9-b3ed-3dc7804291ac",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "00b07ac4-cb75-488c-8af2-43277e64c189"
        },
        "item": {
          "id": "359c0e7f-abb0-499e-9d0c-cffeb7765950",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1512d4fb-e737-4723-8d2c-10da7f8d7688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cb5dbb-05e2-41c0-83f1-bf098cc25c99",
        "cursor": {
          "ref": "267fb9d4-367f-487b-935e-41a7cf9db312",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "04692559-063f-4980-b1f4-914fcf91af6d"
        },
        "item": {
          "id": "b8cb5dbb-05e2-41c0-83f1-bf098cc25c99",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1be97afc-6c50-49ae-8700-711d7b8d449a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f192ec0c-5a2f-43b9-8247-2f20c8a57672",
        "cursor": {
          "ref": "fb58c182-16b1-4179-9eb5-a54ab690b18b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "83607cb3-0efc-40ac-b8db-9d461acf1140"
        },
        "item": {
          "id": "f192ec0c-5a2f-43b9-8247-2f20c8a57672",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a5bdee32-cf60-4ce1-a523-fedf3370efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ef19fc42-0897-4169-bcf8-8bc387165fa7",
        "cursor": {
          "ref": "091a45b0-6f40-4385-acb1-29b803dc88cd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4f7073c3-1999-4f54-adf8-0060fec48733"
        },
        "item": {
          "id": "ef19fc42-0897-4169-bcf8-8bc387165fa7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "617994f4-e433-42db-bd52-ae6cfeaf19f6",
          "status": "Created",
          "code": 201,
          "responseTime": 11673,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06d8e38-8a3f-482a-bae9-1f9ac3374c16",
        "cursor": {
          "ref": "e8f793ca-e250-447b-89c1-fdda0f30babe",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c3800433-41f8-4dc1-bbba-f45ba5b49dcf"
        },
        "item": {
          "id": "f06d8e38-8a3f-482a-bae9-1f9ac3374c16",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "90bebdfd-32b7-4b6d-a0a3-d4060e414cec",
          "status": "Created",
          "code": 201,
          "responseTime": 10571,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6adaa-4dc7-4e04-a562-67638c270173",
        "cursor": {
          "ref": "a868a1a1-2523-4c79-9df4-3e47dbb075c6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "de1172c6-6cdc-4524-ac9c-7b8a6e558215"
        },
        "item": {
          "id": "38a6adaa-4dc7-4e04-a562-67638c270173",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "032b9bd7-b528-417f-8820-79f9e9e4d710",
          "status": "Created",
          "code": 201,
          "responseTime": 10926,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c76da-bda4-45a9-9128-f5884ea90dda",
        "cursor": {
          "ref": "47f1091c-a14a-4b55-b1b2-8e987f29ac18",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b5c39c9-09ea-4af6-93af-7e93c9020649"
        },
        "item": {
          "id": "ee9c76da-bda4-45a9-9128-f5884ea90dda",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "09669271-e8ca-43c0-8154-8254d5b27e6c",
          "status": "Created",
          "code": 201,
          "responseTime": 11053,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70c1d37-bf0c-4e09-a0c4-a7d49db4bd47",
        "cursor": {
          "ref": "3a116fb9-e21c-44c6-a6d2-e4c03b634686",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1d09c1e1-bf76-47cb-92b0-b20429d3d80d"
        },
        "item": {
          "id": "a70c1d37-bf0c-4e09-a0c4-a7d49db4bd47",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "172a34d7-7790-4570-a626-f52a0d19f554",
          "status": "Created",
          "code": 201,
          "responseTime": 10221,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "083e0164-8b06-428b-b5ef-206b93af8911",
        "cursor": {
          "ref": "b37e2828-1ff5-41fb-a95d-b54104e9fc75",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f8a0ee5f-0b7d-4611-adc5-6151c29f64aa"
        },
        "item": {
          "id": "083e0164-8b06-428b-b5ef-206b93af8911",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c840c019-33bb-4a4d-ba85-463566d38bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0b27bb37-4819-4a9d-8a81-a312c6ce51ee",
        "cursor": {
          "ref": "bcde9f56-13ec-4fda-b88c-c344d36c6889",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5a475670-b0c4-459f-965d-b9648ce957fe"
        },
        "item": {
          "id": "0b27bb37-4819-4a9d-8a81-a312c6ce51ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "394ac76a-3d69-4c47-bbf5-174c4ac36a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa465383-be32-4513-bd55-ffa4c10b7d93",
        "cursor": {
          "ref": "8cbf6faa-4513-462e-8cdf-7ad927627348",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a235a21a-d4d3-4e23-9e67-d7978de87fa3"
        },
        "item": {
          "id": "aa465383-be32-4513-bd55-ffa4c10b7d93",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d37a539-7808-4366-8cf2-31180bc836f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff336ef-b7d9-46f8-a0c0-2493da189a39",
        "cursor": {
          "ref": "5fe55a9b-03d2-431d-a339-59c4b1fb00f6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a9607a98-d170-4783-80bc-a4a6bb0583a8"
        },
        "item": {
          "id": "4ff336ef-b7d9-46f8-a0c0-2493da189a39",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7e8b39fa-b8b2-41f4-b08e-28f6b2b4e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9803ea3-19d8-469f-b848-dd7a79cd2dc5",
        "cursor": {
          "ref": "74a91b7f-12bc-4bc7-b7d7-dead6d94ecdb",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ee04baa4-e88b-4ec6-b5b5-03920f239b68"
        },
        "item": {
          "id": "c9803ea3-19d8-469f-b848-dd7a79cd2dc5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0db5426c-168b-405e-89b0-e99a54ff2986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6568ceda-f462-4bd7-9c7e-1073184635a4",
        "cursor": {
          "ref": "39a755cb-f7c9-4b64-807a-db1668e4326b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b67c3976-cd14-46b7-8555-b96ad6fb99d7"
        },
        "item": {
          "id": "6568ceda-f462-4bd7-9c7e-1073184635a4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8048e80-35e3-413a-9358-0f194c949e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e23508-4d7f-43dd-b7f9-207e502f1c00",
        "cursor": {
          "ref": "9b3b2f19-ed6e-4603-94cb-2536cd6fe499",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9325f20f-ee48-42ca-b605-23e52738e3ee"
        },
        "item": {
          "id": "23e23508-4d7f-43dd-b7f9-207e502f1c00",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bff55584-5c67-4f04-81f6-230f5aadbbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ce731c-73ef-49a3-8baa-8535d3e07b05",
        "cursor": {
          "ref": "2d12dca1-41aa-4a4d-b5e0-ffe213781ffe",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "216dd558-3021-4c04-aa2f-1916927b1082"
        },
        "item": {
          "id": "80ce731c-73ef-49a3-8baa-8535d3e07b05",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44e0318c-887c-4a40-b21e-3d6aad128373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac630ea-df07-488e-b1fb-d3eb89fe1508",
        "cursor": {
          "ref": "bc1d1537-b1d0-41a6-92b6-e41c62b436a0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be7d8c65-8fdc-4762-bdd3-dbcd707d4fbb"
        },
        "item": {
          "id": "eac630ea-df07-488e-b1fb-d3eb89fe1508",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e36287b3-14dd-4091-8c6d-a15824c1171b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a73dcb-c478-4a9e-a5dd-5a35649abd59",
        "cursor": {
          "ref": "071208c5-dbe3-4979-bc73-709c33259412",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6cf3c73f-5b39-4808-8d7f-2f1abd43f919"
        },
        "item": {
          "id": "09a73dcb-c478-4a9e-a5dd-5a35649abd59",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af7011b6-bceb-4269-840b-d2eab3e185cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d81dee-d734-4914-973e-52098bb5afaa",
        "cursor": {
          "ref": "b7f8db14-1aa1-43cd-89f1-8edfc355b75c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f1d1ffbd-3bba-443a-b67f-91700df0f3a5"
        },
        "item": {
          "id": "98d81dee-d734-4914-973e-52098bb5afaa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "81c401c9-09bf-4774-bb70-4afce0896e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dc28af-33e7-4040-a21d-ec12ef0f1615",
        "cursor": {
          "ref": "0b8f799f-d050-4856-9509-4a87a96c8287",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7f98362a-7d97-4172-b54b-59e3ba713936"
        },
        "item": {
          "id": "a7dc28af-33e7-4040-a21d-ec12ef0f1615",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "53069da3-7348-4ba8-833b-c9408a629520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7964c9e-3aac-4e00-ba83-1a833922df33",
        "cursor": {
          "ref": "27637f10-1d32-4281-920c-030dcf69874b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7a00baf2-2c04-4842-9dd5-020bdb81fa22"
        },
        "item": {
          "id": "f7964c9e-3aac-4e00-ba83-1a833922df33",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2caf719c-a950-4306-b0f1-1bf59bc48c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f1d1c3-0714-4d8d-8ac8-8d7ba45f8c0a",
        "cursor": {
          "ref": "784b00d5-bde5-4b09-8b29-44a9230cf7f0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "166462e1-8fc8-4136-a7f4-67b46b8e5781"
        },
        "item": {
          "id": "08f1d1c3-0714-4d8d-8ac8-8d7ba45f8c0a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4c4de796-4f0b-4bcd-a5b6-848350d33bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8c5a8a-0ae8-4f70-a084-d36980082209",
        "cursor": {
          "ref": "55c4076f-4768-4015-9a5a-767763984ba4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "79582739-528e-4370-a051-4d5bab414d55"
        },
        "item": {
          "id": "4f8c5a8a-0ae8-4f70-a084-d36980082209",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f8bb4fe2-b526-4a7e-85ee-be42e7e6f83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a65ea8-bece-4efd-9bd0-7959b9ef1d26",
        "cursor": {
          "ref": "1ecb8919-bbae-4153-b166-a22a64988bcb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7dd1e842-e002-47fe-a2a3-69d9763d677e"
        },
        "item": {
          "id": "38a65ea8-bece-4efd-9bd0-7959b9ef1d26",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b6951a99-973c-43cb-91ed-7d37a796c1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8496029-2a2e-4971-9595-d0e29e4b6189",
        "cursor": {
          "ref": "cab0085c-276d-45ef-9dee-91e6e2ffb02b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "15aba443-0598-44de-a2a3-d4a6417cd880"
        },
        "item": {
          "id": "e8496029-2a2e-4971-9595-d0e29e4b6189",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e62e901e-ed46-405c-9566-2f663dc4d890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd7dcd3-f6df-41da-9e0d-f94a75a6b774",
        "cursor": {
          "ref": "42b322bb-cb49-4048-97bf-b95ab0b28af0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "31f6433d-8d84-4b61-a40d-fb67823c7892"
        },
        "item": {
          "id": "9bd7dcd3-f6df-41da-9e0d-f94a75a6b774",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8b71efb-6b24-4f05-b890-b03fc1f6c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776b73b6-1270-4b73-b349-fdf2785a548a",
        "cursor": {
          "ref": "4d561485-4477-4fa1-a251-2d1dd0c1ba08",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eb4984bc-0b6a-4332-ac21-df204770fefb"
        },
        "item": {
          "id": "776b73b6-1270-4b73-b349-fdf2785a548a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8fac5a44-0b2b-4e96-80f0-821aca1c02a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652cc152-0b34-463f-8823-715c0b852095",
        "cursor": {
          "ref": "29cb6652-e5d1-4bdd-881c-95cecaed2ba5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "68e05c7b-a363-43c3-a637-3f6557148b3a"
        },
        "item": {
          "id": "652cc152-0b34-463f-8823-715c0b852095",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "133e25c8-2829-4877-8da3-dabe3a6fedbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53b5efa-01c6-431e-b017-3e84518a99c1",
        "cursor": {
          "ref": "ee4ab9ff-8c3b-4cec-bc56-778f930fbf3c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "80556864-b71b-41da-88ed-3b5e5325c302"
        },
        "item": {
          "id": "c53b5efa-01c6-431e-b017-3e84518a99c1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e8cb9dd4-0a0a-492a-9d2b-8f2e1f491a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8b59a-9ac0-4605-8910-9833a6305b78",
        "cursor": {
          "ref": "83dc3ed0-5c7b-4d3a-ba2f-c3c273f74775",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83691f12-e2ab-4afc-9ed2-db73b44e372d"
        },
        "item": {
          "id": "6cb8b59a-9ac0-4605-8910-9833a6305b78",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7d26ce2-c168-4ce6-be16-c1e049d7d369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f2005a-6591-4ca0-a8a7-8bb2d1c447e8",
        "cursor": {
          "ref": "dfe5abcb-e9b8-42fd-b551-e439a827be26",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "473e3477-7a47-48f1-ad78-f40419119b19"
        },
        "item": {
          "id": "13f2005a-6591-4ca0-a8a7-8bb2d1c447e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d76685a4-4a7b-424b-995a-76f500823e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a75f94-8a2c-4446-8590-f97617040c12",
        "cursor": {
          "ref": "878387c2-fda9-4b4b-b933-bae53812c54d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a945514-f2ed-48c9-98cd-97957a946bfa"
        },
        "item": {
          "id": "59a75f94-8a2c-4446-8590-f97617040c12",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78ab06dc-b433-4a91-bf0d-bf08f95a30ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dec88e-5b6b-4d5d-92ca-b5e4b7a24c9b",
        "cursor": {
          "ref": "afbde3c1-2555-4155-90fb-9c33812e5f99",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7c6478dc-1dfb-42bf-a2bf-267e1b68445c"
        },
        "item": {
          "id": "d3dec88e-5b6b-4d5d-92ca-b5e4b7a24c9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f15b84c-822d-4510-b462-984653441787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7811b5-a17b-4bd8-aa2c-7e84a7e27c4d",
        "cursor": {
          "ref": "c9c4f474-72fb-4d24-89d2-aaf5f000c42d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "05a2fc85-3ad3-446a-b109-d2cf91e786e2"
        },
        "item": {
          "id": "4c7811b5-a17b-4bd8-aa2c-7e84a7e27c4d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cc339098-b138-43f3-9e10-ea3152b76618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ebe1f-5cb2-4f13-aeb5-5cfdbc31fd34",
        "cursor": {
          "ref": "4318cf6a-313e-4094-81b9-4fc97c95707d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cca77aca-ae77-4478-bc9a-bfb6059b2cc0"
        },
        "item": {
          "id": "411ebe1f-5cb2-4f13-aeb5-5cfdbc31fd34",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cb2ba6aa-8eb7-4737-bede-dac5d4d28367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a91931-4c07-4afd-95c2-7b419ed0d47a",
        "cursor": {
          "ref": "161ca610-3191-463d-a486-d86ebc146afe",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b74b7adb-e605-4c8e-94e1-89069f7c4fe9"
        },
        "item": {
          "id": "e5a91931-4c07-4afd-95c2-7b419ed0d47a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5f856a0e-fb10-47a4-baf4-986087586dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c92ff1f-3504-4ed3-838f-3c0829b7cd2f",
        "cursor": {
          "ref": "726c5a07-16c1-43de-b3a3-cccc8b394242",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ac8e623a-152b-4f62-a66f-cb123ffc48a3"
        },
        "item": {
          "id": "7c92ff1f-3504-4ed3-838f-3c0829b7cd2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5b578bf4-22bd-484c-8f46-36f00d0e0f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c79ba4-b610-48eb-ae09-a006c19abfaa",
        "cursor": {
          "ref": "3e207739-84e6-407a-877d-d1e2bad61f38",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aa89544d-f745-48d5-b5a2-6936b1620926"
        },
        "item": {
          "id": "b8c79ba4-b610-48eb-ae09-a006c19abfaa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d84e3234-71f5-4d9c-8980-b27ad64ce6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22f4ae5-a8d8-485c-9e92-1197630361ca",
        "cursor": {
          "ref": "24702655-db71-41ca-8681-157992dd9fba",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2f9cc260-e936-4f5e-92ea-ccd167822713"
        },
        "item": {
          "id": "c22f4ae5-a8d8-485c-9e92-1197630361ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6bcc72d-a88c-4588-a66c-cd1014c5d56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c8c044-fafb-46f1-8921-acc3d4acc7f6",
        "cursor": {
          "ref": "8eac1d7e-282f-4498-af78-2324277a88b5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "02c7f010-1f9b-4496-9486-17eed9080457"
        },
        "item": {
          "id": "57c8c044-fafb-46f1-8921-acc3d4acc7f6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "306f6cdb-4281-4d5b-b096-b7bdf9bdfb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b193adf-c566-41a7-ae42-99ef27b82f47",
        "cursor": {
          "ref": "db6655d1-9d48-4596-8d0a-a3bd481a9b09",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f9c39c42-d905-4916-9b3c-508dcd34f025"
        },
        "item": {
          "id": "3b193adf-c566-41a7-ae42-99ef27b82f47",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fc24cc20-6f81-44dd-9107-7821f8b29ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3439efaf-ca83-4959-8e09-8fc2b4baee49",
        "cursor": {
          "ref": "a5a73ad6-a18a-4e6e-952c-528af541b839",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "903ae2c2-0899-4348-a5f7-3152a6e5a29d"
        },
        "item": {
          "id": "3439efaf-ca83-4959-8e09-8fc2b4baee49",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df4a8f26-0285-45ef-9cd2-57bf6325ead6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921fa95-c57a-486a-b807-6bdce8d80434",
        "cursor": {
          "ref": "b3e3154b-d262-43e6-998f-2e3a7ba2999e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2175a545-5496-402a-bc7c-a3b92ecd7414"
        },
        "item": {
          "id": "4921fa95-c57a-486a-b807-6bdce8d80434",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "986ed171-d2fe-466f-babd-d2c9d80d9e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591dee75-260e-4f52-8551-2851d8cb4bde",
        "cursor": {
          "ref": "c33574e7-8adf-46de-9874-20aa68673d40",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "17670af5-3016-4ce9-ae77-e82b0759f0fa"
        },
        "item": {
          "id": "591dee75-260e-4f52-8551-2851d8cb4bde",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f465013-66f6-4b69-9a88-4411106409f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9d6f74-1a39-4a52-a092-4f007a364f21",
        "cursor": {
          "ref": "f389c057-e90c-4e25-ab23-a376ad268036",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a127a764-aa11-4807-aa76-d40e9d57ce3a"
        },
        "item": {
          "id": "4c9d6f74-1a39-4a52-a092-4f007a364f21",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ca84157-a0fe-4d8e-b0a9-37ab33cf6cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19328113-4888-4500-a1ec-cf8ebd5aaf06",
        "cursor": {
          "ref": "a5d1e61a-e021-4930-9935-34058323b4a5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bfe8f99d-9493-449c-a128-0a8b1dc31d42"
        },
        "item": {
          "id": "19328113-4888-4500-a1ec-cf8ebd5aaf06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "816e5a46-ffe4-4f07-be56-d59c11dd1ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c032106-a709-407a-bbd1-c50a73f1e0e4",
        "cursor": {
          "ref": "fb8996d9-598b-4969-9347-1b0f4d2f9bd6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "976c6b66-6666-496f-93f5-f4328b92c15b"
        },
        "item": {
          "id": "6c032106-a709-407a-bbd1-c50a73f1e0e4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a85c95e-c1f0-48a7-ad66-889d76ad3698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e80103b-7d7e-4a88-97bb-453771ec5094",
        "cursor": {
          "ref": "d837155b-4373-4b7c-a417-079b6511e449",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c26f6fea-7342-42f9-a616-441840b33b81"
        },
        "item": {
          "id": "9e80103b-7d7e-4a88-97bb-453771ec5094",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a10a80a-0599-4b7d-8a56-dae95c72942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f2d525-4fea-4c29-9fe8-efc2258aed70",
        "cursor": {
          "ref": "b24d7dce-7b52-42fd-9053-645ad73252ea",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e480a986-4b27-4cdf-ae6e-ca05a1cba354"
        },
        "item": {
          "id": "f8f2d525-4fea-4c29-9fe8-efc2258aed70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7e452436-0081-4981-8293-35af51bfd9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c241b58a-4cc0-4e27-9f2e-8423fc9aff42",
        "cursor": {
          "ref": "b71a1b21-92c6-4dcd-a837-39eb27a61a32",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d4fe3fda-52a8-4e1f-ac07-4dc2278ee70b"
        },
        "item": {
          "id": "c241b58a-4cc0-4e27-9f2e-8423fc9aff42",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2be5b81a-20e4-46b7-9f19-74b850aeddf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e504c1-8e19-4a94-8801-8e2cd15d3280",
        "cursor": {
          "ref": "98b5a59d-7097-4b26-a437-6277a399bae4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "48f4b70d-2860-4bd4-bdaf-e590b2a03654"
        },
        "item": {
          "id": "b0e504c1-8e19-4a94-8801-8e2cd15d3280",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0d65d13c-34c3-4adf-a37a-ede80f475fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e718ce-5b8e-4c1e-aa3b-c6886a4cdd57",
        "cursor": {
          "ref": "73c0ddd0-8a0b-45b5-b0e4-1a00758076e2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f499e2f-4e6b-410d-80cb-96cd237f5bae"
        },
        "item": {
          "id": "05e718ce-5b8e-4c1e-aa3b-c6886a4cdd57",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4843d507-c183-4442-93ca-9230a777ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00ae76a-76ae-4532-bc3f-a84dbb6aae2f",
        "cursor": {
          "ref": "03495888-38f9-44f4-a02e-62a8c4472788",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "82d7a6a4-fdf3-46d5-8ee4-93327819b48b"
        },
        "item": {
          "id": "c00ae76a-76ae-4532-bc3f-a84dbb6aae2f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b808335a-415a-4660-9a1f-1f8b5e326cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18125741-ab16-4aa5-bfb7-08b3cf88ba96",
        "cursor": {
          "ref": "794cc8d4-8b19-4d4d-8fff-c13c45f679d1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5355c9b1-45b4-46dd-9160-b4f8f2df3000"
        },
        "item": {
          "id": "18125741-ab16-4aa5-bfb7-08b3cf88ba96",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65baafa0-15fe-4081-ab33-10d978bd8e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f05aed8-f212-47da-9c6f-901325756bb7",
        "cursor": {
          "ref": "59b65548-8b66-4d35-beb7-e003cb44bdd2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "37c238d5-c8d0-4b3b-9bde-30f1e992c970"
        },
        "item": {
          "id": "9f05aed8-f212-47da-9c6f-901325756bb7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7fb3f94-bd49-4225-b7c5-adab79162aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58222e0-6d6f-4dff-8c5d-6183ac0b7cb2",
        "cursor": {
          "ref": "4ae1f2d3-88c1-427b-aa69-ce123d271121",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "22687209-6d0a-497d-9ae1-8464a3a5689d"
        },
        "item": {
          "id": "c58222e0-6d6f-4dff-8c5d-6183ac0b7cb2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5d519f69-f449-4e6b-8862-3654d74b9db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7704662-59bc-4a3d-8d65-89b4e47e9250",
        "cursor": {
          "ref": "ed495db7-5a9b-43b7-9f28-9c173b6fc377",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b990bef5-5c30-4b66-99ca-ad5c0282ab79"
        },
        "item": {
          "id": "d7704662-59bc-4a3d-8d65-89b4e47e9250",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4bc9b635-08cb-4e24-9ca2-c382bac46f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd7ad7c-9515-44d2-8a8f-fb5e02e0dd84",
        "cursor": {
          "ref": "55755f3f-5656-462d-ba76-30ca6b386c3e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "34787f29-cef6-4360-928e-8ed1225f7506"
        },
        "item": {
          "id": "6bd7ad7c-9515-44d2-8a8f-fb5e02e0dd84",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "979b613c-d013-4d7a-9e19-b4125ec1b980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47502d65-648d-4ba8-a05d-25196a16075a",
        "cursor": {
          "ref": "98914046-ea6f-454f-b05e-82f90cc546e6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c242c80e-7e9c-4c52-9ce3-79edf2644301"
        },
        "item": {
          "id": "47502d65-648d-4ba8-a05d-25196a16075a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "96231ee1-e668-4274-bfbf-09e824167da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee047bb-8229-44dc-90bf-27b9c652281a",
        "cursor": {
          "ref": "6afa4771-1988-4040-b19a-a88b84883fa9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a4e83583-0eb4-4069-9e99-33726949878f"
        },
        "item": {
          "id": "bee047bb-8229-44dc-90bf-27b9c652281a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "727352f6-97a4-4ee2-bc2a-83ffea067d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62b3b5b-7355-4171-be35-fff768c63827",
        "cursor": {
          "ref": "e710247f-7a73-40fd-8c8c-c4024dc75681",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3f077b56-f0b5-4a9f-b95c-4e0ed0243042"
        },
        "item": {
          "id": "a62b3b5b-7355-4171-be35-fff768c63827",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "37693fd3-3d34-4197-b613-66f6e1342197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f5e19b-f752-42e8-8529-05d985d3321d",
        "cursor": {
          "ref": "0da37227-1718-4d25-866d-acb5392bb470",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b4c530fa-ea14-4e83-b2a7-edde78e997f0"
        },
        "item": {
          "id": "02f5e19b-f752-42e8-8529-05d985d3321d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec923258-8acf-4429-910f-b499d39dfbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90b10ae-fcf5-4828-89b3-4f3d70e0dd48",
        "cursor": {
          "ref": "12a4f555-3e5f-4801-896a-72c8134eff61",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f27bafea-aa08-4f01-b7cb-f95bc387f4f0"
        },
        "item": {
          "id": "a90b10ae-fcf5-4828-89b3-4f3d70e0dd48",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "41e660c4-af16-4932-a846-b7d46e08f9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd33df1-9e3c-4123-b269-fd36b5b4c0f9",
        "cursor": {
          "ref": "937772d5-3cf7-4d91-b1e4-c22b08a5e5d6",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6cc79396-ce3c-4ae0-bce6-8b1dec49a099"
        },
        "item": {
          "id": "3fd33df1-9e3c-4123-b269-fd36b5b4c0f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "43400995-c483-4c22-af03-6cf4d3ae6166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58254545-e893-455f-a7a5-2d782ab6c30f",
        "cursor": {
          "ref": "231e0859-45ad-47e3-a917-5a88fd53acac",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fabd57b5-368a-44bf-a5bd-48201754272d"
        },
        "item": {
          "id": "58254545-e893-455f-a7a5-2d782ab6c30f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6e4a6cf0-3988-495c-ba04-da5d9a276a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1134339c-9908-40e8-834a-4cf90cb2a2d9",
        "cursor": {
          "ref": "d3fc36ba-3861-418d-945b-27f552d5f5c5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e62d3d6e-587a-4142-9056-cb64c2770061"
        },
        "item": {
          "id": "1134339c-9908-40e8-834a-4cf90cb2a2d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a3e22ca9-bbc5-40ef-9f3b-b3b26e2ef968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdbcacb-3e40-448a-9454-9f55f9c13e32",
        "cursor": {
          "ref": "deb9049b-34d4-47b1-9b0b-25beb396357c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a892397e-0e14-42fa-8347-c9d18b1b78ec"
        },
        "item": {
          "id": "bfdbcacb-3e40-448a-9454-9f55f9c13e32",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "78ee0fe1-ecb3-4641-a76a-87766792ca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affab6d1-ffc6-457a-8708-ca619b61085c",
        "cursor": {
          "ref": "f25226c7-cd2e-40f5-bfb0-6977efc61894",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0ae00f4a-21f9-42c3-8815-b7e75a56cf05"
        },
        "item": {
          "id": "affab6d1-ffc6-457a-8708-ca619b61085c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ef387b1f-d99b-45c9-8bc2-a9db6770e79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6a0b13-72ff-4b01-b54d-d4662e8912be",
        "cursor": {
          "ref": "7715f69d-b79d-48ee-befc-663dd47cc4ae",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f5aceabd-7005-4f82-b723-85df17a2e0ac"
        },
        "item": {
          "id": "4f6a0b13-72ff-4b01-b54d-d4662e8912be",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c2885741-5be4-4ada-91db-be63e3e885af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8138c323-6945-470e-a51d-73006bda1af3",
        "cursor": {
          "ref": "18c6f8c3-02a6-4fe6-b5d3-9939d1921c7f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7c09b087-b5ff-4118-97fb-44599d79222e"
        },
        "item": {
          "id": "8138c323-6945-470e-a51d-73006bda1af3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f58f80ed-639c-4a8a-a83e-1e1cfe3678d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3260d2c2-b663-4c31-9dc7-dd55aaed6d8e",
        "cursor": {
          "ref": "02d6beda-c915-4de5-880a-f2429ed751be",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2162c9c3-950a-4157-be4c-fc348cb66e05"
        },
        "item": {
          "id": "3260d2c2-b663-4c31-9dc7-dd55aaed6d8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fdd2ad16-ae70-45ef-b1d8-1e609ee83ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8df459d-09aa-472c-a05f-3e6bc241d20a",
        "cursor": {
          "ref": "b6ff83bc-2132-4858-b567-e144751aae1d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d2d6aba-cb31-4ff0-9e0a-5ed10e535953"
        },
        "item": {
          "id": "f8df459d-09aa-472c-a05f-3e6bc241d20a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "89674619-2547-45ae-998d-68eb77b5d8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe69b11-c92b-4e7c-84f6-658682cd6d7c",
        "cursor": {
          "ref": "5a6a90b6-f31f-46af-965e-bde46c5c3ba0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eb1fda08-f549-4487-8abd-fdee7707aae7"
        },
        "item": {
          "id": "cbe69b11-c92b-4e7c-84f6-658682cd6d7c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "421c9030-bd39-4b6e-846f-f2c64bbe7d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf3d63a-5fee-4f15-bab1-a46a2e0a1470",
        "cursor": {
          "ref": "70cc2f55-d37b-4c17-a99d-efbaba8b70e2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a28e0c5a-2b84-4819-ae18-3a1a9a249d48"
        },
        "item": {
          "id": "2bf3d63a-5fee-4f15-bab1-a46a2e0a1470",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "08bb6fd5-d54d-4937-9fb5-118095ec4be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75a3564-d932-49aa-8b44-488d4751bd21",
        "cursor": {
          "ref": "9f7b1807-0d98-4dff-81f8-4a7c6b7b6688",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "08e31f00-5dc0-4a7f-9f58-5477cf291be9"
        },
        "item": {
          "id": "a75a3564-d932-49aa-8b44-488d4751bd21",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "756fbb4c-dc34-40e6-9c79-b54f2e7b041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38257300-af7a-43cd-b4a1-e6240d8d7d62",
        "cursor": {
          "ref": "8d40ed30-4a29-46d5-bfed-d51818b90273",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "93c14257-ccc4-4819-9d96-1e8d2546333e"
        },
        "item": {
          "id": "38257300-af7a-43cd-b4a1-e6240d8d7d62",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bb9f0145-e561-433f-a260-3e44a6795192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0744e95-737c-4c42-9eaa-6bb55a60196a",
        "cursor": {
          "ref": "0c9df1d0-b3cf-4fa8-84f8-5eac5a9fdbd6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2ca50110-a36f-4064-85ca-cc617f0ec4eb"
        },
        "item": {
          "id": "e0744e95-737c-4c42-9eaa-6bb55a60196a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3c58c96a-f2a3-4b46-9c55-b9162d9a0c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b243be36-82b6-4861-bd26-22e4af3f92fd",
        "cursor": {
          "ref": "26b2aba9-1247-48b1-a0f7-456477274680",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0c4b43f6-add1-4e39-9800-11c926637131"
        },
        "item": {
          "id": "b243be36-82b6-4861-bd26-22e4af3f92fd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "221afa09-0b26-4540-be38-38a3f80f69db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38edb76d-fc44-4e5d-ada3-7882c8bfd09d",
        "cursor": {
          "ref": "26eaac0a-31b5-49c7-99ea-9c07a5d63e12",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9c4a4cbb-77f0-4452-b9a9-886f4d24b08a"
        },
        "item": {
          "id": "38edb76d-fc44-4e5d-ada3-7882c8bfd09d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a6844ff-ba54-4375-a770-1a3d023ecb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c8cc4a-4863-4062-a35a-9f4946bf1ea6",
        "cursor": {
          "ref": "e205fd11-d563-4f73-a545-570b26a1e865",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fc77c031-e282-427c-bdbd-608b716fac05"
        },
        "item": {
          "id": "68c8cc4a-4863-4062-a35a-9f4946bf1ea6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5d72f4e4-166c-40bb-ab97-7115111c8917",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63e6da2-0ea9-4c25-b93b-67c1a35c3639",
        "cursor": {
          "ref": "b8ef3778-2d0d-4245-b458-9396081034a2",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f0f6684b-8cf7-42f8-b0f4-ee053625dad9"
        },
        "item": {
          "id": "d63e6da2-0ea9-4c25-b93b-67c1a35c3639",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "347a52de-7f26-4bc5-89dc-a8970428f99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23f3d91-eace-4182-8e9a-098478bdb137",
        "cursor": {
          "ref": "9bb21b7a-6cd2-4688-94bf-5126d36d4eec",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1788d051-d254-4a1d-95d1-9f9a6239185b"
        },
        "item": {
          "id": "c23f3d91-eace-4182-8e9a-098478bdb137",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3cb7482c-593f-4c3b-bb37-26331756264b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0dd7f2-e5b7-48e6-a20e-a47bff9c96dc",
        "cursor": {
          "ref": "9e74480b-a0d3-4f0f-8175-74e2f9a66fa0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "04839ae4-8700-473f-84b7-c308b66157fb"
        },
        "item": {
          "id": "0d0dd7f2-e5b7-48e6-a20e-a47bff9c96dc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6f1bcee2-5f90-4281-94e6-7723cfe1befc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c54323-1129-4d3a-a357-00ef9fc0bf76",
        "cursor": {
          "ref": "b23b4801-f890-4413-ac2d-70887a23c1b2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5ec7c7f6-eac4-4369-903c-58a4c6bae734"
        },
        "item": {
          "id": "13c54323-1129-4d3a-a357-00ef9fc0bf76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2046658a-4d42-42f2-b3e0-878b69c4d350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94fc9e7-644e-466a-8724-e957897eb171",
        "cursor": {
          "ref": "e2991590-9c4a-4ecc-a32f-95898756caa2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a0a4589-27ed-4bab-abb4-10b0f6a20767"
        },
        "item": {
          "id": "c94fc9e7-644e-466a-8724-e957897eb171",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "38cdc9d7-cab4-4ea0-bbbb-21bfadfe71d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5da66ca-d7e8-4f95-9eb6-f9d93f8df3e1",
        "cursor": {
          "ref": "fe09e358-d2e2-4acb-a988-d23421e6a316",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "df531d2f-1782-4a53-88d3-31d3a0e48fbd"
        },
        "item": {
          "id": "c5da66ca-d7e8-4f95-9eb6-f9d93f8df3e1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "583e7b63-4450-40d0-8374-c22d486f1f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d24cbc0-5c3f-47e0-a351-812cfdd640ba",
        "cursor": {
          "ref": "a638e535-ecf6-44b4-afdb-ae2f242e2247",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7c832f8a-b6d0-40e5-bf7a-ec3f3bce6ed5"
        },
        "item": {
          "id": "9d24cbc0-5c3f-47e0-a351-812cfdd640ba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ed7cb11-ffe5-4625-9041-2fea45182f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6c00af-f3aa-4ee9-bee8-df2105de2120",
        "cursor": {
          "ref": "0c2ed702-b178-4339-b17d-53f8fbee8e4c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1afa25c2-412d-47d1-9aa4-cd33dea4acc8"
        },
        "item": {
          "id": "4c6c00af-f3aa-4ee9-bee8-df2105de2120",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2e5e6d2b-09d5-4eb7-8670-0878080e5d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8171a7a4-831a-4a73-9a42-a6546504f1ff",
        "cursor": {
          "ref": "48fb41e1-49b0-4668-810a-4c4e5905bb28",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6ce6eb63-50af-4016-a559-dbf543e7ccbb"
        },
        "item": {
          "id": "8171a7a4-831a-4a73-9a42-a6546504f1ff",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "767bea93-30a9-4475-b912-47b5bed5b447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4084562c-1e59-4651-ab37-d4bae606c987",
        "cursor": {
          "ref": "060b54af-c9af-4280-ad27-d1fc23956ed8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf0c50a8-c4ef-47f2-9ddd-98db41ce5b41"
        },
        "item": {
          "id": "4084562c-1e59-4651-ab37-d4bae606c987",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "69e332c1-cb87-427a-9a5b-89e1ae0a1ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6aba6f-bc21-4ef7-a8bc-b644a10f23d7",
        "cursor": {
          "ref": "8be885cf-5cd8-4402-96c0-3e608da9f2eb",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ec0e0470-7bb2-44e5-8618-b6a35ecc872b"
        },
        "item": {
          "id": "5e6aba6f-bc21-4ef7-a8bc-b644a10f23d7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "845f53f9-c582-4384-a638-324cf8053d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f7c8ad-2160-4a7b-8a37-4454eb377ef4",
        "cursor": {
          "ref": "7f043115-af21-4b25-80e3-97a2a31d12d0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "064dc028-aef2-49ef-8078-0307195d8d36"
        },
        "item": {
          "id": "b0f7c8ad-2160-4a7b-8a37-4454eb377ef4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a9ec0751-09d7-43d5-a517-f3d746accc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d0b630-39f1-420c-813c-9f338ccfd5a5",
        "cursor": {
          "ref": "89f5646d-e073-4872-80cb-013346912aed",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8ecbdce7-8439-4f9f-8c04-f79b448af79f"
        },
        "item": {
          "id": "f1d0b630-39f1-420c-813c-9f338ccfd5a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "039ec351-5b0c-40ed-84c7-03ac4954ee3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65555b91-1358-499d-9ee7-dfeb9dd5a363",
        "cursor": {
          "ref": "b24585d0-5e0c-4224-8885-9ee99be99a21",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "762a7d5a-dce6-458f-9905-a1ee894e2014"
        },
        "item": {
          "id": "65555b91-1358-499d-9ee7-dfeb9dd5a363",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5f1d62a3-fb70-4a78-b706-58791703ab15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5886782-ce05-45a6-b58d-eb23365c2499",
        "cursor": {
          "ref": "739a6033-6c08-496b-94ea-dc96e96df37d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d000ec5f-5ace-4910-95f7-8dbf2fa69603"
        },
        "item": {
          "id": "d5886782-ce05-45a6-b58d-eb23365c2499",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ace413be-b939-4eb1-88e1-dff98c0ade80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3356110f-ed82-457a-bad4-43615aafcf0b",
        "cursor": {
          "ref": "0034fb5f-819a-449a-b7e8-f336a5311e82",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ae1180b6-492d-4f07-9bf4-5b6d06c1813a"
        },
        "item": {
          "id": "3356110f-ed82-457a-bad4-43615aafcf0b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73904a2f-37d9-4e35-999c-b7dbb614eab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc40a46-0e94-499a-8bce-4c3c8b4debf9",
        "cursor": {
          "ref": "cd911a98-0c62-4535-8a7d-97a42c85800f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "85b820b4-223e-4f97-b42e-c70a2bb55f79"
        },
        "item": {
          "id": "8fc40a46-0e94-499a-8bce-4c3c8b4debf9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3927eb6f-3e39-4a3e-b62b-697a590d587c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0fa9a3-e57d-4f4d-b2c3-2111607393d9",
        "cursor": {
          "ref": "7688fe58-4973-4e24-bc7b-3d3d8539771d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cfdd7454-b109-490b-afc5-294721407440"
        },
        "item": {
          "id": "6b0fa9a3-e57d-4f4d-b2c3-2111607393d9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "046bd68f-be8b-4299-bad8-cb99e7765e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2b4041-f6a8-4f58-96d5-b91794438aad",
        "cursor": {
          "ref": "a74fd0e5-04fb-49fb-bf50-9b5656d92499",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4ab29cd2-cd3d-4211-9017-bcdffa78c0be"
        },
        "item": {
          "id": "ab2b4041-f6a8-4f58-96d5-b91794438aad",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5c9ed158-cca7-44ab-ac4a-aa5984e0836e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eead8ff8-75e2-43fd-bd38-cb7e36e13fd0",
        "cursor": {
          "ref": "28d04585-0cb6-4df5-9e9e-8a29af5d584c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f371d782-e1e4-4f50-a6d3-9d6ecad8beff"
        },
        "item": {
          "id": "eead8ff8-75e2-43fd-bd38-cb7e36e13fd0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0215413c-f5f8-4b97-b6b2-a77054345e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5081054-cb2c-43f3-9680-e25b14a6501b",
        "cursor": {
          "ref": "741e3ff9-e2b5-4f82-9892-fc8fc87e7323",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "74917708-56ef-4cff-92e6-6cec46b347aa"
        },
        "item": {
          "id": "f5081054-cb2c-43f3-9680-e25b14a6501b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0fa5f6ab-f72a-4f93-875c-6b2080c44241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ff054-8b84-4152-9f75-ad90a8833b75",
        "cursor": {
          "ref": "10add70b-9e36-4bf2-b5fc-3facb58d1d42",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c6ba7224-7f1d-4520-b2e8-dd77954ac0c9"
        },
        "item": {
          "id": "418ff054-8b84-4152-9f75-ad90a8833b75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d9aa0f42-1650-4f29-9318-4994840a51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e97d7c-0d74-48bd-afdb-1c2dbac6f278",
        "cursor": {
          "ref": "9c44c5da-965b-494c-bc55-08d9f40bde15",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "842d8029-a8ca-489f-ba16-a8976f0dae13"
        },
        "item": {
          "id": "23e97d7c-0d74-48bd-afdb-1c2dbac6f278",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7ba07d59-e186-436a-8620-41a9b9ebd8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f470c186-405b-4e4b-90a5-8c7cf01df4a1",
        "cursor": {
          "ref": "f4e41148-01a5-4eed-ad30-70cb2fa6c4bd",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "27fc1c44-7aee-4d23-8f5f-a2a6c9626c60"
        },
        "item": {
          "id": "f470c186-405b-4e4b-90a5-8c7cf01df4a1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "db46d4d4-03b4-4292-a1a6-2e948347aa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e31eee-7657-47e1-b060-74608da97e45",
        "cursor": {
          "ref": "1774f937-d1a2-4afb-af3b-561b6fee5a9d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e6de7227-9c10-4b23-bd6a-d75a0411f5c7"
        },
        "item": {
          "id": "47e31eee-7657-47e1-b060-74608da97e45",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "694ce64d-b032-4cea-bada-34088b5048fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d26e939-1423-4fe8-a986-ecc35ab2412f",
        "cursor": {
          "ref": "b8102704-e32b-48e4-933f-9b3a38a8c5fd",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "162fc297-73ec-4953-9374-37c0cd4d2528"
        },
        "item": {
          "id": "4d26e939-1423-4fe8-a986-ecc35ab2412f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "20620e48-d729-4d8b-a4ef-2440b98719eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b42be-2113-4733-90cf-91b5b2c08c82",
        "cursor": {
          "ref": "294cb67d-5f38-478e-aa4c-1bff6c64a2b7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6367388d-7e9f-4ffe-a66d-d6a483965d48"
        },
        "item": {
          "id": "b49b42be-2113-4733-90cf-91b5b2c08c82",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c6b0a6d0-806d-4e41-a738-235c2c523b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fd39bb-c57b-4dc1-ba2c-4c02d184e787",
        "cursor": {
          "ref": "716f77d1-2530-40a7-9e9c-f4324fc22ab5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "420a9d3d-fcc9-4dc8-8f11-dd8b34706ae5"
        },
        "item": {
          "id": "06fd39bb-c57b-4dc1-ba2c-4c02d184e787",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "51fa68fd-0d2c-401c-8d2a-d8ef8d537cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dc0bc8-429e-483d-836b-b0f4602df8fa",
        "cursor": {
          "ref": "7cfbdc91-7570-43ad-b1d5-c56adc0ca847",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5304c3d0-ecdd-4a0a-ba15-6cb2265688d7"
        },
        "item": {
          "id": "79dc0bc8-429e-483d-836b-b0f4602df8fa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2d23700a-a2ca-4f12-b081-18fe048be6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5315bdc7-04e3-4d73-8c4b-640fdb817fa8",
        "cursor": {
          "ref": "964c5530-6b24-440e-930f-23801d145d60",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0633966c-4ce2-42f7-98db-77e71f1ed0d2"
        },
        "item": {
          "id": "5315bdc7-04e3-4d73-8c4b-640fdb817fa8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d175453c-8f04-4dfa-8c63-1ae4e0823356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1437d00e-fc2a-4a37-9cb8-e696edc2d22a",
        "cursor": {
          "ref": "a55f9d40-b847-488f-96a6-74b3e01ba5c0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b9005124-5234-4b97-851b-b4be0fe88c06"
        },
        "item": {
          "id": "1437d00e-fc2a-4a37-9cb8-e696edc2d22a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2bd715d-6ade-4992-9dde-071926be0e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c49df0a-6858-495c-8481-c111327805ab",
        "cursor": {
          "ref": "4fd2ad1a-c8be-458e-9c03-e736e54cc007",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ccbf4c76-8c3d-49db-9af1-a8ceace4665f"
        },
        "item": {
          "id": "7c49df0a-6858-495c-8481-c111327805ab",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "325ebff8-ec7b-4bf1-8f05-953c76a2d590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97056f79-ddd2-4514-b7ff-d4aa3de9d668",
        "cursor": {
          "ref": "f8236b38-5a07-4410-a2a1-2c2f609e74db",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3ca506da-3a7a-42a1-81f9-f1c8540c4c9d"
        },
        "item": {
          "id": "97056f79-ddd2-4514-b7ff-d4aa3de9d668",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8649dad5-d1ab-415a-9f75-26a6a662d6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d0eeba-a72c-43ac-812e-4a5e80346859",
        "cursor": {
          "ref": "ab4756ff-7439-40cf-b10b-d4e28c5ba043",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "eb65d21c-8f8f-4bd0-91b0-7ff422f73a7c"
        },
        "item": {
          "id": "d1d0eeba-a72c-43ac-812e-4a5e80346859",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2458cc84-9fd7-4092-b0e8-8871827c04e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d92734-3d61-48ab-bfb1-da8e0c6c7287",
        "cursor": {
          "ref": "1afc4b66-6fde-4b73-8eae-f5b273a076a6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "28604fff-3819-4109-b1df-0301ad908ce5"
        },
        "item": {
          "id": "55d92734-3d61-48ab-bfb1-da8e0c6c7287",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0ffa6abe-c5c2-4ce8-a90d-705d1e25a9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef54c4cb-f745-4897-81c5-1df328556591",
        "cursor": {
          "ref": "fcb24aa0-bf69-4892-b6fc-e4543cfbd422",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5ec6531f-256a-4c33-8e88-1f9d36d1f928"
        },
        "item": {
          "id": "ef54c4cb-f745-4897-81c5-1df328556591",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "74cbb9de-e93b-456a-a3b9-a2afa823ada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856cb746-5598-40ba-8a9a-a51da12714cb",
        "cursor": {
          "ref": "630316b8-4e3b-4357-8cd5-bf90c7f821b0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fbfb46ed-8323-42e1-80fb-e064c7bde512"
        },
        "item": {
          "id": "856cb746-5598-40ba-8a9a-a51da12714cb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a77fffb8-25b7-4f74-abc3-363d11ba32f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852e895c-3f2a-43e0-a3fc-98617a65581a",
        "cursor": {
          "ref": "c7c1472f-54d9-4a26-937d-176f7a39752a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "feee86fb-05b2-4f56-9622-b5cdd278e06b"
        },
        "item": {
          "id": "852e895c-3f2a-43e0-a3fc-98617a65581a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5be98498-4e64-4829-a9eb-8b9f13525a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce40bf6-3745-40df-97c8-b203a8c5f6d6",
        "cursor": {
          "ref": "0aca55a0-71e2-4c20-ae2f-7978fee2d84e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef89f1a6-89c3-4abb-8304-2bbc6e9a20de"
        },
        "item": {
          "id": "bce40bf6-3745-40df-97c8-b203a8c5f6d6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9f8d1463-ca8a-47eb-af3d-47b3c7e2a4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da07fff1-42d0-4472-bdff-7c4994fba5d7",
        "cursor": {
          "ref": "b0c43ea3-0d21-44a9-8f24-9e22decfa6af",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d607800e-1eed-449f-9900-5d18a305cbdb"
        },
        "item": {
          "id": "da07fff1-42d0-4472-bdff-7c4994fba5d7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9520043c-e354-40ee-ae55-e7e19fa00ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a4b168-352c-477d-833c-8f9b6d4f88fa",
        "cursor": {
          "ref": "f2427d06-b799-4a4f-91b4-044aa332c0f6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2b62453a-fcd9-4531-836e-a864e8848acd"
        },
        "item": {
          "id": "64a4b168-352c-477d-833c-8f9b6d4f88fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "12f2a9a0-3cd9-4ab0-892d-daec9af6bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2090a4ad-1ead-4580-8f8c-0348ccbb06ce",
        "cursor": {
          "ref": "c1160301-0954-43be-90b1-63cee2dceac9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cc071780-2f7e-44bb-8a6d-f7dd14e291ea"
        },
        "item": {
          "id": "2090a4ad-1ead-4580-8f8c-0348ccbb06ce",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3fdf0537-f0f9-4321-86a8-fa14666b77b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34f9b95-76eb-417c-8e86-b8a7ab055e0a",
        "cursor": {
          "ref": "29aff42f-014b-4488-992a-52d13b15a547",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5c24dfb1-be23-4a6c-b95e-50d3a25c4021"
        },
        "item": {
          "id": "d34f9b95-76eb-417c-8e86-b8a7ab055e0a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "db43fded-361b-4c84-8519-5bd5db214ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3441a7f8-2775-4db3-8aee-561c982720e3",
        "cursor": {
          "ref": "ebbcaef5-5a5b-4c52-8db4-07726160df16",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b12d50f1-c3c7-4f27-b5ea-74da2e78edb8"
        },
        "item": {
          "id": "3441a7f8-2775-4db3-8aee-561c982720e3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1f93ccb7-26be-4d2f-88f2-19f1e12796aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c56fd4f-0803-460e-a839-61fdba3c118f",
        "cursor": {
          "ref": "84901a89-1255-469c-bd7b-254eea017d89",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1d56b075-8214-4a9c-b400-12cf05894a0b"
        },
        "item": {
          "id": "6c56fd4f-0803-460e-a839-61fdba3c118f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c25c50a3-15c7-452c-8287-91083e49d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b25e698-e718-4255-bb5b-98acc9b2b893",
        "cursor": {
          "ref": "089d1adf-53b2-4213-9ac6-2694be1744be",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cb5b370f-055a-40d5-8bf2-74bf2ea8a2ec"
        },
        "item": {
          "id": "2b25e698-e718-4255-bb5b-98acc9b2b893",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "823e3f6e-5772-4b19-82dd-bea51bae7837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c633a740-9558-4948-8f45-1d3fce7c7366",
        "cursor": {
          "ref": "46433b37-4e96-44f2-b12d-067cdb78ff41",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "37c74e48-b8a7-43c8-8237-9784dbd11b5e"
        },
        "item": {
          "id": "c633a740-9558-4948-8f45-1d3fce7c7366",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "25b36905-ce0f-4d2d-b191-aaf8c624f10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb44afc-5f04-4198-bb81-3d61e5af56df",
        "cursor": {
          "ref": "c0cad32c-9f09-406a-9343-73784c3aa0a5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b66712b1-1ffe-4149-a0c0-13da82a00ee9"
        },
        "item": {
          "id": "8eb44afc-5f04-4198-bb81-3d61e5af56df",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ad2c3716-b874-4345-b131-397a1ced5c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6355b5d1-dbc0-433c-ba80-c6047756efa8",
        "cursor": {
          "ref": "82af0bce-8344-47ab-8567-840fa1f53f19",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9f4a09d2-fb42-4ba7-afd4-a0fd05c43028"
        },
        "item": {
          "id": "6355b5d1-dbc0-433c-ba80-c6047756efa8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b595a56-2539-4a50-a989-e96065422a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9ddf7b-a388-48e9-a608-7ba7f1d993b4",
        "cursor": {
          "ref": "45eea61c-9229-4fb8-992a-9393c31b015a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "479e1afc-0dda-4412-99a3-a256325b3144"
        },
        "item": {
          "id": "9b9ddf7b-a388-48e9-a608-7ba7f1d993b4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7c395b1c-f374-4602-bbca-39c5a67996aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6d2576-1339-4590-aba0-dd1fa60124e1",
        "cursor": {
          "ref": "5eff5998-035f-49b0-aa7a-12bb00e83430",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "57ebad4e-0cf3-4291-94d3-c5f0be3e49c4"
        },
        "item": {
          "id": "1e6d2576-1339-4590-aba0-dd1fa60124e1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b5598081-b07e-4a73-82af-93e4285aca04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ab0551-ab0d-4c00-aedd-bd9d79ad4435",
        "cursor": {
          "ref": "4621106b-031d-4b3a-95f1-ddb0870d851b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "17da5d72-a0bc-441d-843a-e542354806c2"
        },
        "item": {
          "id": "c2ab0551-ab0d-4c00-aedd-bd9d79ad4435",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b17962f-39eb-4373-9e69-595f374a1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da5294-13eb-4c9e-a01c-790aee47ac94",
        "cursor": {
          "ref": "1ea0316c-2903-428f-9d9e-7852568a6188",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "24676440-043d-4b9a-8c1c-3441e2d26d8a"
        },
        "item": {
          "id": "76da5294-13eb-4c9e-a01c-790aee47ac94",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7925a6ae-e573-458b-a494-2284aad59eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6024ee-98d6-4b47-927a-418150d7a7e1",
        "cursor": {
          "ref": "acfbd718-8893-4fee-b570-5d62c60a4da1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3d98b7fe-ed95-4f21-bb1b-1228f96e13e5"
        },
        "item": {
          "id": "9a6024ee-98d6-4b47-927a-418150d7a7e1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "040cbcf6-8c8c-428a-a9bb-62edc14a8815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2656489b-e4fd-4a71-823f-bf1cdbdeff6d",
        "cursor": {
          "ref": "17ff0ccd-5e4d-497e-9e97-d4c800018837",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b2ba93e-e170-4fc3-8042-dd1495357357"
        },
        "item": {
          "id": "2656489b-e4fd-4a71-823f-bf1cdbdeff6d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "805fa9e3-6fea-4eec-b382-1ae79dd53289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8104bb-65a5-41b6-b757-97aed33e6c53",
        "cursor": {
          "ref": "f079c375-44e1-43fb-b277-75ee659cc852",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "75aea402-f14d-4a6d-8424-a2f0b020fc57"
        },
        "item": {
          "id": "dc8104bb-65a5-41b6-b757-97aed33e6c53",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "00ba5d3d-d614-45d3-9a88-76a859b3f5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba6f541-8843-4733-99e6-a4b1ba10c1a0",
        "cursor": {
          "ref": "6cef054c-ea4e-4c9b-b0ec-fe0dc1d08ce6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1e1b3ddb-f1d4-452d-9564-c7b8c095839a"
        },
        "item": {
          "id": "5ba6f541-8843-4733-99e6-a4b1ba10c1a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6672ee19-4e50-45fa-8242-6bda37fa10af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d1c2b3-9fa9-42fd-ad3d-e5bab2b88735",
        "cursor": {
          "ref": "3d8065a5-7fce-49d5-a551-1e3a2919bfae",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d996ef60-f947-4ded-adfb-733bb24ffdfc"
        },
        "item": {
          "id": "71d1c2b3-9fa9-42fd-ad3d-e5bab2b88735",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f270987d-78fc-4cf2-ad2a-9af346495d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037eccc4-b2d9-4a1e-b805-c1422dd1d089",
        "cursor": {
          "ref": "88e54f3c-6793-4121-ad5f-b74d8c2100b2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "92388b1c-342f-4b94-82b7-a9aa96a8a175"
        },
        "item": {
          "id": "037eccc4-b2d9-4a1e-b805-c1422dd1d089",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f324d0d7-fa2d-493e-ae6d-4cb4ec06badf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17735b89-f74e-4992-8558-a0670a5fdf75",
        "cursor": {
          "ref": "8c79d470-8453-4aa8-9099-0f47be18c23b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0f5badbf-8dae-476c-ad25-03e018790669"
        },
        "item": {
          "id": "17735b89-f74e-4992-8558-a0670a5fdf75",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7420219c-b7c1-476e-b78d-c1f7cb2de9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c06a55-af78-4b90-974b-65c3d2450127",
        "cursor": {
          "ref": "b33a422f-3f8c-4e08-b94e-2b84397588e9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9f0e38b4-558c-4e23-9cbb-29ec98bd1a03"
        },
        "item": {
          "id": "03c06a55-af78-4b90-974b-65c3d2450127",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ccfee38d-e57c-428b-a265-4b8f46cd5c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a558e05-9099-434f-aaa7-eb312d0d7022",
        "cursor": {
          "ref": "58389186-d7dd-46f6-8238-e1bf8c0f1559",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d6fc7769-62ae-4dfc-a89f-023d57e9b761"
        },
        "item": {
          "id": "7a558e05-9099-434f-aaa7-eb312d0d7022",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "15141be3-eeb6-4d44-b036-8c340b0ffb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8d585a-5ff9-49cd-a6e5-6cfd03f8658d",
        "cursor": {
          "ref": "a93937e0-67e1-4b5d-bb90-5f81a5f62842",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d3c07f41-48cd-4250-989c-3fa82b6b6c25"
        },
        "item": {
          "id": "fe8d585a-5ff9-49cd-a6e5-6cfd03f8658d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1ef82f4c-87a4-46ae-aa42-2e76be1aac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba25cc73-0aa7-4917-bbf6-880e785b5dbf",
        "cursor": {
          "ref": "573ad51d-ff16-4c07-9ff5-31a62a658b0f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7d295f33-d2d5-43b4-b5b8-3efe8421256f"
        },
        "item": {
          "id": "ba25cc73-0aa7-4917-bbf6-880e785b5dbf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9bc0eb7c-3a52-48fd-9d26-0fff197c6c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c35579-9d22-4ca3-bc9c-8c6b8332cd2f",
        "cursor": {
          "ref": "8efa34d2-8504-4571-83ff-3f443268b4c4",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0abe6630-cf2e-45b8-8906-c612637f30a2"
        },
        "item": {
          "id": "60c35579-9d22-4ca3-bc9c-8c6b8332cd2f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b0e78ef5-410c-4f38-ac23-bcfcc5dcfa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a847df-df49-4f0d-80f1-f1463169d484",
        "cursor": {
          "ref": "7b6f7c16-abd0-4034-bccd-cd4d2d3bacc6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92c2977d-b752-48c2-bc1d-b18651d9576e"
        },
        "item": {
          "id": "88a847df-df49-4f0d-80f1-f1463169d484",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ee3e8ef6-7b53-46d9-a430-2acc59ae0a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832ccae4-2ef8-4f7d-9e0a-e58ef15a5595",
        "cursor": {
          "ref": "74571a90-43b1-4058-80ea-17eb405c1010",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c8a9135d-55c6-473c-9e3d-6f9e6b9dab74"
        },
        "item": {
          "id": "832ccae4-2ef8-4f7d-9e0a-e58ef15a5595",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "900bd048-e87f-43dd-ba77-26107d56076b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92c2484-fd7a-496a-a9b4-8ea225a355df",
        "cursor": {
          "ref": "38b2c23d-3972-4e12-ada4-b1228a29be0c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bb6c5933-c7fb-43eb-8acb-997b4ab84830"
        },
        "item": {
          "id": "b92c2484-fd7a-496a-a9b4-8ea225a355df",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "41c1a3f0-56c9-4d0a-948e-f269f4fa9ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be224b3f-4960-41cf-aa50-9d29a990b6a0",
        "cursor": {
          "ref": "d6424364-4bca-42f1-80b1-4dc332b36c6f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bc809617-2771-4a47-b348-52039e31100d"
        },
        "item": {
          "id": "be224b3f-4960-41cf-aa50-9d29a990b6a0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "be9ac6ac-daec-49cd-b93c-d826ecff9cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93830ab1-ca34-44fe-812a-b5906da160a0",
        "cursor": {
          "ref": "bff79ce9-10f0-4583-bd40-a65a8bdca715",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c96d47fb-2218-4b64-ad14-b15c097cd20b"
        },
        "item": {
          "id": "93830ab1-ca34-44fe-812a-b5906da160a0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "928688a7-a89a-45e5-a09c-f8b1897114ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f83e9e-2a28-494f-bd72-69378bb1a0e9",
        "cursor": {
          "ref": "1061d156-6757-4b6d-865a-46b27e07450c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a0b7f966-1b98-4099-a387-1612d851153b"
        },
        "item": {
          "id": "e6f83e9e-2a28-494f-bd72-69378bb1a0e9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6930f4f5-2868-4186-8d96-b7ea432e4a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d29e007-69f7-4c4b-a5b2-bd05f274e419",
        "cursor": {
          "ref": "2b6898f3-9db6-43b0-8616-26989f7caa96",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "749e48d9-6a0f-4ac7-a8c9-e6ce5d166d9b"
        },
        "item": {
          "id": "6d29e007-69f7-4c4b-a5b2-bd05f274e419",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ab83d33f-f1cd-4ec2-bdd6-5c1ac525309f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a39a7c2-4eea-4caa-99c4-2e4267875d91",
        "cursor": {
          "ref": "a81e9891-3877-473e-9903-67a9bc981fe4",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "66c2426f-7ca3-4038-93e2-153d02162a20"
        },
        "item": {
          "id": "5a39a7c2-4eea-4caa-99c4-2e4267875d91",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "57af6406-1d93-414a-b0c9-5e5596e57ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847afdc0-8184-4fb2-be6e-eb59927fd54c",
        "cursor": {
          "ref": "db0eb1b2-1e67-4663-bc96-921958b0d617",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "07d522dd-df22-4732-8818-340cda771e49"
        },
        "item": {
          "id": "847afdc0-8184-4fb2-be6e-eb59927fd54c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "53d80c07-4c86-467d-8134-c64567f8ce30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616b9631-afa6-4952-9d66-f2f1df0c7e9a",
        "cursor": {
          "ref": "26454f07-1955-479a-8d69-eb5a6d1a6581",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6b593529-c891-4064-ae36-eab9eb9b87ab"
        },
        "item": {
          "id": "616b9631-afa6-4952-9d66-f2f1df0c7e9a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e0e7a021-2147-4300-96aa-2549cfeb91b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d43a175-2bf2-41c6-b0e4-97c2f305098b",
        "cursor": {
          "ref": "189018ea-8b07-40d7-86e3-e417ee3c4cd3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9ff94503-50cf-46bf-920d-7329612916da"
        },
        "item": {
          "id": "1d43a175-2bf2-41c6-b0e4-97c2f305098b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4f5f0a47-5e3a-4b73-b2c2-fd2ed0a84d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ace70f9-daa5-49cb-999f-fbef4a076772",
        "cursor": {
          "ref": "cb3ac59d-9a63-454d-ac6c-d2bc24cf6aa5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "aa575c15-64cd-49f2-8524-f7e03e34233a"
        },
        "item": {
          "id": "8ace70f9-daa5-49cb-999f-fbef4a076772",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eb4bca75-d176-451f-9672-897505ff82fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292fe714-c17c-4261-a96b-10c936be1582",
        "cursor": {
          "ref": "18ca7eb1-22d1-4ed5-a81e-4e8bff1d8050",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0add8aa0-3659-4b56-9908-cd87c3670d52"
        },
        "item": {
          "id": "292fe714-c17c-4261-a96b-10c936be1582",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "898110ce-5dd9-40be-84aa-03b4114de29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6005664a-2a66-435d-aad5-e32094904e05",
        "cursor": {
          "ref": "d79d8f57-beb9-4e67-b418-e72a05497027",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ed146f92-6b3d-4ae2-a4d8-b4a7375dcf01"
        },
        "item": {
          "id": "6005664a-2a66-435d-aad5-e32094904e05",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3541fb64-630a-436d-9250-f6035a76a8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb06778-7dd5-47eb-ab28-e798a8ff3ff5",
        "cursor": {
          "ref": "d3105d1b-dc48-4541-a9ea-4854bdc1ff47",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "223e13ce-92cb-40d7-ac69-9d8dca1996fd"
        },
        "item": {
          "id": "ccb06778-7dd5-47eb-ab28-e798a8ff3ff5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4567423b-941d-4cbe-9509-1cc331558a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d7e54f-9e62-4e9a-9764-761e1ff03d94",
        "cursor": {
          "ref": "33529dd4-b33a-482a-b394-1e8dbd086f5e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0a7fecbc-b9c6-46cf-afce-3a2f44bf7c67"
        },
        "item": {
          "id": "89d7e54f-9e62-4e9a-9764-761e1ff03d94",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "23cf15f9-c49e-49e0-8f25-212000ebcc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3e1a37-64e5-418f-a967-eda01ca8fae8",
        "cursor": {
          "ref": "c2dc4eae-b1f6-4887-b4da-79bb2c9606b0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "24075898-e3c5-414a-a737-da540ff3ffd9"
        },
        "item": {
          "id": "9b3e1a37-64e5-418f-a967-eda01ca8fae8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f75ba9e-b83e-4cf8-902e-8f1f3bc1fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae030050-c31f-4a8d-ae4f-052d794a1311",
        "cursor": {
          "ref": "d1289f97-5597-4f35-b9b0-6b846681ca23",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9eb5f103-5936-429f-8d42-036954758079"
        },
        "item": {
          "id": "ae030050-c31f-4a8d-ae4f-052d794a1311",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "64f157bb-c017-4209-85e2-df674e15ddba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5051a76d-201d-472b-83c8-3d55d47a72c9",
        "cursor": {
          "ref": "cbb3c28b-66b1-4dfc-bad4-64d8ad8eb1db",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d1dc2ae8-c1dd-42bb-89c5-2987d4f6b3fa"
        },
        "item": {
          "id": "5051a76d-201d-472b-83c8-3d55d47a72c9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7b9beaa-a346-4157-8a6c-4ce6c86f2944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cc4cf1-8a95-4d08-b3da-af8a5b7cb915",
        "cursor": {
          "ref": "cb4b203d-987b-4680-aef2-1b34a6d62883",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5ed9ab3d-57d8-4e37-a2a8-9151a0cea247"
        },
        "item": {
          "id": "45cc4cf1-8a95-4d08-b3da-af8a5b7cb915",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1335dbd7-5b0f-45e1-be17-deec613bf8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8760778d-51ff-4293-b48b-816d7101fae0",
        "cursor": {
          "ref": "70b4216e-c6b8-4064-875b-2d6dd0172320",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6d808201-1c15-4598-befa-6ad104017fd0"
        },
        "item": {
          "id": "8760778d-51ff-4293-b48b-816d7101fae0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "94cf3b5d-be73-4be8-a632-7991a41ba004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661fa075-dd60-45bd-9eed-9f35d6588b8e",
        "cursor": {
          "ref": "90c23cd7-ed12-404e-ae7e-00d05d6af9c5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e473bcfd-3dbf-492c-873c-badebf3e3068"
        },
        "item": {
          "id": "661fa075-dd60-45bd-9eed-9f35d6588b8e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c0791bf5-49e8-4ab2-bd96-02cbcc6b4fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921b8bca-5a85-4327-8d2e-8fe01561a4ee",
        "cursor": {
          "ref": "29502d56-1659-4c64-bb9c-79b0f7661481",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9bc572fb-8c6e-44a4-b30d-2ab0b7f0ebfd"
        },
        "item": {
          "id": "921b8bca-5a85-4327-8d2e-8fe01561a4ee",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b3768e10-5e66-4e75-aff6-975cb1df1c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bca6732-7e71-422a-8347-432e218ec4cb",
        "cursor": {
          "ref": "90a1b592-8e9f-423a-bc30-fca43e44bced",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7e81493d-463b-4072-9c04-a3dc1124778e"
        },
        "item": {
          "id": "6bca6732-7e71-422a-8347-432e218ec4cb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80514c91-7923-4c89-a392-3561e0036c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035650d3-8d73-43db-9931-6fa21c4088bd",
        "cursor": {
          "ref": "8607c15e-7b44-4730-827c-aa793ae8f3c7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fe3d9830-9a54-4db6-b2f3-ec229b0588ac"
        },
        "item": {
          "id": "035650d3-8d73-43db-9931-6fa21c4088bd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d9781a8f-3e67-4227-91f6-3549c5866d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75f6212-2f85-47fe-b355-0241f757fa18",
        "cursor": {
          "ref": "4ef5d8a4-7446-43ac-9169-5016ee91b88e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b1718e15-676a-43a1-8f92-f44b45a6c76c"
        },
        "item": {
          "id": "c75f6212-2f85-47fe-b355-0241f757fa18",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c4138494-b66f-40a5-a6b3-cac6bf52328a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5bd85d-095c-4098-a5bb-b8c936c59930",
        "cursor": {
          "ref": "9d242e82-a627-4425-a9a1-8a6a1960b5b9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cb9b4d27-77dc-416e-a08c-ca49d47d2d29"
        },
        "item": {
          "id": "fe5bd85d-095c-4098-a5bb-b8c936c59930",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9109a723-1c8c-451e-a9b0-ecf14aa58bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74232fd8-b0ab-40a6-8b6c-f499f5256479",
        "cursor": {
          "ref": "da67a8b5-cdc2-4ad4-95b4-9a1d5757f43d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e334e16a-9ddc-4dfc-909f-cff86e438e58"
        },
        "item": {
          "id": "74232fd8-b0ab-40a6-8b6c-f499f5256479",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e01aec3b-3674-4a85-90ea-a89131dfd415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6824697c-d5b4-49b3-affb-0c4c0b7fa01c",
        "cursor": {
          "ref": "dc1abdde-f62c-4ef8-a27b-1d7fb22c9d6c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "025b11f6-910c-4e22-af29-db6a991c5ade"
        },
        "item": {
          "id": "6824697c-d5b4-49b3-affb-0c4c0b7fa01c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7025eb9f-3abb-4c04-b7b5-26dfe454f913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5bdc27-668b-472c-b69a-b0e9947786b9",
        "cursor": {
          "ref": "5772c602-83f9-44c1-87c6-dd7dcab4bcd9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d4c86c3a-593c-4f4d-b35b-8432a4c6924d"
        },
        "item": {
          "id": "2d5bdc27-668b-472c-b69a-b0e9947786b9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "05ea9855-37f6-47c0-9c09-4de26aeb9d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990bd6e5-f595-44de-ad8f-4667c0d75c23",
        "cursor": {
          "ref": "40db9d3c-9fd4-4b2c-aa06-5bd230aba0ae",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3a0b73b8-b7a9-4341-b9fa-9177df875469"
        },
        "item": {
          "id": "990bd6e5-f595-44de-ad8f-4667c0d75c23",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "16da504f-cfe2-4147-b723-bfd852a35f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8418a253-1f79-4e43-b759-bb9afd0477bf",
        "cursor": {
          "ref": "67319d85-8b40-4b31-a8c8-7e3383b3d96a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a41ce6bf-a485-4b22-a177-3df791904ff2"
        },
        "item": {
          "id": "8418a253-1f79-4e43-b759-bb9afd0477bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6ee952af-de52-4446-8b94-e48b55e08b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a91db0-13bc-4fe7-a6a3-b9cb490c19ac",
        "cursor": {
          "ref": "cc681231-7a39-4a1a-856c-94fa98336571",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "15a3d0f5-d6bc-49ac-ad04-379c9076d956"
        },
        "item": {
          "id": "b0a91db0-13bc-4fe7-a6a3-b9cb490c19ac",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "85fcf296-59ad-407d-9f51-ba07a0e838fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f176c8-91cd-46a9-85f6-17e6bf128801",
        "cursor": {
          "ref": "d1b2b754-e2a1-4221-b3ea-fdf0bf9b323a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3b6b1e73-8373-41ba-97f4-f57d2c1473ec"
        },
        "item": {
          "id": "53f176c8-91cd-46a9-85f6-17e6bf128801",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc6a4b8d-c491-4e27-98bd-aa2b98e40c48",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4a642a-47e8-472c-8ded-710237c7ddcd",
        "cursor": {
          "ref": "9c075eae-3bd6-4791-b690-e3afff31c3da",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6d9cd98f-5745-472e-8f0d-ba68134d80c2"
        },
        "item": {
          "id": "ca4a642a-47e8-472c-8ded-710237c7ddcd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2502d6ec-66ef-4b75-b266-41667488691a",
          "status": "OK",
          "code": 200,
          "responseTime": 1516,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c4b8ca-225e-425f-8a09-fb070a984e99",
        "cursor": {
          "ref": "187e79dc-2533-44d7-aaa7-1feb4fc10c76",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b0fbf634-6cfb-45c3-bdee-1fd1ca85bee2"
        },
        "item": {
          "id": "25c4b8ca-225e-425f-8a09-fb070a984e99",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "999c38f4-6183-41f5-9f2e-138bf9c50d17",
          "status": "OK",
          "code": 200,
          "responseTime": 1367,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea87817f-092c-4e85-9e14-9ab2e92f49ed",
        "cursor": {
          "ref": "eb2f12cd-f2c5-470f-8df9-8ce908939aeb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bcddccc3-073c-499a-9632-d58d4e123cfb"
        },
        "item": {
          "id": "ea87817f-092c-4e85-9e14-9ab2e92f49ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "32752bae-9a46-42e4-8f0e-59f907e16dbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea87817f-092c-4e85-9e14-9ab2e92f49ed",
        "cursor": {
          "ref": "eb2f12cd-f2c5-470f-8df9-8ce908939aeb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bcddccc3-073c-499a-9632-d58d4e123cfb"
        },
        "item": {
          "id": "ea87817f-092c-4e85-9e14-9ab2e92f49ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "32752bae-9a46-42e4-8f0e-59f907e16dbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a366da-631c-4f4f-b8b1-f0ce086a32b9",
        "cursor": {
          "ref": "0a25e708-bef4-4587-8192-0a89f683ade5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7bfd53bf-be12-4ac5-894c-d9d202e73238"
        },
        "item": {
          "id": "31a366da-631c-4f4f-b8b1-f0ce086a32b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4b48df82-6a6e-4a3e-81d1-650242e6c44e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b419c688-df33-4029-9845-6d5f11312909",
        "cursor": {
          "ref": "3237330a-1fd8-4881-9a3e-aa4a5f8cbc61",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b76d6d2a-9d73-40a2-a4c7-89541bb0eb33"
        },
        "item": {
          "id": "b419c688-df33-4029-9845-6d5f11312909",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8611507a-0c10-4703-a862-6e056a929f4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}