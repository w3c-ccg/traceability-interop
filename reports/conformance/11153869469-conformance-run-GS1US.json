{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01aee344-119e-470a-8bc9-b62824f0ef6d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "872695cb-3de6-46e9-87d7-25a15469815d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27f4a5e1-2c5f-4e91-b535-73672199a2d3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6ce68b4-6344-4ca2-9ea4-5655a19c1500"
                }
              }
            ]
          },
          {
            "id": "787fad9c-0539-4411-b3c6-75e995e9cb72",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "821a0937-d033-4472-9ae3-debd8b95b565",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b0b75297-d3b6-4a57-946d-d61a3f48ef16"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ce03c2a2-9038-45db-bd54-0079c92f1389",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "377e5d86-a0dc-42a8-8532-f5e9ee472cb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d34eee54-e6df-4c44-8227-bc6c2475426c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f04187d-78d6-4d4f-974a-6813ef6ed337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36efd76d-d8c4-4986-aa56-a3ed3bb8e9ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50c34a33-38a8-4df7-a184-b6f294a748b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a01a1d4-a339-489e-b8ed-e15c1812d9a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66bd6a4b-140b-4c24-80f0-6fdf164a5d15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ad28170-684a-4538-b8ed-7ca2e5fda1fb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f261dc7-c82f-49bb-84aa-32230679e599",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dcd6aa83-a3ff-48d7-a801-a57aa4cea7ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b66c27ac-7e4f-4a10-b196-9410442c3fef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b618be4-3765-4f45-9809-8a7fcc89084f"
            }
          }
        ]
      },
      {
        "id": "c4d37ca4-17c3-4e12-93be-248850b414e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cf7b2c79-b7ec-4af3-9fd0-1cb69db79793",
            "name": "Negative Testing",
            "item": [
              {
                "id": "458f2687-617a-4a6a-ace0-b154bb6fdf8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7a1ef82-111f-41eb-8f2f-8e7be42cd1c3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8c2027-a218-47dd-bc74-0996f27bc278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae866efc-7327-46be-8240-22b7e957c8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b490d1-8084-4b01-b312-210a0770284c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eba12b-5300-4f95-b643-064335b9b5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c91c1b62-1820-4794-adcc-17051e53ec27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4ac4fb-38b0-4e56-91ae-940444427bbd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67296ba0-ff87-4181-9134-ffc1112ad2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54e9593b-1ffd-4ae2-8e4c-e7d941217630"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2a92b2f-9378-4692-8298-da70de9bcae5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cef2058-aaed-4ab3-9d4d-8bfb3536609e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227b6227-af83-4c96-8d1c-3aa3bee63adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ab8b83e-5caf-4144-afdf-f3818db02bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5e9243-abbf-4153-bafe-7882850a5b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac3c1a0-deed-4f4c-867a-d48de8a0dc1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5658ad9c-a733-4388-a63e-36a1131dc338",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8aaafa44-a9aa-4d01-8c88-3924c65177d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94ad5d38-20ff-4320-a704-8b2989c3ad09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f4fda893-a92c-4ec3-b59c-d5c810f0a711"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "996b99ca-f076-44fb-8633-228cb3cd1dc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fd60e6c9-22e1-4618-85b3-9f3b7ea2a21d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccf8ee87-5054-4c9e-b7d4-d1d7fd1a6b89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cac85f8f-d18a-4751-8f09-5ffcf12da234"
            }
          }
        ]
      },
      {
        "id": "d37f74f4-22ca-4ad8-9422-d70775100d87",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "55c68c44-d0e8-41f6-a6a9-3b7e29554a4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e90e878b-e982-41ad-9584-c54a710dafe7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e39d0b7c-2773-4df3-86bd-a58641696226",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca22ea72-6b63-40df-83d3-e50cc72edd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6ec53d-4fb7-49ce-9a3a-64e71deb3147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435e027d-6a99-4497-bcdb-aefa136bcc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70d9c837-e592-4c15-bb4a-9ae0f784364e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05cf7ad-70bb-4fd1-b82a-bfc64a358a22",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d5566a-37b3-44f1-9e02-80da9186d93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f28003-0e73-4c77-9cae-1dc76cdefb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778ceb60-1fd9-417b-8548-f4e014f8cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0009216-bde5-42cc-8dce-4346a076e0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f653e8-f708-476d-a35f-48354c9a6a65",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4f30c7-83b3-4215-81d5-8e2794c5e18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cedce7-9476-4e88-91f0-4ecf437bfe32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dd638b-6e22-4e04-bc73-a82bed77029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da13590a-953f-4e1c-876c-3e7c54660b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27147a49-f5c8-4ffd-8701-4c9f84e2fb29",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e898d1e8-445b-465d-817c-13a1938c95d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5931a61-c3dd-42db-86a0-a53b2570e10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33954cf5-e244-4fd7-a632-ad6b954498ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c3bbff5-64dc-49bb-b854-4255ada2361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a680f3-e8b4-4b5f-a5fd-f302c0ef9fb0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbf1b92-7249-4ce1-baab-e55c76d7bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcddf60-78a7-426e-b183-06965cffdb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ae66e2-2de0-42a2-b5b1-3ad49d8c8ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2420fa23-12dc-4986-8d84-ff19a92d7083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b771db-7b97-4898-804f-4bfb6e541827",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42debcf-9a2b-4863-b334-5d825179a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a49641-dfb8-4191-ae58-b50fe6b8d93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299e7cb0-bb80-4547-adb8-93a54e521362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a845ff22-ab1b-440b-99a0-2550bd2a5ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71111f6-73cc-41b0-ba9a-265801fc5d69",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26489a6c-a800-4b3a-980a-7ecf7e2267fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71859870-3d08-4913-bdcc-c644e02571d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220dd034-e653-4003-b024-50c83253e2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fb03892-43ac-4401-a8c4-6879c5f47c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c77e4e-63e5-47a8-a277-50fc83dfa656",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27257ea9-c8dd-4b32-86be-e16d7f8a4097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b73e34b-069a-4f97-9414-e94940d944ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6879bb-4206-469f-b68a-4c8e12dac25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70c16772-5b2f-4e70-9d4e-10c704b95904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c4ce08-6d17-44ca-b8e3-4f0dcba799d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b86e83-6415-4509-a92a-3003d67aacd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8afdc24-77f6-470d-b6c3-24a999a3b03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678ab6c8-a96b-4f0e-803a-168c961ec055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "148f46f4-c0e9-4352-b88b-226b350ea849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d52e1-256e-4111-b3e8-025310f036ea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f704406-a38d-4b86-a0f0-5050bf2d038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc2dc95-3101-494f-8f83-625c9d0daaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a6259a-45ad-4889-b1dd-fde951ebf674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c57bd325-6234-47bb-9e5d-5d7f275b516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec8adc9-286e-4e85-9e60-28b50cdb4e94",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c43c64-0094-4872-a037-69dba15a6f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0c05fc-b219-4988-aff2-8a6830912b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aa8429-c0b7-4dc3-bd7b-ccfc75532403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38c642c6-3934-4625-8593-3589cd058a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004adb99-382f-4897-baf3-ffc45526e65b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff89180-8f55-4444-a754-692b05801dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734ec76a-bfe7-41ea-a175-db988de12f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db380bec-1991-49c2-8dcf-8e0d4d71741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdf432e0-1c4c-4f23-a817-6d1da695930c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1192fb-6410-421c-b493-844a8ded4b00",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fc7156-0616-4060-9801-a583da153abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9f1cbd-07eb-4b76-a34f-27508c14a2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affafd52-16a0-4f62-9cdb-ea26ee1c8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e62259e-6464-4b9c-8acc-f6bd4e2162c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b757ee8-ba0d-46c7-90f7-23ada9bc54df",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbca7603-c221-4686-956f-8d42f6bf9389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f29e13-12f1-4d9c-9625-916ca54e2506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b911a23-9cc8-4e6b-867b-67d0441408dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b460a0f5-b776-4c29-b49a-ca3eadac5003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37194441-7c7f-4cd1-a968-4710de80cf02",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2bb7b4-c2c3-4f26-ae4b-f4612333564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb0d315-4e03-41a2-80ec-50dae9be5dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6653641-46bb-4872-bb49-bd1ed36bd20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a464f0c-6810-43bc-84e5-c994eed714ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972abd7f-bbbd-492f-b14f-24c1196665e9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fd0f54-449b-41b9-b32b-1bf061816dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf35ab8a-f8ec-419f-af68-70ed753f2f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff08a3d3-ccba-4f8e-92ab-102964a7d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89261bfb-f722-4776-b4ed-03c660038b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a148a905-6cc9-4402-b7e6-66cc31d996d2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d98054-4fba-437a-b738-2fc6f0d13b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ee5a37-4ea2-484d-88a5-66078650ccf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9c833f-be7c-4880-ad9a-d56ce6af58b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f715e4ee-1205-4064-84f3-4585d14c0b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ac6ec0-71c5-4551-b120-ae7709645b44",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5a7a5b-0f18-401d-9473-725d1c6728c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7d9eb7-b15d-48a0-adaf-d1c869f372ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949c0d8d-8605-4dcb-8f50-26b50e1f19e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19d6387-cba1-4642-ac20-8604121a93d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f14563c-2e36-4d3f-bb5c-91628cab1efb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fd298b-903e-4453-8c01-b61ad6a38d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56297644-b014-4e9f-93b8-66a732c1b475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ac0fe-03af-4944-9957-b0e34aa352fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ce42b4-b616-4c8e-b1ba-72a15da8be58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b38a8d-5789-4353-9edd-1636bcac2c40",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e7a678-fdea-40a8-9eb6-b8bc1e1a087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684b15a3-48ee-444a-acb0-23daadd45a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916266ca-452c-44fd-a6ad-b06b45e09d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c37a38-3d59-4caa-8ed5-61f21074d4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcb6b3b-5cde-4955-9412-0ed358dd839b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f9b566-de1f-459a-befe-ec905fcf84f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4f9387-02a9-46c2-ae43-405e0bd9a825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4ba58c-d25f-4ef9-b23b-9e7b64bda437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe6e7aa-6e04-4029-a6b8-1f733b8a94b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a4863e-4d5b-4071-a916-168c981b78f7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3069ac9c-5c43-44e0-9c55-bcd9cf63af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ee0540-481f-4e60-ba51-120e81639b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115338e4-3ddb-4d96-b057-c1a31a5d10ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5314f27-412b-4371-8678-c574df646a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854e97c9-4e1c-4e5b-af77-05a3198e227b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccff972-ad12-4709-8999-badb9961d93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c77ffa4-0689-41cd-8735-914734a66e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b805394-1d0d-4bf2-b947-74077d3d96a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc341f58-cd42-45e4-b421-7ae424a10f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c9c3c5-3ff4-4bef-a5fd-9e2a9e3eeb1c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c27b26-269e-49b7-be14-2d7a50392b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86198cd2-b7e7-4058-810a-4ca878720a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34546b49-94e3-49ae-8480-121e2ea8e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2e1cd7-b8ee-486b-80cd-3ef9e92253e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025bfafd-2cd1-4928-a136-db674cd700bf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7da4f2-4439-40fb-a166-add98c702a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4684e923-d6c2-45f0-842d-d7b01b4b3ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d585c7-2750-4b1c-ab70-f5b2c2617bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ba7412-b5bd-410f-94df-fcaef8285f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1774f44a-affb-4c78-89e3-2cb12ffec953",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5b1578-992a-4547-842d-aafad7738eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326fa79c-9bc2-46d1-a318-f42e1e0cd433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95be906-a433-42c6-a769-c113f4defa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "844622b6-b34e-4e0b-b87b-dfce4a7f6fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f1ab1b-0fde-4a24-9bba-c7cc79477337",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129c9df6-7be0-4611-868c-9522e2a8db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2f9f76-a9f8-4cd2-898a-d19dfc3883d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f1de79-8ee7-4fe4-980a-084a5ed13128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab779f0-3c08-4e63-bf6c-d567260a0246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c723acd-b63a-431c-959d-ae5320616ab6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d25de80-da64-4976-bb67-8ddb8af05a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01fb417-92de-4367-8962-08871b25a1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a927fab7-42d9-4a8e-9b42-738facbc390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89629ac6-4806-4533-b263-897bd6032b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9935097a-d7d9-44c7-8232-4ad1ae0bf235",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a0494f-9c5e-4ae0-b56f-8c8edb720969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3228aca-73e2-47eb-b691-f1ae7213a9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5a8426-986b-4ebc-b1ff-6486f3320caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01aaef31-3d18-4aae-8bc6-93da456bf116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7b25e1-655e-4d94-9890-e51bfa205bad",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceb7dc5-7a89-4678-b53e-a6fe0a6532be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eabce60-019f-42f1-8aaa-eddf96662d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49131581-4c59-489f-98d3-56f6efdd277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "26eef946-a611-4a01-bff9-2060aac9df61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95211d6-12aa-4c2d-b583-1d865c5043dd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5888ba49-f474-4eb2-97dc-e72da56d33aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87df34e0-077f-4acf-ab55-6a545e094109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eebe89d-3e5d-4f22-b33f-8e59029fc3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0464d418-8c30-4781-9aa4-d36d554caeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dded48-e98a-4051-a6ef-0cd0d2e1c060",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b88d3db-105f-459e-8713-e1f6d1eb60c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644ecada-d2f7-4f62-8683-266ca93500da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643a2d2e-a1e0-4cec-900c-0f540254da1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "297ed233-4da7-4d6c-b9da-4f35e8bbe0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83fab6c-1ebf-4384-a8ef-87ebbcb139f4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727e6365-7302-4e84-90b0-6bef5a5d551a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1090c2b6-5d33-4653-a115-231970021cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790ffb40-e900-46c5-a3a4-9dc8711c0a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf86e29-d041-47f1-9090-405c5fba0528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9e35d8-de99-4648-b3f7-be13cf785c12",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63199a18-0766-4e0d-970a-9a0871970234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfe3d1c-92af-4c17-9438-db7d52eadea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338d4bad-f1ea-4544-91b5-859fefa76f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8788156a-8d4e-4df8-a4d4-3223da4e390b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676c8213-c798-4597-8589-b2aa8258ed96",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aaf667-bde0-4327-9417-0e7ab26fd360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb67c99-b3b4-438d-9f0b-43e967939581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f0f1fe-65bc-4864-911a-2f74df22e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf8245f-8f60-4b83-8e56-8dfa90d0da76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a20c4be-f73f-4447-967d-5850c93c5580",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ab4039-de07-473d-bbf1-96017f67c800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "362289f3-814b-42d2-952f-995217033433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4e0923-9afe-4c61-bf06-4f45d9a16c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c494f3f-6610-4f17-abff-9d86d2ac9a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba87a61-34eb-433d-964a-47dbe7a8a633",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d990385-acaf-4a18-9197-cad60cbe8f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e839865f-6692-4dfd-bc83-4ad6a9deafba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd91c68-5c11-4855-b60c-8f29c31b2ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e745008-c6d8-4f77-b333-a62f69cd3047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71554fae-bfe9-42e5-832b-cd82c99eb122",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a2bfe-69b5-49bf-9445-ccf8a87f11cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7090ba54-29b3-4320-8e2e-ec9aaae14bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be72ae7c-8054-4dff-a8e6-57033cccca20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8de0168-da2e-4d3e-8d4e-1c790e898e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf6f33a-7e17-4ca7-9a36-6099cb40c613",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8cf1fb-f2d0-44fc-aade-681531533858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88e2dd1-7fea-405f-b25d-88e48a7f1be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f996cc-4eaf-46d6-af28-f2ec229fd52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1682060b-a85d-45fd-ad07-2b912d1ad516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b340a45-6913-4999-92ea-78753c848cc5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874b33a0-d587-4382-934c-7ef50ca8307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19e50ac-f10f-4904-bff5-dafecf6c6db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f71f0f9-63af-42c7-bedf-0cc9db2e2381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "903c9a04-3026-489a-a510-41f5f636ddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95977c3c-50ad-436b-89e6-4dafb349c7f7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d301c8cc-660e-4105-be02-24dc240f7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57a7306-3a98-4a15-b1f6-009df1b11969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7afdf4-8fb9-4121-aa8f-8457580891be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "323ea1ca-4a4a-43f6-b452-fb9693c57a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2b48b2-9456-4f66-b0f2-b725da56e4b3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2a1bf8-1295-43b6-a9d2-e34f5c92b8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d609e2-d56c-4bd9-9740-028b06acedf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd1d1fa-557d-44c0-9d34-e485e1fd9462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe5e5cd-1cef-4fc2-a1e0-c5742b22d9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4084570d-f7da-418d-b095-d7d2324080b2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb23912-e846-45d5-9b16-7b25aa2c7ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b163b5f2-15e2-4120-9966-e55e8cb48234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bc518a-074f-4ae9-a48b-b8e870c486b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1650c6-0a67-44a2-afd9-b8466d5a7829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc17a4b-c96a-4cf8-85b3-6356f30eaa90",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a37a16-f9e7-4639-8590-36e7ec7634a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87f38e6-4c48-42a9-8ac1-ebe4ea3c1d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3084141b-3196-4259-9d8f-ff0540b5c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40f5eec-5af2-4d5f-ad71-bb4e3b81aa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8eda8e-dde3-49eb-8932-789c9d880eab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0468b61-9904-4107-9bbd-52b482bfa8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6569072-c1ae-4b8c-8a8b-0b42ce13154b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5177d68-1848-47fb-9a3a-55adaa166eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "426dd4c9-c767-478e-821e-9c9d67622554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383d96c8-c0d3-4eca-bb66-11163f0a8469",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31905fa3-7b3f-491f-b1ef-d94624982d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389bf442-c501-4cff-a5af-1c61ae72a0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb995d7-44ed-4640-865c-36f7234bfbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9210e29a-140b-4e59-abf7-229ce113680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7e8d82-b155-4e88-aabc-32e5288efd66",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678a3602-d2f4-4986-899a-6c89a1f93c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3762c6-2468-4a27-92c3-b72ffe0e91c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c80694-7285-4657-9862-85994b50bfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a48b48-8e89-4849-8fea-a20cabb11f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a455de8a-cc62-4b87-baeb-a15b65cc3b24",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9398408-1ca5-4ea2-a27c-9e264eaa9ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf86778-0592-4c2b-8fd7-4573175ed8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5ea1eb-ba88-49d3-8987-130640fac3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "168e5f4e-1ff6-40cf-93c7-72821a8b20fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7455e7-4f34-4d47-b61e-873724945cc1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a659f4-f364-4616-b2b5-2ce12f69dfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bd2da3-6c26-4f23-b74f-36078a573c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a5e841-1ca8-43df-9919-93b3c1585910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4689915-5647-4f18-908d-8acf7ce7c290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73486cab-0711-4c7f-8878-9bfe631b5740",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18797953-7c1d-4d5e-b395-6a9c513321bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fa7568-6a3a-4630-9b65-8075b0c62720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763224e7-0bf6-4296-a783-ccbe433962fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "929b79d1-9dde-4e56-8965-0387af5a3c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81133928-486c-41bf-be77-7ecf4a9d8002",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b710035-e126-4a22-8436-19dea2e9922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55a8617-2efb-47a7-9203-8abdb3db62af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650551cb-20c5-49c1-ad3b-9c2feef885cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d188bf-80f8-4318-81f4-f67e7bd0bf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c32a7c-32ce-44e9-b7cf-e4525033a3f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbd84f1-f1f0-4532-9bfb-b5540e331547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87bfbf5-2bcb-4ae3-a21d-2ec89457a41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a717c0d-bc24-4503-9c34-d2ff17147de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0e421a-b9e1-43fd-af7d-fa3035cd7d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7a67ef-bdae-44a7-a047-d9cfca43a88d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802d6ad7-0e02-41b3-b810-c2ec767045d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0373cd93-2fde-420a-89cb-d1b75a912978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f2b59-ee1c-4ecd-b78b-20245285a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4ee67c-679f-421d-8c1f-dee761610d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5094d7a-6cc6-4dae-bfd8-eb6608529f49",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1215eb8-fa21-4990-a77f-01f6d5bb956c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f8064-7f30-4a88-99f8-d5a8e7a9f76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb9f9fa-d99f-45a2-a610-9b155465d4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a83ff6c-cac2-4b88-8d59-7ead18d59564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4209ed0f-8163-4b07-8c3f-585de3f57290",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a83a87f-7383-4e1d-976d-a28a177c7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d8f35f-2f13-41f9-a64c-d95d5cbb8335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e6654a-81b6-4e7d-933e-9d0348a64a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbb3017-934b-4c0f-b97a-ac72a0f4e9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb48a783-2261-4e42-a951-992283cc78c4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2862570b-641c-4718-8e11-22b369183e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdc0756-5d9f-4337-b23d-91c511b17c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f010c5-9d37-4946-979a-7658e4d7e1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3674e22d-577c-47e4-9a89-8cfb0ee10670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5caf088-1732-4e0a-8a72-607902a412ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d13d34f-6f43-4748-a267-12a1592d0592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba7d2e2-20df-44ea-95a3-be0ce357b94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6917095b-9d5a-4b38-a31f-dafe18a4149f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b31a82cb-12da-4f06-8b17-5c0e8f7ba594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c822364-8443-4c61-ab7f-a8733554957b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f0951a-78d4-4a47-af58-444cf427a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6685d0d6-ee26-4bbe-8630-1561994d6a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4078fd75-7e50-4a98-a148-2ce38823e814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac89e8c-0a28-4bdc-b383-09adad80614b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b26d202-fee1-4a6d-b15b-6c5848d61197",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b4a223-4d1a-4016-9b1a-37876a583c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444f2df9-d2a5-4b29-b44f-b4ccb0d9ad41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a523ec52-607d-41e5-98ba-e797e3a607e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df1f99f2-f6bd-4740-a269-7d7a62fc3508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a993d7-ad93-4a48-94e9-e715dde9d6ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0f2010-6b22-41a6-b094-39cb1d9b6f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a946f6ca-f00a-46cf-9f04-17869332c115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce8df4f-543e-4bd3-87f8-ec5374323280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32909f6e-b101-4a10-bcec-d31d6f994863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a124904-c97d-4601-bb87-43ad813e0989",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be752e8e-54f4-4e58-bea4-ebe200a6fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469cf142-c827-4814-a141-b014013de016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360b9d72-d89b-42f5-b709-6c1c5bb5c848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71793210-68d0-45b2-87ae-4c3ca9a8ab6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a41fee7-458e-48dc-8b43-60480f0ae1c9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2bb23d-1ff9-4d51-89b4-2be8622f5a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0242b4c-7ff9-4276-ae2d-eaaf136f9da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924509da-52e9-4901-97ec-0a81d914859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad9967-b3b2-4776-bfb3-c2a59777e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e36759-3a96-4eb4-8f39-e66278a36ceb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f27566a-04b3-4e74-9844-366800abfc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a1c3f7-cd58-4da4-b726-eb6f1ad7bbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a7938a-8330-41bc-ad67-88e6ef371998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d8c072-ce8f-45de-a5ec-3f9d5a039fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa556da9-1cb5-45ca-b1dc-1124acce100e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400dae55-d239-4142-8f86-d8db245e080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff168cf-54e3-46a1-adbe-3c9d7fc11a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5ca173-5c75-4350-86ee-849bd4f8ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47819a2c-876e-4a05-a28d-8f9dbf1e3dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f53cd57-a614-4c19-8873-d429a4b08a0f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a299115-f01b-428e-b338-64d1b456debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f122095-9db2-48f3-8c50-1a2db8ec5699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae484e44-fe36-4f64-8fc7-2335f401bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3308f5-d707-4776-b062-b64106cc893f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313098e5-fef1-48c3-8778-02797e45c1a3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55980ff4-885d-4f6e-8570-65e20ad619fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258e4ba9-ce42-4578-9a49-6c0cb69f4ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce69e819-c6c6-40b0-b82c-b79757c675c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8e4a71-7c89-421c-8ed2-21709c1f8bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab35a779-e539-4e7c-95fa-28956fa9007b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b730c9c-92bb-4503-ab2f-7ee4c897662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9fc299-4878-4623-a5cc-d8e98f1fb091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c798d061-d3ae-4546-aa62-a17381df826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8bebf8-007c-4de3-8fda-6d77498cdcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87b37ec-94a6-4268-9580-d3d65e9f4d25",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7798ade-e721-4be4-b380-9865baff6312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec09bb3-4916-48b0-82b4-c1baecd25d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68bbe22-8373-43a2-a4b9-d80cc179fcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdba3c4-a832-42f0-a67b-50630d94c9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ab56e4-7fd1-4590-afe4-59a4adc22ccd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4a8ca4-aaa6-48fa-b5ea-bcf1af977028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de87be91-508e-4a75-aef5-35a8c4a8ccf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95881a0-2c7d-4d3b-966f-dfa7751f7ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19bd5c4b-3a2a-40dd-9688-d5916dc86b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c880a32-7c06-4a29-84c5-2aeff2b644b1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ec61b9-03b5-452c-b158-e7957cbda87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc09794-f1f0-4451-b89e-8183d6cbf92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed95f73-be9a-40fd-a5e6-ef8bcd5b1f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9248979-4894-4e04-beff-a228685cfb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee600d47-2ed4-4b7d-ab81-cdff47c8b326",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2062647-bcff-4209-bb14-db039b412504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d332361-61bc-46cc-92de-df7234aa545c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364a02cf-bc47-441f-ac91-2242045b782f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9502311d-272e-4ae9-8f39-e2854c409cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287a3649-5ddd-4475-bfac-3bd13fa34f2b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b3dcae-2675-4235-a72e-7de6fc31f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b474d626-37e4-4f5b-8a57-ad48a0f26011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534d833d-819d-4151-81da-b586b9c50ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd8e2a5-1669-4299-88e0-77c6cf944e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085cf710-3487-4c41-acb0-e2fb09f235d2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d3241d-cb29-4141-a5ae-0078f9780b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf7d190-a12a-4c6b-a4bf-87509893d89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db118c1-4be7-4740-a03c-aeb90d541a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbef00c-81f3-4cc9-9a65-c81696092d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8783ec14-81a0-4b08-b974-1663e87a8e0d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3bcd05-1b38-486c-aa8b-70af872806fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf374af-7d41-41be-b084-35d27a728f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a5d85-cafa-45a0-a98e-1ec821745292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb49c33-fba6-474f-b50d-ff41eb975f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931bcd6d-b45a-4683-a1ee-5c596cdd48bb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c3c25a-d0d8-499d-b362-1a1aac97c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ee11ad-4428-4ec0-9a38-70fe1f3e3280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40508c30-90ef-4b8e-b829-d9bb8f5ba662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9a3512-fd75-46bc-ab97-62e6a4be6878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a27b3ee-1307-4626-a8f1-7c5f26f27e6c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1dd7b1-1059-4b94-9bb3-045ff04d3c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d48147-c3e1-408b-a0cb-019719977878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe604813-b789-442e-ab59-913b65c0fca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e549e5-ec8c-48f0-873f-d6444d6032ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d685aafa-49a2-4281-b613-826d6bcfd595",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883e42ed-9b1a-4066-8ff0-39491ecbd3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25023552-c71c-44a8-ba8e-564c50158ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4b89b8-4456-40e1-8f59-6fb75c4e6855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8aa7e79-dc83-4a93-8564-c5c7a9e8e531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b28c6d4-79f4-47c4-860d-8c244a164db4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2ffcae-dbe0-49ec-97c3-0c25e338b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6b8043-940d-4a9b-884a-e22fa68fd5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d435f1a7-3370-488c-9297-9a35c639f332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f595a256-7224-4150-bee9-6ca35b833b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07414d3-fc54-4fc7-b270-c89b04c9b354",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a35894a-3c53-4206-b639-ea4b48d9b76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd3fa49-b80c-4a01-8d79-8aebd01cf6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71437771-a45c-46bf-9a08-11036dd7b6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e42f7eb-435d-4cc5-98c2-37243df1feb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521d0186-cdf5-4f9a-8d19-eabd913447cf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a171839-699b-4ce4-acc0-7be81c11092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1bd098-7866-4133-b1d2-524a6e6941b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dff6a7-7a02-4b55-b983-b4cbf19694a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e743746f-c89e-4fc8-b005-7367754d5ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501ec65e-e2ed-4d12-bd13-a60a939bfca0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c339326d-f280-4fa7-b49b-9ed9346f4475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1020a67-5577-4721-81ba-843a364fc496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0015cdb-64e2-43ff-b356-aec31ea59b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c612d0-ea9c-4c48-a940-e3964f6f5bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430dc11e-24ab-4719-b081-6fc18cf17564",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1147526a-cd99-485e-9722-278a07949d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565e28a6-d3f4-4acf-952b-fff472c33856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564c4519-53bd-46ec-96c5-fcb250d7c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55d7b9ff-f555-42cf-b756-e639b197c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a1c922-286c-4737-9f9b-7b5f04774340",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e5d851-eb41-4b08-babb-ca48e6b25307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da16062-3138-4006-86d3-4a286a565f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627bb21b-ee66-41d3-8870-1cb23ac537b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d05040b-c1df-45b7-9e5c-cbea4f521283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9e0bf8-4969-4cc6-8c94-02c3549f3f46",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474aef02-2f78-4a2f-bbd1-61cd364aca87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f16b30e-0c0f-449f-8474-db1816f2326c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1542f07c-8302-462d-b524-b2018875c7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a650d3-7b4b-4aa4-a54d-9be936bf2b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df07369-b8ab-4fe2-bdd3-a8e0a860c45b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295e2b2d-66b7-4eb9-9eff-a4c638a7c87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8210d3fd-ff2a-46f8-aedc-0216edac92e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d748e596-30a5-455c-80ca-42ba4baa856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d7c614-2d93-4cf1-add4-7f7608dab487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d095d073-edef-4019-80b2-49fa7ddc55cb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ac0f84-838a-47de-815b-d986b07c5aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb53410f-4754-4e98-8dba-a203511e044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2b879-1807-483f-9ffc-17a80a17bc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ee949d-7cce-4599-9861-e7ecd8760390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de81de70-a31c-412b-a7cc-327a1c4a5b25",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcaff51-31f4-4625-bd52-116479765dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ace46b2-2c03-49af-aae1-5d14ea38be7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0c2b19-b209-4c2b-b437-f3a1fc48d3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4593d31a-9579-4949-a098-eaed9219a255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b8f2e7-edb8-4a05-b6de-990e74b34a06",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834cbf6a-e2f4-4cf4-8d00-1b4a2312c306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32109e99-25d6-4d83-8829-6438335ecaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c37730f-4058-4380-8f20-a26e98216fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceeaa593-337b-4f27-afa9-0ef91128ae6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64aa375-6a1c-4947-aeec-54a1f31a6a9e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7b3bd6-4b86-4a83-8483-db6f17da2634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fea651-26c0-4c32-9995-8a8f38317b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dad7c89-3c0a-43d9-9d74-011eb49fcec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9e4972-0c83-4e34-ab7e-47fd7ed9144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf03377b-d1a4-40c1-9202-940b04e66843",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d2a35e-189f-4f2b-a281-c45ca34cc3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7d0441-d19f-4b39-93b0-b55118ed80a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75acab2-a02b-427d-9ad8-2c95da657693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "099b0b6c-780c-45f6-9e5a-2c9e4c56da22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e0ce3-67b4-4e6d-add0-40bb61d1029d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fba5d4-2ac1-405f-baa4-71e86d50882c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02343b9d-f485-47e8-8bb6-fbf185e837de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a7ac7-c260-4170-8ac4-e3c978151af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dee07c91-9d86-4c6b-a98c-8709119bc787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909b2a0c-83b5-4839-9cda-9cd5cf667d35",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e52693b-515c-45e9-99cc-53846c5eb60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ef6f4fd5-94ae-46e5-9343-7862446a0ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ced7c69-4325-49b6-b243-ed09cf3afa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "746e2d73-87e6-4c86-a9c9-3eb3b838c8ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbe207b4-4ca3-47b2-a112-3f45578d8ab6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50992174-f889-4818-9983-8247ca82f5de",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c3c727-45df-4d40-8a4c-58105e6896ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1508e5b-61cc-4412-bf7c-81c152460262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb596db1-8a96-4b0c-a307-dc307e253739",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3be83df2-0cf2-40da-9b30-9ec5aa51dac3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af6a53a5-b7e2-4124-be82-55c1f0d778ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b06ef7d-a32f-4f6e-bbef-afda801a8c35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "410c12a2-6f6d-460f-a5f2-167777fb90f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "840a2962-dcab-400a-b9a9-9f496e74f7f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e842b0e8-3e7a-4805-810e-c737e5cf1bb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57fc9154-5d82-4d5b-958b-6b3a55d06eca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "962bff88-a72b-4e10-bbb3-13ce7cd6ae38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "775aa1fd-921f-4053-9e49-4bbc673f7208"
                }
              }
            ]
          },
          {
            "id": "e3c6c5a6-8cf2-4cdc-b3f8-d211390a996b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3211346d-49b5-4125-b4f9-d51a85a7975c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dd881392-2e14-4bda-b638-9871af8cb606",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27edf0db-4ca0-4306-80de-61635ea4e7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ebb2f85a-2e78-4e25-9143-473c5054f98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4ad25-6e7d-4eb1-892b-e3cdc3604d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d88a3c-97d0-4a02-80e2-5470377b47ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7924fae5-97e7-4103-9e47-59754160a85c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1719504-3c92-43a9-99e0-127e4d7f0672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "facd589c-27dc-4b28-a845-67ecae1c1361"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a890bdd7-a5b3-4b4b-aae4-64f0dc441e5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e23c0fb-6a5a-4a72-9070-de6dfe2544fd"
                    }
                  }
                ]
              },
              {
                "id": "c864ca21-e4f7-4a7e-aa87-8f1b7124cee8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b389080-b25f-44cd-855b-22a59a350327",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51bd303b-3378-448c-8f3a-61d634e7ffcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebdec227-af46-45c1-aaf0-33d4389a8672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1ca1b3b-c181-40a2-95cd-21b8c904fb98"
                    }
                  }
                ]
              },
              {
                "id": "7ccc094a-89fe-4198-8f6c-3dbe88b2e015",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f3ef45-8b8e-44d9-9762-d56602f73e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e761fbb9-bd21-4c79-85fd-999d12139933"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46d89c68-496b-45e4-8cf9-dd1eef770a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a0bc653-a1f7-4afd-8959-c7134d9f7de5"
                    }
                  }
                ]
              },
              {
                "id": "3c1ba5c7-a931-43f5-85bf-faad2c4bd95c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8b5700e-ecf7-4797-8391-4c6970ee1ae5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8dfbcb3-e50f-4a3f-99ca-f8a6944bde5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d494c54-566c-47fd-907b-8daa61c3a32d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f675db56-1dd6-4eb3-b67c-ddce90a4d8ac"
                    }
                  }
                ]
              },
              {
                "id": "d639922c-2449-444c-afb1-9ca9d5929928",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fad3d88-b71c-4374-9d1b-33671a59f501",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc1c1e92-c23e-4749-96c1-a2d0eda66e50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46faabbd-a285-4d1a-a34d-45ca0a0ddcb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5a2397b-bed8-4ac3-a3c6-e274269bc411"
                    }
                  }
                ]
              },
              {
                "id": "a5181e1c-1287-4db2-90d8-574fa3e97bfd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6b4591a-557e-4078-9441-c915afd1c99f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49849369-76a0-4b21-ae52-6e56b6ad847e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "399311ff-368b-40d2-b986-47322e39032e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d23a785-a4df-4549-a760-a75eec9191a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98159528-14cd-4526-91e9-26a3a0a71b5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33bd1861-5d01-40c6-87b7-846359ec4228"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9afe75dc-5527-494f-9f6e-141e347511c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e2c832b-ed56-44d5-b04a-b981ef282d35"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f08dc86d-90c7-452c-9d0b-e9c4ec8070a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "45e9406a-d20f-4e3a-bd29-d4cb04f08d6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d4a3fa1-d13c-4187-887b-a107381bd637",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea9a88a3-dad3-4f5c-b396-eaadb1fa1443"
            }
          }
        ]
      },
      {
        "id": "e5596aa0-41f1-48fa-a7e0-d10690674025",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f8de11e5-d82b-43b4-ae4b-166b74ee23cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "221658c5-7e9a-4da9-838d-2cb8ca6bbfe8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "374a447f-cb74-4bf9-a3ca-dbe8523fa43f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c6345c-d4a5-435c-8ffe-7441e2772a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484519c0-d4ac-441d-b9e3-d28ec7358f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f93762-1467-43d8-89ba-0eef10fce933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "06488125-3013-4d1f-8343-b5547f9f7a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e616d673-533d-4715-93a7-8729b971517e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef47875b-0603-4512-a80c-8affb8540568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16506ea9-ed7a-426c-86fc-d481aae9018b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2eb81f-0833-47f9-b702-f32bd21648fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1452bca8-8cee-4a04-803f-0aead86e5583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec2096c-df46-4521-a9f0-4dde40985236",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a6428d-2769-404d-bdad-de98d2726039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4599c115-922a-4277-ac46-07d015af466f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afdaefc-5616-4eac-acfa-872fba8cf704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a26e59-ea08-4ed7-b773-f58c11db562b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6ec419-d644-4d4d-bb39-c9c57d284b7f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6f926e-0910-4a4f-a945-f66ddccbbbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8048059-3b6e-4142-8a91-7c98cde8b139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd8288-171c-45ba-90c1-5479ab5d667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b7e127-d434-4d90-8d21-d57c282ed453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e514d8-9f46-4bee-ad8d-12787cf37925",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb89a6-27eb-4463-8a85-1bd8b60ac5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6153790b-274b-4505-993b-c6ce4f0520ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1292caec-7ad3-4bf5-8e80-347f7cf0feaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07165118-b289-41e1-9c33-0fee2a8ce9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc90149d-e063-4d9a-a3b7-4975121dda7d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443f5e42-7b9e-4ab4-bc62-e467d427f235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9363c6a1-bda9-474f-9195-ff6edcdc3a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703c9417-3911-4c34-b694-3e8720431edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "218a255b-b378-4a69-9232-66201b712774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf280b6-a2a1-4f3f-9d58-29d2ab3cb3e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7b2371-cb13-4a79-bd7c-6c621d1e1c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950f6f97-bd53-45a6-a673-6e0419d67d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5addaac0-a7a8-4d66-8c22-6e7a767915ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "260a716d-da02-4212-81b7-bd3d33d1f16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cda341a-909a-40e0-8977-6be7b8cceb6d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b45a4d-bfc5-4b40-9c42-51a9df51b483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f88d4c-7ff2-4ef9-b0e3-4d598d795cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75575415-289c-4e39-857d-6c13333ae234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5477a2-47c1-4c83-96e5-12b14bcb9e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b259e339-b7ad-4b94-804c-dd6f6d842a02",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2579b1f-e6fe-4ad9-8a35-ccab6c257dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97553727-efc8-493e-a69a-eea654c9d85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b4d4f7-6a88-4b74-aa3a-11670c3b273b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb73455-5235-4305-b8e2-311e0853e43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe35e395-92fa-4282-8344-bf6bfbc676cc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb212e2f-c2d1-44b0-9ab1-65172b7bbeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bf9521-d2f0-472f-93be-eee30b9c58fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d8f57a-5c91-42ed-8185-b382d68fb224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e17bf-23f2-46af-9b96-307c814933cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7d9ba8-105c-47e5-858c-df337a7cb773",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17c0b61-a6e9-4704-bb12-85f743e05d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4822f2a6-3bee-4cb4-ae95-e9e8c33a8079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be19fb5f-a668-45b5-bda7-b033af2320a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "08c03536-92c0-438a-8b52-02899ae42784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2883e9-9df7-4e26-8a7f-b78e2bd61fbb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e4e075-bf5d-490e-8707-36ebfb43c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c77087-a275-4c0e-92f1-01cd24ae4027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c90d8-a1ce-4b37-932b-31f67e2caf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15c9e3bb-8c53-4575-a52a-537c7683c00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613d65ae-f643-4780-b6b9-0adedf21aa96",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869e17cf-2692-4a0f-b988-3452d9039e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b330956-b9f0-4a36-ab00-02d46bf29856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c6990-a536-47c7-b7f8-09361cce59b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4aed056-3aea-412b-a066-5d07e8d13f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404356f8-b13f-4f40-b7a3-9006ac7aed53",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b0f3a4-1622-4f7d-9bf6-6c3e8f565e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8052d1c-d2be-43e0-9a7e-072464a563ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707a7334-4e05-4a42-89b8-1a375a1e1590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a738e0-b6cf-4b7b-8a91-5550904ed66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e19e4f-5240-4478-920d-92aebc6714ea",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16c0b61-0280-40da-aff0-e974f442719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95675d6-9b58-4ec8-bcf6-cafe489af0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70944793-751e-4ec7-a7b1-d9b65b4a21b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8cd490-bd44-448c-a9db-cb971f553498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a700ff1d-cb09-49c2-94ce-8d60abc995c1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b04c6b7-856a-4f39-8edc-b89e70fd9365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc9b1d2-686a-41bf-8278-3696515d3667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9d4b98-4803-4b0c-85b3-bda0f7ec0ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b25be25e-49bb-46cf-8f1c-d9f24fad1ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06752170-02d4-4f4a-992f-97fd24aa3d45",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cc4f58-c882-41e0-8c2e-a7d0eb81c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e53558e-8c63-4467-9337-fe97b61b9738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc33d98-3dfd-4f02-b168-4ee947165100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1a2dd6-589a-4157-ad09-d9c821b9f3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b14e3a-e644-4706-b309-f2fca1b5460f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8781c0-c892-4acc-9fef-4c591733d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341c60f4-c577-47c8-ab0f-dfce3ac7e69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44da9e36-9e24-4447-842a-42448c273b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8550ed-3af5-4111-b003-56debaff526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680038cb-8413-4480-830e-d5b200afc9b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b53cd74-3847-4341-a9d5-59a50e9a19bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8326acc2-a83d-4071-980a-bcfb06f9f500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abe68eb-7afc-4643-80c4-d0b46fc0f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7089c9-cf2f-4565-8dbe-236a529d8b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabb5dfd-ee88-466c-a046-b04738090a78",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a00d0e-4194-426a-a4cb-4a1fe68681a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665d6073-a3db-4d33-affe-f933f5dd2e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de69837-a835-46b1-babf-828645b6ff37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b753133-32d6-4624-b22c-ddf18e0537e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6e8586-661b-4182-9d60-6f285cac1497",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555d9fb0-a02d-4593-a69a-ec7f129985a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb44973-bca9-4969-bed4-1181cf4cc2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edd7adf-8be6-47b7-8544-59de30e4a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b00138-0027-4a83-a3fe-8b56d84475fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2058bb-6c05-498f-bff3-329499feaed1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c924aa91-27b7-43eb-a09b-d178f15b7719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01db719c-5595-4019-8458-533b7b9f14eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eca930b-183e-4360-96cf-e6810c447744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8468174-6f12-4ae3-a92c-c507c27297c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491fbb8e-8f78-4518-a73b-e6d9a3963993",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b73305-463e-4c7e-8e7a-30020c158317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58832b16-1020-4bcb-ba82-597628e07396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb84ca85-9817-4bfc-8876-1871f795291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d8efc0-f0b3-4cc2-ade2-725c6d4c6dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8273ece8-d255-4f40-9b0b-5893347aaf2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbe1bf4-f9cc-45ae-b52d-55eae46be62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f1a2d8-0037-4185-9581-a9a1bf67fea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4917af-2a26-4f1f-909b-a9d05f3f841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c00581-c35e-4411-8764-1c5d5f5ce4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6a1160-c002-484b-bf94-496c0f34276d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441db2c8-0cd7-4ef1-a51f-167f748cd8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b68ef0-c4de-4057-b6c6-8d61c034438f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d49393-8135-48da-aceb-dc6862feb0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a40ce1f-c99b-40d5-96ca-0d096ea56389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcf2248-9fee-4270-b621-af91b675b77f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dada56aa-c7fa-4796-a457-403a4a7de778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db05a780-e784-4953-b951-2064d5806e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e03fa3-51e4-43dc-82bf-d6e94d039e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e5b9d8-1663-497e-93e7-80f50adc5d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5015db-d095-45ef-8042-513fa5d2c29e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e292efa-680b-4186-94d7-50738874e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bf84f8-1ee9-442f-9ac6-a30d76a836df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d0c73-72d2-4dd7-b12b-02b174fdc670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9489d2fd-ee0b-4eb4-aa1f-38ec6a20cd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fdb1bf-65f3-4949-a599-524fd7c3dab0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a7e37d-3b83-4388-9ac4-a712fe6e19e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632732e1-e4b8-408b-8a3f-f77c1e0b1987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f82e9c-88cd-40db-8af0-1d98a931b2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e981054e-6ea1-433e-983c-dc06774d7f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5186338c-75a0-4a94-888a-a09cfae7412f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df935c6f-eaab-4626-a749-5c7f449880cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b45e9ca-4044-46a4-8e02-3ab216835810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5de8de8-12d5-48e3-9485-4936f3d09515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaa6b25-6f19-41a1-92f5-35349287dcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810c7ea-8ecd-4928-95ff-b8850faebaca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca45caf-93ca-4e88-86c6-c717cc424c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f530bcad-922c-420f-ac04-bed76acd4c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6a07d9-6035-45cb-9a7e-72b332a5c771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297a5bee-d0d4-4819-956a-693f7b6a9f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28123a70-6b86-4d82-b390-229be91ace7f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27aeaad-9a15-4a01-a66c-ce7cf7e8a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d9f830-9ebf-4231-bc46-c9b7201a243f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd9d928-f9d5-4a4b-b63e-4bafb6a2745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45311a48-ff76-4876-a69b-fa43deb80064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edebc8c6-d29a-41d1-8a07-8939e168d301",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef56ba4-d9e4-422a-9719-97fb7caf614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bba3e6-ff4c-46e3-99c7-552b3dac4db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1fa16c-8b48-43bd-8762-1786236dd1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9825792-7b7c-47f6-8660-052f23fb62d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d44932-5b1a-48f8-977d-4954c2b5d91a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81289b9-e9a9-429f-b0b7-d06d10ab05ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56967a1e-31ec-44de-8553-d6a77b2fc502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbf26c3-0769-49e6-951b-ba45470b8bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb26030b-668e-4687-8a5a-cbabc41eac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d32298-9897-4778-8fc0-3067699f13f3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47032ab-07e5-4903-98da-eef8c8fb445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613c0a80-05e3-4508-965e-ae844a98ae0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d20845c-faef-4517-9f82-cf474720476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c566609-f15e-43d1-9016-8bbc7bb2e5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dc7b28-9bc9-4f97-9fdb-6b7c2ddfee43",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f137d2-877a-4b5f-b57e-32e92e504f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6250a08f-814c-441a-8b9d-dcd64d9ea3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e19c883-7d38-45c3-b627-1fa0e69374cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f76806-aae4-45b4-a1a4-1420ba8a5353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5c6cd0-b9a8-46b6-bde7-3a0d62aac112",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e232380e-1de4-4328-917a-90706042b560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e6e529-d412-4684-ba9b-573bea27026b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f38c8a1-89d9-47a0-9f9e-04a0f7854d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f63d81-0a1f-47d4-b44b-8070c37945be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff823cd-7988-49c9-bf71-d143681bf34c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4084f9a9-676c-4f96-8190-15e7faf04cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5c0395-e48d-40c2-8675-b449d4411695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ecd280-4580-4103-a1a6-86d5ba30ed37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfabf3e0-a975-4ae3-b475-34bf9a765f4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3feef9ec-884b-46da-a5c8-df2eb35ecf6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2995433-0497-4b1b-8bfb-1a44c4ef6b52",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054f3f05-6290-48d6-b8a7-d25d9105a576",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "67e995d1-4ca2-4344-9da7-430b3601891e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be008c3-7765-4947-af2e-4cb7b7a26a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "514fe60e-2938-4ebe-ac82-36903aebe3d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77b1d1fe-733a-4ab1-aec2-ee9f9e210744",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5c40e91-196f-4aba-bec4-ba7a7a3828c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3157fe0-6b9f-4e26-9839-4bae193e2299",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2870551b-6f29-4ef8-81ad-aee8f5a70fbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fecc416-ab6b-4133-94b6-9bceba7657f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b69eaba3-78e3-4dde-b512-2a839168dfa3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c5f6105-a51a-4400-b9f1-6d9037c52c9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "497765e4-b2aa-4fd3-bfd2-ed3a5a5f0a67"
            }
          }
        ]
      },
      {
        "id": "a8fc5444-c267-4254-85ba-1a8bad52982b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3851f406-0cd8-44bc-b155-7c35c3a84284",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaae3803-48c0-4b2c-9a93-d4ac0f6cce11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a2a45b4-a63d-461d-b40b-2094a59a4cd3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df22da7-4867-4031-ba6d-6beba303ebae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a37a500-d438-443e-999a-ddb5c7622c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94013a6b-3623-416b-86b4-b6b7185a240f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56889854-e51a-40b8-adf0-6373b65fdd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aeb81e-152b-4c9b-b1a1-d377d499e623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7f85e2-2383-4eba-b64f-b72d6619a1c0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a741a3-346a-48e7-8969-1c6948218fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef1f42b-49c7-40da-bbce-e89613e5842f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1263b7-cdd5-414d-9842-7fa6cdf11388",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b3f959-c978-4082-bb61-fed26cf76c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec6188a-fda8-4e91-ab20-6ef1d9742537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1da735-86a9-459f-b9b3-0cd4bd574f18",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d43dc9b-a4bf-4710-8722-b986bed04d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82705d5c-2c60-47fc-94f6-56b09e950cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd0e764-f808-43a4-8f75-7523185a988d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7210e2d8-ebfc-4fd9-86e9-9157204ab7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2d5e3b-0a3e-493e-9a80-06afd3cde807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0115d9d-7930-4a34-a7c4-6d44c778d121",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cf425a-aa5b-4840-b14c-b4d01c37aa88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781f7740-8d6d-42b7-b937-492d38f4b55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ffe418-287b-4973-96c0-f5ad9f5691d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dafa78-857b-4c71-ab6f-b7691e7d041a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd1e11-9f19-419d-ae58-e971b317c030",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b630b6-264f-47ba-bbbf-f46dd41cb02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7e2c33-c945-43f6-8da0-cab1c3bdc6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ad6e89-a744-4406-910d-d634e9cdc266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374b6dfc-3b0f-4af4-a323-0add1243ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af375aa0-411b-44fb-bad7-3277bdda80d6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4de9f72-4b5b-41c5-8871-b960c61ac682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37e7660-d0fb-41bf-a3e0-68cdca016b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efe9d1e-8a8c-47e7-8eba-0a38e45081d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cfe0d2-4289-4de9-a486-d1f443860f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cf173e-90fe-46fa-b2cc-f22da0b151b3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775d2ea7-81f1-426f-88d0-fae6299490ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cad3da-59d9-4c1a-aab8-f4f7c81ae4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae12a2c-8e1d-4c1e-802c-f0cabe1762f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81019caa-1cea-4bb5-ae41-515977cb05c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4720e156-02f0-4570-8f3c-8c77266240a5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead0cd2a-cffb-49c3-9149-ee17529d00ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c52505-5202-45b0-b492-06cf28886e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82feadf-53f7-4168-ba4e-3c18fa122eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdc9381-3312-4380-8aac-5025b84038fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be5131a-933d-45e8-b2d5-863a6ef81fa4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a474d688-a14c-405a-be75-2db8f514e907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873d8562-cbc5-47bb-9b0a-8eed001babf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b35e38c-77c5-44da-b97a-264f6ce0c5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cc5f08-9f36-4cf5-b594-efec98e55fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadca8d8-618b-4f60-9cf5-51cabcf13045",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9fa776-2ef0-4738-abbf-ec21d43355ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "355f35e4-f13f-4534-b10d-3d15a9b97683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6327e913-fa35-4b64-a04e-ed184514f724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2743f668-981a-4d11-a3b3-f080e39dce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0beb8c-1460-41af-8985-2c1e8a40dff2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76595c7-01f4-42f0-aa0e-d169e05afd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344dd13c-dc3b-4971-9ea6-234990ee69d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dbd98f-b184-4f28-87b5-89c7e896c549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652d5a2e-a922-407e-8aa3-32e778536a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a49cb6-4bf0-4a66-8b11-22c7ca5d0bd3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2a03a8-6a52-4cd1-9ab2-8f638c20726d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fb931c-c8d4-4e5a-a4f5-2649bcc05205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f634a6be-5fd7-41f5-a0a8-d078b5708b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b12f5f-bccd-4e38-abba-103f41435a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc525dd1-7913-4d5a-a004-139f42ef8027",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79539312-a4ca-4802-ab27-fe4438702d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "023dd2f6-c68c-4293-957a-78ff3f87843c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff9d4a6-8b39-4de2-a0af-dca6c7d385d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b99ce28-688a-43c4-8c20-f8acf9d50949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758e339b-443c-43d3-90fc-6f04f3cf56ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab93c56-9c81-49d2-8bad-e5d6632830ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e2133b-5e99-4743-808b-ec533b7d98cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3eaea4-3d46-464a-ad18-df3ccb0af3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacf22e5-7a12-44cb-b024-545c4675b9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aec8ac-6f6c-4dc8-bd7a-77314ea3b57b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d904fe7-0f82-4f64-bb67-3f07a01c6a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88548fc3-8a3d-47b5-9e14-413c6c8e2ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffdba12-c6cf-468b-9c32-a87468a1a755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acdbf13-62da-4bc0-873a-ce6a6c7e9084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818909d7-dae4-4314-aacf-76d2316138bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fed8232-8c1e-4ad9-aeb3-16b7b9a412ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c57f1b-d05c-4878-8f55-cbef08197713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95414dc6-9842-47c7-b26f-543f2fd6503b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f427e18a-23c3-4172-8dc3-177437ad3b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2c0df8-d0b2-4283-a69a-49ca951872e4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a53189-2c31-46f4-a948-c39aabc9563b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a5f1fe-7c33-4dd9-91ee-57c7f228fa14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b9ba05-21f7-47ca-b242-df70412b862e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96db8f2-01db-4b68-826e-e04da660dee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c6a9e8-f819-450e-8349-a76e76ca34bf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c82da50-29fa-4524-b703-5314c7ee9570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d889375-824b-432a-ad77-d5736aff1d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ece31e-251c-418d-b66d-5160f224c160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b4f441-2bd6-4c63-b2a7-1a60c3defca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55728ef5-cb16-42ae-8ba7-9bc003700939",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4117525c-a95f-4e54-840e-736ef180ebd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f965b306-d8d2-4580-99c2-b5c542ae2f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da5f5eb-a792-48cb-b081-da4b5e0182ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbe31f7-9150-4885-b6d9-c3f81baefcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d8c924-479e-437c-9dd4-def919e3786d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2665688-08fd-4c42-8d05-fa4a4e74b965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4955e66-1c10-4bd9-bb60-7bbdfa37360f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd69dc4-d1f1-4c33-a288-230a6b3af41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e548eff-66a6-4e1d-8877-488817dec8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01aafc05-432a-42f3-abfa-f5535719ac2b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ecf8a9-3960-4950-aa75-e2d7355f5947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f86600-0b6e-4a79-82b2-682d26fdd78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870e661c-f6e6-4f18-9983-c7f3720be30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57fc283-2b68-42db-9c36-5c6e7d603648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bee600f-690b-456d-aa0f-dbfdc12a39f0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989df98c-418b-4a1c-b340-f997c76b1171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3056345-3e7e-44ce-94ee-98b645f87b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89835e97-4a15-41dd-a8d7-502693ff7770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617216ae-57f7-4ec7-9672-e2ae0aaeccc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b45d5a-0c92-4d13-922e-9af549d24eeb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389fd145-bba4-4c72-8b06-91911bc47db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c69259-5efb-40f1-af89-2f920ead7fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a8b25d-8db4-47a6-9d32-5c457374008d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51bb2bb-d1b6-47f0-b09e-afb324675354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b91785c-3f9d-43e7-8014-37b00087810a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97b2dcc-080f-42dd-8ce7-d087f572f1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df3cb4e-2fc6-4997-9b85-d5f5f45a3de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e52ee-bd17-4b72-9f56-4fc7e95088ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6211e0-8804-4aa7-83e5-97a74e30e0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9157a79e-63ef-4da8-a1f8-8bdbdd4bf3e3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4317f2aa-83e1-4f53-ac60-945e87f1d747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20b0b64-8ccf-42c7-b0e7-ebab878c5052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e1ee91-317a-4c38-b00c-fb972b10297a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4df0c8-fcb1-4c28-8c19-143e04c6870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aa30ea-9971-42ed-9116-88b8b15ebf27",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a302053-5a41-4f38-89b4-2a4b2dee5e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2f496d-edf8-477e-96d7-35efa142e4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a4b7c8-8f1c-454b-a1bf-9c73c02f6f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54724cfa-eb99-4fdf-8997-b90971a0406d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd58bca3-75d3-4bb5-9724-f5d44fa80d58",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ee4a38-0f30-483f-8558-eaad0efe5e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11230434-ea78-4102-ba69-7edad8b05011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e9f18b-59ec-4a77-87e3-333b47924c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba814bf-b375-481d-a7b6-0245ce367771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226e87d0-7698-4650-93ee-06aacb3a929a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adcd6a0-e815-4d1d-aaed-9ae1b18cb9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b785c199-292b-4fba-a232-7ee692ae4aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76978886-3d52-453d-9007-430c544442ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b67aafc-751d-4c4b-961a-a07fb14bc0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af7c7fa-5b52-4ce1-aa9b-fd238f78f909",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475188f1-f25f-4b3b-a726-346d0e56d1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82ab870-752e-4752-8026-2251d9507cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6db649f-7084-453f-b2ca-aa835633fa4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3176be85-2bcc-467e-bc55-820c4365ac4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112258e6-0bc2-4f9d-9601-9241d07ad2a6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002521ff-5ec7-4b3b-88bc-7b4a79cfb9e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545dd3ec-abc9-4395-b58e-3797e90a6cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48217a9-4b23-4701-959b-628fe2fc6c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb9ea93-0fdb-4852-80cc-39c468e2c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1973eb9-caae-4cdf-8aca-f0cf0ae4b9fd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f5c7a6-9062-475b-89d6-6ff3f18606fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d641c042-df64-43be-a4d6-3555a8dbd279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ca6a4e-d3b6-4cf9-830f-297675557414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6f9624-a334-4044-96b3-24ad12675d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcbab3e-976c-45fb-8c3b-f6cacf78ec63",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb733678-1518-4d4f-b1d4-7b5bfd6c12ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a55adf-cfdf-41a6-8735-3379c8408dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c425ce-c219-43fb-bb49-3c89516cedbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ee2467-b73a-44e1-b661-80bf8901424e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db26fa5-bf37-4ec9-a8e1-a87c843013ac",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50c650c-d308-4abe-a049-7a9c62346f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09652a19-a523-49c3-83c1-ba4e99c44c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd665d68-af60-4f57-9265-4e42e075818a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b8416c-d26c-4bef-804f-93303431cb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532ac0fb-7c99-4229-b87e-efb91038f7b7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294dac48-19ff-4290-af24-d73095ac2517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c8dd26-70aa-42cc-a6d4-5e9dc6238362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72d46f6-f2a0-4469-a6dc-d6e6f4ee106e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80b8649-e857-4736-b7ef-2f5485f8a529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060ab07a-9d82-4307-b467-8cf45ec5d478",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7284302-4b55-4d87-8093-29daab300118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0572d071-bce7-4400-88f6-aafcb677aa0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5a5ad8-71ba-4b8c-9329-1d1e63ccbbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac07627-de3b-4d1d-b05e-2d38a56b6aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6adc19e-19f8-40b2-b5ea-20cb14b32bd4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2756448-7de9-46d0-a900-90a6a2203eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08908bf4-8cb6-49dc-a960-b907f46f3131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165ac316-1d5a-44de-8c0e-5dcd807b4511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4fc8f7-328f-4fa4-8a01-9a023bbdd6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a81a928-262a-431f-b3fa-33adb72f03bb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f75b042-e7d0-4fa3-9c8c-5edd0b3f9ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2ab896-6aed-4506-99d9-6078d6c2742b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8133a5-8708-405e-b822-e620335edc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef33ec47-4407-4da8-a5f3-fcc4ccfbd06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10865b12-a001-4140-aa56-ac05cbe79b21",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcaf60e-3def-414e-b908-882cd1f0179d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd47130-4e54-43a7-ada3-e0f0b25eb6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf4a5dc-2173-4a57-bb4a-b26a070c7977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8414c622-26f1-4683-add0-19b6adf617b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b9725b-546d-41a7-bc47-a2928cffb7f9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e3a88f-fcef-47ab-93bc-fa420cf568f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2af0605-a262-41c9-9782-28fdce2a56b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ec1dcb-87ca-4329-8ecd-918530bd8c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0df489-7d9f-41aa-87c1-6c99647d7d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0e253f-d0b3-49f6-a8ec-1bcc163dd2f1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d6df1c-387f-4bd8-a00e-9ade5d269c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ceb0c2-7466-43c5-ab56-6c5477aa46ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc9bcc4-ffad-4677-b7f0-a58daa5f701c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3988c52a-d66a-4a8c-b377-3e7dd32051d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0272d689-1255-426d-9d75-0cb711733ee6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fe1043-7807-4a90-9936-3c316d0816a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b83e5a3-b064-4510-b67d-a4e63a916ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4e5b21-91d1-4e22-9954-32dfe44754e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad6f764-43e9-4a12-b6dd-f36e71e33b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c0e9e4-3d94-48d1-8e6f-252c33bf7d2c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc61ca1-1886-4070-8763-31c864ec5fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18916ed6-a5ea-44af-a6ee-2a5d6d76c6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfbcf1a-02db-4534-88a5-f8c99beebb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a890fb6-b3f3-4aad-8c14-8670ab287252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4a6817-cbff-4279-b5c1-dc1e5752c008",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c505cdc0-d895-4a54-b60c-1585b7d942be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9b84f7-fba7-49ae-8f55-24c15e8d06fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f50feb-0fad-426a-a7a7-a97fa8e26bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056a8234-7d9d-45e3-8c89-3b7685852b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5089604-4582-42c8-a784-e59995723337",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3133c8c-f92f-48f2-ba8d-712f4e1097cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcde7a34-8066-43a4-831b-dd4d299738e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bb1c34-72de-4faa-acc3-0fb90f242b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542e2fe2-1899-40b4-831c-7dbead370ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc83f09f-b9fb-4b2f-bc4a-cce29370f516",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1cb26a-f166-406b-9c4c-b1285db31e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed72549-3e49-43d3-80d1-97b3c10cad4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c19887-69bd-4a5d-9d85-1500203d384e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b7664b-b0e9-405c-ad57-086734f9b8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a121fa-91ba-4d21-9f54-aa46893572c3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e7faff-6b97-4591-9a08-7fd8669886bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebc6d3f-7dce-47c6-a010-9e98190b490b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252d0a54-6567-49c2-9f16-cb97265a8b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132f2dfd-9afe-4df9-9ae0-95417c7f2658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad646003-69a1-4512-b0d9-ee81e28007b3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c7edd4-f504-4f6f-9538-c73013b1ddef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce49457d-9b6a-401f-808a-b11f2d251c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f20efe-c3d9-4662-9ced-4a4f563537f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be35fb32-3758-4408-a19a-6f2a2b40cb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104de9b5-cf73-4ff3-9a64-85c2e4f41fe6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a96bed3-2780-4540-85de-128014cd6078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867f9fb4-cde6-4857-8c79-859031497179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cba055c-53a0-4e21-959b-08207f5c1617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905dbdcc-bcb1-474f-9e51-648ab32d74e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e720e131-30d2-4e39-981a-c2e3686cca0a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2552c-7d74-403e-9e33-f2ffb08b4ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d57c92-1fa2-4d14-9291-c12d049628b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18783c8f-04e9-45dd-944b-ac9584367fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260bd153-3ea8-4b51-855c-a59942ed82da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0858a2c3-6488-44b9-b66f-422649cc49ec",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dce933b-348f-4804-8614-b906120f7276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd46818-5a58-4108-9323-b1b2b0c43896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510a4741-c3c0-4297-9ca5-0cea2697ea88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1451545-a637-4e97-b666-7932d1034741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cbf732-7f09-4d6d-aae0-3a486742417b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd294e9-e242-4f2a-9658-7c17e45fc2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba31b88-95db-49c4-b76c-cfca130a6639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d15e977-e4a8-4797-be17-16585d98f799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5af686-d208-4bea-8af4-478b0c4516ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b442dbe-891e-4b01-acdf-b61b4d041e60",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa4180b-0528-4a58-8a41-480fd24e2def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f344f3f2-a82a-4c48-a4d8-37bc780e91e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b1bfd5-f5cb-46a3-9492-85586709330f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dfc1c5-3103-4b5b-b454-67f55e473ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffa2f2a-300b-465b-a3d5-d4a2c9a2029a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fd2a9f-a358-4da1-a3de-27e71fd2e927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e038b26-080c-46b9-94c2-c490780177cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39715e57-0eae-4675-9f82-cd3f4df7fc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fb0045-89da-4c44-9160-7e5e70d2f7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed0c991-aa3e-45a7-a3e6-271bbda318a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae101034-a93d-40cb-96b2-602a0d36996e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b752a0-18c8-4dfd-aebc-dd56c60d0c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352f4517-eef8-4f30-8135-32353d402871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5669b41a-66f6-4975-ba09-b4468e7cfcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5998501-7855-4c94-b924-be0be9d324f8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df94c27-e544-4d16-aeec-e71c901b9093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e92c7b-003e-4a14-8083-bf044f0206c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7326e5dc-3585-4010-9196-e59b9edc8804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654b27b4-1939-4ff8-8479-4761a7b5ae7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79755de-062f-46ad-8a9e-dd669dd994df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9014cc7-2a24-49d6-88e0-1e383706ebdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86340591-e34f-4d08-9a8e-9459f45a960a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3423589d-5789-4426-a774-5b09450a8547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93edab93-f362-4356-b5a8-d84f84e6b1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bed8c10-d556-44d6-8cb0-8fa854eb1cf8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4811a63-78ad-493b-9fb0-27059ccb3706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d61b30-5727-476e-ae6b-a2a31d02d949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66eaa19a-d2b0-47dd-a367-0c5bac7d2ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4ba661-fddf-4342-a547-58cfac8270fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cd0967-794a-42fe-b401-da016e54ebce",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecf4d3f-a4d2-487f-bdff-952bd13d03ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9308c6a9-95c7-4f8e-8749-2113a649b27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb4fb28-59e7-4b65-a1f9-2f81f6f66698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9da400b-96a6-4a02-b3d2-526e612b7719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0845de7c-b55b-4bf7-87ef-54787471604d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a26782-5161-42c6-a07f-b7bf8eb09684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca682991-b989-4b22-b479-9b6212221524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35fb982-89cd-46f4-a6c2-81b6250ed36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0ddf5e-5ab1-400d-bf0b-1cdbbb86bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f359a6-c713-413d-82cd-5cb954c0d712",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d9f28a-4715-4e0c-8897-60d71920ed8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998431bc-974b-4a84-89d9-daf01693ea82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33937bf1-c803-48d0-838c-a08ad83eecc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1802447a-06c1-463a-9c48-9e047113860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e976ea2b-7f0b-452e-8927-f1fab728ebc6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b4d687-6b14-4bf6-a880-25e5def49637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd9b83e-7944-4a32-ae97-6d4f0d17c2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38b632b-3708-48d4-8b99-3a24ba3ffd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ffce1f-204f-4a91-9d7c-9afbf1b22535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686f6eed-5bed-4237-9db3-c8ade32e50c9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066399e9-af38-485a-be8a-fad63f277cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98bca44-18a7-463b-b563-a19c2953f20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8745fa-0e40-414a-9472-99f9e35dc9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64355502-c645-4871-9e96-fc085cfc1d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b32146e-d6db-4268-bc13-eebd30ec5d15",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d857d5f3-79a4-41bf-b2f7-59d512f21041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283e3d4b-e64e-4a76-9397-f60e2a5111d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5365110-8140-42d3-93af-74c81fdad80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500e2866-3dde-4c6a-b47c-12bf80374939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380e0aa3-9874-4f93-aee7-e2063c02a72d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a63a3c-bcf0-40fa-b111-3240358231b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c79cf0-152c-465d-8d85-1863c256c13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d48d6f5-2ed3-4518-a860-e5ec783350bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834975c9-7b9d-4a4b-b67d-319027967c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920d1801-968f-4031-aa22-ece226700ec0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276ca4f0-3507-4418-84bc-8f99ad0cca75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36063400-e8ae-4576-8e77-2b2c6cf42f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b817848c-8341-4b7a-b5f2-d25295d87911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03e3698-bf44-4132-b819-3adc04741f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff845d-b2c0-4a2d-8a47-f1580b13d1a9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ebd5f6-d05f-44cb-a102-fdd2b6556579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c42618a-de75-40fb-8989-f63e9aedbf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ede0552-ff13-4789-960e-663adbc3bef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73e6e7a-2f97-47ee-a78a-9154ad7a9284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2d9a76-4a30-4089-b098-bd848b67535b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6a1dd2-7b8a-46b8-b0e6-816a097a2c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df305c9e-afda-40dd-9e77-6534a705a6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fab44da-2e3f-4b43-8097-2b3259f2ba0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b658cb6-f4d2-425a-86e5-8f3ada3c5c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e3e067-e8c5-4d97-8a57-2efdcd036115",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede1bff1-56de-48d6-aca0-4f969dd7a464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aed92c6-1d85-465b-9ec5-0a7be6142c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8638242-2057-4eed-9092-3e290053ab2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7214a431-b1c6-4f72-b157-dba96eda51e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c406617-8f18-4469-b1ce-0381296dedbe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a2c8c3-4ece-435a-95b7-e1e39769760e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94bbeb1f-0dc1-4892-9136-3c2845fce111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8367b8f0-1617-43c7-bf49-d39a92ef0e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b6ab1c-a708-4d63-9203-b0e70e1883de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a129db64-3ef8-4699-a7a1-d90fcaf46ec0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3f1323-571b-4bc3-b201-7cc734161bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0808ed64-abb6-4771-aeb5-e77942a8b1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2476907-40c7-41f8-a27a-6d50628f9372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c907230c-9f9f-406e-8866-240508b306d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27738091-b690-4670-a0a5-1f2f212a5664",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a1d051-fe63-4bb8-a3f0-cd91f7e7c01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7749c18c-dd49-40a0-ba1c-ab6377e32b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32828647-8d8c-438d-96fd-f44c65a31dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1043a467-b601-4c92-991d-180de308f1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc4fb5a-9710-42a3-808d-1c4dde8985ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5084e7-2f83-4a39-821c-4103bbd05fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3f5b66-efe0-43e8-b0cd-e228f2690255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cfc155-884e-4378-b3d5-bc9f8d9ee6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85279b8f-446d-45fe-8316-c2a850c0c0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d51b563-2eb6-4601-888b-2d2fcbd7b4d1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24fbf72-4ed8-415c-b0a0-ad58c4e59d23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e4804d-b203-42c9-9d64-2a2401704dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3ea3e1-db07-4d10-97fe-0f2c86ee1fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cb708f-fb68-4f25-a87e-454e9420a828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7348bf6d-ac58-4eb6-83f3-c795045d4e58",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd55d1d-9ee7-4d2e-9606-781aab515bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd15c345-e752-4f37-b742-df92a58d6108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1e3da5-f6b6-41bd-8042-ad57b72b2132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79db4d93-acfb-4a49-a351-362fe4cf50b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d03f26-d7e5-4742-ab2c-5dd41c7a5222",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d1f6cb-c32c-42f2-b087-fc20f9e8c846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af28ffb-ef80-4eb0-a374-82e14bb97dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3f70f1-3407-44b7-8969-2368facfb2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e27704b-d21b-4b72-8f47-6b758c09ccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d4b55a-96cc-4b65-bc7e-9fdadb189bbb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1730f29d-3c02-43e0-a978-f309de349b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b45540f1-741c-408b-9cac-523d93d95f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75a461d-5589-40d5-beed-5729ec7ab4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c31270-3e5e-4e3d-aa16-93edf599d652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2d31dd-4f26-4bfe-b2a6-578926d1a70e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9611039-d939-4aae-b218-7ea7225142e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3545fe4-7e0f-443c-a98f-4c0c7693f7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be1eceb-fb14-4f37-8203-0f49496e59b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbaa0e2-877b-4f24-b77a-e4e421e2b813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36117ab1-99b3-4283-9a8b-d11167bcffa7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb5eb68-abbe-4810-a233-c6fb6e489623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad11ddb-7430-490b-b748-66a26cdbf481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbab5a64-49b6-4522-80f4-eb94c2832a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dd9c1a-a63a-49db-90c1-e1a580cfdf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6665e0f1-ccc3-4b2d-a2c5-390af7737c37",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b584ae5f-f75d-41a0-b038-24a87901306e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5dedf8-7863-4c14-9020-98fbf2385f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8e33fd-418c-464c-bffe-ad503950ba85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ea245c-1cb5-4332-a021-3e1214c00c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2311dce-3874-4dd0-95ab-1c9e4b86d531",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52807c28-e9d5-4607-bb48-f0f8e475c1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85fa68a3-e01d-4fad-b96f-d610a8f47154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa08201d-74e5-4932-b68b-00cec4a0d8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c801c461-1efd-433b-933e-1f184951532b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1151f68-f81c-4143-b08d-de90c8f6d370",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6242b3f-d388-45f8-a4ee-8339c8a567df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481b45c2-7ffe-4892-b569-2e238f90dc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2058dfc0-2aa1-470b-9b50-957cf20f1900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e51765-d855-4a8e-81f8-8c2abfb5d6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bf47a4-134f-4af5-9017-75d52978be36",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964fa3d4-57aa-4e6f-9900-38b8a4a5bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e47970c-ddbf-444c-9375-223a8eaf65e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b3d39a-8758-4f9a-ac04-5bcfa30d26a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f326ed76-c6f2-4583-8f8d-ee95e1d42403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7ebef9-8ad3-4880-9dea-2be07f399330",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9240070f-052a-4807-96fa-40712d0fd36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3440237e-3f16-421d-b290-38b4c633323e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b56bc51-cc2d-4ae6-9abe-c6d953f8b8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5373d5d5-fa0d-4d1e-a2ac-6baa1d93f40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b81a33c-f0ea-4c63-91bb-93890d85f438",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86761ba-1f55-41ac-8ef1-d7344b9a4506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c968dda9-20bc-4369-baf6-60d553f73a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc145db7-5a2c-471a-bb8e-f3e94deb97c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6933376-9292-4ba1-b988-88679002939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a833791d-931b-4187-85c4-5affe088888b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210fe45f-ca96-4048-b82a-9bda57af00e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a294af-9d10-49d2-a6c7-dc5b6cba87ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f732fb-f457-43e0-9949-dd912bae8220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5027d2eb-238b-4e12-8a94-e76970d7059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd48d85-8c45-4c47-8379-e784a5a86853",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc903db-7c14-4698-bf3e-3c1bab5d23bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a3a164-e298-42c3-8fb8-8930eddc2e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebf14e0-cbe6-4d7f-959a-c59138568f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f728fd4-6ce7-4de6-b1d8-d61909df72c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a015b11c-dbbb-4a9b-a6a3-ed6218d77ed5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f965361-6d3c-43d0-8a43-bff31ddff93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6949d86-e06d-4720-80f6-f144af0bebc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ec758-b756-4d3c-82a1-b2e5aaf7a625",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ce0d1f-dba8-4551-943b-06f3b7e01543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea6222f-015f-4d10-803a-de28b81db6a9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817f75cc-de0a-48e8-841a-cda6e0446b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "482454c6-a9a9-4c91-bbf0-a9069de3f4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ae2a1-cf93-43c3-aa20-38c2758b74bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3019f2f0-7965-4427-9b13-484fe6da84f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ffcfd0-7bb1-49b5-b9f7-251d7d03fa91",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e95018b-3e45-4d25-a296-9ef47f77890f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e5a167-87b3-41f1-baf3-1a2fff98a89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3426cc72-eac8-4189-bf2a-39acd413672e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb919bc-4be8-4889-a4dd-a1c484204083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50bb855-570d-4afe-b774-80244740b76c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ee8f4b-5c10-44a2-b98f-4a635798a857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5aa145-05a9-4a85-9af0-c5e1b782e32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9ab1c8-2cbd-41b4-a0da-5e8fe8021131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6da14a-ffb8-40a1-8bad-f4c2be368b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487653bc-cc6d-4100-8980-86785083e2c5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce747066-7202-4927-9970-356a3aade2cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dadd6d4-db83-488c-b2e2-a9391f4c833f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edc922a-3c3f-4c84-a9ba-8b0aacbfb050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c40052e-659e-465b-8918-b3c6b77ae113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e105237-94e1-413d-ac8a-63fff8c994e2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0458b521-5143-491e-8d5f-e51d26258ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82095c72-6206-45b1-8f17-58ef861496ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993d36d0-013f-4d95-a65f-949e7549e687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e792fba4-ba23-405b-9d45-2693879d9305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021a5d92-de93-4b76-921c-351af9cc40e4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9f4f01-edc4-48a7-b853-d340459ba09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cad755a-3035-4134-8772-cd7139faa8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9c985b-1baf-4dae-80ac-9c2d1e1b5970",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b070cf-0416-4c4d-90dc-4ee229ad92c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdab934c-0150-401f-a6d0-5b187ea43b09",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eea7e44-4196-421e-8664-ca312b789549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37b4c06-cc9d-422e-9fe2-481e8780c250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3328038-ae68-4137-8484-a366277ec6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce71d00-3134-443a-a146-e1eb293434ce"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "515210a5-9139-44b5-bce9-a23fa78c61b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36703d89-bc67-403c-b867-d9ab8f0b1d34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5306d6c3-d553-4a13-adb8-dbae7239151d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2b4e8ad-e29a-44d7-9a7d-c84c042d7e55"
                    }
                  }
                ]
              },
              {
                "id": "f6dd3dbd-193d-4655-8b0e-e5850bde667e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f91abdfc-9466-4583-b9ed-1195454aeaea",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c743245c-4fd7-4efa-a042-326bea6eae11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b91e86da-e91d-4b3e-8cb8-88ba44e914fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d31f60-5312-4565-9af7-b4460da1ed82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5169ef07-dc4e-4001-a7be-0dd647e5e6de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a61413a4-d4f4-4e44-a167-56158058b9e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b96462a-c18f-4a62-bf0f-c45202e4da35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e79180-9439-4700-8f50-fc0f567958ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9a2f933-96fc-4583-8766-84240440e66c"
                    }
                  }
                ]
              },
              {
                "id": "6fb83ef9-6786-4942-8b16-c72a08cba22a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e608dccb-8441-42bf-a462-a28e799c0f23",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf209a9-6218-4ebc-a248-f1463f7d918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9501606e-f8f4-45e8-a951-0156e749d113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad59764c-111c-4354-9a64-14f251ca2cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb3f17d-709c-4d26-a04c-d6ca4b31b955"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "db749f79-9d11-408d-bdf7-80cb17c0b202",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1db51afc-43eb-4185-9409-9ac6083fabfb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cdf2b73-6c8e-45d9-9d14-08d8993b96b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "de47ea20-dbd4-4d5f-89bb-b8254b6fad86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbe3f429-5f71-46f9-9d1d-bd266f970f8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "151bbadb-776a-44c7-b90e-46673735241e"
                    }
                  }
                ]
              },
              {
                "id": "a84612f3-d520-468e-bc05-5e2aae672bfd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5254196e-6233-4b78-bede-97e2b30a18c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32ae1295-4721-4ff0-81aa-11729c9123e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "340f4ead-8526-49a0-a9b8-531b32db9e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65bbeafa-d5a0-4ae2-99f2-0245cff88709"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b661e4aa-ae56-477b-8087-4773c7365ce3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1a58eb18-b82e-4820-8422-b39e85e45a10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75f87449-dd05-4e26-85ad-7aa295e6c432",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e42820f9-0715-4886-bd4b-82570ca40c70"
            }
          }
        ]
      },
      {
        "id": "efe3a2d6-d866-4e33-bd09-fa5122e388ec",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ad52d917-608f-4121-94f8-62a144ea344e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cd755c1-f501-4b9e-aff0-a4d86906ed60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89cbca3e-b53b-454b-b3f9-60128973c92b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e925138-701d-4361-aa00-69471e116d6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9595606b-6073-4465-bb1c-47451fc53dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3e8117-97a4-40c3-b91a-3c02c4ba2a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36d86e93-69d7-4f6b-9bc5-581b67d4cd0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "173b63e9-5519-479f-b6a4-b4e5a297f496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5a39d1d-5db6-4d5a-b9bc-48382bac1e87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be094787-022a-4201-b106-8974812ca8a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7ca0c5-13b3-4792-970e-9fbfc7f96721"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61790183-28c3-4996-b2ac-ebfdfcc9fb63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d76fb136-df0d-4765-906c-3ac918e59413"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07ce071e-e996-4259-a668-1f233a69aea9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f19a7b8-9c74-4325-a9f8-177b79283064"
            }
          }
        ]
      },
      {
        "id": "caa6169e-e4f1-4a9f-acc4-be7e0db5e959",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "658e5ae3-222c-40e7-af42-f046a30c4e55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6dc51a7-e86c-4b60-a56a-e8f2fb1a53aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "375479dc-53a1-453e-8a96-9f7f5d8a16ef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b72c87-e8da-43cb-9bde-3b7baeda23fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ffc22d-1429-475d-85b5-3b7eebd1450f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5abbfe-3aa9-473d-8947-9af4bac54429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "007dd881-1fc4-4e0a-b0ed-f9a50bf221c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd73de9a-e49a-4ab0-b147-d75d6dbb79f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fd98b4b-1159-4b97-a786-a6d9c3145c3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af5c31bc-efc0-46d8-9ba2-d477af64e72e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d24b04b-bafd-4944-96b8-5040971efd48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d7b78ca-ad3a-4ca3-bb6d-8332349f2ecd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "daa074cc-8291-4da1-9598-893763ed6403"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a80f50d8-67a2-430e-9bc6-a1853da861a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6686e0c8-8382-4a90-8bee-4107b6329512"
            }
          }
        ]
      },
      {
        "id": "dda3fa3a-e040-428c-a535-71dbae8d6655",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3298eb68-47d1-40d6-8e4f-d0358ff63be0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2acaf7f4-9e14-40ab-9ee3-c9dac15ea48d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e1c9f43-790e-4b49-817a-5518027e1a7e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e7c593-6273-4245-90ee-5e7892cdc29d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d027af32-5c0a-4810-9a44-1d32fe5af527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d60619-d1d8-46ae-8574-89da0e967d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9417eb9-b639-4a37-a299-a4782eabf18c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "671fc93b-83ca-4b50-8d6d-7c06d51570c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c930f2e-6264-405a-a2ed-92739c80ff48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf73c14b-07fa-462f-be08-9b5347716776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eba5d9c1-bfd0-4682-9348-9d24224acfa9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22b85981-b088-4f86-9e92-3cf5e85d8076",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "693e12b3-3537-4b22-92fb-0a4589ade9a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e88822ab-8eb8-49b2-8cba-2a26c4610257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c29c6b1-cad6-416e-9f2a-edec8f2abfa3"
            }
          }
        ]
      },
      {
        "id": "e2df089d-dc2a-4c0d-8a51-0580e655e561",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de81d744-e6dd-4fb3-885b-8e467cbdd07a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d02e8df-3652-42ba-9e3b-04d1fff59805",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e9e5668-ce7e-4faf-a028-9a9c76dcfc88",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06671bd9-9c09-4e99-8ab7-b0dc41b9ded1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97dc1433-7235-4480-9cba-766dac812a3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 96.76587301587301,
      "responseMin": 4,
      "responseMax": 10139,
      "responseSd": 710.2863473167395,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727916313226,
      "completed": 1727916346603
    },
    "executions": [
      {
        "id": "872695cb-3de6-46e9-87d7-25a15469815d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a8a4105c-d9e3-47b4-8f1b-e4380d022319",
          "httpRequestId": "aa27e0bc-ce38-429b-893d-45f9cd9d35f3"
        },
        "item": {
          "id": "872695cb-3de6-46e9-87d7-25a15469815d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bd59cabd-0e04-4e66-b391-de665e6b6513",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "787fad9c-0539-4411-b3c6-75e995e9cb72",
        "cursor": {
          "ref": "ea02be6b-699c-4144-a1a3-4a3714c8f03e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "15aef322-87d5-470f-8f6b-d81fac4596fc"
        },
        "item": {
          "id": "787fad9c-0539-4411-b3c6-75e995e9cb72",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ae2cd4fe-65eb-4fad-8a81-3571c1e22b32",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d34eee54-e6df-4c44-8227-bc6c2475426c",
        "cursor": {
          "ref": "4c70eb44-e7c2-4090-b2eb-1e56840b7403",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c8400c52-35f7-4285-96f2-11bab512d03b"
        },
        "item": {
          "id": "d34eee54-e6df-4c44-8227-bc6c2475426c",
          "name": "did_json"
        },
        "response": {
          "id": "ec6e7973-33a0-4520-9d8a-0cbc8d520c49",
          "status": "OK",
          "code": 200,
          "responseTime": 201,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a1ef82-111f-41eb-8f2f-8e7be42cd1c3",
        "cursor": {
          "ref": "b5055d78-40da-4391-b06c-a9adf66983df",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b41dc1ed-2b0b-48d9-9d7a-5bdb3baa7ad8"
        },
        "item": {
          "id": "a7a1ef82-111f-41eb-8f2f-8e7be42cd1c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "fa39c148-e973-4208-acf5-2e533fa4a3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a1ef82-111f-41eb-8f2f-8e7be42cd1c3",
        "cursor": {
          "ref": "b5055d78-40da-4391-b06c-a9adf66983df",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b41dc1ed-2b0b-48d9-9d7a-5bdb3baa7ad8"
        },
        "item": {
          "id": "a7a1ef82-111f-41eb-8f2f-8e7be42cd1c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "fa39c148-e973-4208-acf5-2e533fa4a3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b490d1-8084-4b01-b312-210a0770284c",
        "cursor": {
          "ref": "3f2cb70f-affd-41d3-a0a7-f09347a3cdfe",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "49eab3ae-a9fb-4dbb-b377-ece2bf4c067f"
        },
        "item": {
          "id": "41b490d1-8084-4b01-b312-210a0770284c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ec4462db-369b-44b8-9794-54478a71a59a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 19,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4ac4fb-38b0-4e56-91ae-940444427bbd",
        "cursor": {
          "ref": "97c29f81-19ac-44f9-81ea-8a837f99f0c0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b8c43b2b-9bc9-4161-b6c8-ed65888eed34"
        },
        "item": {
          "id": "7f4ac4fb-38b0-4e56-91ae-940444427bbd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4842df65-2bf4-4df9-9f3a-efe1f7861fe9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cef2058-aaed-4ab3-9d4d-8bfb3536609e",
        "cursor": {
          "ref": "e1917288-c37b-4dfc-b642-7315176b4545",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b2b70712-4cd7-4d94-bcab-67edc91e787a"
        },
        "item": {
          "id": "8cef2058-aaed-4ab3-9d4d-8bfb3536609e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3a946f03-8d49-40ec-b4b4-c47c1f5de13f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaafa44-a9aa-4d01-8c88-3924c65177d5",
        "cursor": {
          "ref": "565877e0-809c-4a8e-8830-d6b3d5066a10",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c30af58f-a6d0-4e77-9782-4c9abbdc5c48"
        },
        "item": {
          "id": "8aaafa44-a9aa-4d01-8c88-3924c65177d5",
          "name": "identifiers"
        },
        "response": {
          "id": "0de1130c-f3f5-42db-b5dd-7288ea5c2a48",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d0b7c-2773-4df3-86bd-a58641696226",
        "cursor": {
          "ref": "dce82f98-cf6d-4a09-9505-60a1d42540a0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9bc8fc68-dc09-4a82-89cb-e416d3568d22"
        },
        "item": {
          "id": "e39d0b7c-2773-4df3-86bd-a58641696226",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bf007acc-77d0-4264-8483-3b2fae1a784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05cf7ad-70bb-4fd1-b82a-bfc64a358a22",
        "cursor": {
          "ref": "ac2e9a60-70fb-4d9c-bc8b-7d87042fb3a5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bccc33ae-b587-4123-8648-fd3886a8ec80"
        },
        "item": {
          "id": "b05cf7ad-70bb-4fd1-b82a-bfc64a358a22",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "274d15d9-f09f-473d-a18c-3fed31aabe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f653e8-f708-476d-a35f-48354c9a6a65",
        "cursor": {
          "ref": "dec4c5f3-371e-4eb0-aa11-297d2fd3a8b9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "304b9cb8-83a7-4136-9e5a-6284706f65e6"
        },
        "item": {
          "id": "c6f653e8-f708-476d-a35f-48354c9a6a65",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2f61e112-0675-4f96-84f4-dac8a07829e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27147a49-f5c8-4ffd-8701-4c9f84e2fb29",
        "cursor": {
          "ref": "be26b29a-c9fb-4bcc-8ef8-b5cb583c1d7d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3e3de91a-4634-4194-aaa5-6d50c8746b1f"
        },
        "item": {
          "id": "27147a49-f5c8-4ffd-8701-4c9f84e2fb29",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "574055bc-4fce-4100-a46e-945533694a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a680f3-e8b4-4b5f-a5fd-f302c0ef9fb0",
        "cursor": {
          "ref": "a55a12b7-c735-4901-9bbd-cc5fdecb4483",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f981697b-6371-422b-897d-0c6fe5e53baa"
        },
        "item": {
          "id": "33a680f3-e8b4-4b5f-a5fd-f302c0ef9fb0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a42c71e7-269b-4df7-9dbe-4f48f401aa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b771db-7b97-4898-804f-4bfb6e541827",
        "cursor": {
          "ref": "64b75bae-ed31-4aaa-8770-07dc020068db",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ab7513b3-41c5-4101-8ebd-9f8be6d29723"
        },
        "item": {
          "id": "60b771db-7b97-4898-804f-4bfb6e541827",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "64afff4b-d6df-4f52-b679-527f30e9c4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71111f6-73cc-41b0-ba9a-265801fc5d69",
        "cursor": {
          "ref": "840b6cf4-edb1-49a8-bab1-8ff8aefdacb8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "875a2fc4-2879-478b-8419-467416bc17d6"
        },
        "item": {
          "id": "f71111f6-73cc-41b0-ba9a-265801fc5d69",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c0dfaf16-0acc-4842-8177-b8a67ada3d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c77e4e-63e5-47a8-a277-50fc83dfa656",
        "cursor": {
          "ref": "5aad3de9-5be6-4123-87fa-5fe09924cec5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "02a47a54-dd51-4090-bcae-8755f30fe475"
        },
        "item": {
          "id": "e1c77e4e-63e5-47a8-a277-50fc83dfa656",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c61f687f-a924-475e-86d3-011d1e5933ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c4ce08-6d17-44ca-b8e3-4f0dcba799d4",
        "cursor": {
          "ref": "13f58ed5-9feb-4a35-8583-72a5ef17938c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "872a3c53-5320-409a-9767-deac2f0c88a3"
        },
        "item": {
          "id": "84c4ce08-6d17-44ca-b8e3-4f0dcba799d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "503442fc-8250-4777-b02c-54425d2e60bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d52e1-256e-4111-b3e8-025310f036ea",
        "cursor": {
          "ref": "512469ad-7d0d-4e9e-b4b8-1c173e63f77d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "629468fc-682b-4be9-b36a-5f87ce468004"
        },
        "item": {
          "id": "e28d52e1-256e-4111-b3e8-025310f036ea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4c27149f-9dd1-4072-b234-f8a28e8f31ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec8adc9-286e-4e85-9e60-28b50cdb4e94",
        "cursor": {
          "ref": "64d806ba-7aac-46ae-b2f9-ed2b24756d2d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7eebdbf9-f8a5-46a2-b936-c0a139b9c499"
        },
        "item": {
          "id": "3ec8adc9-286e-4e85-9e60-28b50cdb4e94",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "342b6e1e-3111-4654-b7fe-89df8e55532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004adb99-382f-4897-baf3-ffc45526e65b",
        "cursor": {
          "ref": "a0cdc4e8-d571-4938-a811-d395b299d0b5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9eceab73-9d52-46c8-8123-568979cc9fe3"
        },
        "item": {
          "id": "004adb99-382f-4897-baf3-ffc45526e65b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d88290f-ca12-4075-9847-7e0e197d857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1192fb-6410-421c-b493-844a8ded4b00",
        "cursor": {
          "ref": "951b74ea-3765-4b9e-ad42-ce18ae88957e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "86b11031-9426-4c49-9640-49545172ac72"
        },
        "item": {
          "id": "ec1192fb-6410-421c-b493-844a8ded4b00",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e7b3812f-5781-4abd-9e7f-637194c29d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b757ee8-ba0d-46c7-90f7-23ada9bc54df",
        "cursor": {
          "ref": "f7c26f4c-c602-430e-83e2-2d843c0ff368",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "806f26d6-7144-4bd7-a3b9-09633fccfb41"
        },
        "item": {
          "id": "2b757ee8-ba0d-46c7-90f7-23ada9bc54df",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fdcc214d-aad0-4ac8-9909-6f5d8ad6bbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37194441-7c7f-4cd1-a968-4710de80cf02",
        "cursor": {
          "ref": "efc61e0a-da20-4e89-8afa-d4a45d72b6ba",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dfab69c0-bae3-4a9a-9b63-e50d3b5649d2"
        },
        "item": {
          "id": "37194441-7c7f-4cd1-a968-4710de80cf02",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "68a2e6c2-7e07-4208-a8cf-f4b477acb713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972abd7f-bbbd-492f-b14f-24c1196665e9",
        "cursor": {
          "ref": "ab1dc1fc-9384-474e-a56d-ae97381b1af9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ea1e9162-8794-4881-b49b-519e059b3805"
        },
        "item": {
          "id": "972abd7f-bbbd-492f-b14f-24c1196665e9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9062e0b1-684a-40d3-8d8e-f92ade22bee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a148a905-6cc9-4402-b7e6-66cc31d996d2",
        "cursor": {
          "ref": "0a3f1efa-18c2-4b26-82f1-90476e9bc2fc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5403a641-e44a-4f84-a289-df58dbbdf2d5"
        },
        "item": {
          "id": "a148a905-6cc9-4402-b7e6-66cc31d996d2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac0f57b7-1773-4e61-a6f7-bc17307e6880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ac6ec0-71c5-4551-b120-ae7709645b44",
        "cursor": {
          "ref": "024b380f-2ab5-4915-8145-a4d7d91fdc4a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ac40cbda-2058-458e-b3f7-ff74c9e80fee"
        },
        "item": {
          "id": "a4ac6ec0-71c5-4551-b120-ae7709645b44",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af4cd0af-f42e-4d02-ac69-110d85f06112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f14563c-2e36-4d3f-bb5c-91628cab1efb",
        "cursor": {
          "ref": "1ca6a000-5ea9-4b93-ac1b-36b98fe556c7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3dda85b3-f8fa-4da7-9ce5-a296ac1acf8f"
        },
        "item": {
          "id": "0f14563c-2e36-4d3f-bb5c-91628cab1efb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "054299e4-f3c6-4156-929a-474804be0b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b38a8d-5789-4353-9edd-1636bcac2c40",
        "cursor": {
          "ref": "ab718734-8e37-4b22-a035-b5a2ee948891",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3777cf79-d9f5-4f1f-aee0-8a1cbbdf23e1"
        },
        "item": {
          "id": "59b38a8d-5789-4353-9edd-1636bcac2c40",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1db7f26f-25bd-4886-8435-c0ffeac0e3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcb6b3b-5cde-4955-9412-0ed358dd839b",
        "cursor": {
          "ref": "2a51c397-0b51-4e40-8a0c-e315fa5c5f12",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "88d46457-c750-425e-9ae4-08a068e7f0a6"
        },
        "item": {
          "id": "bfcb6b3b-5cde-4955-9412-0ed358dd839b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7bdcdf89-1aa3-43ef-9b04-7588b0d857a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a4863e-4d5b-4071-a916-168c981b78f7",
        "cursor": {
          "ref": "4c995263-8b8d-44ed-8cd4-ed580056dbaa",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5c464400-15e5-4fba-aa0c-07104b737515"
        },
        "item": {
          "id": "50a4863e-4d5b-4071-a916-168c981b78f7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8fe09d90-a42f-46df-b80e-a169a40af785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854e97c9-4e1c-4e5b-af77-05a3198e227b",
        "cursor": {
          "ref": "8ded7f56-d3ec-4acf-bb97-5a3891c1ea64",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8a5306d-0d4e-471f-ba71-afee773b2b9a"
        },
        "item": {
          "id": "854e97c9-4e1c-4e5b-af77-05a3198e227b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5b76720b-4c91-4f4b-98ab-097042df585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c9c3c5-3ff4-4bef-a5fd-9e2a9e3eeb1c",
        "cursor": {
          "ref": "bd85eacd-e33a-47fd-b498-e78c05ea7f30",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d694fa90-8337-47e5-8770-925fa06be6ba"
        },
        "item": {
          "id": "f3c9c3c5-3ff4-4bef-a5fd-9e2a9e3eeb1c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "84816141-e73b-42a1-806f-c1ba66817ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025bfafd-2cd1-4928-a136-db674cd700bf",
        "cursor": {
          "ref": "8060b035-b97b-4320-978c-20cd1bd35523",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "20ac0950-d22d-4541-b2e1-fd167bc583ef"
        },
        "item": {
          "id": "025bfafd-2cd1-4928-a136-db674cd700bf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "91a5db03-b352-4284-a0d3-9b1f9d0e199f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1774f44a-affb-4c78-89e3-2cb12ffec953",
        "cursor": {
          "ref": "ec7c2ccd-0be4-4cef-b4c3-be185cc1f816",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ba67e7b5-94b5-4aa5-af90-e7f4e9730c26"
        },
        "item": {
          "id": "1774f44a-affb-4c78-89e3-2cb12ffec953",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b9ceac74-a541-426b-8142-8de294a8d75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f1ab1b-0fde-4a24-9bba-c7cc79477337",
        "cursor": {
          "ref": "b539ef88-ffdf-4633-8033-299f18866f80",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8c5ff6e4-406a-4b74-83c3-0c02ce8d16e1"
        },
        "item": {
          "id": "c5f1ab1b-0fde-4a24-9bba-c7cc79477337",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6cf0d1bc-86ce-4d97-95b1-e3bf2beee38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c723acd-b63a-431c-959d-ae5320616ab6",
        "cursor": {
          "ref": "21a5e7de-d163-4c77-93ef-22431be0ed59",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "69fbd0fd-802b-4003-9c75-628f431fb01d"
        },
        "item": {
          "id": "4c723acd-b63a-431c-959d-ae5320616ab6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a08543f-e995-4d78-a8dc-0624b54b47be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9935097a-d7d9-44c7-8232-4ad1ae0bf235",
        "cursor": {
          "ref": "1843ce9b-9ee5-40e7-811a-c6af8b83024d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "322e72bd-d960-4fa5-bdc9-ed18f9db3890"
        },
        "item": {
          "id": "9935097a-d7d9-44c7-8232-4ad1ae0bf235",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "03fced73-5cdd-4496-b604-2f251b8d9ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7b25e1-655e-4d94-9890-e51bfa205bad",
        "cursor": {
          "ref": "a17631c3-618d-448b-8387-645965164dfb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fdefa6af-71f7-48f9-94c0-f8e5f07e0add"
        },
        "item": {
          "id": "ff7b25e1-655e-4d94-9890-e51bfa205bad",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "669ef0f0-1df9-49f6-a21c-6de807da33b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95211d6-12aa-4c2d-b583-1d865c5043dd",
        "cursor": {
          "ref": "97f1aad0-4a10-4287-99df-6511b4a782d7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d260181-1a95-4dfc-8ce5-cc0bba3c4951"
        },
        "item": {
          "id": "f95211d6-12aa-4c2d-b583-1d865c5043dd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3dc8e629-73a9-47bc-9d44-9acf8e70f8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dded48-e98a-4051-a6ef-0cd0d2e1c060",
        "cursor": {
          "ref": "c4993903-8206-40ae-8720-60d06c39bbfa",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2b8c410d-b2f5-46cc-b97e-0bbdcbce48f5"
        },
        "item": {
          "id": "05dded48-e98a-4051-a6ef-0cd0d2e1c060",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5979e004-a464-4b7a-9eec-0ea5b58cebf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83fab6c-1ebf-4384-a8ef-87ebbcb139f4",
        "cursor": {
          "ref": "f68bd973-46dd-41a0-a2e7-1950568cea07",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4c7664d-48b9-4303-b71f-5a4117b3b6c4"
        },
        "item": {
          "id": "c83fab6c-1ebf-4384-a8ef-87ebbcb139f4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "da0c685e-82b3-4a49-afac-a9f9759564ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9e35d8-de99-4648-b3f7-be13cf785c12",
        "cursor": {
          "ref": "fcf9a167-c5e0-42b6-8a7e-4c3ea60d23d1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9c185fb5-af3f-4c3c-8067-80aa5725297a"
        },
        "item": {
          "id": "ce9e35d8-de99-4648-b3f7-be13cf785c12",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7c1ce345-14a8-4a66-89eb-d8000164b7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676c8213-c798-4597-8589-b2aa8258ed96",
        "cursor": {
          "ref": "b05892ad-985c-41d2-9fa3-9db76577ff21",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7a893d79-fdc3-4bb3-a644-fdff119e2e1a"
        },
        "item": {
          "id": "676c8213-c798-4597-8589-b2aa8258ed96",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5713a0b2-9dba-4c1c-9c30-2699db230229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a20c4be-f73f-4447-967d-5850c93c5580",
        "cursor": {
          "ref": "d3ff3445-ebd7-41c1-8841-b27c888da7b4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef27f9e0-5bf6-4107-acbb-228f7c02366f"
        },
        "item": {
          "id": "2a20c4be-f73f-4447-967d-5850c93c5580",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5399d776-5dc1-4ae2-8cb7-a99823610a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba87a61-34eb-433d-964a-47dbe7a8a633",
        "cursor": {
          "ref": "5e34367e-1ad3-4a54-a776-0d3cedf97f97",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1b5ba83c-1760-4c70-9302-53a760754b1e"
        },
        "item": {
          "id": "7ba87a61-34eb-433d-964a-47dbe7a8a633",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6d6031ed-91b2-40fa-aaef-b65be8b34999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71554fae-bfe9-42e5-832b-cd82c99eb122",
        "cursor": {
          "ref": "c6540408-bdab-4fcd-88c5-f540a7e39cb2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0a90f92-24bf-471e-b006-76b896729997"
        },
        "item": {
          "id": "71554fae-bfe9-42e5-832b-cd82c99eb122",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "168a4b0f-eb62-47e8-b088-662230a1c031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf6f33a-7e17-4ca7-9a36-6099cb40c613",
        "cursor": {
          "ref": "c769368c-debb-40f1-b04b-33d4ef3ca2c4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3aa054af-f2ac-4dfd-9335-ab6760afef1c"
        },
        "item": {
          "id": "dbf6f33a-7e17-4ca7-9a36-6099cb40c613",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "808d6327-74a1-4020-bc5e-6b51189dd9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b340a45-6913-4999-92ea-78753c848cc5",
        "cursor": {
          "ref": "24fb95dd-edca-46f3-bb90-b5c88357ce10",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "57edf8f7-c22a-47f3-bfa0-3ed5e445d750"
        },
        "item": {
          "id": "3b340a45-6913-4999-92ea-78753c848cc5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "13477223-ca62-4079-955e-50fce891669e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95977c3c-50ad-436b-89e6-4dafb349c7f7",
        "cursor": {
          "ref": "89bd2d8b-7084-42f4-b078-dc9e66585875",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e54d50da-f009-4f29-b336-bca4b633ed81"
        },
        "item": {
          "id": "95977c3c-50ad-436b-89e6-4dafb349c7f7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "18705e9b-7379-407c-85c9-89387ea564ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2b48b2-9456-4f66-b0f2-b725da56e4b3",
        "cursor": {
          "ref": "fbb0ca12-9b0f-45cd-82cc-2fba73700a84",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2647d227-1035-4521-96fb-491584177b65"
        },
        "item": {
          "id": "2b2b48b2-9456-4f66-b0f2-b725da56e4b3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f101feab-6873-4002-a865-e3a5dfdbc061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4084570d-f7da-418d-b095-d7d2324080b2",
        "cursor": {
          "ref": "0271d8bd-fb56-4245-a157-5d941caecfcb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a063d6be-5a6e-4b7e-a6ff-f03e26dda900"
        },
        "item": {
          "id": "4084570d-f7da-418d-b095-d7d2324080b2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "73396c74-5bed-4226-a772-7c9f676920df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc17a4b-c96a-4cf8-85b3-6356f30eaa90",
        "cursor": {
          "ref": "c3742820-9812-43f2-add8-31e150cab988",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f6704f60-f1f4-488f-a223-eda0ea2d89c6"
        },
        "item": {
          "id": "3bc17a4b-c96a-4cf8-85b3-6356f30eaa90",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "00ca029f-cef9-4005-bbaf-2a3b1ccc765a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8eda8e-dde3-49eb-8932-789c9d880eab",
        "cursor": {
          "ref": "fdf1bc91-b6d7-4c90-9457-c6e981294550",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cfae5642-8f0e-44e0-9ff0-1f23b987ee88"
        },
        "item": {
          "id": "8e8eda8e-dde3-49eb-8932-789c9d880eab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea4478b8-c686-4cb2-aae8-026be5eaa2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383d96c8-c0d3-4eca-bb66-11163f0a8469",
        "cursor": {
          "ref": "ce8f9e61-9342-43b3-aaf4-d41ee1f67206",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "31ac339f-955e-4cac-8ad0-f86e2cad1662"
        },
        "item": {
          "id": "383d96c8-c0d3-4eca-bb66-11163f0a8469",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a10b02d9-a1cd-45ac-be0d-26bc075243b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7e8d82-b155-4e88-aabc-32e5288efd66",
        "cursor": {
          "ref": "808f0526-30b0-41a9-a1ec-207f5a69b809",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9d5c199d-77f2-4689-a452-3ffe7761e1e9"
        },
        "item": {
          "id": "aa7e8d82-b155-4e88-aabc-32e5288efd66",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e05ba69b-ca46-4ad1-acaa-1f6752410ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a455de8a-cc62-4b87-baeb-a15b65cc3b24",
        "cursor": {
          "ref": "3f4145f5-540b-4d94-b61d-0992a14a5a04",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5721e0d6-f177-49af-ab5b-638bad72fde0"
        },
        "item": {
          "id": "a455de8a-cc62-4b87-baeb-a15b65cc3b24",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cc7e4624-e032-4957-960a-da836eba128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7455e7-4f34-4d47-b61e-873724945cc1",
        "cursor": {
          "ref": "fd3f98b3-184d-4985-9c50-c95fcf095a58",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09341336-233c-4bd4-9b4c-b3d85195ce56"
        },
        "item": {
          "id": "ec7455e7-4f34-4d47-b61e-873724945cc1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "048f8c3b-1add-4105-a5e3-f5ba3478333e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73486cab-0711-4c7f-8878-9bfe631b5740",
        "cursor": {
          "ref": "e28534b7-e7d7-4b69-b4c5-e37d1b307a38",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3eeb1417-8e19-46eb-aea3-714f0478c1c5"
        },
        "item": {
          "id": "73486cab-0711-4c7f-8878-9bfe631b5740",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "85156e5b-5c2f-462d-8597-57d7ffdc65bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81133928-486c-41bf-be77-7ecf4a9d8002",
        "cursor": {
          "ref": "41e6f3d3-bcb1-4fe3-9051-203f27f2ed90",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73f95527-9ba3-47f7-ba33-bfda0ce325ac"
        },
        "item": {
          "id": "81133928-486c-41bf-be77-7ecf4a9d8002",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "36a2de7e-ec44-497b-a999-8f04a7b0fdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c32a7c-32ce-44e9-b7cf-e4525033a3f7",
        "cursor": {
          "ref": "1bc58079-b2bc-49d9-a206-5d12d2d19446",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e7227932-ffe9-4f2e-878e-b9605f0302e1"
        },
        "item": {
          "id": "09c32a7c-32ce-44e9-b7cf-e4525033a3f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2d9f1a98-f5b5-4144-a2d6-802e40a42670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7a67ef-bdae-44a7-a047-d9cfca43a88d",
        "cursor": {
          "ref": "e1398c2a-970a-4138-90aa-fcce356acec0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "667e6079-125f-4e46-a889-0517f86ecffd"
        },
        "item": {
          "id": "7c7a67ef-bdae-44a7-a047-d9cfca43a88d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1b50aa89-31c3-4b11-9db2-1b5b60ef36c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5094d7a-6cc6-4dae-bfd8-eb6608529f49",
        "cursor": {
          "ref": "5c7c6b9c-b19f-46cb-942f-5a008c1d9753",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b5411c0e-929d-434a-9177-393b048cb1f9"
        },
        "item": {
          "id": "c5094d7a-6cc6-4dae-bfd8-eb6608529f49",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1670934d-44e9-4a4c-bb88-9578a2c791f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4209ed0f-8163-4b07-8c3f-585de3f57290",
        "cursor": {
          "ref": "3d70ca64-c493-4f21-ae01-e59f85c316ad",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7396ef5c-7ff4-4f65-a6c9-7aad7d1f918f"
        },
        "item": {
          "id": "4209ed0f-8163-4b07-8c3f-585de3f57290",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2e00a2c-256d-4125-b101-42b6b82266af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb48a783-2261-4e42-a951-992283cc78c4",
        "cursor": {
          "ref": "9d4f955b-44e8-470f-a7c2-16124f3d3d1b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9b07e463-9196-4a14-84f9-96ef5c8cc86b"
        },
        "item": {
          "id": "cb48a783-2261-4e42-a951-992283cc78c4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1072cd80-383f-4fb9-949b-9b5bc3f331cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5caf088-1732-4e0a-8a72-607902a412ec",
        "cursor": {
          "ref": "d594d0a6-ca3e-4ae7-a5d6-284bfae5edbf",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6116c393-86ed-4602-a42c-66504967e496"
        },
        "item": {
          "id": "a5caf088-1732-4e0a-8a72-607902a412ec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9bacb204-ccb4-4ef9-9ed9-9a3575549c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c822364-8443-4c61-ab7f-a8733554957b",
        "cursor": {
          "ref": "44857a19-3904-4c4f-8a33-889e2d6b5187",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8679ab98-99bf-4b19-b0cf-94e5d3e0c6c1"
        },
        "item": {
          "id": "5c822364-8443-4c61-ab7f-a8733554957b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "26b038d1-6199-4143-991a-16a46c299d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b26d202-fee1-4a6d-b15b-6c5848d61197",
        "cursor": {
          "ref": "590dd71b-ef57-4a41-8692-0adcb429ca63",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b0f3ec58-a3f4-4ccc-9979-bd25964ae9c4"
        },
        "item": {
          "id": "0b26d202-fee1-4a6d-b15b-6c5848d61197",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c8e5a28b-e417-4b43-890e-ac1c0fceec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a993d7-ad93-4a48-94e9-e715dde9d6ae",
        "cursor": {
          "ref": "beaad64a-c284-4e3d-afb0-1371f18d1c6c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "918b28a8-789a-4537-b3e4-13d13606c3a2"
        },
        "item": {
          "id": "67a993d7-ad93-4a48-94e9-e715dde9d6ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d02285cb-b635-4266-9612-b91de8c8d730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a124904-c97d-4601-bb87-43ad813e0989",
        "cursor": {
          "ref": "6a23e4d8-180d-40ab-83df-52d4c7b14186",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd594564-7af2-4ab1-a868-12f9107f446f"
        },
        "item": {
          "id": "8a124904-c97d-4601-bb87-43ad813e0989",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6890081f-b762-4ad0-8b07-e7130770d0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a41fee7-458e-48dc-8b43-60480f0ae1c9",
        "cursor": {
          "ref": "f2631a1f-6f6f-499b-a3bb-cf31a4ad069a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c97c6126-4f1f-4de4-9f98-5ed94fbc554e"
        },
        "item": {
          "id": "5a41fee7-458e-48dc-8b43-60480f0ae1c9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51abd886-d07c-4011-a2d7-972ac3eb732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e36759-3a96-4eb4-8f39-e66278a36ceb",
        "cursor": {
          "ref": "2d56b5b1-a044-42f5-adb4-51b02d6aa217",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca3ebad3-3084-4a46-b0eb-3e4a697b6ada"
        },
        "item": {
          "id": "f0e36759-3a96-4eb4-8f39-e66278a36ceb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c188eaf7-8bcb-42e5-bfe4-7edc68491216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa556da9-1cb5-45ca-b1dc-1124acce100e",
        "cursor": {
          "ref": "babbc083-d6e2-48af-b9eb-620d52054a8e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b631618d-6068-4e92-b06d-4cfe6d69c02c"
        },
        "item": {
          "id": "fa556da9-1cb5-45ca-b1dc-1124acce100e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0ed1acdf-b4ea-42a3-b277-a4d7e6e05730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f53cd57-a614-4c19-8873-d429a4b08a0f",
        "cursor": {
          "ref": "6e062264-2946-4c54-b82a-efb089effefd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "87d017e3-778b-4857-b7df-f9f6cd746ceb"
        },
        "item": {
          "id": "4f53cd57-a614-4c19-8873-d429a4b08a0f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a4d5ee5f-e85b-430a-b30a-b3ef4f1d33d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313098e5-fef1-48c3-8778-02797e45c1a3",
        "cursor": {
          "ref": "78f4b885-f859-49a4-affe-bf1687499566",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8c4aca54-15a7-4fbf-b3a7-7258a7f40f25"
        },
        "item": {
          "id": "313098e5-fef1-48c3-8778-02797e45c1a3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6961f141-4c7b-458e-87a2-46ca9dba4785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab35a779-e539-4e7c-95fa-28956fa9007b",
        "cursor": {
          "ref": "e6f1f8b6-e5fe-4804-9319-6e2529cb432f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1fc639a7-d34c-49c4-a353-f9e91ba29af5"
        },
        "item": {
          "id": "ab35a779-e539-4e7c-95fa-28956fa9007b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c3aae203-fdad-4c9d-826e-c0fc0e3c94b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87b37ec-94a6-4268-9580-d3d65e9f4d25",
        "cursor": {
          "ref": "2a9c7f7e-6d34-42a8-acc9-88e74500127c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "03fead4e-38e4-40f5-8ca8-8c2e5938565d"
        },
        "item": {
          "id": "e87b37ec-94a6-4268-9580-d3d65e9f4d25",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8264d5b4-69c0-41d2-89bf-ba12bea39651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ab56e4-7fd1-4590-afe4-59a4adc22ccd",
        "cursor": {
          "ref": "bad7bc3d-02d4-4ba7-bc87-1800fc399549",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "76f40bfc-a8c3-4b3d-bab7-1b82265d40cd"
        },
        "item": {
          "id": "65ab56e4-7fd1-4590-afe4-59a4adc22ccd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "80fb1d39-c66c-43e9-b703-7c25be906e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c880a32-7c06-4a29-84c5-2aeff2b644b1",
        "cursor": {
          "ref": "784dc759-a0c9-4604-a83e-284f1cbd4289",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "685722e7-2941-43eb-91da-7f20a617807b"
        },
        "item": {
          "id": "0c880a32-7c06-4a29-84c5-2aeff2b644b1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cda513c0-b4a7-466d-a4b2-ec2ac4234165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee600d47-2ed4-4b7d-ab81-cdff47c8b326",
        "cursor": {
          "ref": "9670471c-65aa-4fe0-9c7e-c8a0bded7b93",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f7fc897a-f0d2-4454-ac34-eaf45ad129a9"
        },
        "item": {
          "id": "ee600d47-2ed4-4b7d-ab81-cdff47c8b326",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6b751bcd-fbce-49ad-a051-863a563d8c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287a3649-5ddd-4475-bfac-3bd13fa34f2b",
        "cursor": {
          "ref": "11d717e6-42c6-4a9c-ab86-afaebeac38bc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9a45539e-9a8f-4cfd-8411-891a086b3ef9"
        },
        "item": {
          "id": "287a3649-5ddd-4475-bfac-3bd13fa34f2b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "52b1dc1f-e888-454b-bd10-294b9f560a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085cf710-3487-4c41-acb0-e2fb09f235d2",
        "cursor": {
          "ref": "bf1ba68f-cb7f-43af-ba0c-70e88513ba64",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cb6122ba-b768-4cd0-8379-1119dfc1ae5f"
        },
        "item": {
          "id": "085cf710-3487-4c41-acb0-e2fb09f235d2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a24af3e4-f90c-40f9-ab16-0669a3e26f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8783ec14-81a0-4b08-b974-1663e87a8e0d",
        "cursor": {
          "ref": "c635c8ae-d2c9-441f-af13-0880af0a1b90",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cdc9f0cf-f7d7-4e23-b70e-db71e014999b"
        },
        "item": {
          "id": "8783ec14-81a0-4b08-b974-1663e87a8e0d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f2829f5a-aac9-48d5-a497-26266ac40159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931bcd6d-b45a-4683-a1ee-5c596cdd48bb",
        "cursor": {
          "ref": "f03a1dae-beb3-4aea-a1d3-069e4a86a8f4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6f6fb4f2-f68b-4c3b-ba6d-72c26914a346"
        },
        "item": {
          "id": "931bcd6d-b45a-4683-a1ee-5c596cdd48bb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5604d682-26d3-4a62-874c-246ff113fe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a27b3ee-1307-4626-a8f1-7c5f26f27e6c",
        "cursor": {
          "ref": "95405812-f372-44ae-8c5e-48b2bd552133",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b929a06d-c727-4273-a0ac-88d5271addbf"
        },
        "item": {
          "id": "0a27b3ee-1307-4626-a8f1-7c5f26f27e6c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8f9a8176-b136-4e28-bf2f-b344eb6720ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d685aafa-49a2-4281-b613-826d6bcfd595",
        "cursor": {
          "ref": "d5b67986-15cf-4243-a0b8-784ccf5dcbc3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "54a74b78-e3c0-4d31-98bd-b5727c35dd2b"
        },
        "item": {
          "id": "d685aafa-49a2-4281-b613-826d6bcfd595",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a4fc21cc-188d-4fae-8013-e4ac90adc52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b28c6d4-79f4-47c4-860d-8c244a164db4",
        "cursor": {
          "ref": "c6c68ecb-3162-4737-afad-e4e0f4e50023",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e543bd67-b8dc-4e0c-a373-41c8d3e8506c"
        },
        "item": {
          "id": "8b28c6d4-79f4-47c4-860d-8c244a164db4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4d63d2c5-08bf-4873-b445-0fdd4e3648f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07414d3-fc54-4fc7-b270-c89b04c9b354",
        "cursor": {
          "ref": "063d043b-4707-4d83-b4e4-a8c421f07f9d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "297f315e-e31f-49cf-b44c-cf9d1821916f"
        },
        "item": {
          "id": "c07414d3-fc54-4fc7-b270-c89b04c9b354",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8c044354-55f4-4487-bfb9-3d01efc87765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521d0186-cdf5-4f9a-8d19-eabd913447cf",
        "cursor": {
          "ref": "a5f97862-131f-49b0-8e38-c2e92f975cd0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b2261974-e0e8-495e-96bd-da778f66c401"
        },
        "item": {
          "id": "521d0186-cdf5-4f9a-8d19-eabd913447cf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c4236cfd-0384-40ee-bf2f-811851ed45ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501ec65e-e2ed-4d12-bd13-a60a939bfca0",
        "cursor": {
          "ref": "b261d4c8-9206-402c-9e7e-ceb88580461c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fbe6e9d6-f94e-47ed-85c8-e049ad1e425c"
        },
        "item": {
          "id": "501ec65e-e2ed-4d12-bd13-a60a939bfca0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "080367cb-c49b-4c80-b127-a6bc8fa81c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430dc11e-24ab-4719-b081-6fc18cf17564",
        "cursor": {
          "ref": "c1e73d2a-eea3-4d8e-9c04-80f18e9fbcf6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d597aed5-bed0-4488-8b5d-2c261feb56b3"
        },
        "item": {
          "id": "430dc11e-24ab-4719-b081-6fc18cf17564",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "20f22ad1-821d-4e02-8400-02c0dfd64eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a1c922-286c-4737-9f9b-7b5f04774340",
        "cursor": {
          "ref": "dfef8420-8cbf-4dc2-9d19-1e092f78b2b5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d2de47b1-1887-4c5f-8e9c-b29511e62fb5"
        },
        "item": {
          "id": "f5a1c922-286c-4737-9f9b-7b5f04774340",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "615f2b5a-31cf-42c8-a1e2-0252e8b28625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9e0bf8-4969-4cc6-8c94-02c3549f3f46",
        "cursor": {
          "ref": "bf3b1bf8-593c-4e60-aa8f-fde3fdee91eb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ecebf31f-4add-4c66-a5a7-da045533efcc"
        },
        "item": {
          "id": "cd9e0bf8-4969-4cc6-8c94-02c3549f3f46",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1550a6d5-74d8-44ee-941b-5ade9b6be286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df07369-b8ab-4fe2-bdd3-a8e0a860c45b",
        "cursor": {
          "ref": "9441cf61-cdc0-4e03-a959-f9e390933021",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9003fbd7-e279-4b56-8ed3-4d837bbef67c"
        },
        "item": {
          "id": "2df07369-b8ab-4fe2-bdd3-a8e0a860c45b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "59125c80-d36f-4d68-810f-ca30ba7be44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d095d073-edef-4019-80b2-49fa7ddc55cb",
        "cursor": {
          "ref": "69ab391e-08d5-4a24-86e4-ad6d5eb4c5aa",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ecdf1ecf-2618-439b-a944-98fcaa8bf724"
        },
        "item": {
          "id": "d095d073-edef-4019-80b2-49fa7ddc55cb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b9b85148-0cce-4479-ad0e-2415490a984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de81de70-a31c-412b-a7cc-327a1c4a5b25",
        "cursor": {
          "ref": "98d24697-6693-4dac-b31b-8a3586003665",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "719ae7f2-e27f-4171-bd3f-97574ff9370e"
        },
        "item": {
          "id": "de81de70-a31c-412b-a7cc-327a1c4a5b25",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ffe63bc-a6a0-47b2-a129-0a0162dfab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b8f2e7-edb8-4a05-b6de-990e74b34a06",
        "cursor": {
          "ref": "92a9621a-7f75-42e4-8e66-47724099131d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "35ed614d-399f-48fa-b394-ff2233c6a685"
        },
        "item": {
          "id": "f6b8f2e7-edb8-4a05-b6de-990e74b34a06",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7f0e7973-6c4b-4354-829b-46130ba97993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64aa375-6a1c-4947-aeec-54a1f31a6a9e",
        "cursor": {
          "ref": "aa45845b-769f-4bdf-8180-7cee5556579c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "916a65e6-0cb5-44bd-a75a-1d4b69991869"
        },
        "item": {
          "id": "c64aa375-6a1c-4947-aeec-54a1f31a6a9e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7ef404a1-2158-47a3-9265-9efcbe036068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf03377b-d1a4-40c1-9202-940b04e66843",
        "cursor": {
          "ref": "d9efa7f6-f6a7-403c-a999-d7094b350f12",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "de7fabd1-e697-4f1f-aca4-63299dfa8102"
        },
        "item": {
          "id": "bf03377b-d1a4-40c1-9202-940b04e66843",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b46635b9-f973-489c-8841-e55f7cbd824e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e0ce3-67b4-4e6d-add0-40bb61d1029d",
        "cursor": {
          "ref": "82a95ec4-f2ca-47ce-883e-23fe7f73287c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d7e31686-2656-4c4f-b547-33f9fec870d5"
        },
        "item": {
          "id": "449e0ce3-67b4-4e6d-add0-40bb61d1029d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ba14d53-9ea7-4804-a706-85e14e76b25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909b2a0c-83b5-4839-9cda-9cd5cf667d35",
        "cursor": {
          "ref": "9da514b2-4118-424f-8871-e7edcd7d24de",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3ad806c2-6a11-4d5d-8d77-d8bde386510d"
        },
        "item": {
          "id": "909b2a0c-83b5-4839-9cda-9cd5cf667d35",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a1c7aa53-ffb1-4f38-98e1-8bf620a4d24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50992174-f889-4818-9983-8247ca82f5de",
        "cursor": {
          "ref": "340a31c4-0f6b-42f2-a681-799772245ba5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "04981c87-022a-4434-a613-6e13b1010817"
        },
        "item": {
          "id": "50992174-f889-4818-9983-8247ca82f5de",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d69affcb-c9ca-4de5-80d1-dffd4d4b8360",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd881392-2e14-4bda-b638-9871af8cb606",
        "cursor": {
          "ref": "dda24bea-c3d9-4bdd-9d74-e28cd7f577dc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2f8a4ef0-aead-481c-83e3-db0dd3b2abfe"
        },
        "item": {
          "id": "dd881392-2e14-4bda-b638-9871af8cb606",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "73cdf489-a16d-45dc-9dd6-099ca69874a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7924fae5-97e7-4103-9e47-59754160a85c",
        "cursor": {
          "ref": "01450039-49ca-42ff-b3b9-4a327e1e512e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f8bef136-6e2e-42ba-b186-c74e0d86e3e9"
        },
        "item": {
          "id": "7924fae5-97e7-4103-9e47-59754160a85c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "388d3aaa-da2f-4c3e-9708-13b9d0fd5225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c864ca21-e4f7-4a7e-aa87-8f1b7124cee8",
        "cursor": {
          "ref": "62f0249f-b0f8-4455-9755-6abfeb44e6a2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c5bb87db-f795-4710-9f7b-5a9576624093"
        },
        "item": {
          "id": "c864ca21-e4f7-4a7e-aa87-8f1b7124cee8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bbb22247-ccd6-419b-b5e8-86c1dfe1dc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7ccc094a-89fe-4198-8f6c-3dbe88b2e015",
        "cursor": {
          "ref": "960bf15f-4b09-4e22-837d-1b8d592a1625",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "75d8c29d-32bf-427e-b600-1ab36664786f"
        },
        "item": {
          "id": "7ccc094a-89fe-4198-8f6c-3dbe88b2e015",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4ba92480-18de-46b3-9021-44ee6f886a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3c1ba5c7-a931-43f5-85bf-faad2c4bd95c",
        "cursor": {
          "ref": "5a3afb68-85ee-4cf1-be1b-01da83209e30",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b99baceb-c27c-4cfb-a452-4cac966da0fa"
        },
        "item": {
          "id": "3c1ba5c7-a931-43f5-85bf-faad2c4bd95c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "84569fa1-3ca0-4269-b7c6-3db09a41e4ac",
          "status": "Created",
          "code": 201,
          "responseTime": 10139,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d639922c-2449-444c-afb1-9ca9d5929928",
        "cursor": {
          "ref": "47e3a41a-2f6b-4b36-ae0c-a8f050bdffdf",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c81616cd-32fb-4b3e-add6-4eac7332f3e8"
        },
        "item": {
          "id": "d639922c-2449-444c-afb1-9ca9d5929928",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd076642-c6dd-41ee-8a9b-dfe7032fb374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a5181e1c-1287-4db2-90d8-574fa3e97bfd",
        "cursor": {
          "ref": "348d519e-3b75-4728-911f-7e85385a8895",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cbb7392b-95c2-444c-af04-92eccc7d940f"
        },
        "item": {
          "id": "a5181e1c-1287-4db2-90d8-574fa3e97bfd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e071f33a-20f1-469f-8633-951aa5cac907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "374a447f-cb74-4bf9-a3ca-dbe8523fa43f",
        "cursor": {
          "ref": "523316d5-87dc-438d-8368-1a1c446b1a4c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eeab3cce-ef41-4c57-b7cb-cd08aa55c2ba"
        },
        "item": {
          "id": "374a447f-cb74-4bf9-a3ca-dbe8523fa43f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c32dca1c-ab05-400a-bfc1-2116251d934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e616d673-533d-4715-93a7-8729b971517e",
        "cursor": {
          "ref": "e7ceb287-8911-4894-8a04-3d63151a5f09",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5149ba7-d400-4c6e-97f9-26e892a42656"
        },
        "item": {
          "id": "e616d673-533d-4715-93a7-8729b971517e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3a98b802-015f-42db-9d43-418f9c06a3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec2096c-df46-4521-a9f0-4dde40985236",
        "cursor": {
          "ref": "7bdfc77b-b7b6-426a-868a-913d8267f278",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "da304c1b-22bc-4146-bc3e-65126844e9df"
        },
        "item": {
          "id": "1ec2096c-df46-4521-a9f0-4dde40985236",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ecf87e7b-b403-4e47-bd2e-c43b6fec2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6ec419-d644-4d4d-bb39-c9c57d284b7f",
        "cursor": {
          "ref": "a0ffaa0e-6ef5-49a6-9281-bde519dcd0d2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a36a0432-9b56-43af-acfb-d3e266571a0f"
        },
        "item": {
          "id": "9f6ec419-d644-4d4d-bb39-c9c57d284b7f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a96558ec-d7eb-4444-803a-bfa724d90c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e514d8-9f46-4bee-ad8d-12787cf37925",
        "cursor": {
          "ref": "d0cd9420-0352-422d-b0d4-11c817a397b3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "218ba0e4-b9d4-46f6-8576-7c33a9e2ba08"
        },
        "item": {
          "id": "d4e514d8-9f46-4bee-ad8d-12787cf37925",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a78bc31c-7daa-4aad-a016-1d7849f0a48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc90149d-e063-4d9a-a3b7-4975121dda7d",
        "cursor": {
          "ref": "ae041c84-1568-464d-b813-e27f365e098d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "725e6ece-fb7c-4ced-86ee-c1aae94e5160"
        },
        "item": {
          "id": "bc90149d-e063-4d9a-a3b7-4975121dda7d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d9d28dfb-4ede-423e-ae21-263ae8b0a9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf280b6-a2a1-4f3f-9d58-29d2ab3cb3e5",
        "cursor": {
          "ref": "d4bad2e3-b9a9-40e5-a477-3852fb15ffe4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c3d9590a-4ae2-422c-9c35-5a5d6c024878"
        },
        "item": {
          "id": "6cf280b6-a2a1-4f3f-9d58-29d2ab3cb3e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "52ba4b3b-bf1b-4e05-8257-ad4da6a4a675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cda341a-909a-40e0-8977-6be7b8cceb6d",
        "cursor": {
          "ref": "8a7172df-72e6-447e-8c8c-82a3519f4be0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f207902e-3081-4eed-86ae-33c26f9a9902"
        },
        "item": {
          "id": "5cda341a-909a-40e0-8977-6be7b8cceb6d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3491b9a7-d2c7-4386-988f-6d8971f5eb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b259e339-b7ad-4b94-804c-dd6f6d842a02",
        "cursor": {
          "ref": "7e6229fc-f105-4acb-9e11-02d83355ecdd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b7eca203-9910-4f26-adc7-c664c408068d"
        },
        "item": {
          "id": "b259e339-b7ad-4b94-804c-dd6f6d842a02",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66c1be32-dd19-4ae2-9641-42f9c654029e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe35e395-92fa-4282-8344-bf6bfbc676cc",
        "cursor": {
          "ref": "5699ba27-d07f-43be-844d-894c91f4260b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b377b5ee-ca45-4e22-be5b-d2c24281fc4e"
        },
        "item": {
          "id": "fe35e395-92fa-4282-8344-bf6bfbc676cc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "04e60dc5-abae-4c8e-a853-8a08b1061b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7d9ba8-105c-47e5-858c-df337a7cb773",
        "cursor": {
          "ref": "09cb50f2-67a6-4f8e-906c-eb93163857a1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "34e5336a-0b26-4806-8c30-324e18c7b35b"
        },
        "item": {
          "id": "db7d9ba8-105c-47e5-858c-df337a7cb773",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ad7c5f71-8164-4620-852e-239cf04bc091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2883e9-9df7-4e26-8a7f-b78e2bd61fbb",
        "cursor": {
          "ref": "6051ff25-00df-4b27-9d52-2d1def953264",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aad7fec9-99da-450d-9394-4222c8ef20ec"
        },
        "item": {
          "id": "8a2883e9-9df7-4e26-8a7f-b78e2bd61fbb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dfc3e0b2-e352-4626-8333-869d9b0a204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613d65ae-f643-4780-b6b9-0adedf21aa96",
        "cursor": {
          "ref": "66b1f13e-6ea4-4e15-9237-0c5b0f7fca66",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ff90260c-cfb2-40f5-9ca2-e93766aa782c"
        },
        "item": {
          "id": "613d65ae-f643-4780-b6b9-0adedf21aa96",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9c39174f-cf08-4a8d-a61d-63b498d50c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404356f8-b13f-4f40-b7a3-9006ac7aed53",
        "cursor": {
          "ref": "dcdc7206-0d35-4d4b-88c8-0336a2646797",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d3a9b4aa-a098-486b-8923-d0e109a0fdf5"
        },
        "item": {
          "id": "404356f8-b13f-4f40-b7a3-9006ac7aed53",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "76f831c8-7c08-46d8-a4f5-d4e2918567eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e19e4f-5240-4478-920d-92aebc6714ea",
        "cursor": {
          "ref": "e94187c3-d5b2-457f-93cf-8727ab13d8c1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d5c20856-ab1c-4780-8577-6a2eb2341ea4"
        },
        "item": {
          "id": "f8e19e4f-5240-4478-920d-92aebc6714ea",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "116c9357-7e61-44eb-8381-617f5abe05e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a700ff1d-cb09-49c2-94ce-8d60abc995c1",
        "cursor": {
          "ref": "787368df-f09f-4628-b89d-2dc6a83f889d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bb8df2d4-6373-40ba-9b4f-7dba2496be30"
        },
        "item": {
          "id": "a700ff1d-cb09-49c2-94ce-8d60abc995c1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "680ca080-d2e3-465d-956f-d452b68fac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06752170-02d4-4f4a-992f-97fd24aa3d45",
        "cursor": {
          "ref": "8b6a3138-b712-4f64-b63b-e8bb86cec498",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72d9adad-bd3c-496f-ba9d-3c56629bae5b"
        },
        "item": {
          "id": "06752170-02d4-4f4a-992f-97fd24aa3d45",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26a9ebf2-ed7e-4f27-8ea3-5fd4db3a6774",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b5b14e3a-e644-4706-b309-f2fca1b5460f",
        "cursor": {
          "ref": "6914e6b6-13f7-43a4-881e-1f736d301485",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f5af9787-2f50-4bf1-b69a-5cc62d108b08"
        },
        "item": {
          "id": "b5b14e3a-e644-4706-b309-f2fca1b5460f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "33a53f35-5b44-4e6e-8af8-d145a48c088c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680038cb-8413-4480-830e-d5b200afc9b6",
        "cursor": {
          "ref": "81c8c307-6adf-49b8-8384-b75aef4ecf42",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4bff79bb-d8f3-47d4-8712-cdeb88281503"
        },
        "item": {
          "id": "680038cb-8413-4480-830e-d5b200afc9b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3ecd71e-78ec-4e30-a312-e55b21008995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabb5dfd-ee88-466c-a046-b04738090a78",
        "cursor": {
          "ref": "7d765bc9-1c3f-4de7-9980-c0e15cac9f42",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "404f136a-37a9-4a14-a29b-c7b75359f207"
        },
        "item": {
          "id": "aabb5dfd-ee88-466c-a046-b04738090a78",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "257b3f19-804d-428f-8211-9640a7401ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6e8586-661b-4182-9d60-6f285cac1497",
        "cursor": {
          "ref": "0abe6cd6-67b5-45e3-b3c4-e0274413ac6d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "40059bff-e2c4-4d4d-a50d-ffbfb9a40db2"
        },
        "item": {
          "id": "fb6e8586-661b-4182-9d60-6f285cac1497",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a50c9eca-de92-4cb1-b46b-77bb448441d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2058bb-6c05-498f-bff3-329499feaed1",
        "cursor": {
          "ref": "a50b3c17-2f33-4463-9866-c2a77c58975b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e866052b-4ef6-42cb-bd6b-d1f17b02db36"
        },
        "item": {
          "id": "de2058bb-6c05-498f-bff3-329499feaed1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1bafe241-ed02-41a0-83bc-95514312fec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491fbb8e-8f78-4518-a73b-e6d9a3963993",
        "cursor": {
          "ref": "affaf62e-79a8-4efe-9a0b-890c22dd62e2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "55e16df9-506b-4535-8456-e435f5582387"
        },
        "item": {
          "id": "491fbb8e-8f78-4518-a73b-e6d9a3963993",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "751f85d2-9bca-43a4-a0f5-510e773f00d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8273ece8-d255-4f40-9b0b-5893347aaf2d",
        "cursor": {
          "ref": "b15a9eea-65cf-4920-b971-f29e14e0876c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1ee60715-a827-441c-bc5d-81eb8dd0738c"
        },
        "item": {
          "id": "8273ece8-d255-4f40-9b0b-5893347aaf2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "39345dc2-44dc-4c72-b22f-d849618ce827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6a1160-c002-484b-bf94-496c0f34276d",
        "cursor": {
          "ref": "af3f6b3b-9dd9-49c4-87ad-84a8d80c4581",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "904ac7e2-73ba-4744-b982-c4ef3d5d0850"
        },
        "item": {
          "id": "9f6a1160-c002-484b-bf94-496c0f34276d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "74278f58-9d71-498d-ae8f-772015677bb7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9dcf2248-9fee-4270-b621-af91b675b77f",
        "cursor": {
          "ref": "b75d6ba0-1c20-42f0-bb08-00df3281ebf9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8859b388-cf55-4c9b-9ccf-f2df07bac956"
        },
        "item": {
          "id": "9dcf2248-9fee-4270-b621-af91b675b77f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "79b0e874-d25e-4983-833c-bd9225d9aaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5015db-d095-45ef-8042-513fa5d2c29e",
        "cursor": {
          "ref": "4093391c-2c69-465e-946c-111efdbb3f46",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b7632429-a527-497f-b02b-98a85d8ebde2"
        },
        "item": {
          "id": "4d5015db-d095-45ef-8042-513fa5d2c29e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "15e2a023-3ffd-4652-a418-0d9af251978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fdb1bf-65f3-4949-a599-524fd7c3dab0",
        "cursor": {
          "ref": "7d9fd074-8f84-4f2c-b3cd-155313ae223a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dbce0793-b72b-40bb-b05c-d8c014f6263c"
        },
        "item": {
          "id": "12fdb1bf-65f3-4949-a599-524fd7c3dab0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7095097f-3dcf-4037-9183-5b4239af180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5186338c-75a0-4a94-888a-a09cfae7412f",
        "cursor": {
          "ref": "bd924697-fe19-4dd9-9d43-8399b09144bd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "64328940-bac6-4924-9a02-c156ec689c93"
        },
        "item": {
          "id": "5186338c-75a0-4a94-888a-a09cfae7412f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "351b6f49-226c-4f41-b83e-4d96b28c90f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810c7ea-8ecd-4928-95ff-b8850faebaca",
        "cursor": {
          "ref": "7a813e7a-a3f0-40d0-bf43-1e4586508454",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "00deacde-7bbb-4fe8-95c1-3362259b2173"
        },
        "item": {
          "id": "b810c7ea-8ecd-4928-95ff-b8850faebaca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d5e4e76d-1fd9-4828-a849-4c35ea89b9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28123a70-6b86-4d82-b390-229be91ace7f",
        "cursor": {
          "ref": "3cb12132-11a0-4061-ade6-333351c29072",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d1240a59-dfb9-46f4-ab04-1c95a2057e22"
        },
        "item": {
          "id": "28123a70-6b86-4d82-b390-229be91ace7f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fe0a2d27-f025-43d8-95f3-cd3627a6e5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edebc8c6-d29a-41d1-8a07-8939e168d301",
        "cursor": {
          "ref": "b9744dca-4f16-4f9c-b3c6-35da597adaa2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "05ed3e95-ea2a-4f41-9c95-71475a57ff22"
        },
        "item": {
          "id": "edebc8c6-d29a-41d1-8a07-8939e168d301",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0bae0c0b-9e6f-4642-8b2e-b22196d97660",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "16d44932-5b1a-48f8-977d-4954c2b5d91a",
        "cursor": {
          "ref": "105c5281-4b98-43da-af58-186da5766732",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dec08069-8301-4b0d-af67-68218bdd0098"
        },
        "item": {
          "id": "16d44932-5b1a-48f8-977d-4954c2b5d91a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ae1cc5ee-1097-4abe-b0b6-3b3a0f93b998",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "e5d32298-9897-4778-8fc0-3067699f13f3",
        "cursor": {
          "ref": "e70904be-5765-49b5-a602-952d1d6f02e6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f2349459-af6b-46fc-a105-9b478ab6a9f3"
        },
        "item": {
          "id": "e5d32298-9897-4778-8fc0-3067699f13f3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e8c79cfa-522b-4d18-9ab7-1cfb5d2b86c6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e0dc7b28-9bc9-4f97-9fdb-6b7c2ddfee43",
        "cursor": {
          "ref": "d443c858-5a7a-4e26-9b35-eb273b4f5a96",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a56c0571-73aa-44ca-91c3-11bdf6938fc6"
        },
        "item": {
          "id": "e0dc7b28-9bc9-4f97-9fdb-6b7c2ddfee43",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a44d7291-f45f-4d78-af93-4bd7be5368c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ea5c6cd0-b9a8-46b6-bde7-3a0d62aac112",
        "cursor": {
          "ref": "dd34385e-7ac9-42e2-b1cb-d11dd1dc761f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cee53eea-a20f-4055-b211-c5abb55cdc5e"
        },
        "item": {
          "id": "ea5c6cd0-b9a8-46b6-bde7-3a0d62aac112",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f2f7bca9-990f-4a84-9a4e-9c4014278203",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2ff823cd-7988-49c9-bf71-d143681bf34c",
        "cursor": {
          "ref": "e41ee7dc-570b-4e9a-ad60-849161217033",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e1880760-3de9-43ef-9cd9-0c5e9032a3f4"
        },
        "item": {
          "id": "2ff823cd-7988-49c9-bf71-d143681bf34c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bb0a2f2b-c1fe-4e00-95d8-2114829d7a76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a2995433-0497-4b1b-8bfb-1a44c4ef6b52",
        "cursor": {
          "ref": "fb074b7a-5877-49a3-8756-a6b1de35a8d5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a8c4b3a1-9579-4fef-8d9d-18e55ab1412f"
        },
        "item": {
          "id": "a2995433-0497-4b1b-8bfb-1a44c4ef6b52",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93408d75-7f05-4d02-8b40-03dea11b0736",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2a45b4-a63d-461d-b40b-2094a59a4cd3",
        "cursor": {
          "ref": "e340bf76-593e-45ca-9bf2-a90ed2ff5226",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3666488a-5d4c-40b2-939f-11998c162513"
        },
        "item": {
          "id": "4a2a45b4-a63d-461d-b40b-2094a59a4cd3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c0bde713-6974-4947-899f-f996d1507796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94013a6b-3623-416b-86b4-b6b7185a240f",
        "cursor": {
          "ref": "ae58bab6-f0cc-4571-9955-b376ad4ebbfd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2d713671-022e-4356-abc6-0322c13080a1"
        },
        "item": {
          "id": "94013a6b-3623-416b-86b4-b6b7185a240f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0f8048d3-311b-4796-9c49-9e303c89fce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7f85e2-2383-4eba-b64f-b72d6619a1c0",
        "cursor": {
          "ref": "ed0fccb1-119e-46b0-8463-810fd2160a39",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "22e580f6-2e77-4f8c-a34b-2ccba821885b"
        },
        "item": {
          "id": "6d7f85e2-2383-4eba-b64f-b72d6619a1c0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "92c9ce2d-92c9-4fae-961d-400e10c809ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1263b7-cdd5-414d-9842-7fa6cdf11388",
        "cursor": {
          "ref": "51785cc0-5052-4475-8492-857761548277",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a4e6718a-7d70-429b-869e-a4a4aae846f0"
        },
        "item": {
          "id": "ab1263b7-cdd5-414d-9842-7fa6cdf11388",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b0bf6a8d-360f-4678-9bc5-471e29161f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1da735-86a9-459f-b9b3-0cd4bd574f18",
        "cursor": {
          "ref": "ff026edb-0f33-4f9b-a1c4-8c6757117c76",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f02112bb-b20b-4cf6-a86b-7bca3fd65edc"
        },
        "item": {
          "id": "0e1da735-86a9-459f-b9b3-0cd4bd574f18",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3e68b789-99d3-4253-8304-c5c64fbe4441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd0e764-f808-43a4-8f75-7523185a988d",
        "cursor": {
          "ref": "adaa73c8-2a6d-4087-b1d8-88c809e8b0f8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "58ccaa55-bb1b-4c7e-85d6-10aa578992b6"
        },
        "item": {
          "id": "dcd0e764-f808-43a4-8f75-7523185a988d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "12d39a06-1f43-426b-858a-b108484f2ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0115d9d-7930-4a34-a7c4-6d44c778d121",
        "cursor": {
          "ref": "cfc5cd0b-e384-469a-917f-8abb598df8c9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "571fcc04-ebbc-4816-9d69-5315a9da5cd5"
        },
        "item": {
          "id": "c0115d9d-7930-4a34-a7c4-6d44c778d121",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "40581419-1c5a-4dd6-9a69-1c58d23029f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd1e11-9f19-419d-ae58-e971b317c030",
        "cursor": {
          "ref": "3e9b8a16-a293-4262-9539-26c19a304859",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4e827f5d-6437-4fe3-8c09-76317cd745cd"
        },
        "item": {
          "id": "aabd1e11-9f19-419d-ae58-e971b317c030",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ea92f813-8dc5-4ae6-b23d-9320558b092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af375aa0-411b-44fb-bad7-3277bdda80d6",
        "cursor": {
          "ref": "cf3c9930-47bc-4032-8de9-02cf18547770",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d41aba75-42bc-4cc5-a037-fdcd90476ab9"
        },
        "item": {
          "id": "af375aa0-411b-44fb-bad7-3277bdda80d6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a28fa4e3-50bc-4554-a776-63b258f935c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cf173e-90fe-46fa-b2cc-f22da0b151b3",
        "cursor": {
          "ref": "807dc55e-c5fb-4f6b-92a3-3dde179d0e31",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "eb94d36c-441c-4006-8e56-a9091b32e7f4"
        },
        "item": {
          "id": "b6cf173e-90fe-46fa-b2cc-f22da0b151b3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4b684045-59be-44ac-b21f-0d74180fc882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4720e156-02f0-4570-8f3c-8c77266240a5",
        "cursor": {
          "ref": "e9d8a06e-7c88-426f-9e9c-a57a4063a216",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5438b793-42e4-4be1-9511-0bdb930cec28"
        },
        "item": {
          "id": "4720e156-02f0-4570-8f3c-8c77266240a5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d8f7a80-5222-4939-85ed-102069eafb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be5131a-933d-45e8-b2d5-863a6ef81fa4",
        "cursor": {
          "ref": "036320f5-7d62-4eac-bb72-77fe5a93e5f9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9ba1049b-eb87-4f11-b87f-8a17de645f57"
        },
        "item": {
          "id": "8be5131a-933d-45e8-b2d5-863a6ef81fa4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2bd130b8-ef1c-44d4-90e0-852b27e2242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadca8d8-618b-4f60-9cf5-51cabcf13045",
        "cursor": {
          "ref": "815ead3f-52e0-44b4-a2c4-13b117cce6bc",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "55eb3421-0beb-405c-9e75-a99da26e9c46"
        },
        "item": {
          "id": "eadca8d8-618b-4f60-9cf5-51cabcf13045",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dc8582cd-8975-4e90-9845-c71534018b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0beb8c-1460-41af-8985-2c1e8a40dff2",
        "cursor": {
          "ref": "fd9534b3-9fee-4a4b-8617-9a9e2282e295",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3c41e3f0-7909-4122-ac8b-c84b4c00ac01"
        },
        "item": {
          "id": "ef0beb8c-1460-41af-8985-2c1e8a40dff2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "99976772-7f70-4d59-981e-e5b728f05e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a49cb6-4bf0-4a66-8b11-22c7ca5d0bd3",
        "cursor": {
          "ref": "08dcf6b8-e6ad-457b-aaad-59dfe7aea0d8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "299f52c4-0035-4aae-be46-15cee25a9874"
        },
        "item": {
          "id": "21a49cb6-4bf0-4a66-8b11-22c7ca5d0bd3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6620116-1f0e-429b-a392-899a603449fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc525dd1-7913-4d5a-a004-139f42ef8027",
        "cursor": {
          "ref": "adbba6fa-b984-4c49-be66-837f27672abf",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "25b0c18f-7efe-42bb-9636-bfbd9f7a7394"
        },
        "item": {
          "id": "cc525dd1-7913-4d5a-a004-139f42ef8027",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0f89286a-e0cc-499e-94c1-74fa181dae1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758e339b-443c-43d3-90fc-6f04f3cf56ad",
        "cursor": {
          "ref": "1e6b885a-6cdb-48a0-883e-f3f6f7456654",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0753f9ba-c443-4019-8c33-20c7ebc757e3"
        },
        "item": {
          "id": "758e339b-443c-43d3-90fc-6f04f3cf56ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d341425-44ef-4b1f-9a9e-25c7b2157f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aec8ac-6f6c-4dc8-bd7a-77314ea3b57b",
        "cursor": {
          "ref": "ffd88afe-343e-40b6-a81a-29b230a8b2d8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "29f4d2f8-3e18-4b43-aba6-a7df700c72ee"
        },
        "item": {
          "id": "02aec8ac-6f6c-4dc8-bd7a-77314ea3b57b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "033a5d07-773d-4c65-984c-4b6d30df3d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818909d7-dae4-4314-aacf-76d2316138bc",
        "cursor": {
          "ref": "27003a64-703e-4437-b3fd-fb72dd812bd1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7ae725ed-a48b-426f-8903-1b5517fff349"
        },
        "item": {
          "id": "818909d7-dae4-4314-aacf-76d2316138bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cf0f5f4d-7364-4493-ad68-9bc772650b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2c0df8-d0b2-4283-a69a-49ca951872e4",
        "cursor": {
          "ref": "0462d38f-b709-4dd9-8a46-f37aa4f3f210",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3c78b681-9cc0-400a-907a-1b5a44d16d39"
        },
        "item": {
          "id": "4d2c0df8-d0b2-4283-a69a-49ca951872e4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "326d746b-84f0-42ea-8520-5c51b7988daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c6a9e8-f819-450e-8349-a76e76ca34bf",
        "cursor": {
          "ref": "37ce0efa-7734-4b30-8cf1-9229e434a69d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "def2a40c-d691-47b8-a929-4c1bbf29265b"
        },
        "item": {
          "id": "c7c6a9e8-f819-450e-8349-a76e76ca34bf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "38aa2b79-3ee5-4d0f-8241-a314b0c27245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55728ef5-cb16-42ae-8ba7-9bc003700939",
        "cursor": {
          "ref": "59d9dec1-0bc7-46d0-923e-2ceb520d788f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "637a3f54-5006-47d3-b6de-45434b402a35"
        },
        "item": {
          "id": "55728ef5-cb16-42ae-8ba7-9bc003700939",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cecc7d6a-e784-48e6-80ef-c58479dc12d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d8c924-479e-437c-9dd4-def919e3786d",
        "cursor": {
          "ref": "8db5ad66-e47b-4f8d-b758-3c1b6dc049eb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "354ee0d7-37d5-4d89-9f6d-2933ade486ce"
        },
        "item": {
          "id": "73d8c924-479e-437c-9dd4-def919e3786d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4de8282a-a370-4a23-8ced-6206222445ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01aafc05-432a-42f3-abfa-f5535719ac2b",
        "cursor": {
          "ref": "5047a1d6-a846-4bf7-8286-49baf5e2fd76",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fef21b45-5f3f-45e5-b286-a539ac5bd633"
        },
        "item": {
          "id": "01aafc05-432a-42f3-abfa-f5535719ac2b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b7d132d6-df13-42ca-b748-38b872a58ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bee600f-690b-456d-aa0f-dbfdc12a39f0",
        "cursor": {
          "ref": "2e7fcd05-f31c-4040-b233-6ff8efdf0f89",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1312e214-4482-45a3-97d1-9d1181c63b3f"
        },
        "item": {
          "id": "9bee600f-690b-456d-aa0f-dbfdc12a39f0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5fd3d44e-bdfd-49fe-82da-b4bbefa11685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b45d5a-0c92-4d13-922e-9af549d24eeb",
        "cursor": {
          "ref": "f938f66d-21a0-45f5-bc0f-dac95f5e6fd8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "04d377d5-f868-4e01-bb8e-9dcbdb3db76b"
        },
        "item": {
          "id": "38b45d5a-0c92-4d13-922e-9af549d24eeb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "45e0dafc-8354-453a-9f66-30b638534748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b91785c-3f9d-43e7-8014-37b00087810a",
        "cursor": {
          "ref": "5c4e3524-ea24-4335-9533-b17983a7c341",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "113cbcb5-c66d-4525-a1c8-7ba2fa794e38"
        },
        "item": {
          "id": "6b91785c-3f9d-43e7-8014-37b00087810a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "30be1698-3dc1-4929-aa98-5f79812ed721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9157a79e-63ef-4da8-a1f8-8bdbdd4bf3e3",
        "cursor": {
          "ref": "4c012728-5c60-4bd8-ae43-7c7d2c00b623",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "44b9d1fc-a990-46ae-9f94-324aa4560a4e"
        },
        "item": {
          "id": "9157a79e-63ef-4da8-a1f8-8bdbdd4bf3e3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d3beb112-e5cd-4a53-87bc-ff57e9d46ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aa30ea-9971-42ed-9116-88b8b15ebf27",
        "cursor": {
          "ref": "8e07003a-96a2-4ee9-9ab7-5578dfc79f2e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d038271d-36c4-47ab-9f39-40460d214ee8"
        },
        "item": {
          "id": "97aa30ea-9971-42ed-9116-88b8b15ebf27",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "69892cc3-6b16-4d4c-9cef-2325aaeada5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd58bca3-75d3-4bb5-9724-f5d44fa80d58",
        "cursor": {
          "ref": "a1a15f3e-80f6-4e4d-9dc4-c8dfd4e0a578",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "875fb36c-5a93-4d19-b511-3127b85b3f35"
        },
        "item": {
          "id": "dd58bca3-75d3-4bb5-9724-f5d44fa80d58",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f2f8187-16ed-49d1-bfce-8fa1e50616ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226e87d0-7698-4650-93ee-06aacb3a929a",
        "cursor": {
          "ref": "72230366-160f-42f5-9c1e-d0ba1aa45891",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0827db2d-8bcb-4ba5-bd6f-90bf1c86d5d6"
        },
        "item": {
          "id": "226e87d0-7698-4650-93ee-06aacb3a929a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e72c10ca-c6b6-48f8-a2c3-b3d080578d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af7c7fa-5b52-4ce1-aa9b-fd238f78f909",
        "cursor": {
          "ref": "657189d9-9f48-4d02-a5c2-60b4eb547bac",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b08699c9-b209-46c8-a62e-53f007aac5e6"
        },
        "item": {
          "id": "2af7c7fa-5b52-4ce1-aa9b-fd238f78f909",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a2c15718-ccd4-4e02-9804-2bf2482e32c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112258e6-0bc2-4f9d-9601-9241d07ad2a6",
        "cursor": {
          "ref": "92650f61-d631-49a2-b82d-4e9e8887b302",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1d86b5dc-8659-428e-a659-9b915789e6c4"
        },
        "item": {
          "id": "112258e6-0bc2-4f9d-9601-9241d07ad2a6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "83d32064-f860-48dd-a920-0230eb4f8fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1973eb9-caae-4cdf-8aca-f0cf0ae4b9fd",
        "cursor": {
          "ref": "9d31d0fc-9302-42c2-bd4b-afaf4197fcb4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0a10db42-7b7c-49bb-8fd5-fe4fba541833"
        },
        "item": {
          "id": "c1973eb9-caae-4cdf-8aca-f0cf0ae4b9fd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c8d6984-2ac7-4e44-93d3-cf0d0b8d0ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcbab3e-976c-45fb-8c3b-f6cacf78ec63",
        "cursor": {
          "ref": "6c048704-0594-4d4f-947e-45dfef2944f8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "348a97ef-2c0c-4dd2-b471-c5f85eabea15"
        },
        "item": {
          "id": "ddcbab3e-976c-45fb-8c3b-f6cacf78ec63",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ef73d16-214f-438a-ae3b-74720c81d361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db26fa5-bf37-4ec9-a8e1-a87c843013ac",
        "cursor": {
          "ref": "110841d9-133d-434a-bc9f-55a6431c8271",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d2fdbfa1-fda2-4ff0-a4a8-106975d76b66"
        },
        "item": {
          "id": "9db26fa5-bf37-4ec9-a8e1-a87c843013ac",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "20ce44d4-7297-490d-a261-d972661cc26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ac0fb-7c99-4229-b87e-efb91038f7b7",
        "cursor": {
          "ref": "e38df1e4-d0d8-467a-aeae-272bb4ce5899",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4f3995df-1368-48d0-b7ae-bc49db6354e9"
        },
        "item": {
          "id": "532ac0fb-7c99-4229-b87e-efb91038f7b7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c8c15f2a-a3df-4464-ba2e-0b041a436c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060ab07a-9d82-4307-b467-8cf45ec5d478",
        "cursor": {
          "ref": "79bd1fd5-1942-41c8-8b53-afc84fe2441c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "186a9684-fdc3-4758-ab67-128268fde773"
        },
        "item": {
          "id": "060ab07a-9d82-4307-b467-8cf45ec5d478",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0f5f484a-827e-4721-b316-a4db0231efd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6adc19e-19f8-40b2-b5ea-20cb14b32bd4",
        "cursor": {
          "ref": "eecef3df-c95f-4bd2-88ec-77321b244741",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "98f05fa6-730b-46d1-be68-fb609452a2db"
        },
        "item": {
          "id": "d6adc19e-19f8-40b2-b5ea-20cb14b32bd4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "93c32de1-027b-4f6b-80cb-3b7fbdc01f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a81a928-262a-431f-b3fa-33adb72f03bb",
        "cursor": {
          "ref": "add9d392-0e3f-4985-87e8-d730a9fbcdff",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb03e06a-76f7-47a7-a9e9-a69ad9404b62"
        },
        "item": {
          "id": "8a81a928-262a-431f-b3fa-33adb72f03bb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4253d9e0-c009-457b-97b9-fb81e5882277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10865b12-a001-4140-aa56-ac05cbe79b21",
        "cursor": {
          "ref": "69133a36-ef41-461d-b42b-829a01a1e6ca",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f199859c-8454-4951-a785-5c28c6847a18"
        },
        "item": {
          "id": "10865b12-a001-4140-aa56-ac05cbe79b21",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "46b4179a-f26c-42b0-a7e7-0049e557ba5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b9725b-546d-41a7-bc47-a2928cffb7f9",
        "cursor": {
          "ref": "7f61b427-1424-4bc8-96c1-6e13a5352e5b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "67446222-dac0-4a3c-a547-0e6e952ee9a4"
        },
        "item": {
          "id": "94b9725b-546d-41a7-bc47-a2928cffb7f9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "46db9226-121c-464a-8174-dda9dabcfe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0e253f-d0b3-49f6-a8ec-1bcc163dd2f1",
        "cursor": {
          "ref": "090f9e73-2cdb-48f3-9211-11ae5ff55925",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ccaff434-ca99-4909-9fd0-8e924e72f738"
        },
        "item": {
          "id": "4c0e253f-d0b3-49f6-a8ec-1bcc163dd2f1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "adbbe799-a5e4-434b-93b0-a8cc2a478362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0272d689-1255-426d-9d75-0cb711733ee6",
        "cursor": {
          "ref": "971c0cb5-37ce-4fca-9b36-868664e1591a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5934cf29-a27f-4b88-aee3-833df7dc0cde"
        },
        "item": {
          "id": "0272d689-1255-426d-9d75-0cb711733ee6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1e484279-837e-4070-9760-f9f851a591d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c0e9e4-3d94-48d1-8e6f-252c33bf7d2c",
        "cursor": {
          "ref": "896d1b97-077d-44c6-8a05-f6c1354b93ac",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "df6b07f2-014c-4134-8c81-fd3dcff896c8"
        },
        "item": {
          "id": "92c0e9e4-3d94-48d1-8e6f-252c33bf7d2c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1797bafb-38df-4cec-9fbd-0c8afc4205e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4a6817-cbff-4279-b5c1-dc1e5752c008",
        "cursor": {
          "ref": "1188902e-c5ef-42a6-adc5-f5fe6b6a13f5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dcf07cb5-5e8a-44e2-932b-c8fc6945bc6f"
        },
        "item": {
          "id": "8a4a6817-cbff-4279-b5c1-dc1e5752c008",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3e06bd6c-d799-4eef-a46b-6795fdc0d44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5089604-4582-42c8-a784-e59995723337",
        "cursor": {
          "ref": "dc64205b-9511-42ef-8e89-5ecee455fd61",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7677f304-6597-45af-8c12-a560b78c38bb"
        },
        "item": {
          "id": "f5089604-4582-42c8-a784-e59995723337",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "422f15d2-660f-42e8-a30b-11899beb3179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc83f09f-b9fb-4b2f-bc4a-cce29370f516",
        "cursor": {
          "ref": "bef7eb85-5810-41d6-a6d9-1a3bf31f4510",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "75802624-8c8c-4b5e-9726-50b782a523de"
        },
        "item": {
          "id": "fc83f09f-b9fb-4b2f-bc4a-cce29370f516",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "192d45db-7b31-4876-80be-f7292dce4f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a121fa-91ba-4d21-9f54-aa46893572c3",
        "cursor": {
          "ref": "dd7199f4-bbbb-466f-8ddc-2c157ed089b6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f207e7ac-6d15-4442-8744-5517579cb4d1"
        },
        "item": {
          "id": "d6a121fa-91ba-4d21-9f54-aa46893572c3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c6f8cf01-ee26-49e2-953a-d58b395bfa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad646003-69a1-4512-b0d9-ee81e28007b3",
        "cursor": {
          "ref": "f9078148-4913-4c5f-93d9-860944e5c2ce",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9933c7de-9ff6-4768-b111-3069632d8d29"
        },
        "item": {
          "id": "ad646003-69a1-4512-b0d9-ee81e28007b3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cecddb39-794c-4614-a316-d4af4a0f9ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104de9b5-cf73-4ff3-9a64-85c2e4f41fe6",
        "cursor": {
          "ref": "8b80e8ab-1434-4cf5-b6e1-77bd5df2fd83",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "216b5e41-f21a-4a13-afcb-3df376ff4c3d"
        },
        "item": {
          "id": "104de9b5-cf73-4ff3-9a64-85c2e4f41fe6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "969ce7af-97ba-4d82-b658-21c8cdbc1a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e720e131-30d2-4e39-981a-c2e3686cca0a",
        "cursor": {
          "ref": "de18a3b4-a76a-43fe-8178-b50cfa6665a3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2b83ab78-ff68-4854-a154-781fc885829b"
        },
        "item": {
          "id": "e720e131-30d2-4e39-981a-c2e3686cca0a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9153e2f9-599b-472e-94d2-ecb0effc8f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0858a2c3-6488-44b9-b66f-422649cc49ec",
        "cursor": {
          "ref": "09f88e77-298d-418d-860b-6e4d27a16af6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0626f5cc-ff53-4d22-bd0b-a14afc3e3c59"
        },
        "item": {
          "id": "0858a2c3-6488-44b9-b66f-422649cc49ec",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5b10d917-f421-465c-8dc1-5c845c1ccb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cbf732-7f09-4d6d-aae0-3a486742417b",
        "cursor": {
          "ref": "c4e48774-a21a-497b-a9ac-3daa68a371f0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2684d59-d123-44d6-bdbb-75562d1377aa"
        },
        "item": {
          "id": "41cbf732-7f09-4d6d-aae0-3a486742417b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "40145388-3f29-4ed9-baa3-9ab89eb3ccba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b442dbe-891e-4b01-acdf-b61b4d041e60",
        "cursor": {
          "ref": "66b9e0bf-4931-4a0c-8c52-9bbf365391de",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2a647a9c-3cd5-4fd3-804b-982728d36029"
        },
        "item": {
          "id": "7b442dbe-891e-4b01-acdf-b61b4d041e60",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d634ec7f-8cdc-4359-8996-4fe56497bcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffa2f2a-300b-465b-a3d5-d4a2c9a2029a",
        "cursor": {
          "ref": "fb5ae91b-1ffe-4a0d-8a30-003e17f55ca6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8fa32a9b-f2c3-488c-9670-2d7aeed8abc9"
        },
        "item": {
          "id": "6ffa2f2a-300b-465b-a3d5-d4a2c9a2029a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "521db8c1-3d8f-44cd-9c66-c97376f1afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed0c991-aa3e-45a7-a3e6-271bbda318a9",
        "cursor": {
          "ref": "0350dbe4-c642-44ba-bbcc-1baca3a17858",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "935790d4-945a-41d8-90d9-7814d4eeb520"
        },
        "item": {
          "id": "eed0c991-aa3e-45a7-a3e6-271bbda318a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1c9dfa7d-1de1-4083-b1b9-7d01e991e327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5998501-7855-4c94-b924-be0be9d324f8",
        "cursor": {
          "ref": "95839791-d81f-4678-9af5-336682a19d3f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8d758739-5346-4789-8dad-07550f02de1e"
        },
        "item": {
          "id": "c5998501-7855-4c94-b924-be0be9d324f8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bb294832-7334-4175-be4d-54f4c19fc232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79755de-062f-46ad-8a9e-dd669dd994df",
        "cursor": {
          "ref": "0ed88ef6-3836-4a16-851e-18b41b244c85",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b38ba6f-cc69-4eaf-adf4-46c6dd235fc5"
        },
        "item": {
          "id": "d79755de-062f-46ad-8a9e-dd669dd994df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e48a6f0e-cb1d-4e9a-93b4-339e6eb8656e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bed8c10-d556-44d6-8cb0-8fa854eb1cf8",
        "cursor": {
          "ref": "eced1df0-4d29-4714-a23f-ce99d108966a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ebe12cf3-37a1-4676-95a0-b346f46235a1"
        },
        "item": {
          "id": "6bed8c10-d556-44d6-8cb0-8fa854eb1cf8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "39531848-d14b-4b24-97dd-37f4647fb5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cd0967-794a-42fe-b401-da016e54ebce",
        "cursor": {
          "ref": "2c9ca219-6f09-4f7f-9356-a3c32e91cb24",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f24afa3f-413a-475c-8851-b5f93d38b3dc"
        },
        "item": {
          "id": "69cd0967-794a-42fe-b401-da016e54ebce",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "57774dc0-45c7-40ac-b49c-5aa2ad56f33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0845de7c-b55b-4bf7-87ef-54787471604d",
        "cursor": {
          "ref": "3f354058-c9aa-40e6-bddb-c00e2af5720b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "338b8ea4-84cd-4dd5-b12c-361d519c487c"
        },
        "item": {
          "id": "0845de7c-b55b-4bf7-87ef-54787471604d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "12f830f1-110b-4372-9e32-4c6c51b9e48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f359a6-c713-413d-82cd-5cb954c0d712",
        "cursor": {
          "ref": "c27175f9-1e8b-4d89-991a-8a1ec234884d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb5541da-c87f-43b6-8bed-481aa1076809"
        },
        "item": {
          "id": "05f359a6-c713-413d-82cd-5cb954c0d712",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "520ef8cc-72f5-4d15-afcb-f5d7713ff58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e976ea2b-7f0b-452e-8927-f1fab728ebc6",
        "cursor": {
          "ref": "da7eedbb-904c-4f39-b1b8-d89a480ac0b9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d836292b-c041-4cec-9be2-edd40f3686b8"
        },
        "item": {
          "id": "e976ea2b-7f0b-452e-8927-f1fab728ebc6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f514c0bf-38ab-403a-995d-c720e0a20a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686f6eed-5bed-4237-9db3-c8ade32e50c9",
        "cursor": {
          "ref": "08fd6a24-3576-4e84-90bb-45079e9909f9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "90a6600f-648b-4318-919c-cb8850342bdd"
        },
        "item": {
          "id": "686f6eed-5bed-4237-9db3-c8ade32e50c9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e4e026e5-f822-4723-ad30-1bdec9fdec51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b32146e-d6db-4268-bc13-eebd30ec5d15",
        "cursor": {
          "ref": "992b3375-0097-4157-84af-df25edb901da",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba87c0ab-b7d7-403f-8724-919bef97df27"
        },
        "item": {
          "id": "7b32146e-d6db-4268-bc13-eebd30ec5d15",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1703fdf-7f7f-47f5-aa98-4d38595630ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380e0aa3-9874-4f93-aee7-e2063c02a72d",
        "cursor": {
          "ref": "34d00ec4-5205-4d5a-9bb5-14583d80ebc1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cd43a531-9d90-404c-ab68-b6b5e37b77d8"
        },
        "item": {
          "id": "380e0aa3-9874-4f93-aee7-e2063c02a72d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b0606929-9a42-431b-9454-d8faf5ecf4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920d1801-968f-4031-aa22-ece226700ec0",
        "cursor": {
          "ref": "2a07f79d-7a8c-4dba-81ec-dd02b79ad682",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b4bbf310-cf44-4958-a1c3-da6036626348"
        },
        "item": {
          "id": "920d1801-968f-4031-aa22-ece226700ec0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f5417474-ea72-4614-9179-ea90588a3a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff845d-b2c0-4a2d-8a47-f1580b13d1a9",
        "cursor": {
          "ref": "5709b96f-8ed0-42be-8eeb-5e7240c035c3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b8eb66ee-af2f-40da-8922-1076d8091e54"
        },
        "item": {
          "id": "70ff845d-b2c0-4a2d-8a47-f1580b13d1a9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fd627694-064d-4f9b-abbb-ee6573761f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2d9a76-4a30-4089-b098-bd848b67535b",
        "cursor": {
          "ref": "78d0fa60-ab8b-4a19-92b7-113960ca9225",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "658efea6-9cee-471b-a650-10265064f16f"
        },
        "item": {
          "id": "dc2d9a76-4a30-4089-b098-bd848b67535b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8fa620ba-a2ee-45b5-a51f-65c2c06ba400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e3e067-e8c5-4d97-8a57-2efdcd036115",
        "cursor": {
          "ref": "932e93eb-6abf-4b19-998e-f8bcae5f9f79",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "17a7b0ce-ac34-4a6e-a227-ef93cd1d7912"
        },
        "item": {
          "id": "14e3e067-e8c5-4d97-8a57-2efdcd036115",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "54c8764c-5c50-4fa1-bd9f-c4821cc2a43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c406617-8f18-4469-b1ce-0381296dedbe",
        "cursor": {
          "ref": "193ec2e6-19e9-47c3-a572-decd2046d4d9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "438c784a-bf71-48fa-a224-903df71c097b"
        },
        "item": {
          "id": "0c406617-8f18-4469-b1ce-0381296dedbe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f69e96b3-0548-459a-a7a1-3c3038f9407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a129db64-3ef8-4699-a7a1-d90fcaf46ec0",
        "cursor": {
          "ref": "c1c090d0-032b-4251-8eff-da903809ba2a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "248162ea-4435-451b-a681-5a05fc6968f0"
        },
        "item": {
          "id": "a129db64-3ef8-4699-a7a1-d90fcaf46ec0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b7fbacc6-0326-4589-a15f-76b165d590b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27738091-b690-4670-a0a5-1f2f212a5664",
        "cursor": {
          "ref": "d3b2b73c-466b-4b5e-b98f-9978c26e6b1d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aefff715-8919-46a2-9f0b-2a0b7a39a49b"
        },
        "item": {
          "id": "27738091-b690-4670-a0a5-1f2f212a5664",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fa95b705-e197-4d1f-9f78-b2e8fb22acfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc4fb5a-9710-42a3-808d-1c4dde8985ef",
        "cursor": {
          "ref": "6471a5fb-63f6-4ea0-bef5-defd41ff8ce8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d7baa183-66bb-4281-ac17-fc8399530bfd"
        },
        "item": {
          "id": "6bc4fb5a-9710-42a3-808d-1c4dde8985ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b59f57bd-2176-4e77-89eb-d4ad4c8450a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d51b563-2eb6-4601-888b-2d2fcbd7b4d1",
        "cursor": {
          "ref": "01b4de09-b1f5-49df-ab3e-46f4f739158b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "74fabc51-6d18-4952-adf7-ca2a7539e42c"
        },
        "item": {
          "id": "9d51b563-2eb6-4601-888b-2d2fcbd7b4d1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0b92f802-7e36-4947-a7a4-0a37eeeb1795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7348bf6d-ac58-4eb6-83f3-c795045d4e58",
        "cursor": {
          "ref": "efd4bec3-cd51-493b-b7da-045ae6749088",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "23625149-1db1-4e06-a7e1-83a00815dd2a"
        },
        "item": {
          "id": "7348bf6d-ac58-4eb6-83f3-c795045d4e58",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15a45dcb-78be-4d2f-b8da-f1bbe15c8c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d03f26-d7e5-4742-ab2c-5dd41c7a5222",
        "cursor": {
          "ref": "517dd650-bb5c-47b4-855f-41331c5c3676",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d17aa269-5c73-4efe-8365-20f8da2b410c"
        },
        "item": {
          "id": "24d03f26-d7e5-4742-ab2c-5dd41c7a5222",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3124ede6-5589-4182-bfc6-71618673cc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d4b55a-96cc-4b65-bc7e-9fdadb189bbb",
        "cursor": {
          "ref": "04918f95-2b28-4fad-88cf-0e4756de3288",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9a5022f0-49f4-4336-850d-190e3871f7b4"
        },
        "item": {
          "id": "42d4b55a-96cc-4b65-bc7e-9fdadb189bbb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ad032205-b98f-49dc-8540-862c22d25bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d31dd-4f26-4bfe-b2a6-578926d1a70e",
        "cursor": {
          "ref": "fb377c10-3dcf-4528-8710-5c3ea2c1e545",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5546611e-cd4a-44fc-8cf8-7fa046122391"
        },
        "item": {
          "id": "fc2d31dd-4f26-4bfe-b2a6-578926d1a70e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bd06dde8-9915-44f5-9eb8-f496f27f19f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36117ab1-99b3-4283-9a8b-d11167bcffa7",
        "cursor": {
          "ref": "72929619-4a3f-446b-ba9b-5876e8732586",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1edec8fe-73f9-443d-817c-f3b8c05dad91"
        },
        "item": {
          "id": "36117ab1-99b3-4283-9a8b-d11167bcffa7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a782e3a0-b512-49a7-8392-3997839133e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6665e0f1-ccc3-4b2d-a2c5-390af7737c37",
        "cursor": {
          "ref": "88c41284-f8fb-4fd8-b259-0569a07dcfaa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c131801a-b071-4e32-98c5-e7cc8637f1d0"
        },
        "item": {
          "id": "6665e0f1-ccc3-4b2d-a2c5-390af7737c37",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d949b1aa-9145-46cf-80f3-455c99e7ab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2311dce-3874-4dd0-95ab-1c9e4b86d531",
        "cursor": {
          "ref": "312dc86d-10b0-4bfb-b6c9-25381a883ad7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7d597f48-6eb3-4fb6-85b1-2188d59c2642"
        },
        "item": {
          "id": "b2311dce-3874-4dd0-95ab-1c9e4b86d531",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "22f316b2-e341-4834-bd60-16def0478f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1151f68-f81c-4143-b08d-de90c8f6d370",
        "cursor": {
          "ref": "158d4a69-d86a-4fe8-80e0-85c87db2c831",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b99c40c2-03a7-47f6-8fa5-3287313dbd07"
        },
        "item": {
          "id": "d1151f68-f81c-4143-b08d-de90c8f6d370",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "daf71dd0-9232-4dee-9938-2611f7cf4682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bf47a4-134f-4af5-9017-75d52978be36",
        "cursor": {
          "ref": "59d6ee6c-6816-46af-b4c5-1f479b8e19a5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "659c6288-e71a-4909-9716-b45afe1ab6f9"
        },
        "item": {
          "id": "d1bf47a4-134f-4af5-9017-75d52978be36",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "140d01da-7af4-4ffe-90d1-c9548dec88f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7ebef9-8ad3-4880-9dea-2be07f399330",
        "cursor": {
          "ref": "6e027f44-edc5-469d-91bf-77eaa2d89ebb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2aefc9a3-988e-4d27-b852-5a30ad8b6526"
        },
        "item": {
          "id": "ff7ebef9-8ad3-4880-9dea-2be07f399330",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "490c16e0-9652-495e-b712-28357946c949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b81a33c-f0ea-4c63-91bb-93890d85f438",
        "cursor": {
          "ref": "6cc914ce-b36c-4f36-ba03-6a38d4db7114",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "764763a2-e975-4135-b3f7-f95ddaba4db5"
        },
        "item": {
          "id": "6b81a33c-f0ea-4c63-91bb-93890d85f438",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d57c788c-c258-4b09-b24b-eb117f09d421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a833791d-931b-4187-85c4-5affe088888b",
        "cursor": {
          "ref": "a5eeb8ed-42ab-4d4e-a76d-580e411855ff",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "63303416-a5a0-4281-b0d9-4880c3857839"
        },
        "item": {
          "id": "a833791d-931b-4187-85c4-5affe088888b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dd168ffa-ffa5-4b62-9217-e5a677920398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd48d85-8c45-4c47-8379-e784a5a86853",
        "cursor": {
          "ref": "e813193a-b8ab-4806-bf7c-826ac540ed80",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6c5490f-5d9c-4a72-b9ed-d0381beec695"
        },
        "item": {
          "id": "3bd48d85-8c45-4c47-8379-e784a5a86853",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7495adc0-8da4-4e46-9875-ac7e3614955f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a015b11c-dbbb-4a9b-a6a3-ed6218d77ed5",
        "cursor": {
          "ref": "0dfc6ef3-1f06-41eb-98c4-10b3ebac3579",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d0880b01-fefc-4d82-a8d1-a20e4e362f24"
        },
        "item": {
          "id": "a015b11c-dbbb-4a9b-a6a3-ed6218d77ed5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a369d5a-4e33-4ce9-a46e-3155cfb3e8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea6222f-015f-4d10-803a-de28b81db6a9",
        "cursor": {
          "ref": "4992cdd2-7463-4a7d-96ea-75b3501be2ee",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "297be506-d238-48b7-92fd-dcf209306fb2"
        },
        "item": {
          "id": "dea6222f-015f-4d10-803a-de28b81db6a9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dcd4fa7f-54cc-4fe9-beb8-34f94f61acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ffcfd0-7bb1-49b5-b9f7-251d7d03fa91",
        "cursor": {
          "ref": "370b5ae6-8270-4814-b7ce-591964b963de",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8dda2f7c-667e-451f-ac31-0e48a87e017d"
        },
        "item": {
          "id": "64ffcfd0-7bb1-49b5-b9f7-251d7d03fa91",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9b874d4f-268d-4a1b-82a4-fb50ec488d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50bb855-570d-4afe-b774-80244740b76c",
        "cursor": {
          "ref": "b7b256fe-dd60-4827-9286-83f93f94dc64",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dfd81893-184b-48f8-a83b-0cf086777fc9"
        },
        "item": {
          "id": "d50bb855-570d-4afe-b774-80244740b76c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4c5fe1d1-4e2f-4aa8-b6fd-f2435e532913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487653bc-cc6d-4100-8980-86785083e2c5",
        "cursor": {
          "ref": "ce4ebcc0-3584-49a8-b5c9-6c0cf7fc4360",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b2c415fc-dfde-4eae-97e8-ab24a56ee070"
        },
        "item": {
          "id": "487653bc-cc6d-4100-8980-86785083e2c5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "956875a8-334e-4f0c-aa40-3c4d62197c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e105237-94e1-413d-ac8a-63fff8c994e2",
        "cursor": {
          "ref": "198e226d-766f-45a6-9f46-74ba849a353e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eb7e9677-5fe5-4531-af8d-da229278be56"
        },
        "item": {
          "id": "5e105237-94e1-413d-ac8a-63fff8c994e2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "75b5cd9f-0ee4-4d55-a568-9c7b2b2a63ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021a5d92-de93-4b76-921c-351af9cc40e4",
        "cursor": {
          "ref": "232e47ff-c14d-4097-afe7-098dbe2d3065",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d6d47de4-8db8-44b6-9729-f4c08026541b"
        },
        "item": {
          "id": "021a5d92-de93-4b76-921c-351af9cc40e4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0721424e-d72a-47cf-ab70-9ebffaec8686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdab934c-0150-401f-a6d0-5b187ea43b09",
        "cursor": {
          "ref": "f1aee2ec-cd68-4cfe-9e22-4751e8203258",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "06f0c9b7-3485-4aa4-a252-df6387b6a9c7"
        },
        "item": {
          "id": "cdab934c-0150-401f-a6d0-5b187ea43b09",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f7815165-60bf-4f55-80d0-54610b412b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91abdfc-9466-4583-b9ed-1195454aeaea",
        "cursor": {
          "ref": "7ebc9a71-7172-411d-bf1b-e7e271daebb4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2c7f0c4d-4e26-43f2-8ed7-6fcfd5b32bfe"
        },
        "item": {
          "id": "f91abdfc-9466-4583-b9ed-1195454aeaea",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d82ee245-dcd3-4723-b36d-fd2dac2508dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e608dccb-8441-42bf-a462-a28e799c0f23",
        "cursor": {
          "ref": "51f0c73a-f833-4e55-b3da-4291defc7b81",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "23ef04b3-4a29-43d9-895e-3dfa5e010ae1"
        },
        "item": {
          "id": "e608dccb-8441-42bf-a462-a28e799c0f23",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e3eabc4c-320f-4d83-98bb-9a833a2cf05c",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db51afc-43eb-4185-9409-9ac6083fabfb",
        "cursor": {
          "ref": "12a84fe0-3f0e-41e9-b28d-9392874b2613",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2496a9f6-2b51-475e-ae2f-3b65246476a3"
        },
        "item": {
          "id": "1db51afc-43eb-4185-9409-9ac6083fabfb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2e30c821-3123-4fdb-aabb-abae90d85690",
          "status": "OK",
          "code": 200,
          "responseTime": 3800,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84612f3-d520-468e-bc05-5e2aae672bfd",
        "cursor": {
          "ref": "96b34618-f8d0-4542-be9e-7cc6d08002fe",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b05ee83a-3e78-4f81-8183-ccaa4829ca0a"
        },
        "item": {
          "id": "a84612f3-d520-468e-bc05-5e2aae672bfd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cd78abf3-e5bf-471a-b6aa-2d43521cfa3d",
          "status": "OK",
          "code": 200,
          "responseTime": 3293,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cbca3e-b53b-454b-b3f9-60128973c92b",
        "cursor": {
          "ref": "b87d1440-fdb1-4b18-8040-54c6f05b7226",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9b6a612d-000f-4e88-93fa-dbb278344fa7"
        },
        "item": {
          "id": "89cbca3e-b53b-454b-b3f9-60128973c92b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8d01a4e-d78d-4d8c-b10b-63d59f4788e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cbca3e-b53b-454b-b3f9-60128973c92b",
        "cursor": {
          "ref": "b87d1440-fdb1-4b18-8040-54c6f05b7226",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9b6a612d-000f-4e88-93fa-dbb278344fa7"
        },
        "item": {
          "id": "89cbca3e-b53b-454b-b3f9-60128973c92b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8d01a4e-d78d-4d8c-b10b-63d59f4788e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375479dc-53a1-453e-8a96-9f7f5d8a16ef",
        "cursor": {
          "ref": "d08b8b49-9e18-4f18-a217-4f07710a52cc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72f080bf-72fe-44af-8cf5-b36f7a10ef1f"
        },
        "item": {
          "id": "375479dc-53a1-453e-8a96-9f7f5d8a16ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7994dc6a-d3ce-494e-825f-78de06175c80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1c9f43-790e-4b49-817a-5518027e1a7e",
        "cursor": {
          "ref": "9fbe4f5d-b895-420b-8a90-4e58a96cc394",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c254a5c9-3ebf-45af-a118-440520986178"
        },
        "item": {
          "id": "5e1c9f43-790e-4b49-817a-5518027e1a7e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d40c44e2-6b81-4f74-8144-479e069ee2ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}