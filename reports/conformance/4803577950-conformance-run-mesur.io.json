{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "59704cbc-e64a-4f53-8f93-bdb1e9d7061f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9c5f4798-4f23-4958-9f4e-0ab3eb1b0be1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "674d023d-8cd1-4904-9e26-80624b7bafe0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20d772b5-1fa5-4baa-8258-71f82272df89"
                }
              }
            ]
          },
          {
            "id": "ec480c2a-41d2-4084-bd4f-80644acdf7e8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d54d66d1-54c1-40e2-9fb8-7b8f477e077f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29552437-c87e-4579-8295-74447780db74"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b9554b77-0893-4c99-b116-d9047b4bbf2f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "db69326e-eff2-4175-85a2-ca3f85ada198",
            "name": "Positive Testing",
            "item": [
              {
                "id": "426315a4-cc39-468c-a61d-102e544f7eea",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "815e187b-a270-4f29-a642-c2cd0fbcdaad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "222bf421-ff9c-473e-b810-530469639c2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6f12037-e18b-4d2e-8812-730a2b536b9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3de6d2c-0139-470d-b186-e8f46114d177"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab56bc6d-ef0f-4b7b-9f37-51ea8858bab1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59cff40b-a41f-4207-bac3-6b6a567ce8c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f224bde-0bc6-4832-a45a-2c8c666e5ada",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2c677a3a-2c7b-48e2-a39e-f0bad7826ea2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6e32d9d-604e-4226-b405-050f5be7bd4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00107836-ef4f-4a76-a51c-56d0a8dd5ddf"
            }
          }
        ]
      },
      {
        "id": "5f5db414-6a86-4034-9dd7-9eba53996210",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dbb94e65-1bb0-448e-a819-37891b8b2960",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ce55f26-1511-48f7-ba10-af44ee02fe3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46143bc8-239e-4ed3-b356-7986bccbbbdb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b483f94-1717-4409-95fb-689f399d0570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0dde880-672e-4a44-aa0c-46f693f4b375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15b2040-5643-4032-b305-7ae2830c264e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c08aeb-66ac-4cd4-8102-4ccfff75d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0671382a-6cc5-441e-9b7c-9880570184ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99a4973-68c5-4fc1-a241-4c013dea7bae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197ac173-e442-49ef-82c3-325aab0b4803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dc7641d-37ee-4c3c-860a-3bb29bb5b6f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f8df8a2-0979-478e-a2f9-823ebca90287",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05585066-668d-4175-9d5e-921cc53f895a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f244eb-002f-4263-8f9e-b619fdf6eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acfc4b21-e944-4fa3-9c80-3990576fca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36120e6-cfca-4537-8ce7-a03f6a97795c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d11f39d-11d9-40bc-8771-04ec84750408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d823d3d5-0d54-4fc2-9812-63382cdc9cba",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1050fc87-5a94-4353-80e7-a2cd7ebbb2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edab9733-5797-43aa-adb3-ce76a0adad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a69245-cc69-481d-b578-ced2110ccd4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7dedcd20-9a79-40b1-b081-14e9a68a091e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4da5c45-027d-4c41-b0e0-a27e57c4415a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "458ad5af-c90c-45e1-bc6d-8ed0958f99ae",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17260651-44a5-4dee-a446-30197b0e1f9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "204cfbe9-5d8a-4465-b2b1-263abf9c4e4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b78b458c-c8ae-4a6b-90f5-fe152e78eba3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e2bec251-81dc-4d28-832b-25a6ef5888f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f45acce4-79f9-4d14-b45c-f385bff2dbd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "295807d0-2ca0-4706-b2dd-396445ca030e"
            }
          }
        ]
      },
      {
        "id": "8442e0a4-a69d-4752-9ca2-d9816d742057",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b56028f1-d8ad-4341-a9c5-8334835c3c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "629b6fee-3cd8-44b0-951b-8f80dcc809b4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e4360a57-099a-42e9-ade6-a0fb8a88edfa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf072cf-e2e2-4b28-b456-7ea9bfbecda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b064ca9d-09f9-4e64-931d-6cce56c8ec43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd67661-1f62-4b31-87e7-989c30db7e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f84371af-c794-43e8-96a6-6001f37e2517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357eb20f-79bf-41e1-b2d9-fcd59951639b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db929fb-81cc-4b5b-b757-057bf2234dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2138bb10-1d4a-4fb8-974c-884c58244bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fc03db-f5fa-4557-ba53-b4fc057804f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "556a689f-d1a4-429a-8e97-f90e5f0ce6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775e495f-0bc1-4c5e-9924-45f093ef6074",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a606702e-9509-46f6-8b95-63ae654a0610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a415e225-d355-47ef-9c80-5e703982b04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc154d9-9d20-44ce-a457-11ee5947bb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78992121-e554-48b3-80bc-06bc627966d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5081c21c-95d3-4d74-b098-8ebea6b59d8e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f27fd-5853-4e14-b701-2e62a49df30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e0455d-a11c-48c4-8a6b-ab344a981b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6421004-193c-4ad4-823b-1c4d09557816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff70cb9e-1883-4d7f-9f64-8fb1dd9c1dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a584c961-b3c1-4fa5-84ff-03f8367da388",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038a7d37-28c2-415f-bc17-45cd4da0e835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e662b12d-e8c5-4af1-93f2-ea14c80ed94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2c18a5-6d7f-4fbd-95e8-e32fa544dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12f718f3-f24f-4525-bec8-abeb1437dfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5aa46a-8c34-4e0e-97ce-82dcfbdd5c37",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6162d072-953b-4412-b93d-0c184a170cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bd463f-5861-4554-b8d9-e0a37cecf5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8da033-588b-4cf5-b04a-cca06c8073d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a86c8c1-faf2-4471-9e42-76c7b3788f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5606ad58-7de5-4b24-9f59-2e834aa89748",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de08a51-3664-49c9-a959-e074b229d1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7dea907-5a23-4bd3-b23e-dcdef0accc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c7dfe6-20e8-4464-8c6c-3f5b5def59d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "191f63cb-b4c3-4e57-aca1-51da40266743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df52f295-b686-4fe7-82df-112babc16161",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb513cb4-b476-44a1-a3dc-532750c94567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05baeb4-4543-44e6-86ae-cda85671fe24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb79bbd2-2cff-41dc-919d-906b91eda3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2038333e-c5b1-4943-8cb2-8a4352fbb686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d3b3a-28ea-4fdb-83d8-df9c7831cfc5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22687dd4-aafd-46fb-85c6-6a7f1c5bb655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80661d0d-c457-4036-9a58-edcc72065616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889ea8d1-97e2-47e8-aee6-fbbec618f97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0720d91-49e3-4577-a8e1-b950ef70451e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9442fd39-caed-40e8-a2fc-dfff17c84e29",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb980a9-8d30-40de-9d50-d711f74adc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad23454-685e-496c-bd37-923cff1a84d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db7adf4-a4d1-4459-971f-bef3b99e1a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be97b8b6-7aac-4d15-bb5e-f6207d5f833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c4ed30-9910-4e1a-aa2c-219f3184ba06",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9fec74-0e4c-418f-a119-b87a6ddbe255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009241f4-60b4-4726-a3c0-ebdbd88d5bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaff3f7-ffef-4897-8ee3-bd96c9215c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c03f532e-be40-4e66-b167-8b47481242e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7860cccd-aa9d-4179-ae6f-8e72727188f5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4d6e6e-930a-47bc-a317-129cdbe93f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62561ae6-1566-4cc8-8003-7c849f3217be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b8f518-c14c-40ad-bb65-eaff76e4759b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c2c090-d443-4463-89af-32f850bcdd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d0c21-05c0-40d7-b264-bcd7faa1add6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab2c430-2cd3-41dc-9a6e-5b09a6eaece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0857ba72-04dc-4839-9110-e2520874a8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac7db0f-c308-4a26-ac23-61d35efdb4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358b73df-cb19-448f-bf1a-96785c28c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ad2888-324d-4047-a7a5-9e70e676a699",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c05e73f-6815-4168-ad68-f36fc8f81701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbfebf4-e632-47fd-90ae-835036285ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ecc085-859e-42ed-84a0-87309845eb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fdcd058-2a09-4508-9786-6393d1224cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b5d6b-6589-4c9b-8a31-ad9ca4bd55d3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f3ef85-c597-4760-bf77-d22abde65e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8eb8a9f-2694-48e8-b5fb-ea74b8093b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b2cdba-726d-4bdb-bdf6-6c8cdee82d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44ae9ac6-71ca-4ed2-a958-9008e264d845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f002eb61-fcba-4a66-ae8a-76aa0af7698b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2283e1-df16-43de-9abc-ded38e9709ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fda4d39-dbd6-44ce-9738-e0966c42c7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc64cc3d-0c58-4ab4-93ae-799213761f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f40bb54b-e0c9-45f3-8da1-78224d3108a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27241f7b-b9bd-4025-997e-6cbfd1c2d563",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa987813-c3d0-4155-943d-92f0912df74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30635bed-062a-47d0-9306-2efa86f6687a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7206baca-fd48-4e94-853f-c47c2fd00c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64736ae2-9df3-4ef9-a1de-0c27d6c0a359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2ce56e-879b-4eba-96da-dd6dbedbd277",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92ead6b-f29f-4866-94a9-fda58309d3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cd6608-29b5-4c0d-99a6-704906d05a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac35df8-aed5-4103-a0ee-1662f9c5fdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e75cdf7-582e-4410-a185-bdaf46ac6a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33dabb1-0d64-4812-9959-c87ce4787770",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e69b18-1b44-4d1b-9e9f-864c8832892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c360d9cf-f400-4aca-9d07-21a08c8d3cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58e8491-7b8c-4d24-b6cf-57788ceaa755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e99a123-31b4-4e38-b4b6-65f7d1e57c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a644a6-e181-4b1c-83bb-f51918ba9e59",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0968147f-3038-4f81-b111-5b9787c03861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8772c7f-e33a-4e0f-af89-0fce8bbf0d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b14e63-2020-4e9a-b9f2-0b4c62b7b4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c68e93-8d55-46c1-aa90-025c31d3bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bd6de1-80b3-4db6-a641-cc9f12b80aac",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3b665f-0802-4744-b777-5debba31f819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d179da9a-3088-41b1-9af0-75340b061c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7082bbf-f7cf-4064-9577-44cc4e97ea08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "589c902d-8e1f-472a-ac1f-9d83e0b5f016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d36d715-3429-45b4-bf05-4c6446a39823",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619046bb-9f86-4142-bc5c-1cb4a0cedeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b089269-1744-4877-9c80-074d42e7f4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437357e5-d641-40fa-867f-131f3542d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddd2e6a-a80b-4902-b58a-ce4e0232fb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d26e74a-51f2-42de-a415-8e0b45d74b28",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f26d925-846a-49f3-98de-a0c80170bb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2e7e54-e304-41bb-85b5-f7f43b156001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5a8c65-cb25-4b66-a88f-361def5a0ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfca0189-acbd-4b80-a166-b915a66530c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fbc4b5-c86b-482d-95f1-90574619e7c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20449473-7f6b-4ca8-8823-0e4f3017d5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626f164d-aa2a-491f-876d-3cbcedfc2ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4376ff0c-7fdf-4ebb-a704-e4665fdc34ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1154dd2-8030-4b0a-be30-d1e441b3db3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c356bee-26fd-4286-95ad-04ee5efaec79",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6418f42c-7d0d-42c0-bb34-3197e2b52d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6047769-625a-408c-bd92-5974b883b021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f110e8c7-23df-4e79-a40b-7d35b3e9ffaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae7989d-4c80-41a3-9f3d-8b99dc67c97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a632b1e1-697c-4f62-b767-38af8027f461",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ae1d08-24ab-42df-8c25-91c28ed5cc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cdc3e6-ca8f-40a0-b111-843e9f96a858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e14417-6ddb-407e-8377-ebf3bc73d533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "548f0090-b1fe-4f62-a3da-0ac68ff29578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e73e834-fee8-46ad-9155-119b46cc3c6d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70660b88-927b-47a7-8741-aee87a56e1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51aa3a8d-4092-4f1a-abf1-6b5ab0a121f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f0fa0-6e07-4c9d-9d3a-5f7828023c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65d1391-4bd6-40fa-84c1-a0f7cab855e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35430440-a31b-4e29-869f-cb89f8e1aa4b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a94bc5-561a-4ff6-95fb-ba69fe5bc4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7546455a-e8b6-4005-93ee-ab5dcb5ff73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06c63e9-1484-417f-927a-506cb235ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1b7dcb-b596-43de-bee5-9972b35798d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a665f6d5-b41f-4a17-8753-dfb5f58f1dce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34428239-6a1f-40ee-859a-3924b9636d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259431ed-1592-459f-8db6-0bc2ecdbe1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3459bb-0bf4-4dcb-8868-38923b57f527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff38b73-c5fc-441b-81bc-4f6e7d40b8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e58a3-38f8-4304-8246-6e7587a57c0c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dd3a93-4d41-43e9-a1f0-8aa4aa09ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307f0682-7ffb-456f-88d1-e2c8c8cd2def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffd0742-472a-4cb0-8920-4510f5481225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "949c8194-f287-46fd-ba2d-c758538d7978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cf0059-9c77-4758-8e8a-10a1c60b2990",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5811f8bd-0340-44bc-bf18-0699c4242e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0bed6a-5c60-46d3-bf9b-b17d9b175613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1fc729-6a41-4443-be11-ba758db71117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03393c49-df6c-48b4-a040-254eec06bd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4538789-5585-4868-8f66-c710c4c0b557",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee23e468-e4a2-4536-82c1-22495a4924e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3e358d-5bc1-42dd-9f20-4785cdb93c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcc9b45-2367-43c1-83fa-6648b9369716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15eb5740-1eef-40b3-9235-cba39bc31a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a3cf39-b894-40e5-bb55-ef8f8652ebb2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7efecc1-8037-4837-a18f-cd8b7464ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60eafd2a-c2b5-4583-bd5f-30d8ad7af9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75139805-aba8-45f4-a513-40f7db05aea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d921ab9-4546-4a1e-9ca5-a25d318847a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5076be6f-c791-4708-8083-23f6656d0834",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea487cd0-5290-41c8-a118-57a7d2d48410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd51900-25a2-4ab1-874d-7f87090247e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036c209f-7d0a-48a7-b406-b82e1d453c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "779c05a6-7368-41e6-ae03-ad52d6f32a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0426081d-7f4a-47e9-a6fe-592ae19bf7b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4f0821-cf19-48ae-9b66-f0c1d21329df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa78a80-e71a-48d9-a4cc-33c19b4acb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee67dfa7-2a0a-418a-afba-0345176f0b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a2300e56-52a8-47d6-ac3c-314ec0087b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d0d529-c857-49fb-bc62-efc17afac6ad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6b25a2-097c-4bf7-85b0-b197d595f00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a9e4e18-11c8-424a-b360-3c8efce203eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfee07d5-220c-4c2c-bbcc-9d1976247657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5523ac8d-2b5e-403d-a029-18dbf6343cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcf16d5-66ee-4793-875b-8c1aed0272c6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42a2a2c-8712-4b80-ac9f-cbd7f3d9dcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fea6a2f-d8ab-4df7-ac4b-06a5d8f34469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7025fe5b-bdf7-4e1c-870c-ac6800d1e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d86e60-4b9d-4e5d-ba7c-5832b8f41607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fc2075-4214-483c-b9f7-f9b0658438ec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2cc27b-a983-43b0-818d-d418f081d145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248e7967-80c7-4397-a1c0-b1e6dc0b040e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e9d620-1213-40ef-82ee-9960415b87d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f39f586a-feb1-4fc8-b847-cc5233a79f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ccda6d-7f89-46f9-8170-4cd45556a904",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd80156e-ba67-465d-8372-736bfa5deee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9542da-6d3c-45c9-b3c5-43370d394e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a55335b-d8b3-4beb-9a4d-3a37527f29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84dcfb06-1bd5-4c2e-9fea-b56c595c814f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2862c22-4e0a-4112-914e-885206f14425",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370b033-9e5d-46fa-92e3-f86c83178dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acc34cf-6951-4d71-8199-4c56eabd4944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530d9888-1477-4203-acf9-3436cad7b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "131deb6b-66d0-4f53-b9aa-78eec2f7017d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90e828f-e162-44df-841c-84fcf977d61f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525e8ac9-fa21-4fc6-8743-d37ee0794507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956dc648-9772-4f22-943e-6d37365ffa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d94ca9d-f57b-4bea-b660-ee602ff8388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e47fb503-5e3c-4f5c-8ee9-147e067a0d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2656054-752f-4ab7-9968-8cbe7a9639ff",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e35808a-770e-4308-9fc2-240561ed6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0060e3-7ee5-4c3b-b518-eae05d8850f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816af654-295c-4160-9f1b-8e5210be3529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d9ba60-4e8d-4bf8-bc4d-3d93e2bbc64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ed3365-7eff-45c2-979c-f56ba6c1bce3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967ca23f-4157-4114-995e-eed8997651e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8929ceb9-07cd-45c7-b500-741ab8484e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61455a2f-b003-44cb-aa5c-f86b6e6a8fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cea8475-22a9-4066-bec7-7f73f20d0032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b0a65-15a7-4d37-bcde-cbc354b11ff4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5293198-ed40-4bc0-841b-7272fd3f2c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3117ce6-1c54-4364-a123-65dfefe79bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22904261-f3f7-4e2d-b7ce-bf8217233ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "11d4fcb7-7170-4752-8915-81e3cd2bfc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f9ed90-0b6a-485d-aecb-8330f0e43605",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c576e0f9-733f-4801-8b5b-9fa4dfd276ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a08e7-72c7-4f4f-b46f-023f6aa2e531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73d259e-3d9b-4f70-bd99-61e7674fcd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac19de8b-7bd6-426c-9fa5-6b94ee0b6cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5189535b-202c-4466-baef-32464562773a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887f5e3-0d32-490b-b734-e09fd46ef82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68545866-e447-454d-8d3b-a7300d3f9d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d330705e-7117-4be1-86ae-52bd8884303c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee32a6f-3334-43e1-b502-3694e94baf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ddd254-dba8-4230-a40e-64824cc89d11",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f94aed5-4b82-4644-a250-b6d682b1136a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac3884c-dfe3-472d-9024-478600692b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ec8a96-db42-460b-b3f1-09eaeb2eccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08146657-d0ee-41bb-b474-a00575e3f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0044db-0190-468e-bd20-f8046751c350",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7906de1d-08df-44aa-8faf-f1767574771f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95290632-08e0-46cf-b936-a277cc48b22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d4f4ee-57b9-4d3f-9795-9e3514f4f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b969905c-7983-4af6-981d-968fbf900a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0eb6430-c977-4ba0-9c4d-5436c48e5a7e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7bf52c-9e61-4406-8bf3-4508f6c4351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d90b09d-b342-430f-8b9c-37982263982b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a25f5b2-58c2-480d-a3a5-55177a0bc7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6920a5-d2f0-4520-9274-820ad5e2311a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf61077-42b5-41b3-8fc4-2f9ffbe13764",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe263787-51a6-414c-8c49-096abcd37e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51acc966-a9f1-4059-bbae-9a14ff114481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fb78c0-cf75-4688-907b-c414a474c034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebbaab6-b790-48de-92be-8e0cebdefd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533c66ba-7291-48d4-9b58-afbd1a4986e1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf8a302-5afb-471e-a26c-86b96cb1133f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751c5c4b-c20c-4969-af32-eb3be302ff14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b3766f-8a8b-4460-b740-310a90ff5426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "723d6e54-4daf-4218-a6a9-4ccad7764395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd3d349-eaa3-4066-afa7-04bd4c86f7fb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8ec995-7135-44f6-bbf8-80a39e27c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecb10e8-5321-48c2-bf61-766d597aa0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8227211-4241-4fdf-a657-aeccaf755e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd7ab9a-5338-4a89-a139-d591e9a71637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9902fa6d-5583-4367-a775-fac82d79f988",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78ba6e9-4945-44f3-9723-2b63d2e1486f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa042851-6b2f-4343-bc6a-9bc92127526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d56493-075e-4681-ac44-4c727441c560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "065ea4d4-2bf9-48ba-9c3f-1413655879cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aebcade-c632-469a-85fa-72f1ecfda501",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd65ccab-2fbd-4658-9427-eded8d09396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2d98cc-6308-493f-8bd0-206c23c99ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e54b692-0ee2-4ea6-9e41-1eadc1beb9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b08f942e-b1fe-4fdf-830f-2da8bdfebfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e445030-ef1d-4c11-a38c-82d86839540a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da33277a-55f8-4240-9f28-69315d8d845f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f067a0-f99e-46e7-a10f-db1f4df3db33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191aa9c8-c26e-4f67-9320-81157367cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4faabbf0-8fc2-4149-ae50-fd9bdce3dde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfed64c6-b3ba-45a8-869b-88a6ad29b89e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ad0681-66bd-4051-8e2c-026a77a170ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf52aee1-05d9-455e-b20c-1852b71f8cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480fff11-3e18-410a-bea7-c3b7f2283d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5336825d-b542-4ef1-a490-f890725c3142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69542b3-4ca5-4d5c-ab45-97b2b78c7f83",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebada5e-b8f2-4471-8e74-753de6d1612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676deee6-7f58-4ecd-90fb-aa4a14072c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7330ab69-fc37-45ad-bccb-f50ea011b5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a6d32c-3ec5-4f5a-a4ef-5606a94c811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee77d5f1-55c5-4077-a536-1cca39691352",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43660685-1c66-40f6-b494-4311513f78f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af330e4-306d-4ba6-b5d1-d8439fbfb467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ac24a0-db03-42b4-8854-feea43405636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a9d9f0-7b32-4243-8efe-6ccf2bb1fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95b526c-0e52-488a-8413-5557b4b93b5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749cbc0d-c54c-445f-b9a7-23528d01b262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a49b1b8-1c0c-4b70-a67a-0289174f2866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c269dd8-c2f0-42a8-a701-c6cfe4d7981d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb4b79e-de71-4fec-a13e-41e929b95654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7230b01d-141f-48ef-9bd0-c5efa85ef005",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ddda7-2e20-46e7-8e11-88dd6bbbf5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38af850e-4b14-4f20-81ca-e1ecda453188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ad5d8-0a8e-475e-bfce-ae524b4868ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1edb7c1d-549a-4e9b-b9ee-3047eeba5690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cdfdcb-6a60-4912-a1d7-7ccb5c23bffb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd79b202-ed74-4629-9624-67dc655bb6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79af4e03-cde3-4e68-ac6d-796b08c777ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1601716a-0193-41f7-8495-450177ff5628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e1d908-51c3-44b1-81ec-1b9fa9a408ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0021ecc8-9840-4e8a-a814-11832daddfbd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0c5f30-6ac1-4830-8262-7f6e0f4256cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12549ade-f4d3-4457-b8e2-839ff4f85765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62177615-af4b-4625-9394-b086ee21d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4930b3-269d-4982-83d0-8c1d4a768ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5cf7a8-483d-490d-ba85-3eb69d92c7a2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85623169-8474-4cba-8088-d01e2168236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0a1c46-d27e-4817-b735-cfa79253ad8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9af3e3-ea0e-4b5f-9446-bb57d76eba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8802cc05-e43f-489d-86a1-d4f987b6ccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20e818-1894-4a8b-97e3-3eda8aad09b0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b87dc8-07b5-47cb-9500-f1b952b17031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cf5a73-d539-48b2-80a3-f700bc9962b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd24f469-c773-444e-98f6-df2c1a936574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8efba2bf-e687-40a7-9487-f609e0af9353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee5c13f-375a-4c19-aaa8-fccaa1a49cf5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eb3fe3-5f30-4439-8a33-ead0e94c3f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec59e9a1-3162-4b30-992f-6aa7723c5b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e20549-18bf-433e-a910-2cccec43ef0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f575b706-b835-48a9-9536-12bcf76beab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bde359b-fa77-4606-91f2-f925f3a19519",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a834b32c-d488-409c-87f1-36831f666e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b06f597-c11e-4181-a8d9-d6f725191585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb9d590-a6d6-4407-8eac-c330d6b024a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4edfbd43-6b29-4c8a-b252-9a52088bcfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144a95f4-a80c-46b0-b96c-071a53011e78",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c853126e-fffd-4d88-8e99-bfd87b11a64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d06a2b-493d-4732-a3b7-9d2d6502e083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00961a93-4214-4977-9169-239e22bfae4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea918d3c-3248-4716-9db9-5bb827028b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3365afd-3905-4ced-9ed9-b6f0744b8d92",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d876216-9ff1-4631-b061-947fa6614d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dd3599-5c0f-4c01-9d3a-a082cd24a5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133a8013-d5c2-44ab-9266-9d15c7774f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7faef395-7c1f-4e8a-8b0a-7a13038c6c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd047d12-0cbc-4abb-af3e-d6ba1dc2d575",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4124d657-e7e2-4490-9b81-b296ed36a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749420d1-a608-4e0a-8976-d9255912a62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50edeeb7-dd86-4255-abb2-c26d9df01305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44eafd4-7a61-4902-adcb-1f4d538919dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c118d334-42bd-4f57-9783-ce80c0423be5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35063013-5956-453d-8414-228b9241a077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987037d8-7bef-44de-a680-6e6dd28ab153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408190fa-74a3-4d7d-8767-6fdacbd8e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "052ade27-6039-419a-85cf-48a51cbee4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed7fd33-97bb-4ee8-be3f-be6fdb2b0f08",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a290efa0-2ea5-45d8-99d0-421d957fbf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc10499-fdb9-4788-a03c-8b4402a420b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f15df9-ba8a-4fdf-975f-5fb9c7a39608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7aec02-5f5e-442f-a948-e3791834119a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d058c4-3bd0-405f-9248-0c0fca8d9f04",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288cb03c-059f-473f-9c7b-7eb0fab43e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c403eb7e-b19f-4500-8191-463304d74aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fcda7f-23e6-4df7-bdec-acc9c268d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0112c487-5274-472b-89d8-43b394971647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816e175-1019-43db-b8ea-ce50f8f8620d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bba4afc-271f-4763-9b5a-bf5a60f748dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75394a95-807f-49a4-a4c1-2007ddd694d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f2201c-213b-448a-8f90-95c78f1d2b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b22aad7b-3188-4033-afd9-706f34bd32e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62d3dd6-9ee4-4909-a56f-3b7ecfbac092",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55359fa8-9424-4463-ac53-e27481625b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05100969-b30b-450d-b86e-65afd2835c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ea55de-1af4-4953-bc1f-85413444db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa76e3bc-b416-4f2a-8ef3-7786231c8bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d38ec84-1f26-458d-ae3b-59c5e8a03ec6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de41553f-e327-487a-af03-85d488b90227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630758d6-fda9-49c4-8e86-24ab9bf61244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aef79b-39a5-460a-a9b1-2686aef12e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "726cd38b-695f-464e-a572-f40751c33893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0af45e-8f7a-4b61-ae11-b61f82423d2e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99889c9c-0db9-40da-af05-8d332f8afc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c740e36-6894-4a15-8ded-cd942b6d46ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef0227b-8ca1-497e-a83c-a8a1a0798f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8667c038-d625-4e34-ab1a-4effbc731fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b43d400-59dc-4ad2-a775-6a7c4f6838f5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c17194-0dbd-4d5d-a4f3-c84623e69a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6725c76-6ef4-4a88-b1c5-2b6b8ca0fe31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000fc256-01f3-430d-89d1-7a78fdd2ca34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cc7639-0812-4a9a-90e1-c346f0fda5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33965d5c-7355-4084-9180-e1e5c267a7dd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b646b27-0e30-4b32-9385-64fccf756338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918cc682-2adf-47db-b6f1-4baf45681107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113d399b-c2c2-4897-a748-497cf6b15e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a9915a-8fba-457e-aaaf-eba3b53e55ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c09ef38-6e58-4b75-85cc-08c6b3c18c31",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e851225-0376-439f-a5c6-44407e9ae3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194e4cfd-2016-4cf8-b419-0526f4a96a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8440ff8e-2556-4409-acda-922fe337cc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d31ce5-4b88-4709-91d7-f03d587a325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60bae9a-0038-4745-9e73-e74f22b7dfd7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de5a2fa-62e7-48a5-88c2-31021e31491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba23366-08fd-420b-9674-b19759f87af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93178b9-b800-433a-b22b-fe1850bb4c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "157aed29-2fde-4d0c-9612-6ecc8694b22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d4ce4-b281-486f-9fd6-21eb21478cb3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d30d66-7efe-4c8d-a784-8e8985eddfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e819e086-dd40-400b-ac77-1fe85ce2099d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b7fda8-95e8-419e-a9f3-cbbcd62719a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6586310-dca0-4a60-a837-31ce3d98e4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8239997a-fd3b-4007-bdf7-e21199ced78b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6249f-9297-4284-b42f-67f93a54c125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6753fc7c-bd9e-4749-92a4-896f17518570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80943b3-fdaf-4a6f-96a6-92570d6767cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37a30c5-6c18-4275-aaa7-57854cb95204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986fe01e-e80d-41f6-9da9-252fa0a296d8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d51f6a5-7548-4292-8da1-dfd1c5fdb3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe32e3e-d7c1-4fe3-8060-6e380659a46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82585437-d87d-4ae4-a965-3d56eee67b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eacfbf5-c5ea-4167-80e4-10570e070f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f4a25b-8208-43c7-b9dc-e58c9037658e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f5d5dc-1bdf-4cb6-97c7-1025903c9b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d511dc3-810d-476a-b2bc-e2aab91de231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9742666-2f4f-4e6f-91a1-9160e33f3f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "591dfd7f-a08b-4469-a730-aa0f8df5c3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0d3021-b787-4b97-8a6e-27c6e4fe27f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d147f2-e84c-4c9a-afd7-bda222425359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2401f71b-f9de-42db-b61b-1f48308abb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c632a508-380a-427e-8544-30478f918d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa38fd4-c437-4940-bace-cc41ea023eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbf17ce-5dfa-4655-893b-0627e1d65dd0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518037e3-51ec-49f4-966d-5469a5077ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ff64ef-35ec-476c-b73e-14533e71ed8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38402369-16ed-42bb-94cf-f07b9597c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48adfd80-acfa-4ce7-9106-a457edfa7c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d03c7-6a59-41b2-96e7-8689502bb9e7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa6a7f1-46e0-4f92-8420-a8acb0edb587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16f22c3-e691-4c08-bc7b-fff44443bb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338d241f-ca9f-4eda-b2df-d732f4315f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb53ddd-6261-4246-8f62-e7f534928bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aadaa5-7ed3-4822-a2c5-7db98f0271fd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18540bae-42a9-406d-826d-a20aac58c94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4eb9f7-1898-4c95-bbc0-8fc60900a6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a96ad0-7155-4e4f-a987-a3535a39b4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c12e0001-cbd0-4f0d-9d6a-e31cc5bdb3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888cd842-0037-4cea-8c40-0a3667a099c7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4211b23a-b0fe-4796-bb02-af26f556da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600a0f90-6f55-459b-bad7-b0b144019194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a20e8d-1326-44cd-a96e-8835d91e4e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2ad5f1-a476-4e8c-9ca4-2674ef9323da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b2b3db-d105-4462-a873-a1b8a527a2ef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6b3c7c-47bf-46a9-a25e-8e24f1c37f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9699ccfa-4521-4faf-9d85-15a06e85d1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4d1aad-cfe2-430d-8c32-ac3672113920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "645ae101-3d7c-4aa8-8c05-3087d582bbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a3c94-fe70-4e72-814c-406836f1339b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b25d373-31a4-4892-bcdb-e1a5a67b5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e8ff93-1b54-4e65-8b34-e0e206722c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de3728e-0399-473a-bd7c-ba83a1c2184f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37655d7a-3c08-41b6-b36f-9bc5d11fa22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438cbe9b-418b-41b0-95b6-90febd5edf5a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10a7730-5bc6-428d-8f1e-16b9e4bfbcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e0c84ed-c611-47fa-80ef-fa210aa93844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa740eef-f289-4ad2-b691-3fa608940f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d94f6b-6106-4583-9988-b10b295b43ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66741635-98a7-4963-9037-cfaf9125da9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df28f338-21c8-47b6-a7c2-0d98cfffbd49",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0368596-65fc-42a4-ab2b-c62c58aa2e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58c6fa27-d7fe-4bf5-823b-fa116b773b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8adb40-8ff9-4732-ba79-898bdad3a15c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "114c11ad-1f7f-44e8-8d21-370a625ed2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e3dda3-35a3-4c15-9c34-72b748af7181",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68754ae2-d35b-47b0-b510-8f2ae6566dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b256bd47-a977-44f9-9e1a-ef7f551a1614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acc1e0b-1a7d-4314-8bab-c8f5d0c3cd80",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a505425d-3972-4710-acd5-fdc0469a0ef1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a0ee9e-fc01-4eb3-a0c5-a518e244859f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef948a4d-aa9a-43fd-aca1-77babf2b0ae3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70ecd1cc-bfb1-41d2-9fc6-177ddbd55722",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ce7591e-1b7a-47c0-a7f3-ef1b0ec4225c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "320c6270-0a9b-4225-a0a4-ac7164e8e4c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3882dc82-9ef2-4df3-83c5-2ca6a04895a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7cbda99-41e0-46f4-a28e-01ede24e59ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78496907-d07b-4b4f-afe3-279d0c14c9db"
                }
              }
            ]
          },
          {
            "id": "f4973501-bc67-412b-93f6-6154bc3023d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcbbfecb-a782-4e2c-a044-90045a1db994",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5b5e5be-828e-4d27-ae46-f814453085f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34c33bae-b128-4a75-99c9-17fc9579863f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e24bc26-b75f-4a9b-8f21-40cb3d6dc508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea464d53-42f0-48fd-b4c4-7d1746d1d997"
                    }
                  }
                ]
              },
              {
                "id": "b7ba2098-d6f7-475f-ada1-e2b0531ebdc6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5141b7b-0ee3-4699-bf8d-00f357d241e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a21ed59e-932c-4e88-ba49-67f763123f6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3b600bd-aeb1-457a-9629-e0a3881ef355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25c4de62-57e6-4862-a5b2-0ca0ad18cbf3"
                    }
                  }
                ]
              },
              {
                "id": "023ff8d7-3857-4483-948a-cf6c7a618895",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7a81a82-ab9d-415a-a005-6f9c3895de55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f14d4e8-37da-4a7a-8f13-70153ae486cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26385cde-3f1f-4548-aa39-b587d38726ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b55d41d6-5d6b-4ff1-aa5f-44bcd43b47d0"
                    }
                  }
                ]
              },
              {
                "id": "701f68df-7966-443d-94fb-7f24e7db3e44",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4683a737-2d33-475a-ba30-f82db7797c99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0996ef0-cae1-4c94-a52c-b00ef62a0e48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39958caf-e01d-4974-8d39-b7552e8e92cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "24fd19fa-d842-42f1-a7ae-75d76fb8745c"
                    }
                  }
                ]
              },
              {
                "id": "70e03cd0-a198-418e-af5e-9c52b1073d17",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64c08451-141e-42ca-bed4-344f6639fac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a06c6451-fa1e-48c1-881b-424ba0490691"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c002d6bc-3cb1-4f6f-91d3-a8209fb3c423",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c6cdef60-8929-4648-ad67-0650f7b893e9"
                    }
                  }
                ]
              },
              {
                "id": "763371b3-aa96-4017-a36e-636363fd3ddf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c574447-b437-4404-8d07-59a31c7fbe86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c8fe6d1-cf9b-4c4b-a0bc-6464e058f727"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "100c661e-183d-45ce-92c8-5d3c1a18cf83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39c21781-cee9-404b-b68d-a0a14732c633"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5836e18f-84c5-4e5f-957f-d8a5b3171912",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c61953a-57ad-421d-bd51-048a21916b8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "52b7f014-e37e-4f61-8f2f-e97bcc58f437",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "654a66ce-741c-4743-abe6-93614fad6e02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27928121-1998-44aa-8cc9-bfc3188120fa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8e057e90-084e-43ea-b5b5-e808e4b935f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "826f5a0d-6c60-42e4-883a-7e66cf731586",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec1052f8-f79c-4b1f-8a02-5907ecdba54a"
            }
          }
        ]
      },
      {
        "id": "4818d337-5846-4c7f-98e7-cd8d0866c8b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d1427ded-50fa-4d6e-8022-c9ef74e0ba45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06e250a8-06ff-4b73-9a59-1c4e9e5d8a09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d362e9fb-4536-4f5a-bf38-68d74992ddc3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6452aa7-731b-403a-a397-2d39c5beae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e92224-b323-429c-b339-67201387e73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098e00fb-2afc-4265-b7d0-90394f329bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb1e498-e1c8-47ec-956c-78dea2e6690a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf54492-8895-46cc-adca-9ebfcdc32e02",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b4067e-d8ca-4f24-bbeb-28b69e22241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f988e2-c1e3-483f-a505-9cef600b475c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e003edb-e146-4fd3-bca0-c12c1d9b9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c592edf-b7b2-4ee2-9316-9fed1375219d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eaa95f-eb09-47b9-9443-2f2a9e146bc9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6550fe34-354d-4aed-b9cc-b10716a186ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e93b5a-602b-4769-b229-f12822994459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b940116-6407-411e-aa2f-b6450f57edc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb15a22-4f51-45cb-a66a-576138857e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83456d4-b40a-47ba-b8f5-97a82deae7b5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19abd39-c58a-48dc-8726-caa21a3f0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77f0dc2-61ef-4df4-b59a-27e881924ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e93f99-6cab-420a-ba22-b5fce3276908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1b2ed4-c93b-44ad-8ac6-43802147d95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52adef6-00f0-4674-a80f-e0b0b6bdca92",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e676b-3478-4c77-aee7-7298f005be78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61ae8e2-c862-4637-8c5b-b2757880186c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65711565-5329-463b-b962-04b423c298b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e948c4df-9e24-4ade-ba77-ecb7dab9dcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c065abd2-95f7-4230-bb0b-2d754bd67146",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e39bc40-6412-4d91-8398-f829f849ffb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b15394-f31a-46c0-b048-33a2eb75a8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c35e41-e994-46cd-9e9c-660df0a75558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b393159-9302-4908-8052-3c100647a921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac63bf3f-33ee-4d63-9880-628861bdd1dd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f008a7d9-97ca-47bf-981a-fae2f80be308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4841fc8c-1bfb-4ad7-b6a3-7054ec20af56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d518d05-d9c8-4baa-baef-406156779497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b4a486-00d5-4afa-b953-73f76ebc3e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90079241-2b5d-40d2-8754-c64c376f3571",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63135f98-6741-45f4-b84d-cdc9ee44d090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7eed2d-8e8f-40f7-bc5e-7a0c5828e146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c365309-6dd9-4aae-8a8c-ed73e87a081f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "988d07c3-437b-45ec-bb39-d97566aa8c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2c6f38-288e-4de7-94a5-2841752f88af",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f197d462-39df-4ab3-92d5-c6de65b25e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542e9660-04df-455b-b0bb-4cd59ad0f72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873bc8c1-1705-469e-9796-40ead442fee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae604da-9122-4161-833c-87aaf46eb7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc61f75-b987-4b7d-ada0-e56c95c75282",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2501ed-bf65-4f93-9af4-4412fc99e963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825fc392-7e13-474c-b7a9-46c301294508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75166a88-dc3c-43a0-846b-1b13a2f68c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d97cb1-c01a-42eb-86b1-6e8330bebec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcbeb7c-06cc-4bbc-a770-382b2e4b8bee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7175a0a3-5cbe-49bb-b3bd-f0a087bcd4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13972764-9d68-47a7-a41a-33de68785b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78df238-e72a-4d58-93d8-31e947131061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac943d59-d89a-41d7-bf0f-d50a54e29a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a28ffd3-112d-4e65-b202-c4b51de6583b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286636a7-acdc-4bc9-b22b-362eae3d3178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ebaec4-e207-4b2c-b8f6-e6b010a97154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496e9bdc-afcf-4c77-b7b5-2b83e268a9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29da8dbc-6ab9-451d-b2db-b8ada9227533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a635af00-5839-4bff-9970-a05db757e49e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf8291-6ed6-41ff-9be3-122e7ff50b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174910cc-0172-425e-adc4-03da2b90e166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1866f2ef-8f0f-4164-a04a-4591c0d6b49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0740fa4-b126-40d9-bf2c-1c220aea454e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fc6721-aef3-4752-9a07-4d964a282bee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ef0a28-5fc4-4d8f-ad6b-080f2e82e87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54ee4ca-e05c-445b-ab71-5f16d85f4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e078ca-72f8-43fb-a36d-26e319d2bd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29faee3a-ed4c-4475-ba13-18e0b25cb3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba21031b-42ed-417b-83e1-2a1c28e1b04d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb440eb-5124-4846-8a73-69e59de0e6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770492c3-63f6-4f52-aa57-7fc26c903ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5e73bb-f3d0-44c8-b4e9-de856bf3b296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c032fab1-9fd0-413b-9cea-26fd20426f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d003462-c978-4bb7-97e4-1c0817922ae9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebddb3c7-1594-491a-a9c8-8ab8fd9d8667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b69c42c-7c1d-43c2-92c9-89e36ed18483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01f1f60-cdbe-438d-9f5e-0583960e99ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "55777157-00f7-4c82-9593-39e04efa32ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2815314-0017-48d0-8b34-c2f3a5678cf7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e7c507-def8-4082-9937-3404ad1c18b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7871070e-d587-44a9-a6ad-940dc03e4ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7e73e8-389f-4c17-ad91-80facc4c10f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c5295e-79b3-4cfb-b673-03fa6c15d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3eb6ba-2130-484d-af62-e9d8bffb7f1f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecf82df-bf40-4411-ad1a-7231409a64cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73b79d1-564e-4e34-83bd-b83e808d54ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bf4591-8a21-4d5a-b1e8-b465d124afe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12413828-1709-4746-a5ab-70ba212ce65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61436513-72c3-485e-b95e-bfc89e57238e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96748c76-80ee-4609-a436-418f0111e587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699eaeb5-f7a9-444e-be58-7dd3e8680f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8867cd-7eb0-44d9-ac1a-0272da4264ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae1e8f3-34b7-46ee-a457-4704f11edb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f53461-cfc7-483b-bed5-99f30337d59a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b112d9c-5a81-40cd-a38a-df4703daacde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13891fb-ad57-497c-a2cf-5de5d036c849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1a89ed-38c3-4470-87c9-b8d4f4dc5785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11d19e9-6e9e-44a0-a85e-322f98db7a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161951db-8003-4430-bc84-732887a1b4e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f0cdeb-b1cc-401c-ad4d-6e2bd13b9107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03da5e21-4080-4370-83b1-dd2a494e15c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5b3b1e-eff9-4a68-a802-e282454b183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce55720-f879-47c7-8405-ee1d5157b8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d292978c-bc7a-48f7-a7fc-fbfeb4124f42",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64512bbd-0db0-467b-bc84-ce2879087bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1feddd-2ca4-4600-a328-81d1c1180d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99beac3-98ff-48e8-b5be-cc15d836aa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaccd56-3901-4243-abd6-96cdc7ef1a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8977a9-75ed-4d42-af30-b75613249a20",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be88e0b-3b05-41ae-8f93-c3acb806d100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cda3c1b-f50f-493e-a333-d367e1ffe978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2160109-aa33-4b6c-b93d-a67bfe3acfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a2565e-2aeb-4731-ba4c-0072b5b33f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6ee70c-0ce9-4053-97d7-8918fa21de9f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb208dd-5d6c-423b-bc17-22e886a90e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e869a7d-c2bc-4781-b2df-299058186f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48817ce1-cec6-4350-9e7d-e2509a3ac2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52169749-9a7d-4374-89d0-9ce3ff37595a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932e6497-68aa-40c4-aa2d-185964e2d92a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb72c1ae-74b4-43ea-a124-c1e623ed888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa2380e-34f2-430c-a4bc-8bf59a8bac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc98b44-c913-4128-87c2-3eadb25a9ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b348af-9501-4a5a-97f9-cc7ab97c043a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399e852c-31bf-4864-9b65-9cadc726d45a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb873001-dbfb-41f0-aaf5-bdc83a2f2bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de7febc-a23c-4cdb-9592-d07b49424f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6256cc-edba-45e9-9d82-572932e8dc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6ba916-420b-4bef-8fc8-0e1d28113bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99171b52-6362-40a1-9b31-b4a7e24c308d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6429bed0-01f4-463c-8563-17c82d5b5096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683fef3d-42fb-449e-bc1c-00d48acd153f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba9e070-0692-40a0-9eee-a2c2a9f1d5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42930a8-7783-4895-ad19-410bdabce4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608c8edb-0a3c-4b08-9de6-33789af15587",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d300c09-5cd9-42f5-97d3-3b9334e948fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20b76ba-91da-494d-b15c-c318b99fefc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af159044-1743-4a7b-a970-422aa5415f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b11fc4-1fbf-4758-af60-c204a342f919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86976a61-593d-49da-9f96-6a9ffba0f17b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6068223d-7ebc-4960-8a63-0cdc86aed835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd98dad6-c1e9-4c83-9645-d18103be3f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1565513b-c614-4b26-a536-722298572367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4a8957-35dc-47c3-8f79-bf06d4c2a0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6fb72f-e53c-4537-bf54-337c04477cec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce60dce5-9afc-4a75-a929-201925b79a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9b1e68-c5dd-4569-b29a-e4f4467614f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1625c1db-8883-4ead-8c24-5ce5bf29b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a44d2cd-cc02-407d-a690-c4948355f507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888ac890-0ff1-4b71-ac96-ae0fc70e63e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83377a0c-bafc-45e8-af57-30aa5a3d5cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d614bf47-c669-4540-945f-f51f71025b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1db3d5-e19a-4bbe-b677-19a11f1d5591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da19a93-48e8-49ad-8a18-a9c864c543c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b99b57-476c-4337-939f-0488d403f405",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7767c-61aa-482f-bf35-352e6a831629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0478dee8-e966-4dbc-b734-a47c25ac2220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca8d6d3-094c-483b-b1a9-5805bec4deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f39223d-7cd2-4fdf-8496-1a7ba6aaa821"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da49475f-5463-4498-a8c8-e925cc852de1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86dc9d29-2e5d-4067-b6a3-cdd1b82ccb62",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa05bbb3-5d3a-4a39-a473-07052df0cd6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7f68998d-1ab2-4a47-be48-8eaf8881dc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930d78eb-1c5a-4979-87b8-66d6b033497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f9e086-9f39-482a-9368-62b8cfd468f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ece2d9-3e56-4d35-b0c4-15f339a5a1d9",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f444157d-96c6-4d8d-80f8-ec7ea3f99fcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7979ddd9-b813-4010-aa22-503ff77ee99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f49f7ff-018e-487a-a2c0-549500255c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55e291d5-cede-4ddb-b640-cf9058b8b371"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "484cc891-a06b-4ad8-950d-21b0b869d359",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1e1ec5b-2fad-461a-8842-cc0bd01abf39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06a25a15-618d-4a01-8c84-e08f74e799ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2014aea5-6622-4763-ae70-6bae3aa7095a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aa8c3c4-d1fc-4eaf-8e12-27f8ee7bd443",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eabd0681-9247-430d-a985-9c9eb044255d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "105f0f18-87d2-41aa-9513-3b027602b559",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a87cc350-f69d-46c6-9155-11ebfc501991"
            }
          }
        ]
      },
      {
        "id": "d31dc4ed-2538-48a8-8b91-c40b2f308623",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cf642f52-d582-42c5-b6f6-971e53fdab13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a199efa0-e27e-4fdc-9e1e-8f9f088cc481",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5930e0d-185d-43a1-b394-547cc423e74e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a1991-6a9b-4a1a-939f-e03cebf0b674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ece4110-b06a-4020-8b72-575f5f2bf2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c70e9e-5071-49fa-8877-9295b5884e19",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf68a04-1464-4f3b-a13f-0e79eaa25505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2279afb2-340a-458b-a143-e88721151a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca3b459-95bf-4d0a-8040-dd5fcb1f6029",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d56322-0dd8-46b0-95fe-b1327328f81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dd4c8b-c12f-427d-ad2c-a592414b3c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7397d9ec-a04a-4d2e-8df7-a7eba67141dd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c81fb4-537e-4b06-8e17-8e39de7ded43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea6ca23-5c7c-471f-9574-852ffdc93e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d792b410-2eb0-4d9a-a9bd-bbfb5338e43c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6657f6-6567-423e-af81-0c0a2a1bd474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecff9348-9711-4ba0-9200-129f21514b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e5c903-cf2b-40bc-9843-fba7917e097b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f0e5f2-9776-4289-b88f-20a7d63fc43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436819d6-cea8-4b70-a701-63e7d6d54b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d071ce06-ba4f-47c0-83d6-fe20f42b47bc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310690a2-b523-41a7-bc34-bac0211f32b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4e5636-6736-44e5-b76c-e2348dc2b996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4856e120-032d-457c-997e-63638506b14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd747e17-1a4b-4e8f-98a0-a8a83ac60a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4a760-6086-4d4c-ba9b-315a1be3b1af",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a3a586-47e8-4fbf-9ae3-d56eb31c5116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc716b8-f92d-45d1-b0ca-ee10d4e17dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ea7104-1516-4474-b8e7-ed89e4ad8124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a7ae37-47c5-43ba-af72-ab246da827ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef6bf9-c9ea-40f4-93e3-5327f9783a8b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f1df74-0264-4d51-9737-c5e5999ae945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a607835-2f69-476b-b90b-c083b8ceaf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4dbdfc-7a61-4d0c-8584-a3c43b082cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af1f00f-c5d8-4fa0-8bf7-7b6f4273df9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae34e48-844e-4e8c-99c6-5e60ccc8c68c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70528652-c615-4828-897f-c5dac000aa2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534375f1-9f87-4d5b-838a-4eba0e24b91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee00f9eb-1dd7-4e48-a5aa-90ceb43213c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd26373-55b5-45ae-bfe8-3c7043b828fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751a4ef1-3606-4738-afcf-b60fd2b3641a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3d4804-94e4-4aac-9f40-3a674dedfb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a427038-ab34-4461-aa99-c3159f1f4c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a518d53-b771-4f52-b09b-43d038669697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e201bac1-04c2-48fb-975e-a2f92f575345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c7f673-f6b6-4054-a905-bcdab39f621d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553251b8-3b66-40ec-8340-5b0cedd2582a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418379ca-6591-4a16-a09a-9768bf680741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445eb8a-e7c8-45bf-9efe-86e0c2fbf630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e800592-b043-4d20-82ef-ed0b8b50411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f5645c-4c1b-4978-9125-f831e9f08dd9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ad3d51-6e1b-4a3c-a6d5-7032420e2484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4701997e-75a9-4015-9cb7-7d175f0991a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24825510-008f-4f01-aed1-82a35368d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63242e60-236c-4fef-85ce-ca48a9b6309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7cb9fb-7c2f-403a-bf62-8924e78fe71d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbdd022-602d-4186-9804-813adad9f922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fb833a-3584-4d7a-9421-9b4cb1112968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6638e822-22bc-4ea1-8db7-3cb4e984b672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ca017e-c103-43e0-9002-af8b00163585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5328ed69-b7fb-43c6-8117-b49d8bc6cc88",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee2dfba-592a-4f16-a9fd-f46cd7367405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8314bac-4634-47a5-b8b9-64762848778d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca49a68-7879-452b-8612-b8eb3b28063f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca1e90b-e8d7-4f29-a535-e86b4691cc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f894d7-f994-4426-bca6-14c3b77c9c08",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea1cb11-9ad1-4dcc-b8d9-968ed02df904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc1f193-a3b0-4103-944e-8193baca924f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac94f10a-b152-420c-b304-dbfe5e6b51eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab7b88d-de2a-45d2-a461-cda0fbd20e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de54ea2-349b-4dd5-acb1-a6c9ff682114",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4635cc0-0c15-42b4-9cab-7808bbd38e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f19273e-be3f-40b6-a83a-986e8c1fc12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ebbded-839c-44ae-90c0-3a6e015d24fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfdf16e-03d8-4090-95e5-1e6a666a1d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6627489e-8645-4571-bf72-d283099b742d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc07839-1b47-4532-a997-8bd2ba5ca9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b24f79-dd21-4a39-90d5-3400faaaf04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c997c4-23ab-4b6b-b5af-194197e1691a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11377cd4-9813-43b6-9435-660a328e135c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc393c7b-1c54-4567-8bb8-729e1b05edee",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c001ce71-ab10-41c4-9077-18d5610d51fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe9e0e0-0b21-492c-abba-0749aa27a4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01151b6f-2fca-4581-ad1c-6526c29943a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67145a48-3f2e-4c0b-b168-795b364712d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6217289-143c-45ed-9d8d-9d62d783c2bf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1aa148-e042-465f-b37d-7e0b246043ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af5cdb9-5dd3-4584-806b-5a3268a2beb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd0e2cc-d299-4018-9166-ab01ec4ebc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf1449d-f128-46dc-833e-8e9100c1bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe13c79-13da-4c36-a280-c6803f8d8ec9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa597d90-db77-4de3-a7c6-1875b3614eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b64324d-f3f7-41b8-ab11-baca5d334061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d70200-ca85-4a97-b5ea-9a33497029de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba969eb-f0a3-4822-b40a-4515b1224c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b7637c-c25b-4c1e-9b90-bdebbecb0164",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19269192-aca8-42a6-9000-57b456592861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e283119-1061-4262-b8a4-0fc536bb607c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e2b190-0772-44ba-8e92-31b6ca702786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190472eb-4a4c-450f-9d1a-268663a27aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cec73e-77d6-4b35-bc81-2da09fef73d5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181e7a7e-0bf6-4bfd-ab3c-00d23662af26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3f5b05-dd1c-40c4-afac-dea98ed07bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9dd879-bfdf-4c0e-9902-4ecea94f268b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3701c4-bcad-4de2-98b3-b12b72c697cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3a1d63-b231-4e88-85b0-a46562c2a534",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc65ecb-f2d5-4742-96d6-5bcf4db28881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5103a152-64a0-4be6-a532-2f0587d4a25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d38cc9-3b6b-418c-b444-b599029ea7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3470ec-4f44-4bf9-becf-4919bab784cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d637b59-9016-4cb5-bf7f-acf06765a651",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99b9b03-ef84-4360-9606-8a6608a35b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773850ed-b9ab-42f7-b9a2-5487b4c55dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88d3543-6f29-4e01-8ba3-12e845e22310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f35978-8870-47ac-9a22-08e56c014282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7728df6d-995d-4178-9e5e-25006ac09bd3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d35ec5f-5db9-49a4-93af-b7b302a9fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ef4116-46d4-4a3c-9ac1-26f2f251e3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aabfd4-bb53-4360-b526-4425a08f22cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61943d4-6f26-458d-a454-aa247c56a34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159daa4-5ffa-4f0f-adcc-3e3cd25257bd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4196355e-54c8-450f-ad9f-284dc7e4abeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a23b87-f013-4704-b4bf-dc16fde73ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efd6131-cf10-4890-96ff-8dc1c30a4219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d65153-9e56-4553-9def-f59ca0b8b335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fde04c-1c99-44a6-a156-28e0c0797446",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc7125c-afc6-4da6-b238-3d1bb1efb716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e08355-bef9-470d-8fae-12a7eb50061d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47933993-ed0e-4590-93ff-2fe34dcebf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c8047a-af5e-4bdb-8874-f0259d2db1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18788ac3-c6a0-485d-8c85-bb9c17739425",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6743747-5424-4a43-9d72-af9574ec4be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48cc9c2-6ded-4b46-b04c-73391f2ccb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb34ee5-0abb-455f-9efd-90b190edd000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd938c6-db17-4f21-874b-ba3f11d6bf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272a671c-23d3-4a20-89a6-f2489d722f41",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0818d48e-e64c-48e0-97b5-89782d6a5f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738e2796-cd9b-44e3-ba54-6ed8abd6e21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34800193-ed84-4ccc-94c5-261b17c7b028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b7592e-6412-4882-8544-223e5ecec3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f50915-9a11-4be7-8b7b-43ad270ff626",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612ff835-39a5-4230-9de0-823c3ccf0d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ef579f-e693-4eb7-be78-384236251d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e55659-7504-4b2c-841a-cc14380d78c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd7fe46-92d6-4bb2-a5e7-4591e2ab6811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536120ea-89ff-467b-929f-4834f33d364c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae13a7f-83d2-40fe-b95c-325145fee8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7917bd-7a99-43d9-adee-1851002db40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d30594-323c-4410-be2e-1167d2d97007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef067643-37f0-4007-b3bd-f202ea3bde3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c65135-8113-4479-bb5e-c777a28882ae",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee6e4db-1019-4f68-8096-168375e1cd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7246cc-6149-477b-99c4-8a4b2b5a6e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e1f824-a51d-415b-a82e-42f05a0788d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a1bae1-3a7d-4f92-9c70-f97eb27774ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359fedc5-b6a6-4125-abeb-7dc84db0075b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dc510f-75c0-4a6a-afaf-86691c7557bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef19812-3df0-438c-aedf-7f596e49bbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccc6a5c-2f45-42de-9ac7-b79a47acd329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b423091-22ea-4de4-84b0-82bede69d609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946d2161-87a2-4628-a6e2-b060be98edfe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29568734-95a6-48bc-bbca-1d6bc4303588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca70f1e1-ea51-4503-be81-883d21109eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aa7cf0-b8c5-406e-9660-183fdf45a152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783a77a1-c39e-4e91-ae4d-13a6417b857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03ceb81-fc22-45b7-99db-a7af2ab2a9b2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635c182d-bf5a-4616-b9f1-e90d525495fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6215b1f1-b8ce-430b-b044-83178b8e477d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad5ec9c-9063-4252-bf47-390d808dcb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c6a6e2-2f6f-4734-86c5-09941d1cb069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7b78b-d3f0-4de4-971e-4cd00ce90019",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e05ee4-340e-428f-8355-173788d9eea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117a1244-cca4-4b72-a99f-fdc8c360dd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99025001-9028-47f9-a944-88d84b684c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47febedd-1c6b-4411-be90-aa5d392843d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9343cf2f-f193-41ce-a316-d574137b748f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e621e068-0fd2-4e9a-ae9f-48e9624fc37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfaef81-c97c-438a-bbc8-4cfb3b777f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27204d4f-7068-4988-a1e9-081125e08b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46924329-1974-4de7-99cf-d6ac32eb5349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f04e0-9324-4e63-8012-e2008fe6365f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c07517-eb53-4870-905e-927a9ac5f468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff1f6bb-00f1-4c1c-9ed5-794f4a36bc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0a0806-1f7d-4fd5-9f6d-be1db1f77130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2692fe2f-b790-4ceb-a377-8461ab561deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd4b499-a5b1-46ec-ad18-af16ffa9134f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24b203c-519c-4303-b5e3-41ef3614372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee431672-0571-4651-8622-0db9de59c890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af0f05a-7b3e-4180-a7f2-dba34e6e8349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8fcfd9-b97e-49a7-8f40-9819aa6ad62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafa5c5e-d904-4449-99f0-3df1815e187a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f71825b-6ee9-426c-b8e8-b08ae2acdf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efb0008-47da-44a4-9d9d-e1f577ffbc34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee21c31-2e23-48a2-842d-6eb763eb98d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fb846b-d351-4ab1-ab5e-9301a289c654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40288dab-e430-425b-8a21-47b2cfcda000",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6edae5-58bc-4571-a3f4-e7eac61a7229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1d8874-3b81-4a58-be0b-47afba08f0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a14d7e-b5b4-4b21-9400-4082759202de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33258730-014e-47a7-b63b-2c75fb77da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4113c4-25a1-4d20-bcc1-293f14850cfe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fed110b-f6bd-44a1-be88-932b8672b76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d2040d-1531-4b67-a8f4-b2b87439c601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2ec8cc-3959-4751-bcce-9c30366fb4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48dea20-010b-419b-9e04-4d835b0bc8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5559005c-f9f2-42a4-9715-7fe6dbb062a5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f608ce90-9477-4d3a-892d-a894cc67c0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070d1fd0-db60-4889-80df-5ac99f8c64c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dd4178-f861-4f2d-91b4-367640428d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691f7cad-0e50-4106-8b12-10fe5993699f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91570a4-473b-4052-bc0c-471b8bbf029e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281e8010-46c0-46b9-9899-93d0b16e2abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3bb904-a592-4050-a045-d039e6b8dcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e81a410-e33a-4a61-b1ad-cd2d3375401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64c7537-8704-4c54-8c97-ef7eb70d58ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8462793b-6d07-4ef8-8b4b-b2d605ec9113",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48252635-e8f4-437c-a8c1-2e7df1bc46ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c97fac-1d85-48a9-827a-7cfc6350fd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62311f37-f247-41e9-978f-9abc9e6f3351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97758ce-a1a0-4bc0-9988-52e5e782cf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b326f2-fab5-4af1-abc0-df36595757b5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6266655-3aee-4528-9cca-494f8668a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bf6fd8-aa27-4717-b33a-e75803eb4056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7752f3-a1d4-4d0b-bd13-6a874d2b4487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce41558-c5f4-4594-ba66-85a378d83431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd7840e-dbd3-4516-b9a7-edd3cffa9d1d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7c61fb-f4ec-4737-96fb-0103ea223de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c567de6-2095-4746-8d21-59914f8f9cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1059f273-4e0b-450d-9fef-8fe2981df386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecf0083-3a25-45de-bc5b-3eb7cf91283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5153a382-219b-4d3b-8d51-eae51d384c9e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ab5f2-4ff4-49f5-9c53-44c1b82a897c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ce03d1-7113-4356-a36c-f7333cf8489f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d675d22-c7fd-424b-a7bb-03164f34cdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f30600-058f-4949-ae69-09d952dc3948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a6aaee-a799-453b-ac50-406a1f191fd8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93f4b8d-c181-4efe-bb67-6b3c8776bb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00229f9f-0f80-4193-86c6-497868127de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1119360-dd09-446d-96d7-fb791233bf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fcd2d2-7cbc-43ed-bd38-d26b7dd01e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da77b3ca-8fa7-42de-a46b-f4a87f9c3bce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c4664a-8737-47b4-ba2c-e9b21f094a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644680d5-c946-48ef-b19d-02bae730591a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0492181-2ec6-4c24-9a2b-0b056c016fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01eb7aca-ce5a-44a9-b22d-c4fcf1d44701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657aaa64-22c5-4ca2-ba58-8238a02a3803",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41816d00-f719-49b4-8057-1fbb6b70596d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b75b89-4eca-4cfc-af2f-efbbca1dae69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a51bef-a67f-4391-9b60-b89f442623ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805b26b4-85c0-46f7-ab7e-56d6d7e25824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7954fdf1-30ec-406a-8cf0-4f115857f15b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c52e545-e6b7-4c57-8d2f-39941cc499cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b499e63e-4b88-42e0-a288-ada29f36008c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8b7e0a-d9b7-4ec2-855c-a3f85615ffd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2980dc9b-004a-4d5f-aa82-a3c9c6f2bb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be4566c-b029-48f3-961c-e127d9ee3731",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195e5dee-3eea-431f-a1a1-f2a0722d9ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64b7879-a65a-4fc4-817f-71f0029b6382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ce0f26-222a-4110-a387-93d68a8fc578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd8bbbb-dea6-49a2-a222-82aa5ea1da39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a1e8ea-51bc-4687-b98b-77679a490ffa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313a009c-1f00-4341-8d21-be4b099bb6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500de3b7-cf3c-4df3-9b99-52805b53c841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bedceb-20dc-4d76-bee2-003132618e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793b8a0d-8e64-48e9-a447-9440da64613a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29a7aa1-7ed7-4d24-b97e-b6163316b84b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adfdb57-a9e3-45c7-8cec-046497974c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31787e9c-f82b-4ca4-911e-f5f2ce235281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab98135c-cf46-4635-84d9-3ff117a4c1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e1f651-3491-4021-a34a-932d3069b6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d609500a-7c7a-4edb-a98c-58e02e5559d0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c23bb4-a59d-41f0-b084-ad09a1badb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d068cdd-135e-4882-aa74-e2cdb58e82a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e836db31-0b3b-43dd-817a-773fb772a522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a35746-d4c8-41bb-9fe4-2b2157b604e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc974221-ff29-4079-bbec-94baf11c9904",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7ddb3d-ded6-4781-aed8-355b8fc9d803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ca29e2-e817-4034-9869-da9b59a8c08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb2a95f-c413-4e16-aade-ded500285903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ef03f4-e494-4120-b904-aaaa0c5097e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360be61d-d377-46a1-9b8d-f47fd67d45be",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd36783-1861-4d4f-a3b3-f36ad4d98a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7b18a5-f549-4bd1-883b-2caf0435138c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad43aae-5c2d-4b56-86ee-25baa35f8661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87ecc69-f83b-438b-ae26-2b656f3204b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7728b185-f217-4b49-86af-bddb311bad2e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc60935a-0e27-47fc-8676-8f7699227dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9892ef49-8186-425e-9abc-c2044ff1ac02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fce2c7-bba3-4e83-b5c8-b8ebf5064e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a96ea6c-79f9-4fd1-9bb5-78ff33e15e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cb1dfb-8283-4685-bcfd-4ffb5e3a5698",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fab95fb-0edc-4477-bbdc-251e8a718931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d55a47-e380-4901-bf89-47a711fd76c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9bf733-aae2-4173-999d-eb7f3758bdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3514a95-b6bc-48e4-ad1e-b50556ed6596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a60c01e-b13f-466d-a304-3bbe8bf9100d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbbee1b-7810-4c57-84e7-2594ae97b836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c22d46a-0b2c-4680-9651-26470b7cbe6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda27a2a-3574-40a1-8416-afbc09b3bfab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c651de7f-c702-4cef-8711-b65fa4656f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9a4ddc-8d90-405f-ba77-692a7dd7d241",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd257c9-04f8-4d90-b3b2-f77198d12bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29efb6e-45e0-48c8-a0d0-3bf1d78da3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e961cc-7cce-48f8-95f9-b8a9339e7cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42c40be-ef24-4045-b27a-fbb20094ad94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d3628f-e42d-4955-8cae-af7f14179e14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fbb69d-b39f-4127-be47-9747b14dd2eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd55945-48bd-45df-8f0e-1c5de1db32e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08777242-a95e-44ab-bcb1-359c852b9c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378ae07a-fd0e-479a-a1ca-95d5764065e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9db441-11b2-4657-9b75-30c6dfb9a0c8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8524de7-6bf5-4209-a478-225b76884825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f28003-2c62-4094-8c0d-3aee230de821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733533ad-a815-4ba9-964a-0b8d822f45c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865e6eeb-277d-4d29-afa9-32cd06951105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef1088a-0159-4b3f-9f3c-026f67f8abec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafa8794-0664-4809-92fd-2663c5c296a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df47083-8f1f-48fc-86fa-8c048139deec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7591ab9d-5b69-45a0-b462-b1bfac129347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4051f5c5-dfb6-49da-a17f-bde70125dc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bceaa0-5c73-4b90-8286-3da603fe0e54",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a6b67c-6c7f-4fde-9502-45a939c5abe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9784db88-fbce-4964-8401-49a8ec3048c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ea8a50-f446-41a3-b646-67f05bd853da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52243188-22b1-4c48-9384-97a8df353173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1878295d-a037-402b-8c56-606f64cbacd7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a62fcb0-ff83-4990-8968-8b0d3fe2a07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59dbaca-80d3-49f6-a6ff-e225407a5b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50301d96-100e-41ce-83a9-0d8b2a1d3962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70410ecb-ca6a-4061-a248-081d323cee2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079593b1-ac95-4db1-ac6f-0c500bac6983",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28029dce-2458-4878-a319-0129bf0c61af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e478162b-2852-48f3-9500-dec908cc55ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6773de3d-f992-47f4-9da5-80f97ffdf154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec0b803-46d9-4ec0-8431-f389257b4363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267679af-6651-4ab5-a3de-81a2ba73c21c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fd55b1-f9ca-4144-9b00-cb46c9afc439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a481f9-4fa3-429f-a162-30eede22be4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d97f1c6-ca84-4aae-b502-d59938b4e903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16aefb21-a118-401e-841e-38d4d98ca477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df765279-cc75-48b2-9839-baac1e880da3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ea9e2d-a97e-4418-9459-9a75f703c25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62fd90f6-4aaf-4dd1-a1aa-554892fd0027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3d132f-b77c-4b1d-9421-0eacef995441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e2c1ba-c1ba-40da-b86a-b861b8bd9d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a30ff70-0a99-43f2-a826-968f7bb93134",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ada878-af44-439c-a039-43dcc7226749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c93261-8719-452a-80fc-dc3de113a688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6770d2c-12a1-43aa-84de-1907becb2a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ec957c-1b05-4ed1-b335-6f2960d70028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e7ccc-fc67-4a57-a5e2-841aec9593e0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f03de40-62dc-4a14-b5a8-ef97806a5d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bdaa40-a9d1-4110-b35c-4ffc19899c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1964aa32-af5b-4b04-80d5-0910d4fcb7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d640e5-3e7a-406e-ba4b-9a98eb2ccb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fd92db-6028-4918-aefe-aeecd755bb19",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba77fda6-60e6-4b99-8fcf-f2252fa3c28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6fa383-f406-4945-8e30-37c0ecb0bb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7d44c0-e3e8-4c5e-a210-b063571b693d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ab5324-19c1-4fa3-b144-f17a0b7013b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35c7c57-53e9-422e-8f9e-4c86adfc3e28",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778b44c4-79ea-4d42-bf57-df07b5983614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c855b13-f674-47f0-89c1-93a356bbc9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafbafce-5c07-4bd8-a1be-187814e15d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a45c536-9ea8-4d0e-8c2a-976412a62448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e1aa0b-e7ad-4d06-9188-009a26486d9e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd62246-cf5d-437e-aca7-02c24a674dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb62265-01c8-4d34-821c-f464e13cd835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de01060-33c0-46c8-b624-123fe56c6111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd710aa-c146-4192-95e3-2da10f39093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a691636-1c9d-4253-9186-f4af47a24e88",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0ac7c8-1b6d-4dfb-85b6-77997eb4ed67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3b489c-ec96-4a1f-8019-28a86e344803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b7498-e9a8-484d-a7d8-db4e7a9852d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2b5589-2647-4790-896a-d86310968e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a83a4d7-bd93-43ab-b86d-22e28b0a5b47",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2161c58b-0e20-401d-9cca-ef507d2a1ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3baf0db3-d07c-4b50-a2cc-23adfe9b4df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e4ea55-89a6-4d59-a5b5-43f8e01023e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2699c57b-b51c-40c6-acf4-540cad837ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e193192-22c7-4d1d-801e-6d473ede0f85",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969406a7-dc32-4044-923c-68230f1ac212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6061ba9-753f-46f5-b0d8-309e28384567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e674d7-ea94-44ca-863b-7f288b77488a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1133cde5-e64a-486e-8b26-f189d8c914fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208623ab-79b3-4143-bcb3-74de77371e88",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6de7af4-c4aa-4b49-880e-0e4b5b6b876f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd2cc8a-1c78-4d9f-8a1a-3f5a5220b10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc88220-e79e-4485-82b1-c38b7b0821b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7caa31d-ec34-417b-ac87-8e406c1891ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bee43a-e8c3-458f-bccd-dfc89dc88140",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5a9b7c-246c-4717-9c63-91219d6dc4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "452f56a4-ad9d-4efa-9027-b27d1674a0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fce3bc9-f26c-4896-ac9a-843cc183168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3d1512-7e32-45b4-8c34-2fbbc4470ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7bbc8a-12c1-47b2-84fb-46421fcadbfb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd03aba4-b705-4652-9035-447904cf8087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08ed715-5a0d-4568-86c0-94415d54b348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56392fd0-948b-4660-b1d7-429dcf6978d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcbf114-4437-431b-b46a-d38628d73c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab56ca0-e380-498c-bc97-bab4b8436512",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a78e744-7ea2-4f81-9eb8-e4cf1de1be70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6dd94d0-eac0-4cb2-8a37-2203c443b399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f1b976-90ec-4f01-9ad8-a3a2d68d9439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ca4180-7c99-45ba-bcbb-aaadfa3e03c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d52f5c-862b-4887-bf25-1b755febc10c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7645bbc5-303b-49e3-b24a-3a1d392a2deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90565dd1-8019-4a30-b9ab-2c9c0a34e022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b5b540-0084-4c58-9f79-6108314cf00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8403236-6d9c-45eb-955d-27def3ec5a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5f5c59-bb9f-4373-877e-35631e35462b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c77b70-ee85-4fb1-90e6-3c9084fb109e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859b30c6-b452-42af-a2a8-b2f96d34e257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b20a4e0-53db-44b9-bc9f-33ba2dab6441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38039c5-f3e2-4f40-a6c4-c10dd0d751b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a37e501-266e-446d-a60c-d62191442c94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b35edd5-fed2-4c8a-9aaa-8e31124d8958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6febfa5b-06eb-4bd6-b438-21a1b7719aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b910c5-b42c-4fa9-8dd5-e52ed50fad5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341b8bd6-d20b-4a12-a2c6-ad3f06493035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c7c910-9f3e-4d79-b461-e79ff82b900b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11de4ed-4556-4fcc-ba6e-3bde5c817631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e2ba27-0380-4ecf-a170-697aca0e3699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2bb5ca-9099-4b6c-a02e-f69cef1ab599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74c485a-e122-4bd9-afcf-43ffe74ff2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b8d21-2a60-4346-9402-fd2f182f6a75",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eaaf12-9b78-4c54-bd4f-f9dee76a30e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab16d9c-dddd-4124-9410-9245962eaf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8884e80c-3e81-4405-9a9f-4a9d33476aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2418f65e-62c2-4c10-bb9c-bdd42fb16f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14e6c0b-9859-4212-8135-82dda4798992",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5ef0c4-6ce8-4f12-8e86-60d964e32a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c39e0d75-5ad7-4372-8301-08b61f6dc0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4237a94-9323-4213-9cbb-a73034b3708f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b9f3bc-fe20-4d31-a999-c9bec08543f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a173e94-f132-4d1f-adf9-b9a920314b22",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2a3ff6-3125-428e-ab56-88fa65b6cfab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baca9bf4-77e4-4047-b3c4-9e00033804b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cb6fd0-53c9-4aa2-ae01-7e9e828d9537",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3516a9-fdba-4ae0-81df-16869a5f2964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c441314-a397-41bc-9a13-5f2dc8e15af7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dddae3-7101-4ec7-b21c-f28f56f41e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf6d61f-f45c-4ef9-aa41-d6dc5a0ce890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d59f419-fac8-4c73-aa3b-eec9fd4f4b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238c22b5-7f7d-4496-aa13-d111ee59fe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289eb675-0138-4a4a-afb6-3674de2985ed",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b651e6ad-9866-433c-912b-078c5dc5408f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c763841-48ed-4bcc-9e11-1b1f6353a194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd713fb4-90e3-4ba6-a836-52b0f6e30007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42b4744-952f-4fac-a96e-aabb2ca926bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9793283-9e12-4a8a-8aa4-2e0eb0cf851f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c345e984-1982-4b21-bcf7-fbbac0c69339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ccdd6c-7a43-4409-9c3c-9d77ad6d07fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb354f0b-6264-4eb7-af0e-099100db26ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27dc786-4e4c-4600-8e8d-efbc7a4a00fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b104ac86-becb-4969-9f66-e69b07c478e6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef0771e-ce6d-4164-86a8-b458d9cf9586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc02f3b-6c77-4ed3-842f-3cae7d3b8c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff21d80f-f179-428c-9601-f94b6b5e6e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21629f82-a707-43c9-b221-20a1d3152766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc73ab29-43ea-4718-98ec-163b4fd1ddb5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128daed8-d229-4478-b0b3-faa39ede9163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f0436b-2f65-4b1c-8fa7-5fca42cbcb50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7349c7-7caa-4646-805a-655ad58a54a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c25ec03-b316-400f-bc1e-fbf9ffecec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5cb127-7577-48aa-a3e1-a29d20a74f55",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a013ce6e-8b5d-4732-8dd7-200dc303a912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb07e8eb-1ccd-40bb-abb5-5b276ec0a071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68eade5-c613-43c5-8a97-bfefaa81e02c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c665788-e4f4-4125-a3d5-222d379d51a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03c2e68-8dd4-465b-baa3-0a2de0955d24",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79366c1d-c60f-47e5-8c05-c2bf82a43048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b144bd-773c-440d-a3c0-0ac008aac152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936ebb1a-b247-4411-8cbb-39b31c1da52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc4861-7aa7-4ad8-8ca2-9d00b6380829"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14a98301-f0f9-461e-a25b-477b8b88aac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f5b24bf-655c-46b8-9ad1-df6d8b993258"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5971740-5712-42fd-8a83-5bc49a106ff2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79d33fa1-c19d-4e53-9049-fd517e01041d"
                    }
                  }
                ]
              },
              {
                "id": "f956098e-ba9b-4d00-ad1c-0a1dc0361f6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d856a60c-5e0e-4ae1-b06a-d980813ea1dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4d54a-3ca6-4497-bbe9-50c38f5d4553",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "78848ca2-2d84-40c1-b9b2-96ede03598ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0702c4e0-f990-4383-88cd-59202d638f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "678508dc-17a4-4cc8-a183-732b163570ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc2504c-5ef7-4c2b-9268-e7b1fcb8bf6a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa63c5d6-50f0-46a3-9e56-dd4e14faa325",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b7144173-d24d-4ba6-97a8-f7d6048eb01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37e8884-cd61-470c-acfa-b0009ee09c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c565a881-b021-4b80-8a2d-f3f3840ff8f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a573ecf7-aeed-4b3a-b57b-4ef2ba24c189",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a5a52c5-a391-498a-9a48-993386e023b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04ea4378-9c24-4471-b775-5be766c51ac7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa4ea7e1-6df3-4e44-8247-5325429f55e4"
                    }
                  }
                ]
              },
              {
                "id": "c566fb73-e49f-491e-86ba-c34fd05998a7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f7adbaab-ee76-42ce-91a5-ac4b7ee51c8e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d6463e-5a89-499b-ae62-53cc0c08110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "eaf3c79b-cac7-472f-bcdf-1ff08f36af3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c46b083-a6f4-4c3a-8251-f9285f8e5680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549b8d11-17d0-4436-9d00-6b35fdcba135"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dbc4e08f-7e90-4ff3-9787-3d83e520e554",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5d3c0a2-bc9e-4a8d-883d-3f408baa6c38",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a22a3729-50c1-494e-895c-62423c6e5ca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "414a36cf-a263-4487-9e02-6700fb65d63c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ed9e938-a3d6-40fe-8946-1072203f75e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54ca3e4-3a81-4e89-9dc5-3b1c9ebf7948"
                    }
                  }
                ]
              },
              {
                "id": "73959118-b8a0-4f96-aa08-93876783cdd0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a76ebc2a-2dc5-4e53-8cfe-3a6dc0215853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1dd3fbf-dc82-493e-9a88-3eaee4bc3732"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24a9e04d-f250-42d2-b33d-a3e6c0d5ffe2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e34a4008-15d4-4521-91e3-338ce4f3dcea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc95bc6d-01f2-489d-8777-325bd31f5cf8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6996f213-36a0-4b29-adfa-20568c03b7a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60a1608b-e164-44c0-92ee-dd379465e4a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b57aa864-c787-424f-bb23-188e3d91032d"
            }
          }
        ]
      },
      {
        "id": "9d8225ec-3d05-4e86-99c2-8e8990d32c9a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9a7185e-9038-45dd-9272-6cd5e42f2520",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbd1361d-d57a-48bf-b37c-082f93db3c2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c636f762-7e2c-415f-96fb-169b173e57eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "60aa7fc1-f69e-4517-be33-7311ac1a2c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c1e2f2-0fc1-4ab5-b7bb-7db46e977393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11c6a709-a0b7-462d-9a4d-89de38e31faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00235b12-f478-4274-9758-22e28546e319",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef999c9-ccec-46cd-84ec-3474783a08eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a8734df4-595d-4227-8c23-6840d662bab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c886bcc5-037b-4450-a208-57e2f2ac111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4d099f7-ff1d-4d9b-8731-d80257d8c2cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96cccc82-1d6f-40ac-a169-5b0efbcd9906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22349aa7-b755-4c70-821a-4a37162d8ed1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e75b029-4781-4423-a91c-3249c49da72d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c54eef41-7e41-42aa-ae3f-8346bc8f3d33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29b7a63c-bdf8-437b-abdd-14bbfedc838b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "618f0db3-a4e4-4b0c-9d44-8c7a5ca9715f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa67d66a-4fd6-4466-b222-14d0671a4071",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe141be5-f9a2-4f8f-b631-4cd18ab0ba90"
            }
          }
        ]
      },
      {
        "id": "cf5d474a-ceeb-4326-8cb9-4e79e9635d7f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e01a887c-2ea3-48bc-9168-db28cb65de5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bd39702-54fc-4306-bac6-05730a5676d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcfa8e88-738b-4a98-a272-21c32e18456d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb8c75-5f1a-4f10-8897-d5dadc643613",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59ed3caa-5ac8-48a1-87bf-fa2e384946fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c684350-4a3f-47c8-b5da-4c27c6a696bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0c3b813-1d0d-4d0c-a58f-220a48689fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14aa713-0526-45e2-8940-69a7ecaa8028",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5776fb5a-b9ad-49ae-8d37-e487dde2a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b57e832e-0ea0-49ea-942f-25bb4ea58138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3cd58a-4f37-4e78-92d7-8c7077ed8841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abc54017-7451-4ceb-a46f-50f980f39ca0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6bcb102-6a6d-4e40-a979-0422167e93c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07a79fd0-1e7f-486b-ae7a-45e459b36719"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "668f85f6-a864-4fd9-834b-3237c79b6eba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1e8c9b9-e19b-418f-aa63-e478645e87ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "405a2618-738a-4a87-8b5e-7af1bc7628cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "780f1f4e-3ea2-42e9-aa87-62613026e5be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6a47156-5b1d-4ebe-bbc1-9b912d471480",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "540e38c6-408a-423a-8994-bc368d2369b4"
            }
          }
        ]
      },
      {
        "id": "ea4d65d4-d7c4-484c-ac32-8b8543701a26",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cc6c8f9f-5a4d-42a9-8375-9df5d4b57a62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6493b550-6f35-4b08-afe1-797ada3c94a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ed773c5-92f1-422d-aaa7-4533ee359aa5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f781937-de05-4442-824a-dfebba69a9b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb646712-b465-4b79-adae-2e19018a6410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0bb8c9-9476-4af8-a3ab-03f61dfe0416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff7f3811-3e6a-466e-9343-39be2499ee50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff718737-783c-4bdd-bc40-82f6a13d2d17",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70eafb7-ff1e-4fd5-960f-967eccaf2470",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d828065e-450d-4baa-abff-75c745c83cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e5abd1-1284-4ba5-b869-6ab8431d6ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4065663-b037-4128-99a7-3fff63bdc562"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96bb9edd-2440-45f7-b79f-5ead688a367f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eab47dd-a214-474a-adc3-d929b8acd8aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bcdc7cf-29c9-4faa-a1b6-39cb0a656288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6501351a-8dc3-40c1-a0c5-523c90dc32dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "785ea385-4726-4b7b-a803-0a1b1090bf75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1cb64cf6-8b77-4f15-a2d3-3faa0b4b55b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2591917a-adb1-4663-8c18-a6d8a54d2f42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39a9f495-6de6-4281-b0de-f3bf0c2184f6"
            }
          }
        ]
      },
      {
        "id": "e12e62ae-cdbf-43f9-9514-fdfbf5371053",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ff49f7f-b52f-4602-8725-89e84426f219",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6246b094-9887-4faa-82b6-f4fa032e0067",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "15d5e0d2-9790-41c5-b3a0-0111b4985aa6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cf89d82-daae-41ec-918d-a074651133a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29ce695a-a80c-4896-963a-ffef1b1517f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.334615384615374,
      "responseMin": 3,
      "responseMax": 261,
      "responseSd": 39.03755038724493,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682469418352,
      "completed": 1682469432243
    },
    "executions": [
      {
        "id": "9c5f4798-4f23-4958-9f4e-0ab3eb1b0be1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "93b8e70e-5191-4316-8a23-603605b4c14f",
          "httpRequestId": "a16b35c2-f9de-45fa-a82d-22b35ee4d6da"
        },
        "item": {
          "id": "9c5f4798-4f23-4958-9f4e-0ab3eb1b0be1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "596e66c1-7edc-4750-ba92-f182ebea9434",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "ec480c2a-41d2-4084-bd4f-80644acdf7e8",
        "cursor": {
          "ref": "92e86cac-5c72-4b30-83fb-db19b642f7b5",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "604dfc73-77cd-4f93-85fb-70bc22ff65e5"
        },
        "item": {
          "id": "ec480c2a-41d2-4084-bd4f-80644acdf7e8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "013902ea-7504-4135-a186-006cced83eca",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "426315a4-cc39-468c-a61d-102e544f7eea",
        "cursor": {
          "ref": "30446b9a-3081-4d93-a4cb-5cab807583b4",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e7863ba2-a998-4fa8-aeb6-3828058ef1ab"
        },
        "item": {
          "id": "426315a4-cc39-468c-a61d-102e544f7eea",
          "name": "did_json"
        },
        "response": {
          "id": "4662f8f2-accc-40e6-9777-e9e297190a7d",
          "status": "OK",
          "code": 200,
          "responseTime": 200,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46143bc8-239e-4ed3-b356-7986bccbbbdb",
        "cursor": {
          "ref": "8672b2d7-ad8e-4261-a3e0-bd69e50501f0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "88e8ad67-6f20-45cd-b7a5-8c180caa4055"
        },
        "item": {
          "id": "46143bc8-239e-4ed3-b356-7986bccbbbdb",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d1a30ec-ae5c-4fbd-bd52-b1f181f90850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46143bc8-239e-4ed3-b356-7986bccbbbdb",
        "cursor": {
          "ref": "8672b2d7-ad8e-4261-a3e0-bd69e50501f0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "88e8ad67-6f20-45cd-b7a5-8c180caa4055"
        },
        "item": {
          "id": "46143bc8-239e-4ed3-b356-7986bccbbbdb",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d1a30ec-ae5c-4fbd-bd52-b1f181f90850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15b2040-5643-4032-b305-7ae2830c264e",
        "cursor": {
          "ref": "b7142280-20e0-4bc0-bf8b-81c6a94fabe8",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "80fd9b56-a2b6-4ede-984d-0177980f33d8"
        },
        "item": {
          "id": "a15b2040-5643-4032-b305-7ae2830c264e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bae97478-efa5-4531-be28-eac80b84d5ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99a4973-68c5-4fc1-a241-4c013dea7bae",
        "cursor": {
          "ref": "1874c854-21a3-4447-acf0-b85420d01608",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9df5d852-741a-4e4b-a44b-0034125b979f"
        },
        "item": {
          "id": "a99a4973-68c5-4fc1-a241-4c013dea7bae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "93d0984f-ed64-49c5-9796-50239d663f35",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05585066-668d-4175-9d5e-921cc53f895a",
        "cursor": {
          "ref": "00b1b748-8654-493e-9cdb-54d0dc9218dc",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a89cad00-aabb-42c5-883a-76ee3ec658a5"
        },
        "item": {
          "id": "05585066-668d-4175-9d5e-921cc53f895a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b9435a69-74f1-4ff6-b272-4b46e0b3b48f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d823d3d5-0d54-4fc2-9812-63382cdc9cba",
        "cursor": {
          "ref": "dba1375b-77ec-4fc4-84e3-df15ffa01825",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8bed628e-7505-48ec-99ba-5275e1e6dd87"
        },
        "item": {
          "id": "d823d3d5-0d54-4fc2-9812-63382cdc9cba",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "98049fcd-f6c7-4e40-bb69-8823e5ef97ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d823d3d5-0d54-4fc2-9812-63382cdc9cba",
        "cursor": {
          "ref": "dba1375b-77ec-4fc4-84e3-df15ffa01825",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8bed628e-7505-48ec-99ba-5275e1e6dd87"
        },
        "item": {
          "id": "d823d3d5-0d54-4fc2-9812-63382cdc9cba",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "98049fcd-f6c7-4e40-bb69-8823e5ef97ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458ad5af-c90c-45e1-bc6d-8ed0958f99ae",
        "cursor": {
          "ref": "fa6dab09-344d-4444-812c-e0c8639c2515",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b2fca35f-4b9b-4b3e-bf15-a678e9835583"
        },
        "item": {
          "id": "458ad5af-c90c-45e1-bc6d-8ed0958f99ae",
          "name": "identifiers"
        },
        "response": {
          "id": "f0ccde49-2f20-409f-a256-7b24b51b4097",
          "status": "OK",
          "code": 200,
          "responseTime": 201,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4360a57-099a-42e9-ade6-a0fb8a88edfa",
        "cursor": {
          "ref": "4cccfdbd-ac80-45d9-b8fc-defa0cf44435",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c12905ba-4c9d-4bbc-ae38-24c331e44a7a"
        },
        "item": {
          "id": "e4360a57-099a-42e9-ade6-a0fb8a88edfa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eeed84ad-1da5-47f2-b52f-b51757f1b9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4360a57-099a-42e9-ade6-a0fb8a88edfa",
        "cursor": {
          "ref": "4cccfdbd-ac80-45d9-b8fc-defa0cf44435",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c12905ba-4c9d-4bbc-ae38-24c331e44a7a"
        },
        "item": {
          "id": "e4360a57-099a-42e9-ade6-a0fb8a88edfa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eeed84ad-1da5-47f2-b52f-b51757f1b9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357eb20f-79bf-41e1-b2d9-fcd59951639b",
        "cursor": {
          "ref": "6fe36305-3cfe-46a4-8417-333e428b851b",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "136d427e-a0f6-4b31-83fd-fd8be8a73614"
        },
        "item": {
          "id": "357eb20f-79bf-41e1-b2d9-fcd59951639b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "451d1499-a09c-4dc2-943c-165afc625808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775e495f-0bc1-4c5e-9924-45f093ef6074",
        "cursor": {
          "ref": "55f160ab-a8d4-4ad8-82d0-98ce82c48805",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6d51ea5e-f0ab-49bd-bdab-911ef1e787a5"
        },
        "item": {
          "id": "775e495f-0bc1-4c5e-9924-45f093ef6074",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6215da87-40f8-421e-9a3e-fde023c25922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5081c21c-95d3-4d74-b098-8ebea6b59d8e",
        "cursor": {
          "ref": "e22f28f9-5c44-4c4a-853d-9185ed9dfe99",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0e9d113-deaa-46ac-9807-f97fd21bcd10"
        },
        "item": {
          "id": "5081c21c-95d3-4d74-b098-8ebea6b59d8e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a22d8f83-de7a-4ad2-819a-b2bd4601c6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a584c961-b3c1-4fa5-84ff-03f8367da388",
        "cursor": {
          "ref": "2e07fdb2-a79e-4190-a3d5-4227f0e17899",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b37b4554-645c-4dcb-b4bd-a26189e0e8c6"
        },
        "item": {
          "id": "a584c961-b3c1-4fa5-84ff-03f8367da388",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "89eb586c-93bf-429a-918c-d556e88beb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5aa46a-8c34-4e0e-97ce-82dcfbdd5c37",
        "cursor": {
          "ref": "5f7f2f3f-8e13-4233-a3ad-f51ec866348e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cb1641b6-0756-49d7-bd2d-3a633c031469"
        },
        "item": {
          "id": "da5aa46a-8c34-4e0e-97ce-82dcfbdd5c37",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9152a460-6a15-4559-9d49-b7ae68086859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5606ad58-7de5-4b24-9f59-2e834aa89748",
        "cursor": {
          "ref": "d57effeb-f8ef-4d24-ae89-0ab4e256f3ab",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "87b66565-9f43-4e9b-9d92-08254e92d12b"
        },
        "item": {
          "id": "5606ad58-7de5-4b24-9f59-2e834aa89748",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cf88f242-0985-440d-933f-afca72605c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df52f295-b686-4fe7-82df-112babc16161",
        "cursor": {
          "ref": "a3b4158d-bb7a-420c-b068-958bf78a215a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8e05e876-32ae-472e-8f26-ffb2b40f2d7e"
        },
        "item": {
          "id": "df52f295-b686-4fe7-82df-112babc16161",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da5d7074-5f6c-429b-83b3-c623f0c6c398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d3b3a-28ea-4fdb-83d8-df9c7831cfc5",
        "cursor": {
          "ref": "cc9c279c-c346-4a0b-8243-e13a5e1b8db5",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c1fb6b31-7427-4c24-bf7d-cfb459f347a3"
        },
        "item": {
          "id": "2a1d3b3a-28ea-4fdb-83d8-df9c7831cfc5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c39d3423-f676-41b3-bae6-7ea52ce31c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9442fd39-caed-40e8-a2fc-dfff17c84e29",
        "cursor": {
          "ref": "5559c8fc-01ea-4fd5-9e8a-a73a7fcbf5a6",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "28a7fb6e-204a-4628-9c01-a9b00f631289"
        },
        "item": {
          "id": "9442fd39-caed-40e8-a2fc-dfff17c84e29",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e8976e70-2f39-43a2-a44e-a3b0ed0b7ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c4ed30-9910-4e1a-aa2c-219f3184ba06",
        "cursor": {
          "ref": "1764df35-e1df-4d87-a6ca-bf4b20b204d9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "30536833-6ebb-4ac7-88ee-f1c51783bd19"
        },
        "item": {
          "id": "47c4ed30-9910-4e1a-aa2c-219f3184ba06",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "546bdc04-0cf8-4da0-aad3-2ece12425010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7860cccd-aa9d-4179-ae6f-8e72727188f5",
        "cursor": {
          "ref": "7f774a7b-d545-4d8f-889b-c9fba800c3fd",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "85cc5878-5b38-4d1d-976a-453ffa55ea50"
        },
        "item": {
          "id": "7860cccd-aa9d-4179-ae6f-8e72727188f5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c9c12018-402c-4bf6-9fcc-b3293c301a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d0c21-05c0-40d7-b264-bcd7faa1add6",
        "cursor": {
          "ref": "bcdf462d-dd5d-485b-8e50-3cb8f55b9b25",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "38f5210a-3937-43eb-ada0-eb831d722069"
        },
        "item": {
          "id": "d49d0c21-05c0-40d7-b264-bcd7faa1add6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "91f2b16c-f43c-41ac-a9d8-6d28325f1319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ad2888-324d-4047-a7a5-9e70e676a699",
        "cursor": {
          "ref": "ecce5eca-2586-42d5-b287-6175d4aad031",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "64583d5e-7459-43f7-a1f2-beb4e1ab6fc1"
        },
        "item": {
          "id": "83ad2888-324d-4047-a7a5-9e70e676a699",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7713832a-07f8-4266-b608-37ad11fa92ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b5d6b-6589-4c9b-8a31-ad9ca4bd55d3",
        "cursor": {
          "ref": "cbf581bb-6fa3-4679-bcb9-5ba511c71f92",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3b332381-c96c-4dd5-a57e-d61d6b484721"
        },
        "item": {
          "id": "1f6b5d6b-6589-4c9b-8a31-ad9ca4bd55d3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "926c1b16-7c35-4c22-b69d-ff31e9d735d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f002eb61-fcba-4a66-ae8a-76aa0af7698b",
        "cursor": {
          "ref": "33b71c7d-31ff-4f89-9f29-9739be990f92",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa9e6dbf-3ae4-42bd-81d0-86de0337e9a3"
        },
        "item": {
          "id": "f002eb61-fcba-4a66-ae8a-76aa0af7698b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b5b80358-3bc5-410f-b0ca-b1783707005a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27241f7b-b9bd-4025-997e-6cbfd1c2d563",
        "cursor": {
          "ref": "07982608-6d31-4e61-9801-8330a9e40b36",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ebf45c43-7cc0-4a74-ac29-2c0860396f65"
        },
        "item": {
          "id": "27241f7b-b9bd-4025-997e-6cbfd1c2d563",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6eec6326-d8e9-493b-bd0e-db312a85da89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2ce56e-879b-4eba-96da-dd6dbedbd277",
        "cursor": {
          "ref": "60478a29-f73d-46d3-b24a-eed30c905780",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2b9f62bc-c4b7-41a0-9917-fd093bbb4565"
        },
        "item": {
          "id": "eb2ce56e-879b-4eba-96da-dd6dbedbd277",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b210206b-a519-4209-a2bd-e441cd54b038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33dabb1-0d64-4812-9959-c87ce4787770",
        "cursor": {
          "ref": "e6b69f14-0d8a-4441-af85-2401d8617711",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0430c940-0671-4f90-936d-75f85d776ff3"
        },
        "item": {
          "id": "a33dabb1-0d64-4812-9959-c87ce4787770",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5fbd47bf-6672-4f4a-a657-636e8de097de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a644a6-e181-4b1c-83bb-f51918ba9e59",
        "cursor": {
          "ref": "5aef9614-aa63-4026-bc6e-b6e0cffa6ac3",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "65a06a03-b17e-4f2b-a127-6895b711e944"
        },
        "item": {
          "id": "d4a644a6-e181-4b1c-83bb-f51918ba9e59",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f96813f2-2e54-4d09-8b3d-609a2596dca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bd6de1-80b3-4db6-a641-cc9f12b80aac",
        "cursor": {
          "ref": "9b28ac82-28be-44b9-b97d-ac9ab9bf1726",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "701df438-2010-476f-a947-d34514072b93"
        },
        "item": {
          "id": "d7bd6de1-80b3-4db6-a641-cc9f12b80aac",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f045b251-0295-41bd-b359-349c61e34736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d36d715-3429-45b4-bf05-4c6446a39823",
        "cursor": {
          "ref": "7dcc19b5-c1c6-40d1-aed9-b34f61d9e79c",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "423da553-fdc1-445c-92be-71ee96e27f3a"
        },
        "item": {
          "id": "7d36d715-3429-45b4-bf05-4c6446a39823",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0364cdba-d22e-42e1-b008-40179bb12a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d26e74a-51f2-42de-a415-8e0b45d74b28",
        "cursor": {
          "ref": "add734b6-2b84-4965-a71d-079210fd1994",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bed8574f-d503-48e2-909d-a86079db3442"
        },
        "item": {
          "id": "6d26e74a-51f2-42de-a415-8e0b45d74b28",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "27b91f77-6683-4a57-ad30-404b509026ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fbc4b5-c86b-482d-95f1-90574619e7c0",
        "cursor": {
          "ref": "116c7687-6aea-4518-be9c-c0f110050615",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c8aeb1f5-0e24-4472-aa41-9535f6e59b66"
        },
        "item": {
          "id": "63fbc4b5-c86b-482d-95f1-90574619e7c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "45395233-fd99-4048-809c-22a852eb2b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c356bee-26fd-4286-95ad-04ee5efaec79",
        "cursor": {
          "ref": "516a0992-c4d1-432d-8e1c-1d5316432ac8",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f2743896-8b88-4a7e-8bfe-e75353b45256"
        },
        "item": {
          "id": "6c356bee-26fd-4286-95ad-04ee5efaec79",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aa2f60e6-2542-4ef8-aa78-16c42924b46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632b1e1-697c-4f62-b767-38af8027f461",
        "cursor": {
          "ref": "315e2438-2808-4e65-9281-583bb63bc46a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "70be3f99-1ae7-43f5-b3c8-cc9f2a64cc14"
        },
        "item": {
          "id": "a632b1e1-697c-4f62-b767-38af8027f461",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7f98c9ef-5334-4958-b8b1-751e4722a638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e73e834-fee8-46ad-9155-119b46cc3c6d",
        "cursor": {
          "ref": "90ca4010-ab86-485e-a855-481904ed0a44",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "86f42b69-fa33-48e9-b8df-f0fbc5ee9f8d"
        },
        "item": {
          "id": "0e73e834-fee8-46ad-9155-119b46cc3c6d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d205b4a-70d8-4b59-8359-887405c33627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35430440-a31b-4e29-869f-cb89f8e1aa4b",
        "cursor": {
          "ref": "f3794933-e6a7-429c-9bbf-4afab050ef82",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8c9aa098-b751-402c-b1d4-07ca20bf9962"
        },
        "item": {
          "id": "35430440-a31b-4e29-869f-cb89f8e1aa4b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4833ca6d-8357-4152-b40a-de1ece788552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a665f6d5-b41f-4a17-8753-dfb5f58f1dce",
        "cursor": {
          "ref": "0dde4862-8a5e-44f1-bd91-4c3bfc06e08f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4985a3dc-c6dd-41f3-8cfe-9b8a6110583a"
        },
        "item": {
          "id": "a665f6d5-b41f-4a17-8753-dfb5f58f1dce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0e8524f6-bee8-4a48-9dad-8a42ea41b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e58a3-38f8-4304-8246-6e7587a57c0c",
        "cursor": {
          "ref": "696af6af-beac-482b-8adc-dd4303b9fc7a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4c9627fc-34a2-4792-90dc-612e537ccf91"
        },
        "item": {
          "id": "924e58a3-38f8-4304-8246-6e7587a57c0c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "799610d7-590e-4d3a-bf7e-af86fb430d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cf0059-9c77-4758-8e8a-10a1c60b2990",
        "cursor": {
          "ref": "2173e086-d1d7-4d3e-848d-284fe33051db",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "153305bf-0784-41aa-9337-5139dd16b7b4"
        },
        "item": {
          "id": "44cf0059-9c77-4758-8e8a-10a1c60b2990",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b394cba7-b787-4d91-a6da-552fc89259ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4538789-5585-4868-8f66-c710c4c0b557",
        "cursor": {
          "ref": "708a971d-ca4e-469a-85a6-5a369d1eb8a9",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3f986c6a-ecac-48be-a312-697ed8abb6fb"
        },
        "item": {
          "id": "e4538789-5585-4868-8f66-c710c4c0b557",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "80862866-906d-4445-b338-fc8eabceecee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a3cf39-b894-40e5-bb55-ef8f8652ebb2",
        "cursor": {
          "ref": "15bccc2a-2c2c-4334-be50-f36f16f57ae7",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0ea77df9-8fc0-4dbe-b251-feafcdddee40"
        },
        "item": {
          "id": "33a3cf39-b894-40e5-bb55-ef8f8652ebb2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6982165-97eb-4c7e-8aba-10f77fa9fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5076be6f-c791-4708-8083-23f6656d0834",
        "cursor": {
          "ref": "46107e92-d10e-41ea-a8b5-df6564a9364b",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "262a2c2e-665d-4bfe-abe2-094856da4bda"
        },
        "item": {
          "id": "5076be6f-c791-4708-8083-23f6656d0834",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "82e0a5be-8bf3-48fc-8d17-e0fb242ad94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0426081d-7f4a-47e9-a6fe-592ae19bf7b0",
        "cursor": {
          "ref": "e0abd124-828d-4bea-9c3c-3a89f222fe2d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e60f66e7-6da3-4fa8-9a46-83f5e6a742e4"
        },
        "item": {
          "id": "0426081d-7f4a-47e9-a6fe-592ae19bf7b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2fe4e19b-5511-4b5b-a05d-3d46dc94877b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d0d529-c857-49fb-bc62-efc17afac6ad",
        "cursor": {
          "ref": "6d89e1ba-c009-4bf7-b0dc-b2c3d07c5029",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bd2778e6-fa9f-4470-a809-82a2de2eecfa"
        },
        "item": {
          "id": "66d0d529-c857-49fb-bc62-efc17afac6ad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2a80e235-b40a-4509-b004-e5431315edf2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcf16d5-66ee-4793-875b-8c1aed0272c6",
        "cursor": {
          "ref": "f9609c5c-cdb4-42a5-80fe-e8941a4d4876",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e5ac0bef-2a7d-4e60-af0e-4a40a8d7cbc5"
        },
        "item": {
          "id": "dbcf16d5-66ee-4793-875b-8c1aed0272c6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5c2d1b83-0f1c-493d-95ce-43ffcad2c4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fc2075-4214-483c-b9f7-f9b0658438ec",
        "cursor": {
          "ref": "95dd599c-17a9-4ea5-9673-248e9bfd6201",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "188d5673-93f2-425e-a7aa-0b29c7f42445"
        },
        "item": {
          "id": "76fc2075-4214-483c-b9f7-f9b0658438ec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7bb324b7-14ec-4eb8-a27a-a97936f972bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ccda6d-7f89-46f9-8170-4cd45556a904",
        "cursor": {
          "ref": "d8cfba95-8657-430f-a604-baec4142cffa",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b0583d96-b4be-4ce0-9a17-6fcca07c4090"
        },
        "item": {
          "id": "77ccda6d-7f89-46f9-8170-4cd45556a904",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8a04a17a-8ab1-4316-b6c0-ee5ee5a407f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2862c22-4e0a-4112-914e-885206f14425",
        "cursor": {
          "ref": "688503d7-31d7-46a5-b48c-0c9fbb6b15d0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3a6dd68a-f5bc-4a3e-9c2f-fe9d81d470d9"
        },
        "item": {
          "id": "a2862c22-4e0a-4112-914e-885206f14425",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "684bdea2-cd0f-48bf-9ffd-e2ec07dfa393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90e828f-e162-44df-841c-84fcf977d61f",
        "cursor": {
          "ref": "8a9f2a29-a2f5-4f40-b526-79b2f739723b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "432025a6-5bb3-4094-9c71-4dea7a38d163"
        },
        "item": {
          "id": "b90e828f-e162-44df-841c-84fcf977d61f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "21983ee9-fba1-440d-92e3-72677d2da3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2656054-752f-4ab7-9968-8cbe7a9639ff",
        "cursor": {
          "ref": "15839f54-3f32-41d2-84b5-3140c5f00fdc",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "533d41ee-ddd9-4262-805f-86219a9b0a1f"
        },
        "item": {
          "id": "c2656054-752f-4ab7-9968-8cbe7a9639ff",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "166ba29e-345e-4703-b33f-0b56f5243a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ed3365-7eff-45c2-979c-f56ba6c1bce3",
        "cursor": {
          "ref": "e6236cb7-75d8-4571-8498-7f6b4e3e5982",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "baa22d2d-96e7-446b-9051-4feb0270dce5"
        },
        "item": {
          "id": "93ed3365-7eff-45c2-979c-f56ba6c1bce3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c18faf53-1fdd-47d0-b1a2-f578b8dd066b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b0a65-15a7-4d37-bcde-cbc354b11ff4",
        "cursor": {
          "ref": "3bb7ab3f-11fe-4053-8bd5-124624269a43",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9305ca52-34cb-4e6f-9fde-1798d3c82b85"
        },
        "item": {
          "id": "501b0a65-15a7-4d37-bcde-cbc354b11ff4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8d3f2887-875c-4773-be2c-b4f49b96ca55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f9ed90-0b6a-485d-aecb-8330f0e43605",
        "cursor": {
          "ref": "6dd31010-b671-4d09-ace8-1ddfff6e35a9",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "54ed78a0-15de-4c90-a9be-3ed2b793d023"
        },
        "item": {
          "id": "80f9ed90-0b6a-485d-aecb-8330f0e43605",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "107a6797-6820-425a-a5fc-42d4b6c640c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5189535b-202c-4466-baef-32464562773a",
        "cursor": {
          "ref": "3d75569f-b726-40b4-b64d-e5d7fadcbe57",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dd4d3706-e8fc-4ecf-96a3-4583e03191d0"
        },
        "item": {
          "id": "5189535b-202c-4466-baef-32464562773a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b83e20b4-e25d-4500-aaa7-373475335681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ddd254-dba8-4230-a40e-64824cc89d11",
        "cursor": {
          "ref": "0b047ce5-a09f-4506-b417-cca974d279ac",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3a6e9fb7-0f20-4066-a7e7-213dcf4962ce"
        },
        "item": {
          "id": "e7ddd254-dba8-4230-a40e-64824cc89d11",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a83a3fe2-959f-420a-8481-b76bd479d2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0044db-0190-468e-bd20-f8046751c350",
        "cursor": {
          "ref": "6e9fc643-7599-4ca6-bb18-e4be0db41c4d",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96ecbc9e-e5a3-4f66-8b82-c95652ed7005"
        },
        "item": {
          "id": "cf0044db-0190-468e-bd20-f8046751c350",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "225dd9de-a025-46e0-8f28-d3c8c7da51fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0eb6430-c977-4ba0-9c4d-5436c48e5a7e",
        "cursor": {
          "ref": "5ee012f6-a860-4122-8b6d-e314be534d96",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3098c6bf-e064-4f10-9f97-09a298a0983c"
        },
        "item": {
          "id": "c0eb6430-c977-4ba0-9c4d-5436c48e5a7e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9149f6ea-f9a6-4993-b851-4a7c55dcb536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf61077-42b5-41b3-8fc4-2f9ffbe13764",
        "cursor": {
          "ref": "0ae06031-db21-4968-9658-b404f97d735c",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "98441eae-37d0-42a3-abd3-62259d8554c9"
        },
        "item": {
          "id": "5cf61077-42b5-41b3-8fc4-2f9ffbe13764",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ea5d935a-d29b-42f4-9888-cfb481bf85e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533c66ba-7291-48d4-9b58-afbd1a4986e1",
        "cursor": {
          "ref": "7afc44b3-6913-4406-8537-2c8216f1ad0c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0360559e-f9ff-4957-baaf-5095d91f4125"
        },
        "item": {
          "id": "533c66ba-7291-48d4-9b58-afbd1a4986e1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cdd50974-1104-4e91-91f3-77a3c8d8250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd3d349-eaa3-4066-afa7-04bd4c86f7fb",
        "cursor": {
          "ref": "2bced537-cb36-4c40-b318-a25aa65353ee",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "41494236-eaa0-4cc3-9a9a-a33be91b1cb1"
        },
        "item": {
          "id": "edd3d349-eaa3-4066-afa7-04bd4c86f7fb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b935c6f6-4197-4def-9044-27397869c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9902fa6d-5583-4367-a775-fac82d79f988",
        "cursor": {
          "ref": "fc8b4899-cdcb-477c-bf15-d366f1a3accc",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "96df21bb-e228-4c67-a9f0-048dc759977b"
        },
        "item": {
          "id": "9902fa6d-5583-4367-a775-fac82d79f988",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "56416c7c-19a8-4c83-ad6c-dcd1cabd28a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aebcade-c632-469a-85fa-72f1ecfda501",
        "cursor": {
          "ref": "bac63f9f-93af-4683-9837-46fd238b4f60",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fd3b6114-8558-4fba-8d2b-53d4ea609b4e"
        },
        "item": {
          "id": "7aebcade-c632-469a-85fa-72f1ecfda501",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "71a5ec35-2e64-4db9-a4d6-885a20804fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e445030-ef1d-4c11-a38c-82d86839540a",
        "cursor": {
          "ref": "0157cf5c-7300-489d-b0bf-12aa59d5dd66",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "665021ad-7a64-4adb-9459-26f3deaf20ab"
        },
        "item": {
          "id": "1e445030-ef1d-4c11-a38c-82d86839540a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e5b7f015-2f90-4ea0-b82c-227a31f8fe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfed64c6-b3ba-45a8-869b-88a6ad29b89e",
        "cursor": {
          "ref": "1a4a78ca-fe45-4814-a8a9-bb9e0ce60f2e",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "99e7aabf-e3a0-40e6-9073-7d96e3e877fb"
        },
        "item": {
          "id": "cfed64c6-b3ba-45a8-869b-88a6ad29b89e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8395dce0-51a0-4979-92ad-ca844de9685c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69542b3-4ca5-4d5c-ab45-97b2b78c7f83",
        "cursor": {
          "ref": "cf044ecd-8066-40de-ae0b-f6aaa3903ee6",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "189fffb4-6b68-4a70-8280-c88877a987d7"
        },
        "item": {
          "id": "d69542b3-4ca5-4d5c-ab45-97b2b78c7f83",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c0996b15-85d7-4a4e-8bd9-907459715686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee77d5f1-55c5-4077-a536-1cca39691352",
        "cursor": {
          "ref": "aa63d8c5-c36f-4826-b29e-fadb2d60dc86",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c62cb1bf-aa5c-46ce-baaa-b61bab40dca6"
        },
        "item": {
          "id": "ee77d5f1-55c5-4077-a536-1cca39691352",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "44b74f61-8aff-47cd-b7e1-a2b5fb28bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95b526c-0e52-488a-8413-5557b4b93b5e",
        "cursor": {
          "ref": "6e5cbe21-83ae-4fb1-a5c5-85c60db260c1",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "377ac50c-aa83-435f-a411-817627f6e17b"
        },
        "item": {
          "id": "b95b526c-0e52-488a-8413-5557b4b93b5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e3ad5dd0-8613-469d-b1e2-da6af5726c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7230b01d-141f-48ef-9bd0-c5efa85ef005",
        "cursor": {
          "ref": "4a75fa82-a684-49d2-a2df-7b94b20737a6",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3d2069a9-5ff2-4ff1-8dde-8625389fc5bf"
        },
        "item": {
          "id": "7230b01d-141f-48ef-9bd0-c5efa85ef005",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ac5a3e49-789f-4017-905c-a012450f38b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cdfdcb-6a60-4912-a1d7-7ccb5c23bffb",
        "cursor": {
          "ref": "fad1c6e6-bf0b-4b59-80ba-737471f3cbd4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "33ece8b3-0900-422f-8934-5c954d60e92f"
        },
        "item": {
          "id": "e8cdfdcb-6a60-4912-a1d7-7ccb5c23bffb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1dddc908-a903-4654-b981-2ea8242f54c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0021ecc8-9840-4e8a-a814-11832daddfbd",
        "cursor": {
          "ref": "d4d22e6f-4bc5-41ea-9d45-4c15dde30deb",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4b97122d-db47-40b8-9030-74eaec69ea13"
        },
        "item": {
          "id": "0021ecc8-9840-4e8a-a814-11832daddfbd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cf97e091-d19c-4529-b602-eba075169455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5cf7a8-483d-490d-ba85-3eb69d92c7a2",
        "cursor": {
          "ref": "d79cfd3b-a700-4403-9605-a7589998cbe7",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2a0b660b-04f8-4d80-ac18-8a56cbcf2e8b"
        },
        "item": {
          "id": "2f5cf7a8-483d-490d-ba85-3eb69d92c7a2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "afe89538-560b-4c56-ba40-013a84bd81d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20e818-1894-4a8b-97e3-3eda8aad09b0",
        "cursor": {
          "ref": "9c68210f-583e-42fd-be03-b83128b387c9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f9b5fb4c-74ed-4699-bc09-72655b7230d7"
        },
        "item": {
          "id": "fd20e818-1894-4a8b-97e3-3eda8aad09b0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e541a4eb-7b5f-409d-a4ec-6b7598e881c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee5c13f-375a-4c19-aaa8-fccaa1a49cf5",
        "cursor": {
          "ref": "67587b5c-d318-452a-ae30-d702ba523966",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1c51392e-780f-422b-8375-e7dde6cc6156"
        },
        "item": {
          "id": "aee5c13f-375a-4c19-aaa8-fccaa1a49cf5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "13e1f1e4-f824-42b2-b929-324d6d3708ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bde359b-fa77-4606-91f2-f925f3a19519",
        "cursor": {
          "ref": "f5d1cb57-5ad0-4abe-a402-86712c3f0668",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e5dff12e-7c15-401d-bc1d-f70cbfa41599"
        },
        "item": {
          "id": "7bde359b-fa77-4606-91f2-f925f3a19519",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b9ea8aa0-81b1-4ab1-8545-5c7ea163c342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144a95f4-a80c-46b0-b96c-071a53011e78",
        "cursor": {
          "ref": "1aab5f33-68ae-423b-a7c9-15386ac07399",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "870c3ec5-0191-4faf-ae1b-f66a0699f773"
        },
        "item": {
          "id": "144a95f4-a80c-46b0-b96c-071a53011e78",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "602530cf-98e4-4d37-a3a7-b8811fac0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3365afd-3905-4ced-9ed9-b6f0744b8d92",
        "cursor": {
          "ref": "891f6aa1-92eb-4afb-a667-9129a1784714",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "19de4a82-b958-43ab-bfb2-e1aaef90a26c"
        },
        "item": {
          "id": "b3365afd-3905-4ced-9ed9-b6f0744b8d92",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "037cfe81-7bd0-410e-900f-cc8f14f59b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd047d12-0cbc-4abb-af3e-d6ba1dc2d575",
        "cursor": {
          "ref": "d9bd1163-9eaa-41c2-b1a8-0a7c9a750576",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "73b4c5c0-9dac-4ea9-a08d-c66773ee3953"
        },
        "item": {
          "id": "bd047d12-0cbc-4abb-af3e-d6ba1dc2d575",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dc75fd3f-6b37-4eb2-a8f4-6f5fb97d174e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c118d334-42bd-4f57-9783-ce80c0423be5",
        "cursor": {
          "ref": "ed904f94-18af-4788-b1c1-ccc70d08935b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "862293fd-b614-4528-8d10-0574c9edbe7a"
        },
        "item": {
          "id": "c118d334-42bd-4f57-9783-ce80c0423be5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aee126a6-c980-4913-9bd8-9d60d6f81f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed7fd33-97bb-4ee8-be3f-be6fdb2b0f08",
        "cursor": {
          "ref": "27c36289-ebce-4f7f-b3b8-4aa2c44ae463",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "69de0dce-0037-4647-ace3-8845816ee798"
        },
        "item": {
          "id": "eed7fd33-97bb-4ee8-be3f-be6fdb2b0f08",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "14d2c18e-b6a0-4c06-b0af-c8b1a5ebf77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d058c4-3bd0-405f-9248-0c0fca8d9f04",
        "cursor": {
          "ref": "43e0912c-f651-4686-b5d8-502a84cdc337",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "00fc3e37-7123-4582-a80f-d6da337a3522"
        },
        "item": {
          "id": "e1d058c4-3bd0-405f-9248-0c0fca8d9f04",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c29a7fea-fbac-47f7-8b7a-6a2fad20f6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816e175-1019-43db-b8ea-ce50f8f8620d",
        "cursor": {
          "ref": "323bf633-1c5a-4f79-a558-1fa3157fa500",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "33d8567e-94fc-4001-abad-ba8cff979e24"
        },
        "item": {
          "id": "7816e175-1019-43db-b8ea-ce50f8f8620d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c89ffff4-7679-483f-a250-b3daed875c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62d3dd6-9ee4-4909-a56f-3b7ecfbac092",
        "cursor": {
          "ref": "1e0752f1-96dc-4b70-b60d-95288a1aa500",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eec238b9-f70d-470d-b453-62d651202668"
        },
        "item": {
          "id": "a62d3dd6-9ee4-4909-a56f-3b7ecfbac092",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0d2b8991-d0ef-49a8-a0aa-2012f94fbea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d38ec84-1f26-458d-ae3b-59c5e8a03ec6",
        "cursor": {
          "ref": "c8d09ad1-cae1-4bfc-bc63-0111fa0afd76",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3781871f-7157-4e95-b7d5-a2ed833d429d"
        },
        "item": {
          "id": "5d38ec84-1f26-458d-ae3b-59c5e8a03ec6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b5eed004-2de0-4d5b-bcc3-eb167bd3482a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0af45e-8f7a-4b61-ae11-b61f82423d2e",
        "cursor": {
          "ref": "bb5c5bff-dde2-46b8-873b-a51df203fef0",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c13ad87d-02b6-4290-9a59-d084c11c5644"
        },
        "item": {
          "id": "4b0af45e-8f7a-4b61-ae11-b61f82423d2e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "540d32ef-f6ba-4014-b794-cabf3533874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b43d400-59dc-4ad2-a775-6a7c4f6838f5",
        "cursor": {
          "ref": "39582395-d7bf-4fe1-a566-28c37a00f4f7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00847fb0-d4f5-411c-adda-6fd9c8aaefd4"
        },
        "item": {
          "id": "1b43d400-59dc-4ad2-a775-6a7c4f6838f5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ffa9fcb0-054e-4e7f-a601-df8062675e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33965d5c-7355-4084-9180-e1e5c267a7dd",
        "cursor": {
          "ref": "45e587f6-2ba1-4a52-9f35-612379c465fd",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "497c1bd3-ff0b-4836-bfcc-e1137655d669"
        },
        "item": {
          "id": "33965d5c-7355-4084-9180-e1e5c267a7dd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "feda1472-a411-4f61-bea7-65af2cc0c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c09ef38-6e58-4b75-85cc-08c6b3c18c31",
        "cursor": {
          "ref": "806705e8-288b-43bb-b48b-04a342ec6df8",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b7b350f7-0879-41cc-95f6-947941e26e51"
        },
        "item": {
          "id": "4c09ef38-6e58-4b75-85cc-08c6b3c18c31",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "265a60b6-6b79-494e-b9e6-2ae0c25793e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60bae9a-0038-4745-9e73-e74f22b7dfd7",
        "cursor": {
          "ref": "5a8064ec-e3a4-4173-add7-786a661262df",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2cfd7b99-0dca-45f1-b362-b23e89b751d5"
        },
        "item": {
          "id": "c60bae9a-0038-4745-9e73-e74f22b7dfd7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de6faa1b-7a00-4ea7-a622-ffc5368d4883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d4ce4-b281-486f-9fd6-21eb21478cb3",
        "cursor": {
          "ref": "edb0f80e-a3b8-4813-89f5-a8b840081cb1",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2780027-f291-4f93-9d44-817a9130d1c5"
        },
        "item": {
          "id": "055d4ce4-b281-486f-9fd6-21eb21478cb3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "789c4006-eee1-44d7-bccc-2add2e6a48c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8239997a-fd3b-4007-bdf7-e21199ced78b",
        "cursor": {
          "ref": "fb9dfbf9-21b6-4923-8063-224f31be494a",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7c42cf8f-3cc7-4ff6-8d79-d501b5d58dfe"
        },
        "item": {
          "id": "8239997a-fd3b-4007-bdf7-e21199ced78b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e410cdc1-9e91-4886-a8b4-aa4b2c942dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986fe01e-e80d-41f6-9da9-252fa0a296d8",
        "cursor": {
          "ref": "359a00c8-5ed1-4eb1-8d5c-502f4b5bee5f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d31cdeff-8ff2-45c5-8171-c9b517f4e8a5"
        },
        "item": {
          "id": "986fe01e-e80d-41f6-9da9-252fa0a296d8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5a97329a-048a-4166-94bf-6406d49a519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f4a25b-8208-43c7-b9dc-e58c9037658e",
        "cursor": {
          "ref": "0f1e9b17-61d7-4a94-9415-2758a38ba602",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "734026e4-f3f9-4010-be0b-afb54d9162b5"
        },
        "item": {
          "id": "08f4a25b-8208-43c7-b9dc-e58c9037658e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a93c7bee-ac71-4f76-9389-a998f5b57c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0d3021-b787-4b97-8a6e-27c6e4fe27f9",
        "cursor": {
          "ref": "b81574a8-a16f-4267-8926-7685fdbf0f8b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8d59956d-877b-4440-8039-9ffe848a4178"
        },
        "item": {
          "id": "ff0d3021-b787-4b97-8a6e-27c6e4fe27f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "63c21279-a9d6-48a1-bf49-a594962cbac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbf17ce-5dfa-4655-893b-0627e1d65dd0",
        "cursor": {
          "ref": "9f6394dc-3b3e-4ab8-b7a1-c55f81acba41",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "778b5105-357c-41d7-8b8d-15c0d6c2272b"
        },
        "item": {
          "id": "ffbf17ce-5dfa-4655-893b-0627e1d65dd0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "69e6cddf-d654-4da5-8a84-d2570bed27ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d03c7-6a59-41b2-96e7-8689502bb9e7",
        "cursor": {
          "ref": "ffdd5061-6389-4f8c-8372-c3d8fa5367f9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e6182159-de14-47aa-bf3c-758531ee6409"
        },
        "item": {
          "id": "d41d03c7-6a59-41b2-96e7-8689502bb9e7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7daa65b9-9e86-464e-b46c-87852abbfb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aadaa5-7ed3-4822-a2c5-7db98f0271fd",
        "cursor": {
          "ref": "029a5bbd-4a31-4a74-8d19-9676bd485767",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "105b92e6-5293-444a-82a5-d5486abab050"
        },
        "item": {
          "id": "19aadaa5-7ed3-4822-a2c5-7db98f0271fd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3f84591d-70ba-4763-b1b0-e7e3837d1c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888cd842-0037-4cea-8c40-0a3667a099c7",
        "cursor": {
          "ref": "9b524217-157a-4790-850b-3c9362f80e8f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c12b3e7e-979d-4651-b812-94870b4d7736"
        },
        "item": {
          "id": "888cd842-0037-4cea-8c40-0a3667a099c7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "204457f2-4ffd-40fb-9bdd-afef9d26a994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b2b3db-d105-4462-a873-a1b8a527a2ef",
        "cursor": {
          "ref": "7092f5d4-bc39-459f-b018-16fb406b2962",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "70a82621-237b-479e-a0a0-80cb744f37e8"
        },
        "item": {
          "id": "08b2b3db-d105-4462-a873-a1b8a527a2ef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "050cee74-bf4b-4153-9439-fef3fe6ee1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a3c94-fe70-4e72-814c-406836f1339b",
        "cursor": {
          "ref": "500cae3a-e9ac-4f33-aac8-724567957f8c",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d3956556-c586-4bf3-b522-3f2aed94018a"
        },
        "item": {
          "id": "959a3c94-fe70-4e72-814c-406836f1339b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "96e7136f-6945-417f-8fc5-3f38b491e91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438cbe9b-418b-41b0-95b6-90febd5edf5a",
        "cursor": {
          "ref": "c87ff20e-e1de-426f-a73a-55aaef724031",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "940ea389-bf97-49f7-8112-9f75fe7f5ae9"
        },
        "item": {
          "id": "438cbe9b-418b-41b0-95b6-90febd5edf5a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a43b8c84-b150-4551-80db-50d63483cee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df28f338-21c8-47b6-a7c2-0d98cfffbd49",
        "cursor": {
          "ref": "f0fed849-9f92-46d1-82b2-eed5d8e9ff99",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "88101296-a2b2-4713-96df-9b6b631632c6"
        },
        "item": {
          "id": "df28f338-21c8-47b6-a7c2-0d98cfffbd49",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4d94f60c-0d7e-45ff-980d-c2143a31fd8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e3dda3-35a3-4c15-9c34-72b748af7181",
        "cursor": {
          "ref": "9afdf000-c02d-4a43-9df2-ba082ac0de50",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a553d08b-cc0b-402a-b222-637f78da6a13"
        },
        "item": {
          "id": "98e3dda3-35a3-4c15-9c34-72b748af7181",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f13d7724-cf80-4025-8dde-a8f24608d38c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 27,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbbfecb-a782-4e2c-a044-90045a1db994",
        "cursor": {
          "ref": "206a8278-c916-4d34-921a-fa97cc6ff3c4",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6b7b3910-7a4b-41c4-9f09-46eafcd12573"
        },
        "item": {
          "id": "fcbbfecb-a782-4e2c-a044-90045a1db994",
          "name": "credentials_issue"
        },
        "response": {
          "id": "70f49ac9-6a86-47a2-8c5f-e5330913833c",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba2098-d6f7-475f-ada1-e2b0531ebdc6",
        "cursor": {
          "ref": "41b1eb79-1fc1-4c29-9452-aea2c6b8b90f",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3e6160f0-d58c-4b27-9cdd-bc18d54e6819"
        },
        "item": {
          "id": "b7ba2098-d6f7-475f-ada1-e2b0531ebdc6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7ce1beb5-9407-4afa-92bc-989b5aa7a3fe",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ff8d7-3857-4483-948a-cf6c7a618895",
        "cursor": {
          "ref": "b586deac-2690-4a2c-9692-39662a600171",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "46818f45-d9f4-4a7e-a6a9-b68fd20bda6a"
        },
        "item": {
          "id": "023ff8d7-3857-4483-948a-cf6c7a618895",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "03a52481-721b-4304-b92e-3c7f2e1cd3ce",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "701f68df-7966-443d-94fb-7f24e7db3e44",
        "cursor": {
          "ref": "e4e6c7de-9857-4ec3-bc2a-a1160f0d8929",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e4140b9-3af1-4b1b-a0a2-3b282bc7e988"
        },
        "item": {
          "id": "701f68df-7966-443d-94fb-7f24e7db3e44",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3de59bb4-8a56-481f-9c36-7f72b3bc82a5",
          "status": "Created",
          "code": 201,
          "responseTime": 20,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e03cd0-a198-418e-af5e-9c52b1073d17",
        "cursor": {
          "ref": "44fb4799-31ff-4388-8c06-d4bbbc0f6f51",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fa88d8f7-9942-413d-8457-9be4cf307bfa"
        },
        "item": {
          "id": "70e03cd0-a198-418e-af5e-9c52b1073d17",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9cbf4302-6cdb-4685-a6a9-6042b0529592",
          "status": "Created",
          "code": 201,
          "responseTime": 20,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "763371b3-aa96-4017-a36e-636363fd3ddf",
        "cursor": {
          "ref": "46c643a2-7607-49ac-adcf-e2f8831235e4",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "368d2674-89c0-44c7-9b97-ae23dfaeb2eb"
        },
        "item": {
          "id": "763371b3-aa96-4017-a36e-636363fd3ddf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e1a76d11-d0a6-42c3-ab79-ae77b3836273",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d362e9fb-4536-4f5a-bf38-68d74992ddc3",
        "cursor": {
          "ref": "a6a37cdd-4beb-4937-aee9-34cc867e07e4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c4034b3c-eebd-461d-964a-a65670b6d9bb"
        },
        "item": {
          "id": "d362e9fb-4536-4f5a-bf38-68d74992ddc3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd98e1ce-038a-46f8-9907-4a297733ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d362e9fb-4536-4f5a-bf38-68d74992ddc3",
        "cursor": {
          "ref": "a6a37cdd-4beb-4937-aee9-34cc867e07e4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c4034b3c-eebd-461d-964a-a65670b6d9bb"
        },
        "item": {
          "id": "d362e9fb-4536-4f5a-bf38-68d74992ddc3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd98e1ce-038a-46f8-9907-4a297733ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf54492-8895-46cc-adca-9ebfcdc32e02",
        "cursor": {
          "ref": "cb18f598-b246-42a8-8749-949b9bfe2bf2",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fb251780-9369-4cc7-9a44-0c19e5cef268"
        },
        "item": {
          "id": "2cf54492-8895-46cc-adca-9ebfcdc32e02",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b48a052c-f69b-4c06-bfb8-6baac4b5d096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eaa95f-eb09-47b9-9443-2f2a9e146bc9",
        "cursor": {
          "ref": "52e0f9bb-410d-4377-a32d-6428118978f3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30dcc532-2923-420e-a09f-bd672ad06c47"
        },
        "item": {
          "id": "28eaa95f-eb09-47b9-9443-2f2a9e146bc9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5ddf2008-642c-4a08-8843-2553d2c05004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83456d4-b40a-47ba-b8f5-97a82deae7b5",
        "cursor": {
          "ref": "22437093-34fd-4759-8aed-e08ae8270136",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "793ba0ca-1687-47ed-975c-e8ef6fbb7317"
        },
        "item": {
          "id": "c83456d4-b40a-47ba-b8f5-97a82deae7b5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c54929ea-2053-4774-ad25-6b63f7faeda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52adef6-00f0-4674-a80f-e0b0b6bdca92",
        "cursor": {
          "ref": "21e8d515-766f-484e-b281-b0f52ba22afe",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2e0fe33a-ae8d-4079-bef6-5fb88d868574"
        },
        "item": {
          "id": "b52adef6-00f0-4674-a80f-e0b0b6bdca92",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa528e7b-e79f-4d38-ba97-8281746a4f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c065abd2-95f7-4230-bb0b-2d754bd67146",
        "cursor": {
          "ref": "e148b3f3-875c-4cff-8e89-17b3fcd65d48",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a4216d22-1618-41e8-afda-2e69c82d6a75"
        },
        "item": {
          "id": "c065abd2-95f7-4230-bb0b-2d754bd67146",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e061b878-f98a-4101-a35e-922ddbc37ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac63bf3f-33ee-4d63-9880-628861bdd1dd",
        "cursor": {
          "ref": "c4f5d43a-495c-4b90-b4e4-89e9ced083a9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "00b633c8-f763-4430-a3b8-492233bc064b"
        },
        "item": {
          "id": "ac63bf3f-33ee-4d63-9880-628861bdd1dd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bf381afe-7427-439c-87e5-2759f87c13f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90079241-2b5d-40d2-8754-c64c376f3571",
        "cursor": {
          "ref": "a2b4c51a-8119-4698-9bc2-a2c69496d527",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "76283874-3ed1-4400-be22-eba90a8d87ad"
        },
        "item": {
          "id": "90079241-2b5d-40d2-8754-c64c376f3571",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f1920d6f-5f9d-41d1-b51b-7d9d291a1a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2c6f38-288e-4de7-94a5-2841752f88af",
        "cursor": {
          "ref": "014d06f7-098c-467d-b5f2-949e480c6138",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a583f04f-4e93-49b6-9920-4c134706813e"
        },
        "item": {
          "id": "5a2c6f38-288e-4de7-94a5-2841752f88af",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "218792f5-4a3e-4342-8d7c-1beff08b6d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc61f75-b987-4b7d-ada0-e56c95c75282",
        "cursor": {
          "ref": "8766bdd0-af99-4502-bdfb-9627b1407125",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9c31f497-c30e-4982-ab8f-4e5a0c21e8a5"
        },
        "item": {
          "id": "bcc61f75-b987-4b7d-ada0-e56c95c75282",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b22d946b-09d0-47bf-97c8-db8af9b03bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcbeb7c-06cc-4bbc-a770-382b2e4b8bee",
        "cursor": {
          "ref": "15058bb5-44aa-4ef1-b0d1-b719c0eacc2c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8f9806e8-a26a-4a1c-9e79-49c9ca7d9e33"
        },
        "item": {
          "id": "6fcbeb7c-06cc-4bbc-a770-382b2e4b8bee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2127c051-1d68-49e5-b0fd-75e9eb20c5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a28ffd3-112d-4e65-b202-c4b51de6583b",
        "cursor": {
          "ref": "c65b30ba-0bcb-4b87-8f1b-c2abc206657b",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c5f0499a-ce8a-4401-8fb0-d6fe5fcb77e2"
        },
        "item": {
          "id": "3a28ffd3-112d-4e65-b202-c4b51de6583b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "522b0029-c92c-4fd8-987c-930c36fadd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a635af00-5839-4bff-9970-a05db757e49e",
        "cursor": {
          "ref": "299a476c-c184-4623-81a4-c8114bc79e30",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7af04c16-050a-4224-a5b6-63caa5f5a256"
        },
        "item": {
          "id": "a635af00-5839-4bff-9970-a05db757e49e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "669cb20b-0ae8-40bd-aeeb-00fb32eabd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fc6721-aef3-4752-9a07-4d964a282bee",
        "cursor": {
          "ref": "a9d2ead7-29c3-4b30-b801-961fcfb68328",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f8b99912-d302-48ee-8583-a6c9f6f980ca"
        },
        "item": {
          "id": "35fc6721-aef3-4752-9a07-4d964a282bee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9df4b6da-7e26-4de8-9366-a8668370af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba21031b-42ed-417b-83e1-2a1c28e1b04d",
        "cursor": {
          "ref": "303f2568-8a74-454b-a307-19ad8b9fee88",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f48a0ee2-207d-48d7-b7ca-037bc5e75901"
        },
        "item": {
          "id": "ba21031b-42ed-417b-83e1-2a1c28e1b04d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ba6a4db7-b898-431f-a01a-4a39dc79e9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d003462-c978-4bb7-97e4-1c0817922ae9",
        "cursor": {
          "ref": "166919e5-409f-45db-b811-9ae48b50c848",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c885961-4538-400f-802e-33273fb85d55"
        },
        "item": {
          "id": "3d003462-c978-4bb7-97e4-1c0817922ae9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "34778ee7-78f9-453d-b7a1-6f858df0c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2815314-0017-48d0-8b34-c2f3a5678cf7",
        "cursor": {
          "ref": "e6708955-e56c-41a2-b449-73ed8f6aabac",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8356cbb9-7428-4978-a8c1-bc385bd63e74"
        },
        "item": {
          "id": "e2815314-0017-48d0-8b34-c2f3a5678cf7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5d2a697a-03f7-4e5d-b928-56809f486532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3eb6ba-2130-484d-af62-e9d8bffb7f1f",
        "cursor": {
          "ref": "361e1f2e-c0c6-487a-82a5-c40b0d9843d3",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f12aaa7-2045-4758-bab8-d51d62433f48"
        },
        "item": {
          "id": "4d3eb6ba-2130-484d-af62-e9d8bffb7f1f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6988b45-d3b3-4335-ba53-ee056b4e9e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61436513-72c3-485e-b95e-bfc89e57238e",
        "cursor": {
          "ref": "456b4355-f4fa-44b5-8c5a-a539d647b6d8",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0a8f096-c1bc-47f4-82b1-fb512714339d"
        },
        "item": {
          "id": "61436513-72c3-485e-b95e-bfc89e57238e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "78ff42ab-9979-4b32-b32a-29a1ece8f0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f53461-cfc7-483b-bed5-99f30337d59a",
        "cursor": {
          "ref": "2d90728a-fc1b-4c73-8fd5-2530ac024978",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "109afcc4-21e5-4c83-a107-5b24280c1b36"
        },
        "item": {
          "id": "d8f53461-cfc7-483b-bed5-99f30337d59a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a97d8396-79de-4fa9-bb63-7350d970b599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161951db-8003-4430-bc84-732887a1b4e8",
        "cursor": {
          "ref": "e3ba837f-1e43-4965-8420-332086063af3",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bf874b43-6391-464f-b741-28d18d7f1d96"
        },
        "item": {
          "id": "161951db-8003-4430-bc84-732887a1b4e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "576e2b3a-af11-4c2e-86ea-b82bde88018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d292978c-bc7a-48f7-a7fc-fbfeb4124f42",
        "cursor": {
          "ref": "55a692af-6c70-4133-b575-9df599c1ef1a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "539c60a2-201c-499b-a805-9f0874149e1a"
        },
        "item": {
          "id": "d292978c-bc7a-48f7-a7fc-fbfeb4124f42",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf812727-05dc-49f0-8a8d-04ea32667f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8977a9-75ed-4d42-af30-b75613249a20",
        "cursor": {
          "ref": "c0bf3427-a3a3-4460-a41b-f66dfe9eed7d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bcefd730-0bd8-41fa-8e3c-19b464745da9"
        },
        "item": {
          "id": "9d8977a9-75ed-4d42-af30-b75613249a20",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "57f2fca0-9530-46ee-baa5-997ac0fd0262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6ee70c-0ce9-4053-97d7-8918fa21de9f",
        "cursor": {
          "ref": "114cbedd-fc3e-4b26-8773-fd987bdf6d79",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "01a74369-fd10-44b1-9e0a-4aa297d90094"
        },
        "item": {
          "id": "ba6ee70c-0ce9-4053-97d7-8918fa21de9f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34460409-c071-4e20-97d9-fa741c748977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932e6497-68aa-40c4-aa2d-185964e2d92a",
        "cursor": {
          "ref": "484dfb7f-39d4-4d37-ad27-4b6954e8570c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5fa830ca-6445-41ec-9be4-fed12975cada"
        },
        "item": {
          "id": "932e6497-68aa-40c4-aa2d-185964e2d92a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "391d19d6-de6f-46fa-873b-8b7a38b27d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399e852c-31bf-4864-9b65-9cadc726d45a",
        "cursor": {
          "ref": "1e3605d8-d8f2-445e-9d01-db59f51eff5f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1f9a4ed0-9803-4d60-8f06-9b7108c920c3"
        },
        "item": {
          "id": "399e852c-31bf-4864-9b65-9cadc726d45a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a85f307b-ea78-47c8-81d0-a1d3ce56005a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99171b52-6362-40a1-9b31-b4a7e24c308d",
        "cursor": {
          "ref": "1976d248-41e6-4643-8521-ee4f4c1c02be",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bf15e68b-4457-4de4-8355-86aa6b9e0245"
        },
        "item": {
          "id": "99171b52-6362-40a1-9b31-b4a7e24c308d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "04047c58-cf80-46b2-bdbc-0f90a2fb49ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608c8edb-0a3c-4b08-9de6-33789af15587",
        "cursor": {
          "ref": "d3846a55-2ea5-475c-9163-1c00ed55555c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0a5a590a-3034-4f2e-b1c8-21fed9e12fb8"
        },
        "item": {
          "id": "608c8edb-0a3c-4b08-9de6-33789af15587",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e628993-9961-4a16-a710-ac72c2e91bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86976a61-593d-49da-9f96-6a9ffba0f17b",
        "cursor": {
          "ref": "0680bcde-e02e-4384-a807-a77d7431aa31",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c1c464cc-ea93-4bd7-b793-0606cd23fbf5"
        },
        "item": {
          "id": "86976a61-593d-49da-9f96-6a9ffba0f17b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3bad8b9e-102a-4a69-b207-10aa11dac87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6fb72f-e53c-4537-bf54-337c04477cec",
        "cursor": {
          "ref": "a6a43c97-b6b4-4b31-9147-59eac41c807b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3c782b16-9c4f-48f2-9fc9-433ca0908e14"
        },
        "item": {
          "id": "5c6fb72f-e53c-4537-bf54-337c04477cec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a0b73c04-5575-44bb-b962-fc4d3e1b3ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888ac890-0ff1-4b71-ac96-ae0fc70e63e3",
        "cursor": {
          "ref": "66f8a022-78ea-4e3c-84ba-df8ed7452947",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ab5f559e-f87d-4ef5-a78c-b04582576502"
        },
        "item": {
          "id": "888ac890-0ff1-4b71-ac96-ae0fc70e63e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8298e010-ae9d-4ecd-a45f-83940edc7342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b99b57-476c-4337-939f-0488d403f405",
        "cursor": {
          "ref": "ab8ea943-923d-4676-b245-e2bbefeff782",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef098bae-122b-4cac-9926-ae05fa85b676"
        },
        "item": {
          "id": "b8b99b57-476c-4337-939f-0488d403f405",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9ffc2aac-710a-40ee-a089-3066acfd0d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dc9d29-2e5d-4067-b6a3-cdd1b82ccb62",
        "cursor": {
          "ref": "d0bf23dc-47f2-473d-bff4-afd2739e5dab",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a090e55f-3490-4a0d-8c2a-45311cace891"
        },
        "item": {
          "id": "86dc9d29-2e5d-4067-b6a3-cdd1b82ccb62",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0fe2869c-2fac-4810-871e-07f94223fe6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ece2d9-3e56-4d35-b0c4-15f339a5a1d9",
        "cursor": {
          "ref": "d5146df4-268b-46c9-9ac1-32a56e9ad4ee",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fa7a9404-b236-4430-85b5-3c53b8beb164"
        },
        "item": {
          "id": "35ece2d9-3e56-4d35-b0c4-15f339a5a1d9",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c1b4d5e4-29d5-40ca-91e5-fb1383de12f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5930e0d-185d-43a1-b394-547cc423e74e",
        "cursor": {
          "ref": "83ed5933-1ad9-4cde-8f5b-2dc3872f6cb1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b80b1597-f031-4c4f-95ac-8122a4bf0c81"
        },
        "item": {
          "id": "d5930e0d-185d-43a1-b394-547cc423e74e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2cb7b19a-ead2-4e6d-af4e-c2dcf4e02e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5930e0d-185d-43a1-b394-547cc423e74e",
        "cursor": {
          "ref": "83ed5933-1ad9-4cde-8f5b-2dc3872f6cb1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b80b1597-f031-4c4f-95ac-8122a4bf0c81"
        },
        "item": {
          "id": "d5930e0d-185d-43a1-b394-547cc423e74e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2cb7b19a-ead2-4e6d-af4e-c2dcf4e02e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c70e9e-5071-49fa-8877-9295b5884e19",
        "cursor": {
          "ref": "7ed33b20-c340-4b23-9a33-43ee4425f3aa",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5d506ddd-1b82-4cd8-8e9d-89c689b57e38"
        },
        "item": {
          "id": "38c70e9e-5071-49fa-8877-9295b5884e19",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "62509402-0518-4b41-a423-fc3278ad5106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca3b459-95bf-4d0a-8040-dd5fcb1f6029",
        "cursor": {
          "ref": "d1d890a8-d7a3-46fb-b2eb-1daea3dee2c0",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f7ddaf64-1bad-43c1-88d8-a65217f5661f"
        },
        "item": {
          "id": "1ca3b459-95bf-4d0a-8040-dd5fcb1f6029",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ba9b20a6-522f-433c-92c7-4a9fca48b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7397d9ec-a04a-4d2e-8df7-a7eba67141dd",
        "cursor": {
          "ref": "5e969412-13dd-4503-a8ca-ac8d4bdacad5",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8635c692-3779-4450-bd40-41ab1878c8e8"
        },
        "item": {
          "id": "7397d9ec-a04a-4d2e-8df7-a7eba67141dd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d13dc54-2512-4e32-a4bf-b868f9aaeccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d792b410-2eb0-4d9a-a9bd-bbfb5338e43c",
        "cursor": {
          "ref": "0247fbf3-f84c-4786-bf96-928ffc88943b",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0973fe2f-ba52-484b-861b-7a1462357541"
        },
        "item": {
          "id": "d792b410-2eb0-4d9a-a9bd-bbfb5338e43c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e704148-77a5-44fb-824e-d7e40aaaf81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e5c903-cf2b-40bc-9843-fba7917e097b",
        "cursor": {
          "ref": "6ca96811-af37-40c6-b112-4612f743f9f3",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fd67b69e-fd23-4e34-99ba-956e83edb436"
        },
        "item": {
          "id": "e3e5c903-cf2b-40bc-9843-fba7917e097b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "746dea03-406f-44d1-996d-19e4e5a42970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d071ce06-ba4f-47c0-83d6-fe20f42b47bc",
        "cursor": {
          "ref": "76ed9867-0b81-4651-8e5f-c5f04078d9e3",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5b6c4628-bc8f-4324-a28b-dc26a760bf2d"
        },
        "item": {
          "id": "d071ce06-ba4f-47c0-83d6-fe20f42b47bc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "40382b30-02ae-4551-a2b1-2b222014812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4a760-6086-4d4c-ba9b-315a1be3b1af",
        "cursor": {
          "ref": "f849bfa2-028c-4a93-9820-8887be3866c1",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6e36be40-c18f-4208-b09d-fb19f5a95276"
        },
        "item": {
          "id": "62f4a760-6086-4d4c-ba9b-315a1be3b1af",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b380c927-1ce9-4675-8b35-c83d797f16ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef6bf9-c9ea-40f4-93e3-5327f9783a8b",
        "cursor": {
          "ref": "693bc501-bf69-4ef2-932d-3b515c5f2854",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8d7dccf7-29f8-41b1-b09e-f9b3cd845cba"
        },
        "item": {
          "id": "46ef6bf9-c9ea-40f4-93e3-5327f9783a8b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4cc007bb-0d39-4d96-9d95-60e5d39badea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae34e48-844e-4e8c-99c6-5e60ccc8c68c",
        "cursor": {
          "ref": "02e753c4-b2db-4cdf-b18d-14c3d1ccb02a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fca5dd3e-c492-47aa-8d4b-083d9a7f56b8"
        },
        "item": {
          "id": "5ae34e48-844e-4e8c-99c6-5e60ccc8c68c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "13de68fd-e16b-47dd-8fab-1cde37bbda1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751a4ef1-3606-4738-afcf-b60fd2b3641a",
        "cursor": {
          "ref": "47d33ddf-c133-4178-9a9a-5a28ee8a727e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4141c0cb-fe12-4eaa-b76a-f866a2d3d071"
        },
        "item": {
          "id": "751a4ef1-3606-4738-afcf-b60fd2b3641a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b23ac38-bb87-40d8-ad4e-e4d734023869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c7f673-f6b6-4054-a905-bcdab39f621d",
        "cursor": {
          "ref": "26cd2552-c508-4d5d-8ca6-e35159726fe1",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "21deee00-c795-4c9a-b3be-ee9674a8cacd"
        },
        "item": {
          "id": "23c7f673-f6b6-4054-a905-bcdab39f621d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e577f31f-67e5-43f8-8c43-63afd0f9f353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f5645c-4c1b-4978-9125-f831e9f08dd9",
        "cursor": {
          "ref": "489694b0-8927-4505-b535-6564bb3ff649",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c0ad9811-f57b-47ef-bb0d-ab9f639cdaa9"
        },
        "item": {
          "id": "80f5645c-4c1b-4978-9125-f831e9f08dd9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "505d4d63-5040-4f50-964c-bf8c9cc52f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7cb9fb-7c2f-403a-bf62-8924e78fe71d",
        "cursor": {
          "ref": "25fb7248-ef1e-4795-8a7b-41519e8fca66",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "170d5fda-8e73-48e5-916d-37d009107300"
        },
        "item": {
          "id": "dd7cb9fb-7c2f-403a-bf62-8924e78fe71d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fd9b2b2c-26e4-42a9-a726-8f9917561eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5328ed69-b7fb-43c6-8117-b49d8bc6cc88",
        "cursor": {
          "ref": "563796e6-7ca9-4ed3-8d6b-bf0c6607d4f6",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "020e2d59-fa52-4bfe-a87f-49e652f1f84c"
        },
        "item": {
          "id": "5328ed69-b7fb-43c6-8117-b49d8bc6cc88",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9dd72b09-d0ca-4e94-9fc3-ac1dc7bb0a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f894d7-f994-4426-bca6-14c3b77c9c08",
        "cursor": {
          "ref": "fea7d362-a50f-437c-acc7-5788da757189",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b4bb2888-4406-4d49-85df-f7a15b09ac90"
        },
        "item": {
          "id": "06f894d7-f994-4426-bca6-14c3b77c9c08",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6c86790d-a516-4c86-949c-f9f101388ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de54ea2-349b-4dd5-acb1-a6c9ff682114",
        "cursor": {
          "ref": "4375086b-9c76-49c0-ad2c-cecc24d4cbd1",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "819e8365-da35-4e4b-9a44-fc599238e9c3"
        },
        "item": {
          "id": "1de54ea2-349b-4dd5-acb1-a6c9ff682114",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "40f87c65-9ca7-4402-add8-4dcf000f4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6627489e-8645-4571-bf72-d283099b742d",
        "cursor": {
          "ref": "d3d2e6d5-8c3e-45c5-846b-c188f1351db7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fb94e555-8163-495d-bc59-3aeb0812ac42"
        },
        "item": {
          "id": "6627489e-8645-4571-bf72-d283099b742d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "93ffdcfc-1dca-4f1a-a14d-09d9ffb7b76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc393c7b-1c54-4567-8bb8-729e1b05edee",
        "cursor": {
          "ref": "7182f2c5-504c-48d3-a7ea-c389fee96501",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52285d88-2d63-48da-82ee-e9a2c4f976a6"
        },
        "item": {
          "id": "fc393c7b-1c54-4567-8bb8-729e1b05edee",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4fe2b576-d055-4f74-8170-27f78124cb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6217289-143c-45ed-9d8d-9d62d783c2bf",
        "cursor": {
          "ref": "0da416ce-e643-4efa-af4e-162f7e67287b",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "543a7d2c-d375-408f-b0ec-9a1d9ec7949e"
        },
        "item": {
          "id": "b6217289-143c-45ed-9d8d-9d62d783c2bf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "afc45626-fd8f-4f34-ac41-b88febbde587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe13c79-13da-4c36-a280-c6803f8d8ec9",
        "cursor": {
          "ref": "3b7abe4d-53e4-4bef-93d7-91bd6ae28244",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9779c740-2096-45c5-9dd0-582dad5bb612"
        },
        "item": {
          "id": "1fe13c79-13da-4c36-a280-c6803f8d8ec9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ad09ebf4-6b97-4946-aa02-083fbd3b07bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b7637c-c25b-4c1e-9b90-bdebbecb0164",
        "cursor": {
          "ref": "6997c865-b9cb-492f-b8f8-20bfe6f5b5a2",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4b091671-bdd5-4b24-998a-ea48df9deb18"
        },
        "item": {
          "id": "13b7637c-c25b-4c1e-9b90-bdebbecb0164",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "95553e98-5131-443d-b1b4-09b41cd110f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cec73e-77d6-4b35-bc81-2da09fef73d5",
        "cursor": {
          "ref": "d8287f44-e9a8-433b-b089-7c44f8af0160",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e2b0821d-60b6-4293-98b9-dfaefc581830"
        },
        "item": {
          "id": "b4cec73e-77d6-4b35-bc81-2da09fef73d5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ddf7ded-e2c3-4566-8a77-34a8906aa55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3a1d63-b231-4e88-85b0-a46562c2a534",
        "cursor": {
          "ref": "f58aadc8-ff2d-4c13-8ca7-0c01cacf8ddd",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "41eb0343-377e-4844-9001-fca4d202e050"
        },
        "item": {
          "id": "1a3a1d63-b231-4e88-85b0-a46562c2a534",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3517ee4f-3aff-4ba2-b010-ecdb13ceaef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d637b59-9016-4cb5-bf7f-acf06765a651",
        "cursor": {
          "ref": "d7e4b2a9-e67f-40e0-bba2-26fe26cfb04e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8c4a3c4b-3499-4a86-af76-c23870513127"
        },
        "item": {
          "id": "5d637b59-9016-4cb5-bf7f-acf06765a651",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a4e14d3-e143-4a37-b6aa-14618dc471b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7728df6d-995d-4178-9e5e-25006ac09bd3",
        "cursor": {
          "ref": "107a98e1-08cf-49ca-895d-bb8887042a39",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "75289c48-7613-4fc9-bc28-02303a2e09d4"
        },
        "item": {
          "id": "7728df6d-995d-4178-9e5e-25006ac09bd3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5a61103d-b7fc-45c9-84e6-23e42c7ffc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159daa4-5ffa-4f0f-adcc-3e3cd25257bd",
        "cursor": {
          "ref": "12220639-4424-4a78-89e7-a7134acd6c88",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "071471cc-ea7a-4155-b117-5888d29e04ae"
        },
        "item": {
          "id": "8159daa4-5ffa-4f0f-adcc-3e3cd25257bd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d55f9eef-1942-44da-beb3-b72430109bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fde04c-1c99-44a6-a156-28e0c0797446",
        "cursor": {
          "ref": "8eb0e54b-e405-413f-9497-e5feb33ec149",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6cd47634-91bc-4d52-b796-c044d39c1063"
        },
        "item": {
          "id": "75fde04c-1c99-44a6-a156-28e0c0797446",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c37f20ff-f63a-4d3e-8a43-6d10ca2dd852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18788ac3-c6a0-485d-8c85-bb9c17739425",
        "cursor": {
          "ref": "480af4ad-e443-45b1-adc8-f226a79c5248",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7176b81d-e3c5-4e46-950c-2041d3007878"
        },
        "item": {
          "id": "18788ac3-c6a0-485d-8c85-bb9c17739425",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1aae4f12-8de7-49de-ab6f-d7cdab0a526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272a671c-23d3-4a20-89a6-f2489d722f41",
        "cursor": {
          "ref": "69e71d6a-2234-4529-9f1b-551d34d7c697",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "57e39ab0-be39-485c-8ee6-652bc3d890e4"
        },
        "item": {
          "id": "272a671c-23d3-4a20-89a6-f2489d722f41",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e6664807-d64b-4094-a8ad-132fbfac6a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f50915-9a11-4be7-8b7b-43ad270ff626",
        "cursor": {
          "ref": "0c16a376-a885-4948-b26e-363098539e18",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "de4ce40f-6a5e-4d66-bae3-12cd888992fb"
        },
        "item": {
          "id": "30f50915-9a11-4be7-8b7b-43ad270ff626",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f7975f8d-4f95-472a-82a0-36e99da8b14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536120ea-89ff-467b-929f-4834f33d364c",
        "cursor": {
          "ref": "5a73963c-7a0b-4b51-bc43-754d7c366de7",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f2cfda6-f2df-4739-abf8-c178ea5d050e"
        },
        "item": {
          "id": "536120ea-89ff-467b-929f-4834f33d364c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a81b78d4-de75-4006-a051-f1c405e8d9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c65135-8113-4479-bb5e-c777a28882ae",
        "cursor": {
          "ref": "fcc89c3a-593b-418c-bd5f-84cc96e2251a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2e464020-ccdb-46f1-be70-4b77760708bc"
        },
        "item": {
          "id": "49c65135-8113-4479-bb5e-c777a28882ae",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dea4842a-8891-487a-b9ae-abb710d9dc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359fedc5-b6a6-4125-abeb-7dc84db0075b",
        "cursor": {
          "ref": "ff9c228b-5ab7-41a6-ac1e-323d1028f0b8",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fddce343-922b-47f7-971d-a82b05957031"
        },
        "item": {
          "id": "359fedc5-b6a6-4125-abeb-7dc84db0075b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "04bc373c-b44f-484d-a771-ba61794e2e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946d2161-87a2-4628-a6e2-b060be98edfe",
        "cursor": {
          "ref": "c9f7ba9a-f2d1-411b-8a1a-03d0437f49bc",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7504d8da-f39f-495f-8633-64e6bb4f1e62"
        },
        "item": {
          "id": "946d2161-87a2-4628-a6e2-b060be98edfe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6c65cb6c-cf69-473a-a5ad-4516edc26804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03ceb81-fc22-45b7-99db-a7af2ab2a9b2",
        "cursor": {
          "ref": "84036d02-2c8f-4499-9d5b-0edf007adb11",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "35fd382c-3353-4eb9-9e4c-7df85f7d0e21"
        },
        "item": {
          "id": "b03ceb81-fc22-45b7-99db-a7af2ab2a9b2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d94f3245-f400-4b40-afea-f73f7547e6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7b78b-d3f0-4de4-971e-4cd00ce90019",
        "cursor": {
          "ref": "0bec7fb0-b7da-4cd8-b026-17c316229362",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "76d96be1-4e76-4a77-8c4b-64183848b646"
        },
        "item": {
          "id": "4be7b78b-d3f0-4de4-971e-4cd00ce90019",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "422de0e6-0338-4571-bf9e-f66acc19bedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9343cf2f-f193-41ce-a316-d574137b748f",
        "cursor": {
          "ref": "e588dc0b-5800-4b42-b4b6-c6fdb348d81b",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9bd8f4f2-1a81-409f-90cc-a32087e4cf3a"
        },
        "item": {
          "id": "9343cf2f-f193-41ce-a316-d574137b748f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aee11bc8-452a-4081-97d9-e05432b8c98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f04e0-9324-4e63-8012-e2008fe6365f",
        "cursor": {
          "ref": "9748820f-32ed-4af3-9f61-a1342e77b1a5",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3f177037-6ef4-4e4d-82bb-1f7897d646f7"
        },
        "item": {
          "id": "6c1f04e0-9324-4e63-8012-e2008fe6365f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dabb8561-b05f-4fff-8ab9-0a818a73cdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd4b499-a5b1-46ec-ad18-af16ffa9134f",
        "cursor": {
          "ref": "4c1a852f-9bfa-4e11-9399-fd0ec580a4a2",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "04c36da6-e7e3-4998-a7ce-2a259c5774fc"
        },
        "item": {
          "id": "fcd4b499-a5b1-46ec-ad18-af16ffa9134f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f3225a78-4ec9-471c-b99d-df1fdcb1013a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafa5c5e-d904-4449-99f0-3df1815e187a",
        "cursor": {
          "ref": "463d878e-af85-4b0f-b8d8-affb612d9ff2",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7de60b98-c15c-4826-8d26-660323225d4c"
        },
        "item": {
          "id": "cafa5c5e-d904-4449-99f0-3df1815e187a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3a084063-55f7-4871-991a-d46c00add7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40288dab-e430-425b-8a21-47b2cfcda000",
        "cursor": {
          "ref": "436cf52d-660f-4cc2-9cb4-211d4a0a9b37",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d29dded9-eba8-4cc2-baef-b47809b9ca47"
        },
        "item": {
          "id": "40288dab-e430-425b-8a21-47b2cfcda000",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9f90c94-94af-46a2-84b1-ca943d3c222f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4113c4-25a1-4d20-bcc1-293f14850cfe",
        "cursor": {
          "ref": "b6769beb-612b-4052-abef-425cf85717ea",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "22b73b64-5f1c-4bf2-9471-d4d86822681f"
        },
        "item": {
          "id": "0a4113c4-25a1-4d20-bcc1-293f14850cfe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cee2c285-d1df-4708-8605-a0077fd2841b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5559005c-f9f2-42a4-9715-7fe6dbb062a5",
        "cursor": {
          "ref": "02f32082-e0cc-496e-a8d2-4b071e1a41a9",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1ef7f368-5040-4b18-b3eb-6ee8c6a5d336"
        },
        "item": {
          "id": "5559005c-f9f2-42a4-9715-7fe6dbb062a5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4c655d4-6feb-4c6e-bc84-07a0d042d97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91570a4-473b-4052-bc0c-471b8bbf029e",
        "cursor": {
          "ref": "1d7e63b1-3f10-4fac-8ab0-f494c473e776",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "64fb22bc-707e-4b4d-8679-730ad5495255"
        },
        "item": {
          "id": "a91570a4-473b-4052-bc0c-471b8bbf029e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "92be70bd-c7da-4da8-993c-cd315d798757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8462793b-6d07-4ef8-8b4b-b2d605ec9113",
        "cursor": {
          "ref": "f46f3c3a-0901-4208-a1a3-ad932cc6a32f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "95e541e2-33cc-44fc-8b36-3df66d24b1fb"
        },
        "item": {
          "id": "8462793b-6d07-4ef8-8b4b-b2d605ec9113",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b8b7735a-a034-414a-9b95-d881874f7fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b326f2-fab5-4af1-abc0-df36595757b5",
        "cursor": {
          "ref": "3ae48b3f-ed9f-4240-a721-5de650ee8289",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "741006b2-3e12-48dd-9434-e588c66d9216"
        },
        "item": {
          "id": "61b326f2-fab5-4af1-abc0-df36595757b5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "33af1937-e7d8-4f5a-a06f-5db02ba93289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd7840e-dbd3-4516-b9a7-edd3cffa9d1d",
        "cursor": {
          "ref": "8f875799-4d24-4088-abd3-3635b48a3118",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "318818bf-d4f3-424b-8e49-d1b46a05d66b"
        },
        "item": {
          "id": "fbd7840e-dbd3-4516-b9a7-edd3cffa9d1d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "27f866ce-29a0-466c-8bf2-ade1751089bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5153a382-219b-4d3b-8d51-eae51d384c9e",
        "cursor": {
          "ref": "d0d9f9ab-f502-44cc-902a-ad164c31ebce",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "29274db9-b04d-4388-a14f-7b8ba4a31399"
        },
        "item": {
          "id": "5153a382-219b-4d3b-8d51-eae51d384c9e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "12731b50-b828-4bd8-9e65-7de7a34f1748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a6aaee-a799-453b-ac50-406a1f191fd8",
        "cursor": {
          "ref": "70ad4fe7-c4a7-4663-a86a-7cd823f1ca4c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "99f91b69-262e-4989-bc79-cfd8d0075a4f"
        },
        "item": {
          "id": "08a6aaee-a799-453b-ac50-406a1f191fd8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a50c33a-ee53-4161-a652-58c2f7541153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da77b3ca-8fa7-42de-a46b-f4a87f9c3bce",
        "cursor": {
          "ref": "e842da8a-b14e-49e0-b1cb-b383528d38e6",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "03151c42-05bb-4f7c-9d38-8c01f8b17215"
        },
        "item": {
          "id": "da77b3ca-8fa7-42de-a46b-f4a87f9c3bce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "766326de-6652-492e-abed-0a1f1fa12a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657aaa64-22c5-4ca2-ba58-8238a02a3803",
        "cursor": {
          "ref": "a5775bfb-42e3-4977-ba09-65011ad834f5",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3aa9a80e-21db-4c36-bd86-4e28b94e02e1"
        },
        "item": {
          "id": "657aaa64-22c5-4ca2-ba58-8238a02a3803",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ab6597b1-8b0b-435c-8d04-14ed0c84caef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7954fdf1-30ec-406a-8cf0-4f115857f15b",
        "cursor": {
          "ref": "38a5f094-d195-4e7c-bda8-fa634b661c17",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "64b6761f-18a3-45a6-8409-a8b8aea64512"
        },
        "item": {
          "id": "7954fdf1-30ec-406a-8cf0-4f115857f15b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "565a98e1-40c8-4c62-b7cb-29bc02bbdfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be4566c-b029-48f3-961c-e127d9ee3731",
        "cursor": {
          "ref": "4d380953-2679-43f1-8a89-4a597112c6fc",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ce1b311c-b4c7-402a-9085-0401776ce1da"
        },
        "item": {
          "id": "7be4566c-b029-48f3-961c-e127d9ee3731",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9ad814b-7323-4142-b076-645cb1d4d16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a1e8ea-51bc-4687-b98b-77679a490ffa",
        "cursor": {
          "ref": "1ca200e4-a69c-42d3-8b2c-9406205e16c3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "500b9bba-b21a-484a-b71e-e3d572374514"
        },
        "item": {
          "id": "b1a1e8ea-51bc-4687-b98b-77679a490ffa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "677d6495-d1ea-418e-a12e-354553baf6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29a7aa1-7ed7-4d24-b97e-b6163316b84b",
        "cursor": {
          "ref": "cdec732e-557a-4f06-bc28-1a44dbf6bfce",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1ae3961b-fcec-40bb-b2d5-b46f645acc2a"
        },
        "item": {
          "id": "f29a7aa1-7ed7-4d24-b97e-b6163316b84b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "05f23fc1-6dc0-4328-979c-c6ab9bee3b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d609500a-7c7a-4edb-a98c-58e02e5559d0",
        "cursor": {
          "ref": "ad548d6b-72b6-4cd9-869a-0d0234477f3c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "34fd3c3e-2937-4ee1-a8fd-cf4e0b078f22"
        },
        "item": {
          "id": "d609500a-7c7a-4edb-a98c-58e02e5559d0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7d2f885d-ab40-4d25-a78f-461fe9cbd2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc974221-ff29-4079-bbec-94baf11c9904",
        "cursor": {
          "ref": "bc5dbd54-5c60-4161-a4f6-9c54446fcfc4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6394b0f3-f518-46a6-9a1a-308c14c9d92a"
        },
        "item": {
          "id": "dc974221-ff29-4079-bbec-94baf11c9904",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a9e0a94d-6bbc-47bd-8375-ca3504f92d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360be61d-d377-46a1-9b8d-f47fd67d45be",
        "cursor": {
          "ref": "aa8834c0-2f36-42f3-af63-92189cd4f1bb",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3bd479c2-aff2-40ea-a7f4-7b7a0b6836c4"
        },
        "item": {
          "id": "360be61d-d377-46a1-9b8d-f47fd67d45be",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "251bbe3f-1f15-4360-a6f5-852e80716c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7728b185-f217-4b49-86af-bddb311bad2e",
        "cursor": {
          "ref": "67159569-0d2b-436a-ad1d-86f507dbeb32",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3d6bea51-8c77-4036-a152-dcac101c436a"
        },
        "item": {
          "id": "7728b185-f217-4b49-86af-bddb311bad2e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b3b35c6-422a-4547-a727-3d82a52e37b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cb1dfb-8283-4685-bcfd-4ffb5e3a5698",
        "cursor": {
          "ref": "da6540ee-cc4b-4a45-9325-5bdc0617aa82",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "817ff159-5928-47ae-ab3b-8962b7ff00ea"
        },
        "item": {
          "id": "79cb1dfb-8283-4685-bcfd-4ffb5e3a5698",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "316fcf01-a593-4fc6-abb3-3e05842288d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a60c01e-b13f-466d-a304-3bbe8bf9100d",
        "cursor": {
          "ref": "4cd4782d-c8ea-400f-8485-613e42cd3ff8",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c892095f-20c6-490a-bb19-d36d60d520f6"
        },
        "item": {
          "id": "7a60c01e-b13f-466d-a304-3bbe8bf9100d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eb452b6a-5e5b-44de-959b-6adf3544977f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9a4ddc-8d90-405f-ba77-692a7dd7d241",
        "cursor": {
          "ref": "4c7b5587-aaa2-45d6-b7e0-6256a8d1f93b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d6a654f9-7ebd-4330-a516-ecb1d6879f8c"
        },
        "item": {
          "id": "0f9a4ddc-8d90-405f-ba77-692a7dd7d241",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d4d068c5-916b-4f3a-b3cf-9bb6f9fe0a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d3628f-e42d-4955-8cae-af7f14179e14",
        "cursor": {
          "ref": "b3049f41-c0cf-4de6-9fc9-144ba6e25629",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "456dfcae-ea75-498d-8d26-3a4e807ce85c"
        },
        "item": {
          "id": "d3d3628f-e42d-4955-8cae-af7f14179e14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d2e0047e-8548-4d75-93cd-416ffee589dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9db441-11b2-4657-9b75-30c6dfb9a0c8",
        "cursor": {
          "ref": "dbdb12e9-0b3b-4ec4-927b-c55d040e14d1",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1056dc5f-9402-47db-97e7-3259baa83272"
        },
        "item": {
          "id": "af9db441-11b2-4657-9b75-30c6dfb9a0c8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "98a7c0b9-f47f-4ae8-96bf-56dcdac300eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef1088a-0159-4b3f-9f3c-026f67f8abec",
        "cursor": {
          "ref": "6a943b24-a1cc-49ed-a9e7-dc57cf3c227d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "56771c9f-1d3e-4013-84de-7ab7e29a3755"
        },
        "item": {
          "id": "7ef1088a-0159-4b3f-9f3c-026f67f8abec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ef836d67-b5a0-4ef6-bbd0-cb6502022e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bceaa0-5c73-4b90-8286-3da603fe0e54",
        "cursor": {
          "ref": "e78363a9-3cae-4385-b3dd-c7825314f923",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eacf1b1a-420e-4be1-92a2-344fe204a436"
        },
        "item": {
          "id": "d4bceaa0-5c73-4b90-8286-3da603fe0e54",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e00e50d6-31d4-4fba-a048-3e9f526100eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1878295d-a037-402b-8c56-606f64cbacd7",
        "cursor": {
          "ref": "90a4916c-7e6e-4039-8841-dd7d96393176",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6df4fe73-fd68-458c-a1ca-1bd10fe1b07b"
        },
        "item": {
          "id": "1878295d-a037-402b-8c56-606f64cbacd7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "88be4f31-79a2-4df7-9ad4-2f5d2d8aff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079593b1-ac95-4db1-ac6f-0c500bac6983",
        "cursor": {
          "ref": "a01cb26b-5008-43b7-88f4-5253a1b45e5a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d38f6a04-ea36-4145-ba57-f6ada6105123"
        },
        "item": {
          "id": "079593b1-ac95-4db1-ac6f-0c500bac6983",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "54ea0a60-e2a5-45ed-9b53-40ae0403d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267679af-6651-4ab5-a3de-81a2ba73c21c",
        "cursor": {
          "ref": "ae319210-2a94-435d-9507-9e4de7df9125",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "012e80b2-755b-49f7-a959-070427890f22"
        },
        "item": {
          "id": "267679af-6651-4ab5-a3de-81a2ba73c21c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "26a1edf3-a793-45f6-a91c-008b0447165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df765279-cc75-48b2-9839-baac1e880da3",
        "cursor": {
          "ref": "9c3ed6d6-82d6-4dcb-a994-9831dc7e78fe",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aafe6fec-0962-4f26-90a5-a1e81dc90443"
        },
        "item": {
          "id": "df765279-cc75-48b2-9839-baac1e880da3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1b8862b9-2f33-4dba-9144-aef71f99c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a30ff70-0a99-43f2-a826-968f7bb93134",
        "cursor": {
          "ref": "ac1c57ec-1f4b-43b7-80a9-e3d97c343df5",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "28c14527-1599-4f17-8aaf-04b5469a35d3"
        },
        "item": {
          "id": "0a30ff70-0a99-43f2-a826-968f7bb93134",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4d9704b1-cfdd-46fa-8981-1972b9363b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e7ccc-fc67-4a57-a5e2-841aec9593e0",
        "cursor": {
          "ref": "30f0a59d-78d8-422d-860f-6d6fea6d8aee",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d4455a65-3ed7-44a3-b1d2-bcb788b03d7e"
        },
        "item": {
          "id": "d10e7ccc-fc67-4a57-a5e2-841aec9593e0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "24bd5c1d-58b5-4326-bbdd-bae800eb5cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fd92db-6028-4918-aefe-aeecd755bb19",
        "cursor": {
          "ref": "df5237cb-0794-4afc-a52b-2d020fc01041",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12523a92-e2ad-4d1b-a914-aa798ea90185"
        },
        "item": {
          "id": "b2fd92db-6028-4918-aefe-aeecd755bb19",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "136d8a76-d01c-4322-a6c1-eca0e0f594d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35c7c57-53e9-422e-8f9e-4c86adfc3e28",
        "cursor": {
          "ref": "4740cd48-b62a-412d-89ca-724c4d8de9ec",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "58863f85-17ea-4aa4-968d-89f482bd38a1"
        },
        "item": {
          "id": "a35c7c57-53e9-422e-8f9e-4c86adfc3e28",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0c0e1141-9fbc-480f-afcf-0b174edf2161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e1aa0b-e7ad-4d06-9188-009a26486d9e",
        "cursor": {
          "ref": "c3dbe665-812d-4082-adda-4bee560d777d",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8601c826-32a1-4893-944f-8a777a46d345"
        },
        "item": {
          "id": "08e1aa0b-e7ad-4d06-9188-009a26486d9e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cc08170a-d583-4aa5-aa7c-00d535c71338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a691636-1c9d-4253-9186-f4af47a24e88",
        "cursor": {
          "ref": "d6c01d75-a379-4938-8403-e802ce379da4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "faf742e6-cb8b-42c6-9637-a68ef4246adf"
        },
        "item": {
          "id": "8a691636-1c9d-4253-9186-f4af47a24e88",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fc36205b-fd80-4ea9-a4f0-458d943506c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a83a4d7-bd93-43ab-b86d-22e28b0a5b47",
        "cursor": {
          "ref": "586f6ea6-d7a5-4b1a-8e8a-9188a7c5833d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fa7a9f05-5df5-4ffe-b3bc-05bd542af3ae"
        },
        "item": {
          "id": "0a83a4d7-bd93-43ab-b86d-22e28b0a5b47",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "48e9320a-cc38-452e-8dc9-da780ce8a7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e193192-22c7-4d1d-801e-6d473ede0f85",
        "cursor": {
          "ref": "8532a43f-e4eb-4040-89aa-647f2bffd75c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "104a57db-23b0-4c44-8fbe-436ad7051bc9"
        },
        "item": {
          "id": "1e193192-22c7-4d1d-801e-6d473ede0f85",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d3746a10-61a9-4681-a78f-05896eb10a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208623ab-79b3-4143-bcb3-74de77371e88",
        "cursor": {
          "ref": "422f49fa-2882-4f11-b080-ea932f090bcc",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e3b8f372-ba0b-468f-80be-4d045b1aaf19"
        },
        "item": {
          "id": "208623ab-79b3-4143-bcb3-74de77371e88",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "042b3a99-25aa-4179-bb7a-53776e3de3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bee43a-e8c3-458f-bccd-dfc89dc88140",
        "cursor": {
          "ref": "d74937c8-5874-4f04-92a0-ae32be035333",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "79f31d07-26e7-4855-a98a-e4085ddbbd66"
        },
        "item": {
          "id": "b3bee43a-e8c3-458f-bccd-dfc89dc88140",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4ae36227-cd90-432e-8099-f5c3a7e70a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7bbc8a-12c1-47b2-84fb-46421fcadbfb",
        "cursor": {
          "ref": "779c5e8b-b08f-4fdd-9671-965ce9b543c7",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "065597ff-dd6d-4de8-956f-59edf4e9f60d"
        },
        "item": {
          "id": "4e7bbc8a-12c1-47b2-84fb-46421fcadbfb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f08ae032-f980-4521-b4f9-6a375bfc3857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab56ca0-e380-498c-bc97-bab4b8436512",
        "cursor": {
          "ref": "249d6ce7-235a-4ef1-8bd0-23c8bf0f029a",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f31b40fe-8ba5-419e-a699-c909b63732f6"
        },
        "item": {
          "id": "7ab56ca0-e380-498c-bc97-bab4b8436512",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bd2c6cd0-6985-45df-9ce6-162154cf4abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d52f5c-862b-4887-bf25-1b755febc10c",
        "cursor": {
          "ref": "70237189-8765-460b-8d25-5fc4f23326f8",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e6c39946-304e-4f57-891d-483ce55943f8"
        },
        "item": {
          "id": "78d52f5c-862b-4887-bf25-1b755febc10c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95ee9ddf-cede-4458-8a37-f53288568aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5f5c59-bb9f-4373-877e-35631e35462b",
        "cursor": {
          "ref": "6f4e2c7e-6be0-4f31-bf07-e0535f00c4a8",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f0d0a6b6-c9d5-4762-95dd-f512debc1688"
        },
        "item": {
          "id": "0a5f5c59-bb9f-4373-877e-35631e35462b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b8033a1a-88b4-484d-9bc8-d7ca3dda323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a37e501-266e-446d-a60c-d62191442c94",
        "cursor": {
          "ref": "0bb03eda-0079-4908-9f25-95db1b9118ed",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3ab13c88-ed30-459d-bd7f-677eadb98eba"
        },
        "item": {
          "id": "7a37e501-266e-446d-a60c-d62191442c94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fbc40004-211f-4fea-be16-bf5ba823442b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c7c910-9f3e-4d79-b461-e79ff82b900b",
        "cursor": {
          "ref": "60611743-8fac-4724-bd02-b18189d41975",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ea9abfc1-1ee3-4572-86af-52d6457281f2"
        },
        "item": {
          "id": "54c7c910-9f3e-4d79-b461-e79ff82b900b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c58c3e91-15f7-428d-a537-9f69777d9f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b8d21-2a60-4346-9402-fd2f182f6a75",
        "cursor": {
          "ref": "fd265507-a2ca-4251-8d20-2e9789eff085",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d3afa295-20dd-48fc-8086-559e27545ceb"
        },
        "item": {
          "id": "980b8d21-2a60-4346-9402-fd2f182f6a75",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7320bcff-3061-48dd-aa5e-ac7c91817630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14e6c0b-9859-4212-8135-82dda4798992",
        "cursor": {
          "ref": "86da9c0a-a919-47ce-bc76-4a56fc27b215",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a66ebd40-dd9a-4781-9523-72005158692d"
        },
        "item": {
          "id": "d14e6c0b-9859-4212-8135-82dda4798992",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "051f042e-e2cd-44f6-9944-1336f7ce8bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a173e94-f132-4d1f-adf9-b9a920314b22",
        "cursor": {
          "ref": "806ba5ab-8118-4db1-8623-89ac50ca3e29",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "34c330e6-3618-4af4-80c7-b9d527443af5"
        },
        "item": {
          "id": "6a173e94-f132-4d1f-adf9-b9a920314b22",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cc82e5d6-88db-4423-ba61-a8b41bde8bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c441314-a397-41bc-9a13-5f2dc8e15af7",
        "cursor": {
          "ref": "18fbf9e8-d73d-483e-b634-170a1f9a190d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "da008c76-dfea-4470-a440-052ca88ff8a2"
        },
        "item": {
          "id": "0c441314-a397-41bc-9a13-5f2dc8e15af7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "98cf4db6-189d-45fd-9556-03cd007929b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289eb675-0138-4a4a-afb6-3674de2985ed",
        "cursor": {
          "ref": "bcecf22c-2df0-4220-ab1a-d5b5aca50906",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c10a155-210c-442d-b928-939bf4fe6bc7"
        },
        "item": {
          "id": "289eb675-0138-4a4a-afb6-3674de2985ed",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ac90a69b-a275-4a38-ba7d-c50246ae0440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9793283-9e12-4a8a-8aa4-2e0eb0cf851f",
        "cursor": {
          "ref": "331448be-8cf4-4c63-913b-de6313ce8768",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "04b90140-8225-4b74-b3f9-ad15645d777e"
        },
        "item": {
          "id": "d9793283-9e12-4a8a-8aa4-2e0eb0cf851f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "904dc962-0121-45e2-8c35-5de36846d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b104ac86-becb-4969-9f66-e69b07c478e6",
        "cursor": {
          "ref": "5fa99a10-5452-426d-bf54-1f53b3e29359",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1020c56c-ab3c-4041-b5be-950d6b895df6"
        },
        "item": {
          "id": "b104ac86-becb-4969-9f66-e69b07c478e6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "16cc2bf3-4bd7-4ed1-877a-5ed5ce829f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc73ab29-43ea-4718-98ec-163b4fd1ddb5",
        "cursor": {
          "ref": "478c6e7a-78a6-4341-bf6f-dfbe34e11e7d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3a6d554b-4243-43be-88b4-6600c6be4623"
        },
        "item": {
          "id": "cc73ab29-43ea-4718-98ec-163b4fd1ddb5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3dfea6ae-adfb-4a6e-9896-7133e0208bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5cb127-7577-48aa-a3e1-a29d20a74f55",
        "cursor": {
          "ref": "0fae1350-3f2f-4b66-b4d6-bb6a6dd88fd8",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "415cd20d-19a5-4732-a583-da7e0c8b69f7"
        },
        "item": {
          "id": "5e5cb127-7577-48aa-a3e1-a29d20a74f55",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58ef42a3-f160-42e3-ba87-af861433e5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03c2e68-8dd4-465b-baa3-0a2de0955d24",
        "cursor": {
          "ref": "84c0a6be-d6f3-4f90-9eef-ffc86cb12ffc",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "97263ed8-7529-4fc2-85f0-388250b50b47"
        },
        "item": {
          "id": "b03c2e68-8dd4-465b-baa3-0a2de0955d24",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81096256-e07c-4627-ae6e-772ec3cd8006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d856a60c-5e0e-4ae1-b06a-d980813ea1dd",
        "cursor": {
          "ref": "541f083c-06ed-4c67-9514-a65c8c44d96f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a6a1e16b-46cf-40a9-a2a8-08fd833845da"
        },
        "item": {
          "id": "d856a60c-5e0e-4ae1-b06a-d980813ea1dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d1e79b8e-3a46-47f9-8199-1c510d468f62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc2504c-5ef7-4c2b-9268-e7b1fcb8bf6a",
        "cursor": {
          "ref": "bd8f9ca6-5d47-4f1d-ba9a-541e8c113ce3",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "836d44d9-b23b-45b5-a2cd-0f06299b5388"
        },
        "item": {
          "id": "9fc2504c-5ef7-4c2b-9268-e7b1fcb8bf6a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a706dde7-ae4a-46c5-8205-3b7726a51053",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7adbaab-ee76-42ce-91a5-ac4b7ee51c8e",
        "cursor": {
          "ref": "5f570692-9305-4886-a188-3434eef78db9",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "00938e2e-0f1a-4ecb-8dc3-e33bdb1a6a6d"
        },
        "item": {
          "id": "f7adbaab-ee76-42ce-91a5-ac4b7ee51c8e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "22915f0c-f7fc-45ed-b51b-7b770ed67b86",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d3c0a2-bc9e-4a8d-883d-3f408baa6c38",
        "cursor": {
          "ref": "e30b1881-55f8-43f8-ad67-0f08ad43a9c7",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1124f633-84c2-4aeb-b8f9-d3e7686e7d9b"
        },
        "item": {
          "id": "f5d3c0a2-bc9e-4a8d-883d-3f408baa6c38",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e1182df4-b356-45df-85a1-0d808eeacf12",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "73959118-b8a0-4f96-aa08-93876783cdd0",
        "cursor": {
          "ref": "d33b03e0-7712-477f-bbc9-54cfccaa441b",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0641a188-ac5e-494f-971f-83643420a5b8"
        },
        "item": {
          "id": "73959118-b8a0-4f96-aa08-93876783cdd0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c5b55b29-2c23-4b72-9e2e-d5515e1f05ed",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
        "cursor": {
          "ref": "6bf5b761-bc6e-47d1-949f-d2e60a1f5917",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "27fa2c8b-dd8f-4306-a7a4-532a0e0e71e9"
        },
        "item": {
          "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3b5c483f-024d-42f2-95d7-99b011d501f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
        "cursor": {
          "ref": "6bf5b761-bc6e-47d1-949f-d2e60a1f5917",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "27fa2c8b-dd8f-4306-a7a4-532a0e0e71e9"
        },
        "item": {
          "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3b5c483f-024d-42f2-95d7-99b011d501f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
        "cursor": {
          "ref": "6bf5b761-bc6e-47d1-949f-d2e60a1f5917",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "27fa2c8b-dd8f-4306-a7a4-532a0e0e71e9"
        },
        "item": {
          "id": "9859ea5f-f19d-4215-b3be-1a977e4b81e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3b5c483f-024d-42f2-95d7-99b011d501f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00235b12-f478-4274-9758-22e28546e319",
        "cursor": {
          "ref": "c446f300-8dd2-4722-b48f-a0c2bf8ffd0c",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f19060b4-7afd-4af0-9a75-af7446bef459"
        },
        "item": {
          "id": "00235b12-f478-4274-9758-22e28546e319",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "afa4bd87-1f67-4fb0-9f26-c1f0c410d395",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfa8e88-738b-4a98-a272-21c32e18456d",
        "cursor": {
          "ref": "4c1b7c27-3507-45df-8f5c-04cafa06033d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e62d93b-144e-4c17-a9e2-0d479ee0ed3d"
        },
        "item": {
          "id": "fcfa8e88-738b-4a98-a272-21c32e18456d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "00cb4282-f9bf-43f8-a54c-e0e776616320",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfa8e88-738b-4a98-a272-21c32e18456d",
        "cursor": {
          "ref": "4c1b7c27-3507-45df-8f5c-04cafa06033d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e62d93b-144e-4c17-a9e2-0d479ee0ed3d"
        },
        "item": {
          "id": "fcfa8e88-738b-4a98-a272-21c32e18456d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "00cb4282-f9bf-43f8-a54c-e0e776616320",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14aa713-0526-45e2-8940-69a7ecaa8028",
        "cursor": {
          "ref": "0d985a32-e597-49d2-b4df-6cb7cec22af6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0d18b9a-c98a-401a-9e03-38ef9e469e2c"
        },
        "item": {
          "id": "d14aa713-0526-45e2-8940-69a7ecaa8028",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "22d09c12-d408-4a4f-87de-8eb339adea53",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed773c5-92f1-422d-aaa7-4533ee359aa5",
        "cursor": {
          "ref": "d2956abe-a622-45b1-bcd1-3c14f4d845e9",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0434f832-af18-45fa-a5d7-39323fa76e6d"
        },
        "item": {
          "id": "2ed773c5-92f1-422d-aaa7-4533ee359aa5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1247a4c8-96be-4846-b291-52d9565270bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed773c5-92f1-422d-aaa7-4533ee359aa5",
        "cursor": {
          "ref": "d2956abe-a622-45b1-bcd1-3c14f4d845e9",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0434f832-af18-45fa-a5d7-39323fa76e6d"
        },
        "item": {
          "id": "2ed773c5-92f1-422d-aaa7-4533ee359aa5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1247a4c8-96be-4846-b291-52d9565270bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff718737-783c-4bdd-bc40-82f6a13d2d17",
        "cursor": {
          "ref": "8e7a8f1d-fb9c-4469-8f13-93585a9f1017",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0629e332-0a0f-4b03-baa9-ff2d4c3a62be"
        },
        "item": {
          "id": "ff718737-783c-4bdd-bc40-82f6a13d2d17",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "eda8b70a-f1e7-4c3f-bc23-90c696b3fd81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}